{"version":3,"file":"236.2aa5162d938ae8b7dfb5.js","mappings":"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xBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClB7a,gBAAiB,IACjB8a,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGnb,OAAQ,WAEL,OAAIiX,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCtuBN,MAAMC,EACH5d,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAKwd,OAAS,EACjB,CAEAC,SAAStW,EAAMmK,GACZtR,KAAKwd,OAAOlZ,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEAoM,OACG,OAA6B,GAAtB1d,KAAKwd,OAAOrX,MACtB,CAEAqB,OACG,OAAOxH,KAAKwd,OAAOrX,OAAS,CAC/B,CAEAwX,qBACG,IAAI3F,EAAM,CACPzI,MAAO,eACPqO,kBAAmB,CAAC,GAGnBC,EAAO7F,EAAI4F,kBAOf,OALA5d,KAAKwd,OAAOvZ,SAASoG,IAClBwT,EAAKxT,EAAElD,MAAQ0W,EAAKxT,EAAElD,OAAS,GAC/B0W,EAAKxT,EAAElD,MAAM7C,KAAK+F,EAAE,IAGhB2N,CACV,CAEAvQ,WAAWyC,GACR,IAAI4T,EAAO9d,KAAK2d,qBAChB3d,KAAK+B,GAAGgc,WAAWC,sBAAsBF,EAAM5T,EAClD,CAEA+T,WAAWC,EAAOC,GACf,IAAIL,EAAO9d,KAAK2d,qBAChB3d,KAAK+B,GAAGgc,WAAWK,sBAAsBN,EAAMI,EAAOC,EACzD,EAOH,MAAME,UAAkB,KACrB1e,YAAY2e,GACTxe,MAAMwe,GAGNte,KAAK8O,OAASA,EAAA,EAKd9O,KAAK8S,QAAU,EACf9S,KAAKue,OAASA,EACdve,KAAKqR,aAAe,EACpBrR,KAAKqP,QAAU,EACfrP,KAAK8Z,QAAU,EACf9Z,KAAKwQ,OAAS,EACdxQ,KAAK2a,MAAQ,IAGb3a,KAAKwe,QAAUA,EAAA,EAGfxe,KAAKye,MAAMC,cAAgB,IAC3B1e,KAAKye,MAAME,cAAgB,IAG3B3e,KAAKoX,UAAY,CACdC,IAAK,OACL4C,SAAU,QAEbja,KAAK8Y,KAAO,MACTnZ,cAAe,CAEfka,UACG,OAAOpK,QAAQC,SAClB,CACAsK,UACG,OAAOvK,QAAQC,SAClB,GAGH1P,KAAKgC,WAAa,EAElBhC,KAAK+d,WAAa,CACfxW,UAAW,IACD,IAAIgW,EAAYvd,MAG1B4e,kBAAmB,SAAUrP,GA8B1B,OA7BIA,IAMEA,EAAMA,OACS,aAAfA,EAAMA,OACNA,EAAMsP,KACNtP,EAAMsP,IAAI1Y,OAAS,IAEnBoJ,EAAQA,EAAMsP,IAAI,IAIjBtP,EAAMpH,MACPoH,EAAQA,EAAMpH,KAKdoH,EAAM1F,MACN0F,EAAM1F,KAAK0F,OACS,gBAApBA,EAAM1F,KAAK0F,QAEXA,EAAQA,EAAM1F,OAIb0F,CACV,EA+BAyO,sBAAuB,SAAUzO,EAAOrF,GACrC,IAAI4U,GAAa,EAIjB,GAAIvP,KAIDA,EAAQvP,KAAK4e,kBAAkBrP,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAMoH,MAAsB,gBAAdpH,EAAMoH,MACtB,CACC,IAAIoI,EAAQxP,EAAMqO,kBAClB,GAAImB,EAAO,CACR,IAAIC,GAAU,EACd,IAAK,IAAInB,KAAQkB,EAEd,GAAI7U,EAAKhB,SAAS2U,GAAO,CACtB,IAAIL,EAASuB,EAAMlB,GACfoB,EAAM,GACVzB,EAAOvZ,SAAQ,SAAUkE,GACtB8W,EAAI3a,KAAK6D,EAAImJ,QAChB,IAGApH,EAAKgV,YAAYrB,EAAMoB,EAAI3Q,KAAK,OAG3BwQ,IACF5U,EAAKhB,SAAS2U,GAAMsB,QACpBL,GAAa,GAGhBE,GAAU,CACb,CAGH,GAAIA,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,EAgCAZ,sBAAuB,SAAU7O,EAAO6P,EAAKC,GAE1C,GAAI9P,KAIDA,EAAQvP,KAAK4e,kBAAkBrP,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAMoH,MAAsB,gBAAdpH,EAAMoH,MACtB,CACC,IAAIoI,EAAQxP,EAAMqO,kBAClB,GAAImB,EAAO,CACR,IAAIO,GAAU,EACd,IAAK,IAAIzB,KAAQkB,EAAO,CACrBM,EAAKE,WAAWH,EAAKvB,EAAM,iBAC3BwB,EAAKE,WAAWH,EAAKvB,EAAM,sBAE3B,IAAIoB,EAAM,GACVF,EAAMlB,GAAM5Z,SAASoG,IAClB4U,EAAI3a,KAAK+F,EAAEiH,QAAQ,IAGtB7N,MAAM0N,MAAM,CACT9C,KAAMwP,EAAO,KAAOoB,EAAI3Q,KAAK,QAGhCgR,GAAU,CACb,CAKA,GAHAD,EAAK3a,QAAQ0a,GACbC,EAAKG,iBAEDF,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,GAMHtf,KAAKyf,YAAc,CAAC,EAKpBzf,KAAKoC,GAAG,SAAU+F,IAEfK,QAAQ+G,MAAMpH,EAAI,IAGrBnI,KAAK0f,SAAW,GAGhB1f,KAAK2f,wBAA0B,CAAC,EAMhC3f,KAAKqP,QAAQjN,GAAG,qBAAqB,CAACkN,EAASnH,EAAKyX,KACjD,IAAIC,EAAU7f,KAAK2f,wBAAwBrQ,EAAQO,MACnD,GAAI1H,EAGD,YADA0X,GAAShJ,OAAO1O,GAMnB,IAAI2X,EAAM,CACPlf,GAAIgf,EAAQhf,GACZiJ,KAAM+V,GAET5f,KAAKwP,KAAK,yBAA0BsQ,GAEpC,IAAIC,EAAS/f,KAAKggB,cAAcJ,GAChCC,GAASnQ,QAAQqQ,EAAO,IAG3B/f,KAAKqP,QAAQjN,GAAG,qBAAqB,CAACkN,EAASnH,EAAK8X,KACjD,IAAIJ,EAAU7f,KAAK2f,wBAAwBrQ,EAAQO,MACnD,GAAI1H,EACD,OAAIA,EAAIyM,WAAWvH,QAAQ,cAAgB,EACjCrN,KAAKkgB,iBAAiB5Q,EAAQ3J,QACjC+O,KAAKmL,GAASnQ,SACdiF,MAAMkL,GAAShJ,aAItBgJ,GAAShJ,OAAO1O,GAInBnI,KAAKmgB,aAAa7Q,EAAQ1O,IAAMqf,EAIhC,IAAIH,EAAM,CACPlf,GAAIqf,EAAUrf,GACdiJ,KAAMoW,GAETjgB,KAAKwP,KAAK,yBAA0BsQ,GAEpCD,GAASnQ,QAAQuQ,EAAU,IAG9BjgB,KAAKqP,QAAQjN,GAAG,qBAAqB,CAACkN,EAASnH,EAAK8X,KACjD,IAAIJ,EAAU7f,KAAK2f,wBAAwBrQ,EAAQO,MACnD,GAAI1H,EAGD0X,GAAShJ,OAAO1O,OAHnB,QAOOnI,KAAKmgB,aAAa7Q,EAAQ1O,IAIjC,IAAIkf,EAAM,CACPlf,GAAI0O,EAAQ1O,GACZiJ,KAAMoW,GAETjgB,KAAKwP,KAAK,yBAA0BsQ,GAEpCD,GAASnQ,SAZT,CAYkB,IAMrB,MAAM0Q,EAAgB,CAWnBC,OAAQ,CAACC,EAAW,GAAIne,EAAU,CAAC,KAChC,IAAKme,EAAU,OAEXne,EAAQoe,aAAYD,EAAWA,EAASpN,QAAQ,MAAO,KAE3D,IAAIpF,EAAS3L,EAAQqe,OAChB,IAAOF,EAAUne,EAAQqe,QACzB,IAAOF,GAgBZ,MAdqB,CAClB,aACA,aACA,aACA,aACA,aACA,cAGYrc,SAASuc,IAChB1S,GAAWA,EAAOvI,YACpBuI,EAAS,IAAOwS,EAAUE,GAAO,IAGhC,IAAIC,KAAK3S,EAAO,EAc1B4S,aAAc,CAACC,EAAMxe,KAClB,IAAKwe,EAAM,MAAO,GAElB,IAAIC,EAAY,IAAOD,GAIvB,OAFIxe,EAAQ0e,YAAYD,EAAUE,OAAO3e,EAAQ0e,YAE1CD,EAAUJ,OAAOre,EAAQqe,OAAO,EAY1CO,aAAc,CAACJ,EAAMK,EAAQC,IACnB,IAAON,GAAMO,SAASF,EAAQC,GAAMZ,SAY9Cc,QAAS,CAACR,EAAMK,EAAQC,IACd,IAAON,GAAMS,IAAIJ,EAAQC,GAAMZ,WAG3ChM,OAAOC,KAAK8L,IAAkB,IAAInc,SAASsQ,IACzCvU,KAAKqhB,MAAM9M,GAAK6L,EAAc7L,EAAE,GAEtC,CAQApP,aAIG,IAAImc,EAAW,GAEfA,EAAShd,KAAKtE,KAAK8S,QAAQxP,KAAKtD,OAChCshB,EAAShd,KAAKtE,KAAKqR,aAAa/N,KAAKtD,OACrCshB,EAAShd,KAAKtE,KAAKqP,QAAQ/L,KAAKtD,OAChCshB,EAAShd,KAAKtE,KAAKwQ,OAAOlN,KAAKtD,aAEzByP,QAAQ8R,IAAID,SACZthB,KAAK8Z,QAAQxW,KAAKtD,MACxB,IAAI6J,QAAa7J,KAAK8Z,QAAQjE,IAAI,kBAqDlC,OApDA7V,KAAKwhB,eAAiB3X,GAAQ,CAAC,EAO/B7J,KAAKoC,GAAG,0BAA2B0d,IAIhC,GAA4B,iBAAjBA,EAAIjW,KAAK4X,KACjB,IACG3B,EAAIjW,KAAK4X,KAAO1N,KAAK0D,MAAMqI,EAAIjW,KAAK4X,KAGvC,CAFE,MAAOpX,GACN7B,QAAQ6O,IAAIhN,EACf,CAEHrK,KAAKmgB,aAAaL,EAAIlf,IAAMkf,EAAIjW,KAChC7J,KAAK0hB,eAAe,UAAW5B,EAAIlf,GAAIkf,EAAIjW,KAAK,IAInD7J,KAAKoC,GAAG,0BAA2B0d,IAGhC,GAA4B,iBAAjBA,EAAIjW,KAAK4X,KACjB,IACG3B,EAAIjW,KAAK4X,KAAO1N,KAAK0D,MAAMqI,EAAIjW,KAAK4X,KAGvC,CAFE,MAAOpX,GACN7B,QAAQ6O,IAAIhN,EACf,CAEHrK,KAAKmgB,aAAaL,EAAIlf,IAAMkf,EAAIjW,KAChC7J,KAAK0hB,eAAe,UAAW5B,EAAIlf,GAAIkf,EAAIjW,KAAK,IAInD7J,KAAKoC,GAAG,0BAA2B0d,IAGhC,GAA4B,iBAAjBA,EAAIjW,KAAK4X,KACjB,IACG3B,EAAIjW,KAAK4X,KAAO1N,KAAK0D,MAAMqI,EAAIjW,KAAK4X,KAGvC,CAFE,MAAOpX,GACN7B,QAAQ6O,IAAIhN,EACf,QAEIrK,KAAKmgB,aAAaL,EAAIlf,IAC7BZ,KAAK0hB,eAAe,YAAa5B,EAAIlf,GAAIkf,EAAIjW,KAAK,IAG9C/J,MAAMwD,MAiEhB,CAUA6B,uBAAuBwc,GAOpB,YALqB,IAAVA,EAAI/gB,KACZ+gB,EAAI/gB,GAAKZ,KAAK6P,OACd8R,EAAIF,KAAK7gB,GAAK+gB,EAAI/gB,IAGd,IAAI6O,SAAQ,CAACC,EAASmH,KAC1B,IAAIhH,EAAO7P,KAAK6P,OAChB7P,KAAK2f,wBAAwB9P,GAAQ,CAAEH,UAASmH,UAChD,IAAId,EAAc,CACf1R,IAAK,oBACLiL,QAAS,CACNO,SAGN7P,KAAKqP,QAAQgB,KACV,CACGC,IAAK,qBACLzG,KAAM8X,GAET5L,GACDpB,OAAOxM,IACN,IAAImJ,EAAU,yCACE,YAAZnJ,EAAIwO,OACLrF,EAAU,sDAEbtR,KAAKoI,OAAOC,UAAUF,EAAK,CACxBmH,QAAS,+BACTgC,UACAqQ,OACD,GAKH,GAER,CASAxc,wBAAwBvE,GACrB,OAAO,IAAI6O,SAAQ,CAACC,EAASmH,KAC1B,IAAIhH,EAAO7P,KAAK6P,OAChB7P,KAAK2f,wBAAwB9P,GAAQ,CAAEH,UAASmH,UAChD,IAAId,EAAc,CACf1R,IAAK,oBACLiL,QAAS,CACN1O,KACAiP,SAGN7P,KAAKqP,QAAQiH,OACV,CACGhG,IAAK,eAAe1P,KAEvBmV,GACDpB,OAAOxM,IACN,IAAImJ,EAAU,0CACE,YAAZnJ,EAAIwO,OACLrF,EAAU,sDAEbtR,KAAKoI,OAAOC,UAAUF,EAAK,CACxBmH,QAAS,gCACTgC,UACA1Q,MACD,GAKH,GAER,CAYAuE,uBAAuBvE,EAAI+E,GACxB,OAAO,IAAI8J,SAAQ,CAACC,EAASmH,KAC1B,IAAIhH,EAAO7P,KAAK6P,OAChB7P,KAAK2f,wBAAwB9P,GAAQ,CAAEH,UAASmH,UAChD,IAAId,EAAc,CACf1R,IAAK,oBACLiL,QAAS,CACN1O,KACAiP,OACAlK,WAGN3F,KAAKqP,QAAQgH,IACV,CACG/F,IAAK,eAAe1P,IACpBiJ,KAAMlE,GAEToQ,GACDpB,OAAOxM,IACN,IAAImJ,EAAU,yCACE,YAAZnJ,EAAIwO,OACLrF,EAAU,sDAEbtR,KAAKoI,OAAOC,UAAUF,EAAK,CACxBmH,QAAS,+BACTgC,WACD,GAKH,GAER,CAwCAlJ,OAAOwZ,EAAQrS,EAAOsS,GACnBrZ,QAAQ+G,MAAM,yDACd/G,QAAQ+G,MAAMA,GACd/G,QAAQ+G,MAAMsS,EACjB,CAEAC,UACG,OAAO9hB,KAAK0f,QACf,CACAqC,WAAWC,GACRhiB,KAAK0f,SAASpb,KAAK0d,EACtB,CAKA7Q,MAAMhP,GACH,UAAYA,EACf,CAEAuD,UAAU/C,GACP,OAAO,cAAYA,EACtB,CAEA4M,MAAM+B,KAAY2Q,GACf,IAAIC,EAAW,CACZ5Q,QAAS,aAAatR,KAAKwQ,OAAO5P,SAAS0Q,EAAQsD,cAGtDpM,QAAQ+G,MAAM2S,EAAS5Q,SACnBA,aAAmBhJ,QACpB4Z,EAAS3S,MAAQ+B,EAEjB9I,QAAQ+G,MAAM+B,IAGb2Q,GAAQA,EAAK9b,OAAS,GACvB8b,EAAKhe,SAAS2L,IAOX,GANIA,aAAatH,QACd4Z,EAAS3S,MAAQK,EAEjBpH,QAAQ+G,MAAMK,IAGD,iBAALA,EACR,IAAK,IAAI2E,KAAK3E,EACXsS,EAAS3N,GAAK3E,EAAE2E,GAChB/L,QAAQ+G,MAAMgF,EAAG3E,EAAE2E,GAEzB,IAGNvU,KAAKwP,KAAK,QAAS0S,EACtB,CAEAC,QACG,OAAO,SACV,CAEAliB,QACG,MAAO,IAAI6V,IACD9V,KAAKqR,aAAajQ,SAAS0U,EAExC,CAEAsM,cAAc/d,EAAK1B,GAChB,YAAoB,IAATA,EAED3C,KAAKwhB,eAAend,IAG3BrE,KAAKwhB,eAAend,GAAO1B,EACpB3C,KAAK8Z,QAAQC,IAAI,iBAAkB/Z,KAAKwhB,gBAErD,CAEAnK,IAAI/F,KAAY2Q,GACbzZ,QAAQ6O,IAAI/F,GACZ2Q,EAAKhe,SAAS2L,IACXpH,QAAQ6O,IAAIzH,EAAE,GAEpB,CAQAyS,OAAOhe,GAKJ,OAJcie,OACX,4EACA,KAEYC,KAAKle,EACvB,CAEAme,SAAS1M,GACN,OAAO,aAAWA,EACrB,CAEA2M,WAAW3M,GACR,OAAO,eAAaA,EACvB,CAEA4M,QAAQ5M,GACL,OAAO,YAAUA,EACpB,CAEA6M,aAAa7M,GACV,OAAO,iBAAeA,EACzB,CAEA8M,SAAS9M,GACN,OAAO,aAAWA,EACrB,CAEA+M,UAAU/M,GACP,OAAO,cAAYA,EACtB,CAEAgN,SAAShN,GACN,OAAO,aAAWA,EACrB,CAEAiN,SAASjN,GACN,OAAO,aAAWA,EACrB,CAEAjG,OACG,OAAO,QACV,CAEApH,KAAK6I,KAAY2Q,GACdzZ,QAAQC,KAAK6I,GACb2Q,EAAKhe,SAAS2L,IACXpH,QAAQC,KAAKmH,EAAE,GAErB,CAEAoT,YAAYlN,GACT,OAAO,aAAWA,EACrB,EAGH,2BCx7BA,MAAM6I,EAAgB,EAAQ,OAC9B,IAAIsE,EAAY,EAAQ,OAkBxBxjB,EAAOC,QAAU,cAAgCujB,EAC9CtjB,YAAYujB,EAAYnhB,GAjB3B,IAAgBmU,EAkBVpW,MAAM,CAAC,QAAS,eAAgBiC,GAQhCmhB,EAAWzB,KAAOyB,EAAWzB,MAAQ,CAAC,EAGtCzhB,KAAKY,GAAKsiB,EAAWtiB,GAGrBZ,KAAK4B,KAAOshB,EAAWthB,MAAQ,cAI/B5B,KAAKyhB,KAAOyB,EAAWzB,KACC,iBAAbzhB,KAAKyhB,OAAkBzhB,KAAKyhB,KAAO1N,KAAK0D,MAAMzX,KAAKyhB,OAI9DzhB,KAAKyhB,KAAkB,YAAIyB,EAAWzB,MAAM0B,aAAe,CACxDC,cAAe,QACfC,UAAW,CACR,QAAS,CACNC,OAAQ,MACRC,QAAS,QACTC,YAAa,EACbC,cAAe,kBACfC,WAAW,IAAIjD,MAAOkD,iBAKK,iBAAzB3jB,KAAKyhB,KAAK0B,cAClBnjB,KAAKyhB,KAAK0B,YAAcpP,KAAK0D,MAAMzX,KAAKyhB,KAAK0B,cAIhDnjB,KAAKmH,KAAO+b,EAAW/b,MAAQnH,KAAKyhB,KAAKta,MAAQ,GAMjDnH,KAAKuL,KAAO2X,EAAW3X,MAAQ,YAO/BvL,KAAK4jB,oBAvEU,KADL1N,EAwEmBgN,EAAWU,iBAnE/B,KAAR1N,GAAsB,UAARA,GAA2B,MAARA,IAIzB,SAARA,GAA0B,MAARA,GAIfA,GAkEJlW,KAAK6jB,WAAaX,EAAWW,YAAc,GACtC1W,MAAMC,QAAQpN,KAAK6jB,cACrB7jB,KAAK6jB,WAAa,CAAC7jB,KAAK6jB,aAE3B7jB,KAAK6jB,WAAa7jB,KAAK6jB,WAAW/a,QAAQ8G,GAAMA,IAKhD5P,KAAK8jB,gBAAkB/P,KAAK0D,MAAMyL,EAAWY,kBAAmB,GAShE9jB,KAAK+jB,eAAiBb,EAAWa,eACC,iBAAvB/jB,KAAK+jB,iBACb/jB,KAAK+jB,eAAiBhQ,KAAK0D,MAAMzX,KAAK+jB,iBAKzC/jB,KAAKgkB,qBAAuBjQ,KAAK0D,MAC9ByL,EAAWc,uBAAwB,GAEtChkB,KAAKikB,oBAAsBf,EAAWe,oBACC,iBAA5BjkB,KAAKikB,sBACbjkB,KAAKikB,oBAAsBlQ,KAAK0D,MAAMzX,KAAKikB,sBAE9CjkB,KAAKkkB,kBAAoBnQ,KAAK0D,MAC3ByL,EAAWgB,oBAAqB,GAEnClkB,KAAKmkB,iBAAmBjB,EAAWiB,iBACC,iBAAzBnkB,KAAKmkB,mBACbnkB,KAAKmkB,iBAAmBpQ,KAAK0D,MAAMzX,KAAKmkB,mBAE3CnkB,KAAKokB,QAAUlB,EAAWzB,KAAK2C,SAAW,GAO1CpkB,KAAKqkB,UAAYnB,EAAWzB,KAAK4C,WAAa,GAM9CrkB,KAAKskB,SAAWpB,EAAWzB,KAAK6C,UAAY,GAO5CtkB,KAAKukB,kBAAoBrB,EAAWzB,KAAK8C,mBAAqB,GAQ9D,IAAIC,EAAW,IACdtB,EAAWzB,KAAKgD,SAAW,IAAIxgB,SAASrD,IACtC,IAAI+gB,EAAM3hB,KAAK+B,GAAG2iB,eAAe9jB,GAC7B+gB,EACD6C,EAASlgB,KAAKtE,KAAK2kB,QAAQhD,IAE3B3hB,KAAKwP,KACF,UACA,OAAOxP,KAAKY,uCAAuCA,KACnD,CACGgkB,MAAO5kB,KAAKY,GACZikB,OAAQjkB,GAMjB,IAEHZ,KAAK8kB,OAASN,GAObtB,EAAWzB,KAAKsD,YAAc,IAAI9gB,SAAS+gB,IACjChlB,KAAK+B,GAAGkjB,YAAYD,IAEzBhlB,KAAKwP,KACF,UACA,iDACA,CAAEoV,MAAO5kB,KAAKY,GAAIskB,UAAWF,GAEnC,IAGHhlB,KAAK+kB,WAAa7B,EAAWzB,KAAKsD,YAAc,GAKhD7B,EAAWzB,KAAK0D,mBACbjC,EAAWzB,KAAK0D,oBAAsB,CAAC,EAC1CnlB,KAAKmlB,mBAAqBnlB,KAAKmlB,oBAAsB,CAAC,EACtDnlB,KAAKmlB,mBAAmBC,OAASrR,KAAK0D,MACnCyL,EAAWzB,KAAK0D,mBAAmBC,SAAU,GAEhDplB,KAAKmlB,mBAAmBE,WACrBnC,EAAWzB,KAAK0D,mBAAmBE,YAAc,GACpDrlB,KAAKmlB,mBAAmBG,cACrBpC,EAAWzB,KAAK0D,mBAAmBG,eAAiB,MACvDtlB,KAAKmlB,mBAAmBI,QAAUxR,KAAK0D,MACpCyL,EAAWzB,KAAK0D,mBAAmBI,UAAW,GAKjDrC,EAAWsC,aACRtC,EAAWsC,cAAgBtC,EAAWzB,KAAK+D,aAE9C1lB,MAAMmG,WAAWid,EACpB,CAsBAuC,qBAAqBvW,GAClB,IAAIwW,GAAY,EAGhB,OAAK1lB,KAAK8jB,iBAYN6B,SAAS3lB,KAAK+jB,eAAe6B,WAC7B1W,GAAS,IAAIjL,SAAS2L,IAChB5P,KAAK+jB,eAAe8B,KAAKxY,QAAQuC,EAAEC,MAAQD,IAAM,IAClD8V,GAAY,EACf,IAKFA,KAIH1lB,KAAK8lB,SAAW,IAAI7hB,SAAS+d,IAEvBA,EAAEyD,qBAAqBvW,KACxBwW,GAAY,EACf,IAEIA,MA9BHxW,GAAS,IAAIjL,SAAS2L,IAChB5P,KAAK6jB,WAAWxW,QAAQuC,EAAEC,MAAQD,IAAM,IACzC8V,GAAY,EACf,IAEIA,EA0Bb,CAaA5f,QAEG,IAAIqd,EAAcnjB,KAAKyhB,KAAK0B,YA6B5B,OA3BAnjB,KAAKyhB,KAAO3hB,MAAMgG,QAElB9F,KAAKyhB,KAAKta,KAAOnH,KAAKmH,KAEtBnH,KAAKyhB,KAAK0B,YAAcA,EAExBnjB,KAAKyhB,KAAK4C,UAAYrkB,KAAKqkB,UAE3BrkB,KAAKyhB,KAAK0D,mBAAqBnlB,KAAKmlB,mBAEpCnlB,KAAKyhB,KAAK2C,QAAUpkB,KAAKokB,QAEzBpkB,KAAKyhB,KAAK6C,SAAWtkB,KAAKskB,SAE1BtkB,KAAKyhB,KAAK8C,kBAAoBvkB,KAAKukB,kBAEnCvkB,KAAKyhB,KAAKgD,SAAWzkB,KAAK8kB,QAAU,IAAI3W,KAAK6T,GAAMA,EAAEphB,KAErDZ,KAAKyhB,KAAKsD,WAAa/kB,KAAK+kB,YAAc,GASnC,CACJnkB,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,cACnBuF,KAAMnH,KAAKmH,KACXoE,KAAMvL,KAAKuL,KACXqY,eAAgB5jB,KAAK4jB,eACrBnC,KAAMzhB,KAAKyhB,KACXoC,WAAY7jB,KAAK6jB,WACjB2B,aAAcxlB,KAAKyhB,KAAK+D,aACxB1B,gBAAiB9jB,KAAK8jB,gBACtBE,qBAAsBhkB,KAAKgkB,qBAC3BE,kBAAmBlkB,KAAKkkB,kBACxBH,eAAgB/jB,KAAK+jB,eACrBE,oBAAqBjkB,KAAKikB,oBAC1BE,iBAAkBnkB,KAAKmkB,iBAE7B,CAeA4B,WAAWjd,EAAS,MAAM,IACvB,OAAQ9I,KAAKgmB,aAAe,IAAIld,OAAOA,EAC1C,CAcAmd,wBAAwBnd,EAAS,MAAM,IACpC,OAAO9I,KAAK+B,GAAGmkB,iBAAiBC,IACmB,GAAzCnmB,KAAKukB,kBAAkBlX,QAAQ8Y,EAAEvlB,MACxCkI,OAAOA,EACb,CAEAsd,wBAAwBtd,EAAS,MAAM,GAAM6E,GAE1C,MAAM0Y,EAAS1Y,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAMklB,cAAczY,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAGmkB,iBAAiBC,GACtBnmB,KAAKukB,kBAAkBlX,QAAQ8Y,EAAEvlB,KAAO,IAE9CkI,OAAOA,GACP6E,KAAK0Y,EACZ,CAMAE,gBAAgBzd,EAAS,MAAM,IAC5B,OAAO9I,KAAK+B,GAAGykB,SAASL,IACmB,GAAjCnmB,KAAKqkB,UAAUhX,QAAQ8Y,EAAEvlB,MAChCkI,OAAOA,EACb,CAEA2d,gBAAgB3d,EAAS,MAAM,GAAM6E,GAElC,MAAM0Y,EAAS1Y,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAMklB,cAAczY,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAGykB,SAASL,GACdnmB,KAAKqkB,UAAUhX,QAAQ8Y,EAAEvlB,KAAO,IAEtCkI,OAAOA,GACP6E,KAAK0Y,EACZ,CAMAK,cAAc5d,EAAS,MAAM,IAC1B,OAAO9I,KAAK+B,GAAG4kB,OAAOC,IACmB,GAA/B5mB,KAAKokB,QAAQ/W,QAAQuZ,EAAEhmB,MAC9BkI,OAAOA,EACb,CAEA+d,cAAc/d,EAAS,MAAM,GAAM6E,GAEhC,MAAM0Y,EAAS1Y,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAMklB,cAAczY,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAG4kB,OAAOC,GACZ5mB,KAAKokB,QAAQ/W,QAAQuZ,EAAEhmB,KAAO,IAEpCkI,OAAOA,GACP6E,KAAK0Y,EACZ,CAYAS,iBAAiBlmB,GAKd,GAJA4H,QAAQ+G,MACL,8DAGO,IAAN3O,EAAU,MAAO,GAGrB,IAGImmB,EAHQ/mB,KAAK+B,GAAGkW,WAAWrX,GAGHomB,gBAExBC,EAAe,CAAC,EACpBF,EAAgB9iB,SAAS+C,IACtBigB,EAAajgB,EAAEZ,SAASO,YAAc3G,KAAK+B,GAAGkW,WAC3CjR,EAAEZ,SAASO,WACb,IAGJ,IAAIugB,EAAgB,GAQpB,OAPA7S,OAAOC,KAAK2S,GAAchjB,SAAQ,SAAUI,GACzC6iB,EAAc5iB,KAAK,CAChB1D,GAAIZ,KAAKqE,GAAKzD,GACd+B,MAAO3C,KAAKqE,GAAKjD,OAEvB,GAAG6lB,GAEIC,CACV,CAYAH,gBAAgBI,EAAWC,GACxB5e,QAAQ+G,MAAM,4BAGd,IAGIwX,EAHQ/mB,KAAK+B,GAAGkW,WAAWkP,GAGHH,eACxBhgB,GAAMA,EAAEZ,SAASO,YAAcygB,IAG/BC,EAAe,GAKnB,OAJAN,EAAgB9iB,SAAS+C,IACtBqgB,EAAa/iB,KAAK,CAAE1D,GAAIoG,EAAEF,WAAYnE,MAAOqE,EAAE5F,OAAQ,IAGnDimB,CACV,CAiBAvB,MAAMhd,EAAS,MAAM,GAAMwe,GAAO,GAC/B,IAAIxZ,EAAS,GAEb,OAAK9N,KAAK8kB,QAAU9kB,KAAK8kB,OAAO3e,OAAS,IAGrC2C,GAAUwe,GACXxZ,EAAS9N,KAAK8kB,OAAOhc,OAAOA,IAEjB3C,OAAS,GACjBnG,KAAK8kB,OAAO7gB,SAAS+d,IAClB,IAAIuF,EAAWvF,EAAE8D,MAAMhd,EAAQwe,GAC3BC,GAAYA,EAASphB,OAAS,IAC/B2H,EAASyZ,EACZ,IAMNzZ,GAAU9N,KAAK8kB,QAAU,IAAIhc,OAAOA,IAjBYgF,CAqBtD,CAeA0Z,UAAU1e,EAAS,MAAM,IACtB,OAAO9I,KAAK+B,GAAGylB,WAAWxF,GAChBhiB,KAAK+kB,WAAW1X,QAAQ2U,EAAEphB,KAAO,IACxCkI,OAAOA,EACb,CAEA2e,WAAWC,GACR,SAAIA,IAAWA,EAAQ9mB,KACbZ,KAAK+kB,WAAW1X,QAAQqa,EAAQ9mB,KAAO,CAIpD,CAeA+mB,MAAM7e,GACH,IAAIgF,EAAS,GACT6Z,EAAQ,GACR7B,EAAQ,GAEZ,QACK9lB,KAAK8kB,QAAU9kB,KAAK8kB,OAAO3e,OAAS,MACpCnG,KAAK4nB,QAAU5nB,KAAK4nB,OAAOzhB,OAAS,KA8BrC2C,GAEG9I,KAAK4nB,SACND,EAAQ3nB,KAAK4nB,OAAO9e,OAAOA,IAEjB3C,OAAS,GAChBnG,KAAK4nB,OAAO3jB,SAASqP,IAClB,IAAIuU,EAAWvU,EAAEqU,MAAM7e,GAAQ,GAC3B+e,GAAYA,EAAS1hB,OAAS,IAC/BwhB,EAAQE,EACX,IAMLF,EAAMxhB,OACP2H,EAAS6Z,GAGT7Z,EAAS9N,KAAK8kB,OAAOhc,OAAOA,IAGjB3C,OAAS,GAjD1B,SAAS2hB,EAASpnB,GACXA,EAAKokB,QAAUpkB,EAAKokB,OAAO3e,QAC5BzF,EAAKokB,OAAO7gB,SAAS+d,IAElB,IAAI+F,EAAY/F,EAAE2F,MAAM7e,GAAQ,GAMhC,GAJIif,GAAaA,EAAU5hB,OAAS,IACjC2H,EAASia,GAGRja,EAAO3H,OAAS,EAAG,CAEpB,IAAIohB,EAAWvF,EAAE8D,MAAMhd,GAAQ,GAE3Bye,GAAYA,EAASphB,OAAS,IAC/B2H,EAASyZ,GAERzZ,EAAO3H,OAAS,GACjB2hB,EAAS9F,EAEf,IAGT,CA4BS8F,CAAS9nB,QAOXA,KAAK4nB,SACND,EAAQ3nB,KAAK4nB,QACHzhB,QACPwhB,EAAM1jB,SAASqP,IACZ,IAAIuU,EAAWvU,EAAEqU,OAAM,KAAM,IAAM,GAC/BE,GAAYA,EAAS1hB,SACtBwhB,EAAQA,EAAMK,OAAOH,GACxB,IAML7nB,KAAK8kB,SACNgB,EAAQ9lB,KAAK8kB,QACH3e,QACP2f,EAAM7hB,SAAS+d,IAEZ,IAAI+F,EAAY/F,EAAE2F,OAAM,KAAM,IAAM,GAChCI,GAAaA,EAAU5hB,SACxBwhB,EAAQA,EAAMK,OAAOD,IAGxB,IAAIR,EAAWvF,EAAE8D,OAAM,KAAM,IAAM,GAC/ByB,GAAYA,EAASphB,SACtB2f,EAAQA,EAAMkC,OAAOT,GACrBA,EAAStjB,SAASuP,IACf,IAAIqU,EAAWrU,EAAImU,OAAM,KAAM,IAAM,GACjCE,GAAYA,EAAS1hB,SACtBwhB,EAAQA,EAAMK,OAAOH,GACxB,IAEN,IAKT/Z,EAASA,EAAOka,OAAOlC,EAAO6B,KAjGvB7Z,CAqGb,CAOAma,QAAQvX,EAAK,MAAM,IAChB,OAAOiO,EAAcuJ,SAASxX,EACjC,CAcAyX,gBAAgBrf,EAAS,MAAM,IAC5B,OAAO9I,KAAK+B,GAAGqmB,SAASC,IACkB,GAAhCroB,KAAKskB,SAASjX,QAAQgb,EAAEznB,MAC/BkI,OAAOA,EACb,CAWAwf,gBAAgBxf,EAAS,MAAM,GAAM6E,GAElC,MAAM0Y,EAAS1Y,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAMklB,cAAczY,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAGqmB,SAASC,GACdroB,KAAKskB,SAASjX,QAAQgb,EAAEznB,KAAO,IAErCkI,OAAOA,GACP6E,KAAK0Y,EACZ,CAiCAkC,WAAWC,GACR,IAAIC,EAAQD,EAAQE,MAAM,KAEtBC,EAAY,CAAC3Q,EAAK4Q,KAEnB,GAAoB,GAAhBA,EAAMziB,OACP,OAAO6R,EAIV,IAAI3T,EAAMukB,EAAMnU,QAIhB,GAAW,KAAPpQ,EACD,OAAOskB,EAAU3oB,KAAM4oB,GAK1B,GAAIzb,MAAMC,QAAQ4K,GAIf,OAHAA,EAAMA,EAAIlP,QAAO,SAAUqd,GACxB,OAAOA,EAAEvlB,IAAMyD,CAClB,IAAG,GACIskB,EAAU3Q,EAAK4Q,GAIzB,GAAI5Q,GAAOA,EAAI3T,GACZ,OAAOskB,EAAU3Q,EAAI3T,GAAMukB,GAG9B,GAAW,YAAPvkB,EAAmB,CACpBmE,QAAQ+G,MAAM,IAAIjH,MAAM,0CAGxB,IAAI1H,EAAKgoB,EAAMnU,QACf,OAAOkU,EAAU3oB,KAAK+B,GAAGkW,WAAWrX,GAAKgoB,EAC5C,CAKA,OADApgB,QAAQ+G,MAAM,4BAA8BiZ,GACrC,IAAI,EAGd,OAAOG,EAAU3oB,KAAMyoB,EAC1B,CAUAI,WAAWC,GAGR,OAAIA,EAAkB,KAAO9oB,KAAKY,GAAK,IAC3B,IACf,CAUAmoB,UAAUD,GACP,OAAO9oB,KAAK6oB,WAAWC,GAAa,WACvC,CAUAE,QAAQF,GACL,OAAO9oB,KAAK6oB,WAAWC,GAAa,SACvC,CAUAG,SAASH,GACN,OAAO9oB,KAAK6oB,WAAWC,GAAa,WACvC,CAKII,uBACD,OAAOlpB,KAAKmlB,mBAAmBC,MAClC,CAEI8D,qBAAiB9D,GAClBplB,KAAKmlB,mBAAmBC,OAASA,CACpC,CAEI+D,2BACD,OAAOnpB,KAAKmlB,mBAAmBE,UAClC,CAEI8D,yBAAqB9D,GACtBrlB,KAAKmlB,mBAAmBE,WAAaA,CACxC,CAEI+D,8BACD,OAAOppB,KAAKmlB,mBAAmBG,aAClC,CAEI8D,4BAAwB9D,GACzBtlB,KAAKmlB,mBAAmBG,cAAgBA,CAC3C,CAEI+D,wBACD,OAAOrpB,KAAKmlB,mBAAmBI,OAClC,CAEI8D,sBAAkB9D,GACnBvlB,KAAKmlB,mBAAmBI,QAAUA,CACrC,CAiBAZ,QAAQhf,GAKL,OAFAA,EAAOtB,IAAM,OAENsa,EAAc2K,QAAQ3jB,EAAQ3F,KAAM,KAC9C,CASAupB,SAAS3oB,GACN,OAAOZ,KAAK8lB,OAAO9e,GAAMA,EAAEpG,IAAMA,IAAI,EACxC,CASA4oB,QAAQ7jB,EAAQZ,EAAakQ,GAC1B,OAAO0J,EAAc2K,QAAQ3jB,EAAQZ,EAAakQ,EACrD,CAMAvP,YAIG,MAHuB,IAAI4C,MACxB,2EAKN,mBCj8BH,MAAM2a,EAAY,EAAQ,OAM1B,IAAIwG,EAAgB,CACjB7oB,GAAI,OACJQ,MAAO,GACP6D,OAAQ,CAAC,EACTykB,MAAO,CAAC,EACRtjB,SAAU,CACPujB,aAAc,GACdC,qBAAsB,GACtBC,YAAa,GACbC,uBAAwB,GACxBC,gBAAiB,CACdC,iBAAkB,CAEfC,KAAM,MACN5I,MAAO,IAEV9U,WAAY,IAEf2d,SAAS,EAETjhB,UAAU,EACVkhB,SAAS,EAETC,UAAW,GAEXC,SAAU,IAIhB,MAAMC,EAAmB,GAGzB,IAAIC,EAAc,KAElB,SAASC,IAMN,GAA+B,GAA3BF,EAAiBnkB,OAArB,CAMA,IAAIskB,EAAKH,EAAiB7V,QAC1BgW,EAAG/Z,KACH6Z,EAAc1V,WAAW2V,EAAUC,EAAGvY,QAHtC,MAFGqY,EAAc,IAMpB,CACA,SAASG,EAAeha,EAAIwB,EAAU,IACnCoY,EAAiBhmB,KAAK,CAAEoM,KAAIwB,YACvBqY,GACFC,GAEN,CAEA/qB,EAAOC,QAAU,cAAmCujB,EACjDtjB,YAAYujB,EAAYnhB,GACrBjC,MAAM,CAAC,SAAUiC,GAEjBmhB,EAAaA,GAAc,CAAC,EAI5BljB,KAAKiG,WAAWid,GAEhBljB,KAAK2qB,iBAAmB3qB,KAAK4qB,mBAAmB,IAOhD5qB,KAAK6qB,0BAEL7qB,KAAK8qB,mBAAqB,GAC1B9qB,KAAK+qB,mBAAqB,GAM1B/qB,KAAKgrB,YAAchrB,KAAKirB,eAAeC,WAEvClrB,KAAKmrB,aAAe,IAIvB,CAYAC,oBACG,MAAO,gBACV,CAQAnlB,WAAWN,GAkGR,GAjGA3F,KAAKY,GAAK+E,EAAO/E,GAIjBZ,KAAKmH,KAAOxB,EAAOwB,MAAQ,KAI3BnH,KAAK4B,KAAO+D,EAAO/D,MAAQ,iBAI3B+D,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCpG,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAIlCpG,KAAKoG,SAASwjB,qBACXjkB,EAAOS,SAASwjB,sBAChBH,EAAcrjB,SAASwjB,qBAK1B5pB,KAAKoG,SAASyjB,YACXlkB,EAAOS,SAASyjB,aAAeJ,EAAcrjB,SAASyjB,YAKzD7pB,KAAKoG,SAAS0jB,uBACXnkB,EAAOS,SAAS0jB,wBAChBL,EAAcrjB,SAAS0jB,uBAI1B9pB,KAAKoG,SAAS2jB,gBAAkBpkB,EAAOS,SAAS2jB,iBAAmB,CAChEC,iBACGP,EAAcrjB,SAAS2jB,gBAAgBC,iBAC1Czd,WAAYkd,EAAcrjB,SAAS2jB,gBAAgBxd,YAMtDvM,KAAKoG,SAASgkB,UAAYzkB,EAAOS,SAASgkB,UAG1CpqB,KAAKoG,SAAS8jB,QAAUnW,KAAK0D,MAC1B9R,EAAOS,SAAS8jB,SAAWT,EAAcrjB,SAAS8jB,SAKrDlqB,KAAKoG,SAAS+jB,QAAUpW,KAAK0D,MAC1B9R,EAAOS,SAAS+jB,SAAWV,EAAcrjB,SAAS+jB,SAMrDnqB,KAAKoG,SAAS6C,SAEqBoiB,MAA5B1lB,EAAOS,SAAS6C,SACVtD,EAAOS,SAAS6C,SAGY,GAAnCtD,EAAOS,SAASklB,iBACmB,KAAnC3lB,EAAOS,SAASklB,iBAGL7B,EAAcrjB,SAAS6C,SAQxCjJ,KAAKoG,SAASikB,SAAW1E,SACtBhgB,EAAOS,SAASikB,UAAYZ,EAAcrjB,SAASikB,UAMtDrqB,KAAKurB,aAAe,KAKpBvrB,KAAKoG,SAASujB,aACXhkB,EAAOS,SAASujB,cAAgBF,EAAcrjB,SAASujB,aAKtD3pB,KAAKoG,SAASujB,aAAc,CAE7B,IAAI3R,EAAMhY,KAAK+B,GAAGkW,WAAWjY,KAAKoG,SAASujB,cACtC3R,IAEFA,EAAMhY,KAAK+B,GAAGypB,UAAUxrB,KAAKoG,SAASujB,eAGrC3R,GACDhY,KAAKurB,aAAevT,EACpBhY,KAAKoG,SAAS+jB,QAAuB,UAAbnS,EAAIpW,KACxB5B,KAAKoG,SAAS+jB,SACXnqB,KAAKurB,aAAahG,UACdvlB,KAAKyrB,mBACPzrB,KAAKyrB,iBAAmBzrB,KAAK0rB,sBAKhC1rB,KAAK2rB,WAAY,IAIvBnjB,QAAQ+G,MACL,oBAAoBvP,KAAKmH,SAASnH,KAAKY,kCAAkCZ,KAAKoG,SAASujB,gBAGhG,CAsBA7pB,MAAMmG,WAAWN,EACpB,CAaAG,QACG,IAAIkS,EAAMlY,MAAMgG,QAEhB,MAAO,CACJlF,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKmH,MAAQnH,KAAKoB,MACxBQ,KAAM5B,KAAK4B,MAAQ,iBACnBwE,SAAUpG,KAAK+B,GAAG2D,UAAU1F,KAAKoG,UAAY,CAAC,GAC9Cof,aAAcxN,EAAIwN,aAExB,CAWArgB,aAKG,OAJKnF,KAAKY,KACPZ,KAAKoB,MAAQpB,KAAKoB,OAASpB,KAAKmH,YAE7BrH,MAAM8H,OACL5H,IACV,CAWA8U,UACG,IAAI8W,EAAyB,IACnB,IAAInc,SAAQ,CAACoc,EAAM1jB,KAGvB,MAAM2jB,EAAO9rB,KAAK+B,GAAGgqB,eAGrB,IAAIC,EAAa,GASjB,OAPqBF,EAAKhjB,QAAQ8E,GACxBA,EAAEwY,yBAAyBD,GAAMA,EAAEvlB,IAAMZ,KAAKY,OAEzCqD,SAASgoB,IACrBD,EAAW1nB,KAAK2nB,EAAIC,qBAAqBlsB,MAAM,IAG3CyP,QAAQ8R,IAAIyK,GAAYtX,KAAKmX,GAAMlX,MAAMxM,EAAI,IAK1D,OAAOsH,QAAQC,UACXgF,MAAK,IACIkX,MAETlX,MAAK,IACI5U,MAAMgV,YAEfJ,MAAK,KACH1U,KAAKwP,KAAK,YAAY,GAE/B,CAOI2c,UACD,OAAOnsB,KAAK2qB,gBACf,CAQIyB,iBACD,IAAKpsB,KAAKurB,aAAc,CACrB,GAAIvrB,KAAKY,IAAMZ,KAAKmH,KAAM,CAGvB,IAAIgB,EAAM,IAAIG,MACX,kBAAkBtI,KAAKmH,SAASnH,KAAKY,oCAExCZ,KAAK+B,GAAGqG,OAAO,UAAWD,EAAK,CAAEkkB,eAAgBrsB,KAAK8F,SACzD,CACA,OAAO,IACV,CACA,IAAIkS,EAAMhY,KAAK+B,GAAGkW,WAAWjY,KAAKurB,aAAa3qB,IAI/C,OAHKoX,IACFA,EAAMhY,KAAK+B,GAAGypB,UAAUxrB,KAAKurB,aAAa3qB,KAEtCoX,CACV,CAQIoU,eAAWnnB,GACZjF,KAAKurB,aAAetmB,EAEpBjF,KAAK6qB,yBACR,CAQIyB,iBACD,OAAOtsB,KAAKoG,SAAS+jB,QAAU,QAAU,QAC5C,CAQIoC,yBACD,OAAKvsB,KAAK+B,GAEH/B,KAAK+B,GAAGyqB,mBAAmBxsB,KAAKoG,SAASwjB,sBAF3B,IAGxB,CAQI6C,gBACD,IAAIxnB,EAASjF,KAAKosB,WAClB,OAAKnnB,EAEEA,EAAO8I,UAAU/N,KAAKoG,SAASyjB,aAFlB,IAGvB,CAQI7hB,YACD,IAAI/C,EAASjF,KAAKosB,WAElB,OAAOnnB,EAASA,EAAO+C,QAAU,IACpC,CAEIijB,qBACD,MAAO,CACJC,WAAY,EACZwB,aAAc,EACdC,YAAa,EAEnB,CAEIC,iBACD,OAAO5sB,KAAKgrB,WACf,CAMA6B,UAAUC,GAEP,GACG9sB,KAAKoG,SAASgkB,YACc,uBAA3BpqB,KAAKoG,SAASgkB,WACZpqB,KAAKoG,SAASgkB,WAAa0C,GAE9B,OAEH,GAAI9sB,KAAKyrB,iBAAkB,CAExBzrB,KAAK+sB,cAAcD,GAGnB,IAAIE,EAAahtB,KAAKyrB,iBAAiBwB,YACvC,GAAID,EAAY,CACb,IAAIE,EAAeltB,KAAKyrB,iBAAiB0B,QAAQH,GAC7CE,IAAcJ,EAASI,EAAaE,QAC3C,CACH,CAEA,IAAIC,EAAKrtB,KAAK2qB,iBACV0C,IAEa,MAAVP,EACDO,EAAGR,UAAU,MAGPQ,EAAGJ,aAAeH,EACxB9sB,KAAKwP,KAAK,eAAgBxP,KAAKitB,aAGzBI,EAAGC,OAAOR,IAChBO,EAAGR,UAAUC,GAGtB,CAMAC,cAAcD,GACX,IAAIS,EAAKvtB,KAAKyrB,iBACd,GAAI8B,GAAMA,EAAGN,aAAeH,EAGzB,GADiBS,EAAGC,KAAK,CAAE5sB,GAAIksB,IAAU,GAEtCS,EAAGV,UAAUC,OAGX,CACF,IAAIW,EAAWF,EAAGC,KAAK,CAAEJ,QAASN,EAAQY,QAAS,IAAK,GACpDD,EAAUF,EAAGV,UAAUY,EAAS7sB,IAC/B2sB,EAAGV,UAAU,KACrB,CAEN,CAEAI,UAAUU,GAAa,GAEpB,GAAIA,GAAc3tB,KAAKyrB,iBAAkB,CACtC,IAAImC,EAAS5tB,KAAKyrB,iBAAiBwB,YACnC,GAAIW,EAAQ,CACT,IAAIC,EAAW7tB,KAAKyrB,iBAAiB0B,QAAQS,GAG7C5tB,KAAKyrB,iBAAiB3iB,QAClBsF,GAASA,EAAKgf,SAAWS,EAAST,UAItC,IAAIU,EACD9tB,KAAKyrB,iBAAiBsC,YAAY,IAAM,KAK3C,OAFA/tB,KAAKguB,oBAEEF,CACV,CACH,CAEA,IAAIT,EAAKrtB,KAAK2qB,iBACd,GAAU,MAAN0C,EAAY,OAAO,KAEvB,IAAIO,EAASP,EAAGJ,YAGhB,OAFeI,EAAGF,QAAQS,EAG7B,CAEAK,iBACG,IAAIZ,EAAKrtB,KAAK2qB,iBACd,GAAU,MAAN0C,EAAY,OAAO,KAEvB,IAAIO,EAASP,EAAGa,aAGhB,OAFeb,EAAGF,QAAQS,EAG7B,CAEAO,cAAcC,GACX,IAAIf,EAAKrtB,KAAK2qB,iBACd,GAAU,MAAN0C,EAAY,OAAO,KAEvB,IAAIO,EAASP,EAAGgB,UAAUD,EAAOxtB,IAGjC,OAFeysB,EAAGF,QAAQS,EAG7B,CAQAI,oBAQG,IAAIM,EACAC,EAASvuB,KAAKusB,mBACdgC,IACDD,EAAaC,EAAOtB,aAGvB,IAAIuB,EAAcC,GAEG,MAAdH,GACQtuB,KAAK0uB,oBAAoBD,GAGpCzuB,KAAK2qB,kBAAkB3qB,KAAK2qB,iBAAiB7hB,OAAO0lB,GACpDxuB,KAAKyrB,kBAAkBzrB,KAAKyrB,iBAAiB3iB,OAAO0lB,EAC3D,CAEAG,kBACG,GAAI3uB,KAAKoG,SAASgkB,UAEf,GAA+B,gBAA3BpqB,KAAKoG,SAASgkB,UAA6B,CAC5C,IAAIxZ,EAAW5Q,KAAK4uB,sBAChBC,EAAa7uB,KAAKosB,WAAWrlB,QAAQC,GAAe,QAATA,EAAE3C,MAG7C+a,EAAMpf,KAAK2qB,iBAAiB6C,MAAM5d,IACnC,IAAIkf,GAAQ,EAeZ,OAbAD,EAAW5qB,SAAS+C,IACb8nB,GAA4B,MAAnBlf,EAAE5I,EAAEF,cAEb8I,EAAE5I,EAAEF,YAAYgC,OAEjBgmB,EACGlf,EAAE5I,EAAEF,YAAYgC,QAAQe,GAASA,EAAKjJ,IAAMgQ,IACxCzK,OAAS,EACRyJ,EAAE5I,EAAEF,aAAe8J,IAC3Bke,GAAQ,GACX,IAGIA,CAAK,IACZ,GAGC1P,IACDpf,KAAK2qB,iBAAiBkC,UAAUzN,EAAIxe,IAEpCZ,KAAK+sB,cAAc3N,EAAIxe,IAE7B,MAAO,GACuB,gBAA3BZ,KAAKoG,SAASgkB,WACa,uBAA3BpqB,KAAKoG,SAASgkB,UACf,CAgBC,IAAI2E,EAAY/uB,KAAK2qB,iBAAiBsC,YACtC,IACI8B,GACAA,IAAc/uB,KAAK2qB,iBAAiB2C,OAAOyB,GAC7C,CAIC,IAAIC,EAAQhvB,KAAK2qB,iBAAiBuD,aAElCluB,KAAK2qB,iBAAiBkC,UAAUmC,GAAS,MAEzChvB,KAAK+sB,cAAciC,EAEtB,CACH,MACGhvB,KAAK2qB,iBAAiBkC,UAAU7sB,KAAKoG,SAASgkB,WAE9CpqB,KAAK+sB,cAAc/sB,KAAKoG,SAASgkB,WAKvC,GAAIpqB,KAAKivB,eAAgB,CACtB,MAAMD,EAAQhvB,KAAK2qB,iBAAiBuD,aACpCluB,KAAK6sB,UAAUmC,GAAS,MACxBhvB,KAAK+sB,cAAciC,GAAS,KAC/B,CACH,CAaAE,gBAAgBC,EAAO,MACpBnvB,KAAKmrB,aAAegE,CACvB,CAEA7rB,OAEG,GAAItD,KAAK2sB,YAAa,OACtB3sB,KAAK2sB,aAAc,EAEd3sB,KAAK2qB,iBAAiByE,MAAMC,sBAC9BrvB,KAAK2qB,iBAAiByE,MAAMC,oBACzBrvB,KAAK2qB,iBAAiB2E,YAAY,uBAAuB,KAEtD,IAAIC,EAAWvvB,KAAKitB,YAEpBjtB,KAAKwP,KAAK,eAAgB+f,EAAS,KAK5C,IAAIC,EAAY,CAACC,EAAYT,EAAOU,EAAK,OAClCviB,MAAMC,QAAQqiB,GACRA,EAAW3mB,QAAQwK,IAAOA,EAAEoc,IAAOpc,IAAM0b,IAAO7oB,OAAS,EAEzDspB,IAAeA,EAAWC,IAAOD,IAAeT,EAK7DhvB,KAAKoC,GAAG,4BAA6ByH,IAElC,GAAI7J,KAAKivB,eAAgB,OAEzB,IAAIjX,EAAMhY,KAAKosB,WACf,IAAKpU,EAAK,OAEV,IAAKnO,IAASA,EAAKA,KAAM,OAEzB,IAAI8lB,GAAU,EACVC,EAAc,GAElBngB,QAAQC,UACJgF,MAAK,IACI,IAAIjF,SAAQ,CAACoc,EAAMgE,KAEvB,GAAI7X,aAAehY,KAAK+B,GAAG0c,MAAMqR,cAAe,CAC7C,IAAIC,EACD/X,EAAIwO,SAASL,GAAMA,EAAEvlB,IAAMiJ,EAAKqO,YAAa,GAIhD,GAFAyX,EAAUI,EAAQ5pB,OAAS,GAEtBwpB,EAAS,OAAO9D,IAErB,IAAImE,EAAQ,CACT/F,KAAM,KACN5I,MAAO,IAGV0O,EAAQ9rB,SAASkiB,IACd,IAAI8J,EAAYpmB,EAAKA,KAAK,GAAGsc,EAAEuJ,QAC1BO,GAELD,EAAM3O,MAAM/c,KAAK,CACdD,IAAK,GAAG8hB,EAAE+J,OAASlY,EAAImY,YAAYhK,EAAEvlB,OAAOulB,EAAEuJ,OAC9CU,KAAM,SACNztB,MAAOstB,GACR,IAGLjY,EAAIhQ,QACAqoB,QAAQ,CACNL,MAAOA,IAETtb,MAAM4b,IACJV,EAAcU,EAAazmB,MAAQ,GACnC+lB,EAAY3rB,SAASqP,WACXA,EAAE1S,EAAE,IAGdirB,GAAM,IAERlX,MAAMkb,EACb,MAGGF,EAAU3X,EAAIpX,IAAMiJ,EAAKqO,SACzB0X,EAAc,CAAC/lB,EAAKA,MACpBgiB,GACH,MAGLnX,MAAK,KAmGH,GAlGIib,IAEW3X,EAAIhQ,QACVmQ,cAAcyX,IAEnBA,GAAe,IAAI3rB,SAASssB,IAErBvwB,KAAKwwB,YAAYD,KAKlBvwB,KAAK2qB,iBAAiB2C,OACpBiD,EAAS,GAAGvY,EAAI0X,UAElB1vB,KAAKywB,gBAMLzwB,KAAK2qB,iBAAiB2C,OACpBiD,EAAS,GAAGvY,EAAI0X,UAEnB1vB,KAAKywB,gBAGDzwB,KAAK0uB,oBAAoB6B,IAGvBvwB,KAAK8qB,mBAAmB9C,OACrBhoB,KAAK+qB,oBAEQ9mB,SAASysB,IAEzB,GAAI/sB,GAAG+sB,EAAQ,eACZ,OAAO,EAIV,IAAIC,EAAM,EACN1b,EAAStR,GAAG+sB,GAAOjlB,gBACnB9H,GAAG+sB,GAAOjlB,gBAAgBM,MAC3B4kB,EAAMhtB,GAAG+sB,GACLjlB,gBACAM,MAAMpI,GAAG+sB,IAEb/sB,GAAG+sB,GAAOjlB,gBAAgBA,gBAAgBM,QAK1CkJ,EAAStR,GAAG+sB,GACRjlB,gBACAA,gBACJklB,EAAMhtB,GAAG+sB,GACLjlB,gBACAA,gBACAM,MAAMpI,GAAG+sB,GAAOjlB,kBAIvB,IAAImlB,EAAK5wB,KAET,GAAIiV,EAAOhK,QAAS,CACjB,IAAIlL,EAAIC,KAAK+B,GAAG9B,QAChBgV,EAAOhK,QACJ,CACGrK,GAAI8vB,EAAQ,cACZhwB,KAAM,SACNiC,MAAO5C,EACJ,wCAEHmB,IAAK,2BACLK,MAAO,SAAUX,EAAIiwB,GAClBD,EAAGE,aACHntB,GAAG/C,GAAI6K,gBAAgBD,WAAW5K,EACrC,GAEH+vB,EAEN,MAhEN3wB,KAAK2qB,iBAAiBvJ,IAAImP,EAAU,GACpCvwB,KAAKwP,KAAK,SAAU+gB,IAmEvB,IAIAvwB,KAAKyrB,kBAELzrB,KAAK+wB,oBAAoB,CACtBlnB,KAAM+lB,OAMT5X,aAAehY,KAAK+B,GAAG0c,MAAMqR,eAAgB,CAEhD,IAAI/I,EAAkB/mB,KAAKosB,WAAWpF,eAClChgB,GACEA,EAAEJ,gBAAkBI,EAAEJ,eAAehG,IAAMiJ,EAAKqO,WAOtD,GAHA0X,EAAcA,EAAY,GAIvBA,GACA7I,GACAA,EAAgB5gB,OAAS,EAC1B,CAEC,IAAIupB,EAAK3I,EAAgB,GAAG9hB,OAAOyqB,KAC9BE,EAAYhvB,IAAY,MAAN8uB,IACpBE,EAAYhvB,GAAKgvB,EAAYF,IAEhC1vB,KAAK2qB,iBAAiB6C,KAAK,CAAC,GAAGvpB,SAAS+sB,IACrC,IAAIC,EAAiB,CAAC,EAEtBlK,EAAgB9iB,SAAS+C,IACtB,IAAIkqB,EAAkB,CAAC,EACnBlqB,GAAKA,EAAEylB,YACRyE,EACGtB,EAAY5oB,EAAEylB,UAAU0E,iBAAmB,CAAC,GAGlD,IAAIC,EAAeJ,EAAEhqB,EAAEmqB,iBAAmB,CAAC,EAEvCE,EAAe7B,EAChB0B,EACAF,EAAEpwB,GACF8uB,GAKAviB,MAAMC,QAAQgkB,IACdA,EAAatoB,QACTwK,GACEA,GAAKsc,EAAYhvB,IACjB0S,EAAE1S,IAAMgvB,EAAYhvB,IACpB0S,EAAEoc,IAAOE,EAAYhvB,KACzBuF,OAAS,GACXkrB,GAEAD,EAAa9sB,KAAKsrB,GAElBqB,EAAejqB,EAAEmqB,gBAAkBC,EACnCH,EAAejqB,EAAEF,YAAcmqB,EAC5BjqB,EAAEmqB,gBACHhjB,KAAKmF,GAAMA,EAAE1S,IAAM0S,EAAEoc,IAAOpc,KAE7BnG,MAAMC,QAAQgkB,IACdA,GAAgBxB,EAAYhvB,IAC1BwwB,EAAaxwB,IAAMgvB,EAAYhvB,IAC/BwwB,EAAa1B,IAAOE,EAAYhvB,KACnCywB,IAEAJ,EAAejqB,EAAEmqB,gBAAkBvB,EACnCqB,EAAejqB,EAAEF,YACd8oB,EAAYhvB,IAAMgvB,EACxB,IAICvb,OAAOC,KAAK2c,GAAgB9qB,OAAS,IAE1B6R,EAAIhQ,QACVmQ,cAAc8Y,GAEpBjxB,KAAK2qB,iBAAiB2G,WACnBN,EAAEpwB,GACFqwB,GAGCjxB,KAAKyrB,kBACNzrB,KAAKyrB,iBAAiB6F,WACnBN,EAAEpwB,GACFqwB,GAGNjxB,KAAKwP,KACF,SACAxP,KAAK2qB,iBAAiBwC,QAAQ6D,EAAEpwB,KAEtC,GAEN,CACH,CAGAZ,KAAKguB,oBACLhuB,KAAK2uB,iBAAiB,GACvB,IAGR3uB,KAAKoC,GAAG,4BAA6ByH,IAOlC,IAAImO,EAAMhY,KAAKosB,WACf,IAAKpU,EAAK,OAGV,IAAIrS,EAASkE,EAAKA,KAClB,IAAKlE,EAAQ,OAGb,GACG3F,KAAKivB,gBACLjvB,KAAKitB,aAAarsB,KAAO+E,EAAOqS,EAAI0X,OAAS/pB,EAAO/E,IAEpD,OAGH,IAAI2wB,GAAa,EACbC,GAAW,EACXC,EAAa,GAKbC,EAAiB,GACjB9B,EAAc,CAAC,EAGnB,GAAI5X,aAAehY,KAAK+B,GAAG0c,MAAMqR,cAAe,CAC7C,IAAIC,EAAU/X,EAAIwO,SAASL,GAAMA,EAAEvlB,IAAMiJ,EAAKqO,YAAa,GAC3DqZ,EAAaxB,EAAQ5pB,OAAS,EAC1BorB,KACAxB,GAAW,IAAI9rB,SAASkiB,IACtBsL,EAAaA,EAAWzJ,OACrBhoB,KAAK2qB,iBACD6C,MAAMpf,GAEDA,EACG,GAAGpO,KAAKosB,WAAW+D,YAChBhK,EAAEvlB,OACAulB,EAAEuJ,UACJ/pB,EAAOwgB,EAAEuJ,OAAS/pB,EAAO/E,MAGpCuN,KAAKgY,GAAMA,EAAEvlB,MAAO,IAIvBZ,KAAKyrB,mBACNiG,EAAiBA,EAAe1J,OAC7BhoB,KAAKyrB,iBACD+B,MAAMpf,GAEDA,EACG,GAAGpO,KAAKosB,WAAW+D,YAChBhK,EAAEvlB,OACAulB,EAAEuJ,UACJ/pB,EAAOwgB,EAAEuJ,OAAS/pB,EAAO/E,MAGpCuN,KAAKgY,GAAMA,EAAEvlB,MAAO,IAE9B,IAGH4wB,EAAWC,EAAWtrB,OAAS,EAE/BypB,EAAc5vB,KAAK2xB,iBAAiB5B,EAASpqB,GAEnD,MAGG4rB,EAAavZ,EAAIpX,IAAMiJ,EAAKqO,SACxBqZ,IAEI5rB,EAAO/E,IAAkB,MAAZoX,EAAI0X,OAAc/pB,EAAO/E,GAAK+E,EAAOqS,EAAI0X,OAE3D+B,EAAWntB,KAAKqB,EAAO/E,IAEvB4wB,EAAWxxB,KAAK2qB,iBAAiB2C,OAAO3nB,EAAO/E,IAC/CgvB,EAAcjqB,GAKpB,GAAI4rB,EACD,GAAIC,EACD,GAAIxxB,KAAKwwB,YAAYZ,GAAc,CAO5B5vB,KAAK2qB,mBACN8G,EAAazxB,KAAK+B,GAAG2gB,KAAK+O,GAC1BA,EAAWxtB,SAAS6oB,IACjB9sB,KAAK2qB,iBAAiB2G,WAAWxE,EAAQ8C,EAAY,KAIvD5vB,KAAKyrB,mBAENiG,EAAiB1xB,KAAK+B,GAAG2gB,KAAKgP,GAC9BA,EAAeztB,SAAS6oB,IACrB9sB,KAAKyrB,iBAAiB6F,WAAWxE,EAAQ8C,EAAY,KAI3D5vB,KAAKwP,KAAK,SAAUogB,GAGpB,IAAIL,EAAWvvB,KAAKitB,YAChBsC,GAAYA,EAAS3uB,IAAMgvB,EAAYhvB,IACxCZ,KAAKwP,KAAK,eAAgB+f,EAEhC,MAIGkC,EAAWxtB,SAASrD,IAEjB,IAAI2uB,EAAWvvB,KAAKitB,YAChBsC,GAAYA,EAAS3uB,IAAMA,GAC5BZ,KAAKwP,KAAK,eAAgB,MAE7BxP,KAAK2qB,iBAAiB5P,OAAOna,GAO7BZ,KAAKwP,KAAK,SAAU5O,EAAG,SAKvBZ,KAAKwwB,YAAYZ,KAGvB5vB,KAAK2qB,iBAAiBvJ,IAAIwO,EAAa,GAEnC5vB,KAAKyrB,kBACNzrB,KAAK+wB,oBAAoB,CACtBlnB,KAAM,CAAC+lB,KAGb5vB,KAAKwP,KAAK,SAAUogB,IAK1B,IAAI7I,EAAkB/O,EAAIgP,eACtBhgB,GAAMA,EAAEJ,gBAAkBI,EAAEJ,eAAehG,IAAMiJ,EAAKqO,WAI1D,GACGF,aAAehY,KAAK+B,GAAG0c,MAAMmT,UAC7B7K,GACAA,EAAgB5gB,OAAS,EAC1B,CAEC,IAAIupB,EAAK3I,EAAgB,GAAG9hB,OAAOyqB,KAC9B/pB,EAAO/E,IAAY,MAAN8uB,IAAY/pB,EAAO/E,GAAK+E,EAAO+pB,IAE7C1vB,KAAK2qB,iBAAiBkH,QAAU,GACjC7xB,KAAK2qB,iBAAiB6C,KAAK,CAAC,GAAGvpB,SAAS+sB,IACrC,IAAIC,EAAiB,CAAC,EAEtBlK,EAAgB9iB,SAAS+C,IACtB,IAAKA,EAAG,OAER,IAAIkqB,EAAkB,CAAC,EACnBE,EAAeJ,EAAEhqB,EAAEmqB,iBAAmB,CAAC,EAEvCnqB,EAAEylB,YACHyE,EACGvrB,EAAOqB,EAAEylB,UAAU0E,iBAAmB,CAAC,GAE7C,IAAIE,EAAe7B,EAAU0B,EAAiBF,EAAEpwB,GAAI8uB,GAIjDviB,MAAMC,QAAQgkB,IACdA,EAAatoB,QACTwK,GACEA,GAAK3N,EAAO/E,IACZ0S,EAAE1S,IAAM+E,EAAO/E,IACf0S,EAAEoc,IAAO/pB,EAAO/E,KACpBuF,OAAS,IACVkrB,GAEDJ,EAAejqB,EAAEmqB,gBAAkBC,EAAatoB,QAC5CwK,IAAOA,EAAE1S,IAAM0S,EAAEoc,IAAOpc,IAAM3N,EAAO/E,KAEzCqwB,EAAejqB,EAAEF,YAAcmqB,EAC5BjqB,EAAEmqB,gBACHhjB,KAAKmF,GAAMA,EAAE1S,IAAM0S,EAAEoc,IAAOpc,KAE7BnG,MAAMC,QAAQgkB,IACdA,GAAgBzrB,EAAO/E,IACrBwwB,EAAaxwB,IAAM+E,EAAO/E,IAC1BwwB,EAAa1B,IAAO/pB,EAAO/E,IAC7BywB,IAEDJ,EAAejqB,EAAEmqB,gBAAkB,KACnCF,EAAejqB,EAAEF,YAAc,MAI9BqG,MAAMC,QAAQgkB,IAAiBC,GAG7BD,EAAatoB,QACTwK,GACEA,GAAK3N,EAAO/E,IACZ0S,EAAE1S,IAAM+E,EAAO/E,IACf0S,EAAEoc,IAAO/pB,EAAO/E,KACpBuF,OAAS,EAEXirB,EAAantB,SAAQ,CAACqP,EAAGvH,KAEnBuH,GAAK3N,EAAO/E,IACZ0S,EAAE1S,IAAM+E,EAAO/E,IACf0S,EAAEoc,IAAO/pB,EAAO/E,KAEhBwwB,EAAarlB,GAASpG,EAAM,IAKlCyrB,EAAa9sB,KAAKqB,GAGrBsrB,EAAejqB,EAAEmqB,gBAAkBC,EACnCH,EAAejqB,EAAEF,YAAcmqB,EAC5BjqB,EAAEmqB,gBACHhjB,KAAKmF,GAAMA,EAAE1S,IAAM0S,EAAEoc,IAAOpc,KAE7BnG,MAAMC,QAAQgkB,IACdA,GAAgBzrB,EAAO/E,IACrBwwB,EAAaxwB,IAAM+E,EAAO/E,IAC1BwwB,EAAa1B,IAAO/pB,EAAO/E,KAC9BywB,IAEAJ,EAAejqB,EAAEmqB,gBAAkBxrB,EACnCsrB,EAAejqB,EAAEF,YAAcnB,EAAO/E,IAAM+E,EAC/C,IAIC0O,OAAOC,KAAK2c,GAAgB9qB,OAAS,IAE1B6R,EAAIhQ,QACVmQ,cAAc8Y,GAEjBjxB,KAAKyrB,kBACLzrB,KAAKyrB,iBAAiB6B,OAAO0D,EAAEpwB,KAE/BZ,KAAKyrB,iBAAiB6F,WAAWN,EAAEpwB,GAAIqwB,GAGvCjxB,KAAK2qB,kBACL3qB,KAAK2qB,iBAAiB2C,OAAO0D,EAAEpwB,MAE/BZ,KAAK2qB,iBAAiB2G,WAAWN,EAAEpwB,GAAIqwB,GACvCjxB,KAAKwP,KACF,SACAxP,KAAK2qB,iBAAiBwC,QAAQ6D,EAAEpwB,MAGzC,GAGT,CAEAZ,KAAKguB,oBACLhuB,KAAK2uB,iBAAiB,IAKzB3uB,KAAKoC,GAAG,2BAA4ByH,IAIjC,GACI7J,KAAKosB,YACLpsB,KAAKgI,OACNhI,KAAKosB,WAAWxrB,IAAMiJ,EAAKqO,SAH9B,CASA,IAAIvS,EAASkE,EAAKA,KAElB,GAAKlE,EAAL,CAGA,IAAI+pB,EAAK1vB,KAAKgI,MAAM/C,OAAOyqB,KAM3B,GALK/pB,EAAO+pB,KACTA,EAAK,OAKL1vB,KAAKivB,gBACLjvB,KAAKitB,cAAcyC,KAAQ/pB,EAAO+pB,IAAO/pB,EAAO/E,IAFnD,CAOA,GAAI+E,GACG3F,KAAK2qB,iBAAiB2C,OAAO3nB,EAAO+pB,IAAM,CAC3C,IAAIP,EAAO,CAAEa,MAAO,CAAC,GACrBb,EAAKa,MAAMN,GAAM/pB,EAAO+pB,GAExB1vB,KAAKgI,MAAM8pB,aAAa3C,GAAMza,MAAM4F,IAEjC,GAAInN,MAAMC,QAAQkN,EAAIzQ,OAASyQ,EAAIzQ,KAAK1D,OAAQ,CAE7C,IAAI6R,EAAMhY,KAAKosB,WACf,IAAKpU,EAAK,OAEEA,EAAIhQ,QACVmQ,cAAcmC,EAAIzQ,KAAK,IAEzB7J,KAAK2qB,iBAAiB2C,OAAO3nB,EAAO+pB,KACrC1vB,KAAK2qB,iBAAiB2G,WACnB3rB,EAAO+pB,GACPpV,EAAIzQ,KAAK,IAKf,IAAI0lB,EAAWvvB,KAAKitB,YAChBsC,GAAYA,EAASG,IAAO/pB,EAAO+pB,IACpC1vB,KAAKwP,KAAK,eAAgB+f,EAEhC,MAGgBvvB,KAAKitB,aACJtnB,EAAO+pB,IAAK1vB,KAAKwP,KAAK,eAAgB,MAEpDxP,KAAK2qB,iBAAiB5P,OAAOpV,EAAO+pB,IACpC1vB,KAAKwP,KAAK,SAAU7J,EAAO+pB,GAC9B,GAEN,CAIH1vB,KAAKguB,oBACLhuB,KAAK2uB,iBA5CL,CAdmB,CALnB,CA+DsB,IAGzB3uB,KAAKoC,GAAG,4BAA6ByH,IAElC,IAAImO,EAAMhY,KAAKosB,WACf,IAAKpU,EAAK,OAEV,IAAI+Z,EAAWloB,EAAKA,KAChBmoB,GAAa,EACbC,EAAa,GACbC,EAAiB,GAErB,GAAIlyB,KAAKivB,gBAAkBjvB,KAAKitB,aAAarsB,IAAMmxB,EAChD,OAIH,GAAI/Z,aAAehY,KAAK+B,GAAG0c,MAAMqR,cAAe,CAC7C,IAAIC,EAAU/X,EAAIwO,SAASL,GAAMA,EAAEvlB,IAAMiJ,EAAKqO,YAAa,GAC3D8Z,EAAajC,EAAQ5pB,OAAS,EAC1B6rB,IACAjC,GAAW,IAAI9rB,SAASkiB,IACtB8L,EACGjyB,KAAK2qB,iBACD6C,MAAMpf,GACGA,EAAK,GAAG+X,EAAE+J,SAAS/J,EAAEuJ,SAAWqC,IAEzC5jB,KAAKgY,GAAMA,EAAEvlB,MAAO,GAGvBZ,KAAKyrB,mBACNyG,EACGlyB,KAAKyrB,iBACD+B,MAAMpf,GACGA,EAAK,GAAG+X,EAAE+J,SAAS/J,EAAEuJ,SAAWqC,IAEzC5jB,KAAKgY,GAAMA,EAAEvlB,MAAO,GAC9B,GAGT,MAGGoxB,EAAaha,EAAIpX,IAAMiJ,EAAKqO,SACxB8Z,GACDC,EAAW3tB,KAAKytB,GAKtB,GAAIC,EAAY,CAEb,IAAIzC,EAAWvvB,KAAKitB,YAEpBgF,EAAWhuB,SAASkuB,IACb5C,GAAYA,EAASvX,EAAI0X,OAASyC,GACnCnyB,KAAKwP,KAAK,eAAgB,MAEzBxP,KAAK2qB,iBAAiB2C,OAAO6E,IAC9BnyB,KAAK2qB,iBAAiB5P,OAAOoX,EAAM,IAGrCnyB,KAAKyrB,kBACNyG,EAAejuB,SAASkuB,IACjBnyB,KAAKyrB,iBAAiB6B,OAAO6E,IAC9BnyB,KAAKyrB,iBAAiB1Q,OAAOoX,EAAM,IAIxCF,EAAW,IAAIjyB,KAAKwP,KAAK,SAAUyiB,EAAW,GACrD,CAGA,IAAIlL,EAAkB/O,EAAIgP,eACtBhgB,GAAMA,EAAEJ,gBAAkBI,EAAEJ,eAAehG,IAAMiJ,EAAKqO,WAI1D,GACGF,aAAehY,KAAK+B,GAAG0c,MAAMmT,UAC7B7K,GACAA,EAAgB5gB,OAAS,EAC1B,CAEC,IAAIupB,EAAK3I,EAAgB,GAAG9hB,OAAOyqB,KAEnC1vB,KAAK2qB,iBAAiB6C,KAAK,CAAC,GAAGvpB,SAAS+sB,IACrC,IAAIoB,EAAmB,CAAC,EAExBrL,EAAgB9iB,SAAS+C,IACtB,IAAIqrB,EAAYrB,EAAEhqB,EAAEmqB,gBACH,MAAbkB,IAGDllB,MAAMC,QAAQilB,IACdA,EAAUvpB,QACNwK,GACEA,GAAKye,GACLze,EAAE1S,IAAMmxB,GACRze,EAAEoc,IAAOqC,IACb5rB,OAAS,GAEXisB,EAAiBprB,EAAEmqB,gBAAkBkB,EAAUvpB,QAC3CwK,IAAOA,EAAE1S,IAAM0S,EAAEoc,IAAOpc,IAAMye,IAElCK,EAAiBprB,EAAEF,YAAcsrB,EAC9BprB,EAAEmqB,gBACHhjB,KAAKmF,GAAMA,EAAE1S,IAAM0S,EAAEoc,IAAOpc,KAE9B+e,GAAaN,GACbM,EAAUzxB,IAAMmxB,GAChBM,EAAU3C,IAAOqC,IAEjBK,EAAiBprB,EAAEmqB,gBAAkB,KACrCiB,EAAiBprB,EAAEF,YAAc,MACpC,IAICuN,OAAOC,KAAK8d,GAAkBjsB,OAAS,IAE5B6R,EAAIhQ,QACVmQ,cAAcia,GAEpBpyB,KAAK2qB,iBAAiB2G,WAAWN,EAAEpwB,GAAIwxB,GAEnCpyB,KAAKyrB,kBACNzrB,KAAKyrB,iBAAiB6F,WAAWN,EAAEpwB,GAAIwxB,GAE1CpyB,KAAKwP,KAAK,SAAUxP,KAAK2qB,iBAAiBwC,QAAQ6D,EAAEpwB,KACvD,GAEN,KAIH,IAAI0xB,EAAStyB,KAAKusB,mBACd+F,GAAUtyB,KAAKoG,SAAS8jB,SACzBlqB,KAAKuyB,SAAS,CACXC,QAASF,EACTG,UAAW,eACXC,SAAU,KACP1yB,KAAKguB,oBACLhuB,KAAK2uB,iBAAiB,IAM/B,MAAMgE,EAAW3yB,KAAK4yB,qBAClBD,GACD3yB,KAAKuyB,SAAS,CACXC,QAASG,EACTF,UAAW,eACXC,SAAU,KACP1yB,KAAKgb,WACLhb,KAAK6yB,UAAU,GAI3B,CAYAC,kCAAkClC,EAAI3R,GACnC,OAAO,IAAIxP,SAAQ,CAACC,EAASmH,KAC1B,OAAQ+Z,EAAGhE,YAER,KAAKgE,EAAG3F,eAAeC,WACpB0F,EAAGiC,WAAWle,MAAMkC,GAKvB,KAAK+Z,EAAG3F,eAAeyB,aAIpB1sB,KAAKuyB,SAAS,CACXC,QAAS5B,EACT6B,UAAW,kBACXC,SAAU,KAEPhjB,GAAS,IAGf,MAGH,KAAKkhB,EAAG3F,eAAe0B,YAKvB,QACGjd,IAEN,GAEN,CAEAmjB,SAASE,EAAOC,GAEThzB,KAAKgrB,aAAehrB,KAAKirB,eAAeC,aACzClrB,KAAKgrB,YAAchrB,KAAKirB,eAAeyB,aACvC1sB,KAAKwP,KAAK,mBAAoB,CAAC,IAGlC,IAAIwI,EAAMhY,KAAKosB,WACf,GAAW,MAAPpU,EAED,OADAhY,KAAKgrB,YAAchrB,KAAKirB,eAAe0B,YAChCld,QAAQC,QAAQ,IAG1B,IAAI1H,EAAQgQ,EAAIhQ,QAChB,GAAa,MAATA,EAED,OADAhI,KAAKgrB,YAAchrB,KAAKirB,eAAe0B,YAChCld,QAAQC,QAAQ,IAI1B,IAAI/C,EAAQ3M,KAAKoG,SAAS2jB,gBAAgBxd,YAAc,GAGxD,IAAI0mB,EAASjzB,KAAK+B,GAAG2D,UAClB1F,KAAKoG,SAAS2jB,gBAAgBC,kBAAoB,MAGjDhqB,KAAKywB,iBACNwC,EAASjzB,KAAKywB,gBAGjB,MAAMyC,EAAqB,CACxBjJ,KAAM,MACN5I,MAAO,IAGNrhB,KAAKmrB,cACN+H,EAAmB7R,MAAM/c,KAAKtE,KAAKmrB,cAItC,MAAMgI,EAAqBnzB,KAAKusB,mBAC1BE,EAAYzsB,KAAKysB,UACvB,IAAKzsB,KAAKoG,SAAS8jB,SAAWiJ,GAAsB1G,EAAW,CAC5D,MAAM2G,EAAeD,GAAoBlG,aAAarsB,GAClDwyB,GACDF,EAAmB7R,MAAM/c,KAAK,CAC3B4rB,MAAOzD,EAAUyD,MACjB7rB,IAAKooB,EAAU7rB,GACfwvB,KAAM3D,EAAUyD,MAAQ,WAAa,SACrCvtB,MAAO8pB,EAAU4G,iBACdF,EAAmBxI,iBAAiBwC,QAAQiG,KAIxD,MAEK,GAAIpzB,KAAK4yB,qBAAsB,CACjC,MAAMU,EAAetzB,KAAK4yB,qBAAqB3F,YAC3CqG,GACDP,EAAQ,EACRC,EAAQ,KACRC,EAAS,CACNhJ,KAAM,MACN5I,MAAO,CACJ,CACGhd,IAAKrE,KAAKosB,WAAWsD,KACrBU,KAAM,SACNztB,MAAO2wB,EAAatzB,KAAKosB,WAAWsD,UAO7CuD,EAAS,CACNhJ,KAAM,MACN5I,MAAO,CACJ,CACGhd,IAAKrE,KAAKosB,WAAWsD,KACrBU,KAAM,SACNztB,MAAO,kBAKtB,CAGIuwB,EAAmB7R,MAAMlb,SAC1B+sB,EAAmB7R,MAAMkS,QAAQN,GACjCA,EAASC,GAIRD,GAAQ5R,OAAOvY,SAAQmqB,EAAO5R,MAAQ4R,EAAO5R,MAAMvY,QAAQ8G,GAAMA,KAGrE,IAAIuf,EAAO,CACRa,MAAOiD,GAAU,CAAC,EAElBO,KAAMT,GAAS,EACfplB,KAAMhB,EACN1D,SACGjJ,KAAKoG,SAAS6C,WACbjJ,KAAKoG,SAASklB,iBAcrB,OATa,MAAT0H,IACD7D,EAAK6D,MAAQA,GAIZhzB,KAAKoG,SAAS8jB,UAAYlqB,KAAKivB,uBACzBE,EAAK6D,MAIZvjB,QAAQC,UAKJgF,MAAK,KAEH,IAAI+e,EAASzzB,KAAKusB,mBAClB,OAAKkH,EAEEzzB,KAAK8yB,kCAAkCW,GAF1BhkB,QAAQC,SAEyB,IAMvDgF,MAAK,IACI,IAAIjF,SAAQ,CAACC,EAASmH,KAC1B,GACa,MAAVoc,GACgB,MAAhBA,EAAO5R,QACN4R,EAAO5R,MAAMlb,OAEd,OAAOuJ,IAEV,IAAIgkB,EAAY,GAEhBT,EAAO5R,MAAMpd,SAASmsB,IAEnB,GACgB,sBAAbA,EAAKA,MACQ,0BAAbA,EAAKA,KACN,CACC,IAAIuD,EAAK3zB,KAAK+B,GAAGyqB,mBAAmB4D,EAAKztB,OACrCgxB,GACDD,EAAUpvB,KACPtE,KAAK8yB,kCAAkCa,GAGhD,KAGHlkB,QAAQ8R,IAAImS,GACRhf,MAAK,KACHhF,GAAS,IAEXiF,MAAMkC,EAAO,MAKtBnC,MAAK,IACI,IAAIjF,SAAQ,CAACC,EAASmH,KAK1B7W,KAAK4zB,wBAA0B,CAC5BlkB,QAASA,EACTmH,OAAQA,GAGX7W,KAAK6zB,aAAa7rB,EAAOmnB,GAAMxa,OAAOxM,IACnC0O,EAAO1O,EAAI,GACZ,KAIjB,CAEA0rB,aAAa7rB,EAAOmnB,GAMjB,OAAOnnB,EAAMqoB,QAAQlB,GAAMza,MAAM7K,GACvB7J,KAAK8zB,oBAAoBjqB,IAEtC,CAcAiqB,oBAAoBjqB,GACjB,OAAO4F,QAAQC,UAAUgF,MAAK,KAE3B1U,KAAK+zB,aAAelqB,EAAKmqB,YAGpBh0B,KAAK2qB,iBAAiB6C,KAAK,CAAC,GAAGrnB,SACjCnG,KAAK2qB,iBAAiB3P,WACtBhb,KAAK2qB,iBAAiBlT,MAAM5N,IAI/B6gB,GAAe,KACZ1qB,KAAK2qB,iBAAiBsJ,MAAK,KAEpBj0B,KAAKoG,SAAS8jB,SACfrV,YAAW,KACR7U,KAAKguB,mBAAmB,GACxB,KAGCnkB,IACR,GACF,GASH7J,KAAK+wB,oBAAoBlnB,GAEzB6gB,GAAe,KAEC1qB,KAAKusB,oBAGfvsB,KAAKguB,oBACLhuB,KAAK2uB,mBAGL3uB,KAAK2uB,iBACR,GACA,GACHjE,GAAe,KAER1qB,KAAKgrB,aAAehrB,KAAKirB,eAAe0B,cACzC3sB,KAAKgrB,YAAchrB,KAAKirB,eAAe0B,YACvC3sB,KAAKwP,KAAK,kBAAmB,CAAC,GACjC,GACA,IACHkb,GAAe,KAGR1qB,KAAKoG,SAAS8jB,SACflqB,KAAKwP,KAAK,WAAY,CAAC,EAC1B,GACA,IACHkb,GAAe,KAER1qB,KAAK4zB,0BACN5zB,KAAK4zB,wBAAwBlkB,UAG7B1P,KAAK4zB,wBAA0B,KAClC,GACA,EAAE,GAEX,CAWA9C,WAAWiC,EAAOC,GAsCf,OAAOvjB,QAAQC,UAAUgF,MAAK,KAEvB1U,KAAKk0B,cAENjgB,aAAajU,KAAKk0B,oBACXl0B,KAAKk0B,aAIVl0B,KAAKm0B,gBACPn0B,KAAKm0B,cAAgB,IAAI1kB,SAAQ,CAACC,EAASmH,KACxC7W,KAAKo0B,uBAAyB1kB,EAC9B1P,KAAKq0B,sBAAwBxd,CAAM,KAMzC7W,KAAKk0B,YAAcrf,YAAW,KAE3B7U,KAAKgb,WAEEhb,KAAK6yB,SAASE,EAAOC,GACxBte,MAAK,KACC1U,KAAKm0B,gBACNn0B,KAAKo0B,gCACEp0B,KAAKm0B,qBACLn0B,KAAKo0B,8BACLp0B,KAAKq0B,uBAIfpgB,aAAajU,KAAKk0B,oBACXl0B,KAAKk0B,WAAW,IAEzBvf,OAAOxM,IACDnI,KAAKm0B,gBACNn0B,KAAKq0B,sBAAsBlsB,UACpBnI,KAAKm0B,qBACLn0B,KAAKo0B,8BACLp0B,KAAKq0B,uBAGfpgB,aAAajU,KAAKk0B,oBACXl0B,KAAKk0B,WAAW,MAE7B,IAIIl0B,KAAKm0B,gBAElB,CAuBAG,aAAarB,GACVjzB,KAAKywB,eAAiBwC,CACzB,CAEAsB,QAAQzrB,GACL,IAAIukB,EAAKrtB,KAAK2qB,iBACd,OAAI0C,EACMA,EAAGG,MAAMpO,IACb,IAAI7Z,GAAU,EAiBd,OAVavF,KAAKusB,oBACJvsB,KAAKoG,SAAS8jB,SAAW3kB,IACpCA,EAAUvF,KAAK0uB,oBAAoBtP,IAIlC7Z,GAAWuD,IACZvD,EAAUuD,EAAOsW,IAGb7Z,CAAO,IAGV,EAEb,CAEAmpB,oBAAoBD,GAEjB,GAAe,MAAXA,EAAiB,OAAO,KAE5B,IAAI6D,EAAStyB,KAAKusB,mBAClB,GAAc,MAAV+F,EAAgB,OAAO,EAE3B,IAAI7F,EAAYzsB,KAAKysB,UACrB,GAAiB,MAAbA,EAAmB,OAAO,EAI9B,IAAI6B,EAAagE,EAAOrF,YACxB,GAAkB,MAAdqB,EACD,OAAO,EAGV,IAAIkG,EAAU/F,EAAQhC,EAAU0E,gBAChC,GAAe,MAAXqD,EAAiB,CAElB,IAAI/F,EAAQhC,EAAU3lB,YAGnB,OAAO,EAFP0tB,EAAU/F,EAAQhC,EAAU3lB,WAIlC,CAEA,IAAI4oB,EAAKjD,EAAUxnB,OAAOyqB,KAG1B,OAAI8E,EAAQ1rB,OAEN0rB,EAAQ1rB,QAAQoN,IAASA,EAAItV,IAAMsV,EAAIwZ,IAAOxZ,IAAQoY,EAAW1tB,KAC7DuF,OAAS,GAGRquB,EAAQ5zB,IAAM4zB,EAAQ9E,IAAO8E,IAAYlG,EAAW1tB,EAElE,CAEAoa,WACOhb,KAAK2qB,kBAAkB3qB,KAAK2qB,iBAAiB3P,WAE7Chb,KAAKyrB,kBAAkBzrB,KAAKyrB,iBAAiBzQ,WAEjDhb,KAAKgrB,YAAchrB,KAAKirB,eAAeC,UAC1C,CAEIuJ,iBACD,OAAOz0B,KAAK+zB,cAAgB,CAC/B,CAUAW,OACGlsB,QAAQ+G,MAAM,mDACjB,CAEAolB,SACGnsB,QAAQ+G,MAAM,qDACjB,CAEAqlB,gBAAgBC,GAEb,IAAI9oB,EAAQ/L,KAAK8qB,mBAAmBzd,QAAQwnB,GAG5C70B,KAAK8qB,mBAAmB3e,OAAOJ,EAAO,EACzC,CAcA8e,wBAAwBoI,EAAS,MAY9B,GAL+B,MAA3BjzB,KAAK80B,qBACN90B,KAAK80B,mBAAqB90B,KAAK+B,GAAGgzB,iBAC/B,GAAG/0B,KAAKY,wBAGVZ,KAAKosB,WAAY,CAIlB,IAAIpC,EAFJhqB,KAAK80B,mBAAmBE,WAAWh1B,KAAKosB,WAAWrlB,UAK/C/G,KAAKosB,sBAAsBpsB,KAAK+B,GAAG0c,MAAMqR,gBAC1C9F,EAAmBhqB,KAAKosB,WAAW4D,OAYlChG,EACDhqB,KAAK80B,mBAAmBjwB,SAASmlB,GAC/BhqB,KAAK80B,mBAAmBjwB,SAAS,CAAC,EAC1C,MACG7E,KAAK80B,mBAAmBE,WAAW,IACnCh1B,KAAK80B,mBAAmBjwB,SACrB4kB,EAAcrjB,SAAS2jB,gBAAgBC,kBAwC7C,GAlCmC,MAA/BhqB,KAAKi1B,yBACNj1B,KAAKi1B,uBAAyBj1B,KAAK+B,GAAGgzB,iBACnC,GAAG/0B,KAAKY,4BAMdZ,KAAKi1B,uBAAuBD,WACzBh1B,KAAKosB,WAAapsB,KAAKosB,WAAWrlB,SAAW,IAG5CksB,IAAQjzB,KAAKoG,SAAS2jB,gBAAgBC,iBAAmBiJ,GAG1DjzB,KAAKoG,UACLpG,KAAKoG,SAAS2jB,iBACd/pB,KAAKoG,SAAS2jB,gBAAgBC,iBAE9BhqB,KAAKi1B,uBAAuBpwB,SACzB7E,KAAKoG,SAAS2jB,gBAAgBC,kBAGjChqB,KAAKi1B,uBAAuBpwB,SACzB4kB,EAAcrjB,SAAS2jB,gBAAgBC,kBAKnB,MAAtBhqB,KAAKk1B,gBACNl1B,KAAKk1B,cAAgBl1B,KAAK+B,GAAGgzB,iBAC1B,GAAG/0B,KAAKY,mBAGVZ,KAAKosB,WAAY,CAClB,IAAI+I,GAAan1B,KAAKo1B,YAAc,IAAItsB,QACpC8D,IACGA,EAAEyoB,WACFzoB,EAAE0oB,WAAa,IAAIjoB,QAAQrN,KAAKosB,WAAWxrB,KAAO,IAEzD,GAAIu0B,GAAaA,EAAUhvB,OAAS,EAAG,CAEpCnG,KAAKk1B,cAAcF,WAAWh1B,KAAKosB,WAAWrlB,UAAY,IAG1D,IAAIwuB,EAAa,GACjBJ,EACIrsB,QACG8D,GAAMA,EAAE9D,QAAU8D,EAAE9D,OAAOuY,OAASzU,EAAE9D,OAAOuY,MAAMlb,SAEtDlC,SAAS2I,IACP,IAAI4oB,GAAU5oB,EAAE9D,OAAOuY,OAAS,IAAIvY,QAChC8G,GACE5P,KAAKosB,WAAWrlB,QAAQC,GAAMA,EAAEpG,IAAMgP,EAAEvL,MAAK8B,OAAS,IAG5DovB,EAAaA,EAAWvN,OAAOwN,EAAO,IAG5C,IAAIC,EAAa,CACdxL,KAAM,KACN5I,MAAOkU,GAEVv1B,KAAKk1B,cAAcrwB,SAAS4wB,EAC/B,CACH,CACH,CAEIlQ,cACD,OAAOvlB,KAAK2rB,YAAa,CAC5B,CAMI+J,mBACD,MAAO,CACJC,OAAQ,EACRC,OAAQ,EAEd,CAEIvL,eACD,OAAOrqB,KAAKoG,SAASikB,UAAYZ,EAAcY,QAClD,CAYAO,qBACG,IAAIrb,EAAQ,IAAIjH,MACb,qGAGH,OADAE,QAAQ+G,MAAMA,GACP,IACV,CASAmc,qBAIG,OAHAljB,QAAQ+G,MACL,qGAEI,IACV,CAEAwhB,oBAAoBlnB,EAAO,CAAC,GAErBA,IAAS,CAAC,GACXrB,QAAQ6O,IACL,2DAGT,CAkGAsa,iBAAiB5B,EAASpqB,GACvB,IAAIiqB,EAAc,CAAC,EAgCnB,OA7BAvb,OAAOC,KAAK3O,GAAQ1B,SAASI,IAC1B0rB,EAAQ9rB,SAAS4xB,IACd,IAAI3F,EAAQlwB,KAAKosB,WAAW+D,YAAY0F,EAAMj1B,IAE9CgvB,EAAY,GAAGM,KAAS7rB,KAASsB,EAAOtB,GAI9B,gBAAPA,GACAsB,EAAqB,cACrBA,EAAqB,aAAEQ,SAEvBypB,EAAYpK,aAAe,GAE3B7f,EAAqB,aAAE1B,SAAS6xB,IAC7B,IAAIC,EAAc,CAAC,EAEnB1hB,OAAOC,KAAKwhB,GAAM7xB,SAAS+xB,IACT,iBAAXA,EACDD,EAA2B,cAAID,EAAoB,cACjDC,EAAY,GAAG7F,KAAS8F,KAAaF,EAAKE,EAAQ,IAG1DpG,EAAYpK,aAAalhB,KAAKyxB,EAAY,IAEhD,GACD,IAGEnG,CACV,CAEAY,YAAY/B,GACT,IAAI3gB,GAAS,EAab,OATI9N,KAAK80B,qBACNhnB,EAASA,GAAU9N,KAAK80B,mBAAmBvvB,QAAQkpB,IAElDzuB,KAAKi1B,yBACNnnB,EAASA,GAAU9N,KAAKi1B,uBAAuB1vB,QAAQkpB,IAEtD3gB,GAAU9N,KAAKk1B,gBAChBpnB,EAASA,GAAU9N,KAAKk1B,cAAc3vB,QAAQkpB,IAE1C3gB,CACV,CAIAmoB,MAAM7vB,GACHA,EAAWA,GAAYpG,KAAK8F,QAC5B,IAAIowB,EAAuB,IAAIl2B,KAAKL,YAAYyG,EAAUpG,KAAK+B,IAC/Dm0B,EAAqB3K,aAAevrB,KAAKurB,aACzC2K,EAAqBlL,YAAchrB,KAAKgrB,YAGxCkL,EAAqBjB,uBAAuBpwB,SACzCuB,EAASA,SAAS2jB,gBAAgBC,kBAGvB,MACPkM,EAAqBvL,kBACtBuL,EAAqBvL,iBAAiBlT,MACnCzX,KAAK2qB,iBACD6C,KAAK,CAAC,GACN1kB,QAAQsW,GACN8W,EAAqBjB,uBAAuB1vB,QAAQ6Z,MAI5D8W,EAAqBzK,kBACtByK,EAAqBzK,iBAAiBhU,MACnCzX,KAAKyrB,iBACD+B,KAAK,CAAC,GACN1kB,QAAQsW,GACN8W,EAAqBjB,uBAAuB1vB,QAAQ6Z,KAGhE,EAGH+W,GASAD,EAAqBvH,kBAErB,IAAIyH,EAAWp2B,KAAKitB,YASpB,OARImJ,IAGGA,EAASx1B,KAAIw1B,EAAWA,EAASx1B,IAErCs1B,EAAqBrJ,UAAUuJ,IAG3BF,CAMV,CAEAG,cAAcC,GACX,IAAIte,EAAMhY,KAAK8F,QAcf,OAXIwwB,GAASjV,OAAOlb,SACb6R,EAAI5R,SAAS2jB,gBAAgBC,kBAAkB3I,OAAOlb,OACvD6R,EAAI5R,SAAS2jB,gBAAgBC,iBAAiB3I,MAC3CrJ,EAAI5R,SAAS2jB,gBAAgBC,iBAAiB3I,MAAM2G,OACjDsO,EAAQjV,OAGdrJ,EAAI5R,SAAS2jB,gBAAgBC,iBAAmBsM,GAGvCt2B,KAAKi2B,MAAMje,EAE7B,CAiBAua,SAASgE,GACN,IAAKA,IAAQA,EAAI/D,UAAY+D,EAAI7D,SAAU,OAE3C1yB,KAAKw2B,SAAWx2B,KAAKw2B,UAAY,GAEjC,IAAIlJ,EAASttB,KAAKw2B,SAAShJ,MAAMnjB,GACvBA,EAAEmoB,SAAW+D,EAAI/D,SAAWnoB,EAAEooB,WAAa8D,EAAI9D,cAIpDnF,GAAUA,EAAOnnB,OAAS,KAE5BnG,KAAKw2B,SAASlyB,KAAK,CAChBkuB,QAAS+D,EAAI/D,QACbC,UAAW8D,EAAI9D,UACfC,SAAU6D,EAAI7D,WAIjB6D,EAAI/D,QAAQpwB,GAAGm0B,EAAI9D,UAAW8D,EAAI7D,UAExC,CAQA+D,aACOz2B,KAAKw2B,UAAYx2B,KAAKw2B,SAASrwB,OAAS,GACzCnG,KAAKw2B,SAASvyB,SAASoG,IACpBA,EAAEmoB,QAAQkE,eAAersB,EAAEooB,UAAWpoB,EAAEqoB,SAAS,GAG1D,CAEI0C,iBACD,MAAO,EACV,CAEInG,qBACD,OACGjvB,KAAKoG,SAAS0jB,0BACZ9pB,KAAKoG,SAASwjB,uBAAyB5pB,KAAKoG,SAASyjB,YAE7D,CAEI+I,2BACD,OAAK5yB,KAAKivB,gBAEFjvB,KAAK+B,IAAMA,IAAIyqB,mBACpBxsB,KAAKoG,SAAS0jB,wBAHgB,IAKpC,cCjgFHrqB,EAAOC,QAAU,MACdC,YAAYujB,EAAYnhB,GACrB/B,KAAK+B,GAAKA,EACV/B,KAAKiG,WAAWid,EACnB,CASAjd,WAAWid,GASJA,EAAWtiB,KACZZ,KAAKY,GAAKsiB,EAAWtiB,IAExBZ,KAAKmH,KACF+b,GAAY/b,MACZ+b,GAAYzB,MAAMta,MAClB+b,GAAYzB,MAAMrgB,OAClB8hB,GAAYzB,MAAM+D,eAAe,IAAIpkB,OACrC,GACEpB,KAAKmH,MACPnH,KAAK+B,GAAGqG,OAAOuuB,QACZ,IAAIruB,MAAM,2CACV,CACGgH,QAAS,gCACT4T,eAITljB,KAAK4B,KAAOshB,EAAWthB,MAAQshB,GAAYzB,MAAM7f,MAAQ,GACzD5B,KAAKyhB,KAAOyB,EAAWzB,MAAQ,IAClC,CAaA3b,QACG,MAAO,CACJlF,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKmH,KACXvF,KAAM5B,KAAK4B,KACX6f,KAAMzhB,KAAKyhB,KAEjB,CAQA3M,UACG,OAAO9U,KAAK+B,GAAG60B,kBAAkB52B,KAAKY,GACzC,CAQAuE,aACG,OAAInF,KAAKY,GACCZ,KAAK+B,GAAG80B,iBAAiB72B,KAAKY,GAAIZ,KAAK8F,SAEvC9F,KAAK+B,GAAGme,iBAAiBlgB,KAAK8F,QAE3C,oBC9EH,MAAMgxB,EAAgB,EAAQ,OACxBC,EAAe,EAAQ,OAEvBx3B,EAAc,EAAQ,MAEtBC,EAAiB,EAAQ,OAEzBw3B,EAAU,EAAQ,MAClBpF,EAAW,EAAQ,OACnBqF,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OACzBC,EAAmB,EAAQ,OAC3BrH,EAAgB,EAAQ,OAExBsH,EAAS,EAAQ,OACjBC,EAAY,EAAQ,OAEpBC,EAAuB,EAAQ,OAC/BC,EAAgB,EAAQ,OACxBC,EAAuB,EAAQ,OAE/BC,EAAS,EAAQ,OAEjBC,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OAMzBC,EAAY,EAAQ,OACpBlZ,EAAgB,EAAQ,OAExBuE,EAAY,EAAQ,OAEpB1U,EAAe,EAAQ,OAohC7B9O,EAAOC,QAlhCP,cAAwB6O,EACrB5O,YAAY2e,GAaT,GANAxe,QACAE,KAAK2Y,gBAAgB,GAErB3Y,KAAKmgB,aAAe7B,GAAe,CAAC,EAGhCnR,MAAMC,QAAQkR,GAAc,CAC7B,IAAIuZ,EAAO,CAAC,EACZvZ,EAAYra,SAAS+sB,IAClB6G,EAAK7G,EAAEpwB,IAAMowB,CAAC,IAEjBhxB,KAAKmgB,aAAe0X,CACvB,CAOA73B,KAAK83B,iBAAmB,GAGxB93B,KAAK+3B,YAAc,GAGnB/3B,KAAKg4B,UAAY,GAGjBh4B,KAAKi4B,cAAgB,GAGrBj4B,KAAKk4B,YAAc,GAGnBl4B,KAAKm4B,UAAY,GAGjBn4B,KAAKo4B,oBAAsB,GAM3Bp4B,KAAKye,MAAQ,CACVqY,gBACAv3B,cACAw3B,eACAv3B,iBACAw3B,UACA/T,YACA2O,WACAqF,mBACAC,iBACApH,gBACAwH,uBAOAE,uBAEAE,mBACAC,kBAOH33B,KAAKqhB,MAAQ,CAOVgB,OAAQ,SAAUhe,GAKf,OAJcie,OACX,4EACA,KAEYC,KAAKle,EACvB,EASAg0B,WAAY,SAAUlxB,GACnB,OAAOiU,OAAOjU,GAAM+L,QAAQ,gBAAiB,GAChD,EASAolB,wBAAyB,SAAUnxB,GAChC,MAAO,MAAQnH,KAAKq4B,WAAWlxB,EAClC,EAUAoxB,sBAAuB,SAAUC,GAC9B,OAAOx4B,KAAKq4B,WAAWG,GAAW,YACrC,EAWAC,kBAAmB,SAAUC,EAAY5xB,GACtC,IAAI6xB,EAASD,EAAa,IAAM5xB,EAIhC,OAFI6xB,EAAOxyB,OAAS,KAAIwyB,EAASA,EAAOC,UAAU,EAAG,KAE9CD,CACV,EAcAE,0BAA2B,SACxBC,EACAC,EACAC,EACAR,GAeA,OAZAM,EAAU94B,KAAKs4B,wBAAwBQ,IAC3B3yB,OAAS,KAAI2yB,EAAUA,EAAQF,UAAU,EAAG,KAEpDG,EAAgB5yB,OAAS,KAC1B4yB,EAAkBA,EAAgBH,UAAU,EAAG,KAE9CI,EAAgB7yB,OAAS,KAC1B6yB,EAAkBA,EAAgBJ,UAAU,EAAG,MAElDJ,EAAUx4B,KAAKq4B,WAAWG,IACdryB,OAAS,KAAIqyB,EAAUA,EAAQI,UAAU,EAAG,KAEjD,gDACH1lB,QAAQ,YAAa4lB,GACrB5lB,QAAQ,eAAgB6lB,GACxB7lB,QAAQ,eAAgB8lB,GACxB9lB,QAAQ,YAAaslB,EAC5B,EASAS,mBAAoB,SAAUP,GAC3B,MAAO,MAAM14B,KAAKq4B,WAAWK,IAChC,GAIH14B,KAAKoI,OAAOuuB,QAAU,IAAI7gB,KACvB9V,KAAKoI,OAAO,aAAc0N,EAAO,EAGpC9V,KAAKoI,OAAOC,UAAY,IAAIyN,KACzB9V,KAAKoI,OAAO,eAAgB0N,EAAO,CAEzC,CAQAojB,gBAAgBlI,GACb,GAAqB,iBAAVA,EAAEvP,KACV,IACGuP,EAAEvP,KAAO1N,KAAK0D,MAAMuZ,EAAEvP,KAIzB,CAHE,MAAOpX,GACN7B,QAAQ6O,IAAIhN,GACZ7B,QAAQ+G,MAAM,2BAA2ByhB,EAAEpwB,MAC9C,CAEN,CAEA0C,OACG,IAAI61B,EAAiB9kB,OAAOC,KAAKtU,KAAKmgB,cAAchS,KAChDoG,GAAMvU,KAAKmgB,aAAa5L,KA6B5B,OAxBA4kB,EAAel1B,SAAS+sB,IACrBhxB,KAAKk5B,gBAAgBlI,EAAE,IAI1B,CACG,SACA,QACA,iBACA,UACA,OACA,OACA,eACD/sB,SAASrC,IACOu3B,EAAerwB,QAAQkoB,GAAMA,EAAEpvB,MAAQA,IAC7CqC,SAAS0d,IACf,IAAI,QAAEyX,EAAO,MAAEC,GAAUr5B,KAAKs5B,gBAAgB3X,GAC1CyX,GACDp5B,KAAKo5B,GAAS90B,KAAKtE,KAAKq5B,GAAO1X,EAAIF,MACtC,GACD,IAGLzhB,KAAKwP,KAAK,sBACHC,QAAQC,SAClB,CAmBA4pB,gBAAgB3X,GACb,OAAQA,EAAI/f,MACT,IAAK,cACF,MAAO,CAAEw3B,QAAS,mBAAoBC,MAAO,kBAEhD,IAAK,iBACF,MAAO,CACJD,QAAS,sBACTC,MAAO,qBAGb,IAAK,OACF,MAAO,CAAED,QAAS,YAAaC,MAAO,WAEzC,IAAK,QACF,MAAO,CAAED,QAAS,YAAaC,MAAO,WAEzC,IAAK,SACF,MAAO,CAAED,QAAS,cAAeC,MAAO,aAE3C,IAAK,UACF,MAAO,CAAED,QAAS,gBAAiBC,MAAO,cAE7C,IAAK,QACF,MAAO,CAAED,QAAS,cAAeC,MAAO,YAE3C,QAEG,MAAO,CAAED,QAAS,KAAMC,MAAO,MAExC,CAiBA3U,eAAe9jB,EAAI24B,GAAQ,GACxB,OAAIv5B,KAAKmgB,aAAavf,GACf24B,EACMv5B,KAAKmgB,aAAavf,GAElBZ,KAAKmgB,aAAavf,GAAI6gB,KAG5B,IACV,CASAzB,cAAcra,GACX,OAAO,IAAIoxB,EAAapxB,EAAQ3F,KACnC,CAUAw5B,iBAAiBC,EAAO,IAiBrB,OAhBKtsB,MAAMC,QAAQqsB,KAChBA,EAAO,CAACA,IAKXA,EAAKx1B,SAAS+sB,IACXhxB,KAAKk5B,gBAAgBlI,GACrBhxB,KAAKmgB,aAAa6Q,EAAEpwB,IAAMowB,CAAC,IAI9ByI,EAAKx1B,SAAS+sB,IACXhxB,KAAK0hB,eAAe,UAAWsP,EAAEpwB,GAAIowB,EAAE,IAGnCvhB,QAAQC,SAClB,CAaAgS,eAAe+I,EAAI7pB,EAAI+gB,GACpB,IAEO+X,GAFH,QAAEN,EAAO,MAAEC,GAAUr5B,KAAKs5B,gBAAgB3X,GAC9C,GAAIyX,EAED,OAAQ3O,GACL,IAAK,UACFzqB,KAAKo5B,GAAS90B,KAAKtE,KAAKq5B,GAAO1X,EAAIF,OACnCzhB,KAAKwP,KAAK,qBAAsBmS,EAAIF,MACpC,MAEH,IAAK,UAEFiY,EAAO15B,KAAKo5B,GAAS5L,MAAMwD,GAAMA,EAAEpwB,IAAMA,IAGzCZ,KAAKo5B,GAAWp5B,KAAKo5B,GAAStwB,QAAQkoB,GAAMA,EAAEpwB,IAAMA,IAEpDZ,KAAKo5B,GAAS90B,KAAKtE,KAAKq5B,GAAO1X,EAAIF,OAK/BiY,EACDA,EAAKlqB,KAAK,qBAAsBmS,EAAIF,MAEpCzhB,KAAKwP,KAAK,qBAAsBmS,EAAIF,MAEvC,MAEH,IAAK,aAEFiY,EAAO15B,KAAKo5B,GAAS5L,MAAMwD,GAAMA,EAAEpwB,IAAMA,OAGtCZ,KAAKo5B,GAAWp5B,KAAKo5B,GAAStwB,QAAQkoB,GAAMA,EAAEpwB,IAAMA,IAGpD84B,EAAKlqB,KAAK,qBAAsBmS,EAAIF,MAEpCzhB,KAAKwP,KAAK,qBAAsBmS,EAAIF,OAKnD,CAaAsK,aAAarb,EAAK,MAAM,IACrB,OAAQ1Q,KAAK83B,kBAAoB,IAAIhvB,OAAO4H,EAC/C,CAYAipB,gBAAgBC,GACb,OAAO55B,KAAK+rB,cAAcne,GAAMA,EAAEhN,IAAMg5B,IAAI,EAC/C,CAUAC,eAAel0B,GACZ,OAAO,IAAImxB,EAAcnxB,EAAQ3F,KACpC,CAWAkmB,gBAAgBpd,EAAS,MAAM,IAC5B,OAAQ9I,KAAKo4B,qBAAuB,IAAItvB,OAAOA,EAClD,CAYA0jB,mBAAmBoN,GAEhB,OAAKA,EAEE55B,KAAKkmB,iBAAiBmH,GACnBA,EAAGzsB,IAAMg5B,GAAMvM,EAAGlmB,MAAQyyB,GAAMvM,EAAGjsB,OAASw4B,IACnD,GAJa,IAKnB,CASAE,kBAAkBn0B,GACf,IAAI0nB,EAAK,IAAI8J,EAAiBxxB,EAAQ3F,MAOtC,OANAqtB,EAAGjrB,GAAG,aAAa,KAEhBpC,KAAKo4B,oBAAsBp4B,KAAKo4B,oBAAoBtvB,QAChDkoB,GAAMA,EAAEpwB,IAAMysB,EAAGzsB,IACpB,IAEGysB,CACV,CAaAnnB,SAASP,EAAQV,GAEd,OAAOzF,EAAeu6B,SAASp0B,EAAQV,EAC1C,CAOA+0B,SAASr0B,EAAQV,GACd,OAAO,IAAI+xB,EAAQrxB,EAAQV,EAC9B,CAaAhF,QACG,MAAO,CAACoE,EAAK0O,EAASpN,EAAS,MAC5B,IAAIvE,EAAQiD,EAcZ,OAbI0O,IACG5F,MAAMC,QAAQ2F,GACfpN,EAASoN,EAET3R,EAAQ2R,GAIdpN,EAAO1B,SAAQ,CAACqP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACdnS,EAAQA,EAAMqS,WAAWD,EAAKF,EAAE,IAG5BlS,CAAK,CAElB,CAWAolB,QAAQ1d,EAAS,MAAM,IACpB,OAAQ9I,KAAK+3B,aAAe,IAAIjvB,OAAOA,EAC1C,CAQAmP,WAAW2hB,GACR,OAAO55B,KAAKwmB,SAASL,GACXA,EAAEvlB,IAAMg5B,GAAMzT,EAAEhf,MAAQyyB,GAAMzT,EAAE/kB,OAASw4B,IAChD,EACN,CAUAK,UAAUt0B,GAiBP,OAdyB,GAArBA,EAAOu0B,WACC,IAAIjD,EAAiBtxB,EAAQ3F,MACX,GAArB2F,EAAOiD,WACJ,IAAIsuB,EAAevxB,EAAQ3F,MACzB,IAAI4xB,EAASjsB,EAAQ3F,KAWtC,CAEAm6B,aACG,OAAOn6B,KAAKiY,WAAW,uCAC1B,CAEAmiB,iBACG,OAAOp6B,KAAKiY,WAAW,uCAC1B,CAEAoiB,oBACG,OAAOr6B,KAAKiY,WAAW,uCAC1B,CAEAqiB,wBACG,OAAOt6B,KAAKiY,WAAW,uCAC1B,CAEAsiB,aACG,OAAOv6B,KAAKiY,WAAW,uCAC1B,CAEAuiB,cACG,OAAOx6B,KAAKiY,WAAW,uCAC1B,CAEAwiB,cACG,OAAOz6B,KAAKiY,WAAW,uCAC1B,CAEAyiB,aACG,OAAO16B,KAAKiY,WAAW,uCAC1B,CAaA0O,MAAM7d,EAAS,MAAM,IAClB,OAAQ9I,KAAKg4B,WAAa,IAAIlvB,OAAOA,EACxC,CAQA6xB,OAAOf,GACJ,OAAO55B,KAAK2mB,OAAOC,GACTA,EAAEhmB,IAAMg5B,GAAMhT,EAAEzf,MAAQyyB,GAAMhT,EAAExlB,OAASw4B,IAChD,EACN,CAUAgB,QAAQj1B,GAGL,OAFc,IAAIyxB,EAAOzxB,EAAQ3F,KAGpC,CAaA4oB,MAAM9f,EAAS,MAAM,IAClB,OAAQ9I,KAAKm4B,WAAa,IAAIrvB,OAAOA,EACxC,CAQA+xB,OAAOjB,GACJ,OAAO55B,KAAK4oB,OAAOhc,GACTA,EAAEhM,IAAMg5B,GAAMhtB,EAAEzF,MAAQyyB,GAAMhtB,EAAExL,OAASw4B,IAChD,EACN,CAUAkB,QAAQl6B,EAAI+5B,GACT,IAAII,EAAU/6B,KAAK0kB,eAAe9jB,GAClC,OACiB,IAAI62B,EADjBsD,GAIY,CACV30B,SAAU,CACP40B,KAAML,IALsB36B,KAYxC,CAaAwnB,UAAU1e,EAAS,MAAM,IACtB,OAAQ9I,KAAKi4B,eAAiB,IAAInvB,OAAOA,EAC5C,CAQAmc,YAAY2U,GACT,OAAO55B,KAAKwnB,WAAWxF,GACbA,EAAEphB,IAAMg5B,GAAM5X,EAAE7a,MAAQyyB,GAAM5X,EAAE5gB,OAASw4B,IAChD,EACN,CAUAqB,WAAWt1B,GACR,OAAO,IAAI0xB,EAAU1xB,EAAQ3F,KAChC,CAYAk7B,kBAAkBt6B,EAAI8mB,GACnB,IAAIyT,EAAUn7B,KAAK0kB,eAAe9jB,GAClC,GAAIu6B,EACD,OAAQA,EAAQv5B,MACb,KAAK01B,EAAqBlzB,WAAWxC,KAClC,OAAO,IAAI01B,EAAqB6D,EAASzT,EAAS1nB,MAGrD,KAAKu3B,EAAcnzB,WAAWxC,KAC3B,OAAO,IAAI21B,EAAc4D,EAASzT,EAAS1nB,MAG9C,QAEG,OAAOw3B,EAAqB4D,QAAQD,EAASzT,EAAS1nB,MAI/D,OAAO,IACV,CAYAq7B,oCAAoCC,EAAS5T,GAC1C,IAAI6T,EAAa,KAEjB,OAAQD,EAAQ15B,MACb,IAAK,mBACF25B,EAAa,IAAIjE,EAAqB,CAAC,EAAG5P,EAAS1nB,MACnD,MAEH,IAAK,YACFu7B,EAAa,IAAIhE,EAAc,CAAC,EAAG7P,EAAS1nB,MAC5C,MAEH,QACG,IAAIw7B,EAAahE,EAAqBiE,qBAAqBH,GACvDE,IACDD,EAAa/D,EAAqB4D,QAC/BI,EACA9T,EACA1nB,OAWZ,OAHIu7B,GACDA,EAAWG,YAAYJ,GAEnBC,CACV,CAWAnT,QAAQtf,EAAS,MAAM,IACpB,OAAQ9I,KAAKk4B,aAAe,IAAIpvB,OAAOA,EAC1C,CAgBA0iB,UAAUoO,GACP,OAAO55B,KAAKooB,SAASC,GACXA,EAAEznB,IAAMg5B,GAAMvR,EAAElhB,MAAQyyB,GAAMvR,EAAEjnB,OAASw4B,IAChD,EACN,CAQA+B,SAASh2B,GACN,OAAO,IAAImqB,EAAcnqB,EAAQ3F,KACpC,CAQA47B,aAAah8B,EAAKC,GAIf,OAHID,GACD4I,QAAQ+G,MAAM,uCAEV,IAAIqoB,EAAUh4B,GAAOI,KAAK67B,KAAMh8B,EAAQG,KAClD,CAQA+0B,iBAAiBl1B,EAAQsC,EAAU,CAAC,GACjC,OAAO,IAAIuc,EAAc7e,EAAQG,KAAMmC,EAC1C,CAOA25B,iBAAiBn2B,GAId,OAHK3F,KAAK+7B,WACP/7B,KAAK+7B,SAAW/7B,KAAK65B,eAAe,CAAC,IAEjC75B,KAAK+7B,SAASvS,QAAQ7jB,EAAQ3F,KAAK+7B,SAC7C,CAiBA3zB,SACGI,QAAQ+G,MACL,oEAEN,CASAysB,YAAYna,GACT,IAAIoa,EAAW,CAAC,EAmEhB,OAjEIpa,GACDxN,OAAOC,KAAKuN,GAAM5d,SAASsQ,IACxB,OAAQA,GACL,IAAK,QACF0nB,EAASC,SAAWra,EAAKtN,GAAGtP,QAAQrE,GACpCq7B,EAASvD,WAAa7W,EAAKtN,GAAGtP,QAAQkC,KACtC80B,EAASE,QAAUta,EAAKtN,GAAG3T,GAC3Bq7B,EAASG,UAAYva,EAAKtN,GAAGnT,OAASygB,EAAKtN,GAAGpN,KAC9C,MAEH,IAAK,SACF80B,EAASC,SAAWra,EAAKtN,GAAG3T,GAC5Bq7B,EAASvD,WAAa7W,EAAKtN,GAAGpN,KAC9B,MAEH,IAAK,iBACF80B,EAASI,iBAAmBxa,EAAKtN,GAAG3T,GACpCq7B,EAASK,mBAAqBza,EAAKtN,GAAGnT,OAASygB,EAAKtN,GAAGpN,KACvD,IAAIo1B,EAAK1a,EAAKtN,GAAG6X,WACbmQ,IACDN,EAASO,mBAAqBD,EAAG37B,GACjCq7B,EAASQ,qBAAuBF,EAAGp1B,MAEtC,MAEH,IAAK,UACF80B,EAAS/W,UAAYrD,EAAKtN,GAAG3T,GAC7Bq7B,EAASS,YAAc7a,EAAKtN,GAAGnT,OAASygB,EAAKtN,GAAGpN,KAChD,MAEH,IAAK,MACF80B,EAASU,IAAM,CACZxa,MAAON,EAAKtN,GAAG4N,MACflL,SAAU4K,EAAKtN,GAAGqoB,UAClBC,KAAMhb,EAAKtN,GAAGuoB,OAEjB,MAEH,IAAK,OACEjb,EAAKtN,GAAGmT,UACTuU,EAAS/W,UAAYrD,EAAKtN,GAAGmT,QAAQ9mB,GACrCq7B,EAASS,YACN7a,EAAKtN,GAAGmT,QAAQtmB,OAASygB,EAAKtN,GAAGmT,QAAQvgB,MAE/C80B,EAASc,OAASlb,EAAKtN,GAAG3T,GAC1Bq7B,EAASe,SAAWnb,EAAKtN,GAAGnT,OAASygB,EAAKtN,GAAGpN,KAC7C,MAEH,IAAK,OACE0a,EAAKtN,GAAGxP,cACTk3B,EAASgB,cAAgBpb,EAAKtN,GAAGxP,YAAYnE,GAC7Cq7B,EAASiB,gBACNrb,EAAKtN,GAAGxP,YAAY3D,OAASygB,EAAKtN,GAAGxP,YAAYoC,MAEvD80B,EAASkB,OAAStb,EAAKtN,GAAG3T,GAC1Bq7B,EAASmB,SAAWvb,EAAKtN,GAAGnT,OAASygB,EAAKtN,GAAGpN,KAC7C80B,EAASoB,QAAUxb,EAAKtN,GAAGlQ,IAC3B,MACH,QACG43B,EAAS1nB,GAAKsN,EAAKtN,GAEzB,IAIC0nB,CACV,oBCnjCH,IAAIp4B,EAAS,CAAC,EAEQ,CACnB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAGKI,SAASq5B,IACtBz5B,EAAOy5B,EAAMl5B,WAAWC,KAAOi5B,CAAK,IAGvC79B,EAAOC,QAAU,MAMd0rB,mBACG,IAAIrkB,EAAS,GACb,IAAK,IAAIC,KAAKnD,EACXkD,EAAOzC,KAAKT,EAAOmD,IAEtB,OAAOD,CACV,CASAqkB,kBAAkB/mB,GACf,OAAOR,EAAOQ,EACjB,CAOA+mB,gBAAgBzlB,EAAQV,GACrB,IAAIU,EAAOtB,IAgBR,MAPAmE,QAAQ6O,IAAI,WACZ7O,QAAQ6O,IAAI,WACZ7O,QAAQ+G,MAAM5J,GACd6C,QAAQ6O,MACR7O,QAAQ+G,MAAM,WACd/G,QAAQ+G,MAAMtK,GACduD,QAAQ6O,IAAI,WACN,IAAI/O,MACP,iDAAiD3C,EAAOwB,SAASxB,EAAOtB,mBAAmBY,EAAOkC,SAhBrG,IACG,OAAO,IAAItD,EAAO8B,EAAOtB,KAAKsB,EAAQV,EAKzC,CAJE,MAAOkD,GACNK,QAAQ6O,IAAI,QAASlP,GACrBK,QAAQ6O,IAAI,mBAAoBxT,GAChC2E,QAAQ6O,IAAI,kBAAmB1R,EAAOtB,IACzC,CAcN,oBC1FH,IAAI4e,EAAY,EAAQ,OACR,EAAQ,OAExBxjB,EAAOC,QAAU,cAAyBujB,EACvCtjB,YAAYujB,EAAYnhB,GACrBjC,MAAM,CAAC,OAAQ,eAAgBiC,GAE/B/B,KAAKiG,WAAWid,EAMnB,CASAjd,WAAWid,GAaR,IAAIqa,EAASra,GAAY9c,SAASo3B,eAAe,UAC5Cta,GAAY9c,UAAUm3B,OACtB,IAELv9B,KAAKY,GAAKsiB,GAAYtiB,IAAM,GAC5BZ,KAAKmH,KAAO+b,GAAY/b,MAAQ,eAChCnH,KAAKy9B,YAAcva,GAAYua,aAAe,GAC9Cz9B,KAAK4B,KAAOshB,GAAYthB,MAAQ,OAChC5B,KAAKoG,SAAW,CAAC,EACjBpG,KAAKoG,SAASm3B,OAASA,EACvBv9B,KAAKoG,SAASs3B,WAAaxa,GAAY9c,UAAUs3B,WACjD19B,KAAKoG,SAASu3B,cAAgBza,GAAY9c,UAAUu3B,cACpD39B,KAAKoG,SAAS1F,KAAOwiB,GAAY9c,UAAU1F,MAAQ,GACnDV,KAAK49B,QAAU1a,GAAY0a,SAAW,GAEtB59B,MAAM69B,OACtB79B,KAAK69B,OAAS,CAAC,GACd3a,GAAY0a,SAAW,IAAI35B,SAAS65B,IAClC,GAAKA,EAAL,CACA,IAAIC,EAAM/9B,KAAK+B,GAAG+4B,QAAQgD,EAAK99B,KAAKY,IAChCm9B,IACD/9B,KAAK69B,OAAOC,GAAOC,EAHN,CAIhB,IAEC7a,GAAYpjB,MAAMmG,WAAWid,GAG5BljB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAQArB,QAEQ9F,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAOjB,MALmB,CAAC,OAAQ,WAAY,UAAW,KAAM,QAC5C7B,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGb6C,CACV,CAUA+e,MAAMlY,EAAK,MAAM,IAId,OAHe2D,OAAOC,KAAKtU,KAAK69B,QAAQ1vB,KAAK9D,GACnCrK,KAAK69B,OAAOxzB,KAENvB,OAAO4H,EAC1B,CAQAstB,QAAQC,GACLj+B,KAAK69B,OAAOI,EAAKr9B,IAAMq9B,CAC1B,CAQAC,SAASt9B,GACN,OAAOZ,KAAK69B,OAAOj9B,IAAO,IAC7B,CASAu9B,WAAWv9B,GAER,IAAIw9B,EAAYp+B,KAAK49B,QAAQvwB,QAAQzM,GACjCw9B,GAAa,GACdp+B,KAAK49B,QAAQzxB,OAAOiyB,EAAW,UAG3Bp+B,KAAK69B,OAAOj9B,EACtB,oBC9IH,MAAMqiB,EAAY,EAAQ,OAE1BxjB,EAAOC,QAAU,cAA0BujB,EACxCtjB,YAAYujB,EAAYje,GACrBnF,MAAM,CAAC,SAAUmF,EAAOlD,IACxB/B,KAAKiF,OAASA,EAEdjF,KAAKiG,WAAWid,EACnB,CAEAjd,WAAWid,GAuCR,GA5BAljB,KAAKY,GAAKsiB,EAAWtiB,GACrBZ,KAAK4B,KAAO,QACZ5B,KAAKmH,KAAO+b,EAAW/b,KACvBnH,KAAKI,OAAS2T,KAAK0D,MAAMyL,EAAW9iB,SAAU,GAG1C8iB,EAAWmb,WAAalxB,MAAMC,QAAQ8V,EAAWmb,YAClDnb,EAAWmb,SAAW,CAACnb,EAAWmb,WAGrCr+B,KAAKs+B,iBAAmB,GACxBt+B,KAAK+G,QAAUmc,EAAWmb,UAAY,IAClClwB,KAAKnH,IACH,IAAIpB,EAAQ5F,KAAKiF,OAAO8I,UAAU/G,GAClC,IAAKpB,EAAO,CACT5F,KAAKs+B,iBAAiBh6B,KAAK0C,GAC3B,IAAImB,EAAM,IAAIG,MACX,SAAStI,KAAKmH,SAASnH,KAAKY,uCAAuCoG,MAEtEhH,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B4D,MAAO/L,KAAKY,GACZgF,MAAOoB,GAEb,CACA,OAAOpB,CAAK,IAEdkD,QAAQy1B,GAAQA,IAEM,GAAtBv+B,KAAK+G,OAAOZ,OAAa,CAC1B,IAAIgC,EAAM,IAAIG,MACX,SAAStI,KAAKmH,SAASnH,KAAKY,qCAE/BZ,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B4D,MAAO/L,KAAKY,GACZ49B,kBAAmBtb,EAAWmb,UAAY,IAEhD,CAGAv+B,MAAMmG,WAAWid,EACpB,CAaApd,QACG,IAAIgI,EAAShO,MAAMgG,QA0BnB,OAxBAgI,EAAOlN,GAAKZ,KAAKY,GACjBkN,EAAOlM,KAAO,QACdkM,EAAO3G,KAAOnH,KAAKmH,KACnB2G,EAAO1N,OAASJ,KAAKI,OAGjBJ,KAAK+G,SAAWoG,MAAMC,QAAQpN,KAAK+G,UACpC/G,KAAK+G,OAAS,CAAC/G,KAAK+G,SAGvB+G,EAAOuwB,UAAYr+B,KAAK+G,QAAU,IAC9BoH,KAAKnH,GAEIA,EAAEpG,IAAMoG,IAEjB8B,QAAQy1B,GAAQA,IAKpBv+B,KAAKs+B,iBAAiBr6B,SAAS+C,IAC5B8G,EAAOuwB,SAAS/5B,KAAK0C,EAAE,IAGnB8G,CACV,CAEI2wB,gBAID,MAAO,GAHSz+B,KAAKiF,OAAOy5B,iBAGL1+B,KAAKmH,OAAO+L,QAAQ,KAAM,IAAI0lB,UAAU,EAAG,GACrE,CAEI+F,iBAGD,MAAO,GAFS3+B,KAAKy+B,UAAU7F,UAAU,EAAG,YAG/C,oBCzGH,IAAIgG,EAAY,EAAQ,OACxBn/B,EAAOC,QAAU,cAA4Bk/B,EAC1Cj/B,YAAYk/B,EAAW98B,GACpBjC,QACAE,KAAK8+B,SAAWD,GAAa,CAAC,SAI9B7+B,KAAK+B,GAAKA,CAGb,CAcAkE,WAAWid,GACRljB,KAAKwlB,aAAetC,EAAWsC,aAG3BxlB,KAAKwlB,aAENxlB,KAAK++B,aAKJ/+B,KAAK8+B,UAAY,IAAI76B,SAAS2B,IACxBsd,EAAWtd,KACZ5F,KAAK4F,GAASsd,EAAWtd,GAC5B,GAGT,CAUAo5B,oBAAoBj4B,EAAQpB,GACzBA,EAASA,GAAU,CAAC,EAEpB,IAAIyU,EAAQ,CAIT6kB,cAAe,MAOlB,OAJAl4B,EAAO9C,SAAS+C,IACboT,EAAMpT,GAAKrB,EAAOqB,IAAMA,CAAC,IAGrB,CAACoT,EACX,CAOA8kB,kBACG,MAAO,IACV,CAOAp5B,QAGG,OAFA9F,KAAKm/B,cAEE,CACJ3Z,aAAcxlB,KAAKwlB,aAEzB,CAOAzQ,eACG,OAAO/U,KAAK+B,GAAGie,cAAc,CAC1Bpf,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKmH,KACXvF,KAAM5B,KAAK4B,KACX6f,KAAMzhB,KAAK8F,SAEjB,CAiBAi5B,UAAU/mB,EAAKyJ,EAAM1a,EAAQoJ,EAAe,MACpC6H,IAAKA,EAAMhY,MACXyhB,IAAMA,EAAOzhB,MACb+G,IAAQA,EAAS/G,KAAK8+B,UAAY,IAElCrd,EAAK+D,eACP/D,EAAK+D,aAAe,IAGS,iBAArB/D,EAAK+D,eACb/D,EAAK+D,aAAezR,KAAK0D,MAAMgK,EAAK+D,eAGvC,IAAI4Z,EAAejvB,GAAgBnQ,KAAKk/B,kBAExC,GAAIn4B,GAAUA,EAAOZ,OAAS,EAAG,CAG9B,IAAIk5B,EAAQ,KACRvQ,GAAQ,EAEZrN,EAAK+D,aAAavhB,SAAQ,SAAUq7B,GAC5BD,IAAOA,EAAQC,GAGhBA,EAAEL,eAAiBG,IACpBtQ,GAAQ,EAGR/nB,EAAO9C,SAAQ,SAAU+C,GACV,MAARs4B,EAAEt4B,KAAYgR,EAAIhR,GAAKs4B,EAAEt4B,IAE7BgR,EAAIhR,GAAKs4B,EAAEt4B,IAAM,EACpB,IAEN,KAIK8nB,GAASuQ,GAEXt4B,EAAO9C,SAAQ,SAAU+C,GACN,MAAZq4B,EAAMr4B,IAA0B,IAAZq4B,EAAMr4B,GAC3BgR,EAAIhR,GAAK,IAAIo4B,KAAgBC,EAAMr4B,KACjCgR,EAAIhR,GAAK,EACjB,GAEN,CACH,CAiBAm4B,YAAYnnB,EAAKyJ,EAAM1a,GACfiR,IAAKA,EAAMhY,MACXyhB,IAAMA,EAAOzhB,MACb+G,IAAQA,EAAS/G,KAAK8+B,UAAY,IAElCrd,EAAK+D,eACP/D,EAAK+D,aAAe,IAGvB,IAAI4Z,EAAep/B,KAAKk/B,kBAExB,GAAIn4B,GAAUA,EAAOZ,OAAS,EAAG,CAC9B,IAAIo5B,GAAW,EAmBf,GAjBA9d,EAAK+D,aAAavhB,SAAQ,SAAUq7B,GAE7BA,EAAEL,eAAiBG,IAEpBr4B,EAAO9C,SAAQ,SAAU+C,GAGR,MAAVgR,EAAIhR,KACLs4B,EAAEt4B,GAAKgR,EAAIhR,GAEjB,IAEAu4B,GAAW,EAEjB,KAGKA,EAAU,CAEZ,IAAIC,EAAQ,CAAC,EAGbA,EAAMP,cAAgBG,EAEtBr4B,EAAO9C,SAAQ,SAAU2B,GACJ,MAAdoS,EAAIpS,KACL45B,EAAM55B,GAASoS,EAAIpS,GAEzB,IAEA6b,EAAK+D,aAAalhB,KAAKk7B,EAC1B,CACH,CACH,cCpOH//B,EAAOC,QAAU,MACdC,YAAYsF,GAETjF,KAAKiF,OAASA,EACdjF,KAAK+B,GAAKkD,EAAOlD,GAEjB/B,KAAKy/B,OAAS,KACdz/B,KAAK0/B,MAAQ,KACb1/B,KAAK2/B,MAAQ,KACb3/B,KAAK4/B,OAAS,KAEd5/B,KAAK6/B,uBAAwB,EAC7B7/B,KAAK8/B,gBAAkB,CAEvB,EACA9/B,KAAK+/B,oBAAsB,GAC3B//B,KAAKggC,oBAAsB,KAG3BhgC,KAAKigC,gBAAkB,CAAE57B,IAAK,KAAMiL,QAAS,CAAC,EACjD,CAaA4wB,WAAW77B,GACRrE,KAAKigC,gBAAgB57B,IAAMA,GAAO,IACrC,CAEA87B,cAAcx6B,GACX3F,KAAKigC,gBAAgB3wB,QAAU3J,GAAU,CAAC,CAC7C,CAIAy6B,wBAAwBz6B,GAErB,IAAIm5B,EAAW9+B,KAAKiF,OAAOo7B,qBAEvBC,GAAkB,EAClBxB,EAAS34B,QACV24B,EAAS76B,SAAQ,SAAU2B,GACH,MAAjBD,EAAOC,KACR06B,GAAkB,EAExB,IAECA,IAEyB,MAAvB36B,EAAO6f,mBACuB,IAAvB7f,EAAO6f,cACS,IAAvB7f,EAAO6f,eAEP7f,EAAO6f,aAAe,IAEzBxlB,KAAKiF,OAAOk6B,YAAYx5B,EAAQA,EAAQm5B,GAE9C,CAEAxmB,QAAQpB,EAAQpB,GAIb,OAHAtN,QAAQ+G,MACL,+DAEIE,QAAQC,SAClB,CA2FA6wB,gBAAgB56B,GACb,MAAO,CACJ2K,IAAKtQ,KAAKiF,OAAOu7B,UACjB1qB,OAAQnQ,EAEd,CAEA86B,gBAAgB7/B,GACb,MAAO,CACJ0P,IAAKtQ,KAAKiF,OAAOy7B,YAAY9/B,GAEnC,CAEA+/B,cAAcxR,GACX,MAAO,CACJ7e,IAAKtQ,KAAKiF,OAAOu7B,UACjB1qB,OAAQqZ,GAAQ,CAAC,EAEvB,CAEAyR,gBAAgBhgC,EAAI+E,GACjB,MAAO,CACJ2K,IAAKtQ,KAAKiF,OAAOy7B,YAAY9/B,GAC7BkV,OAAQnQ,EAEd,CAMAksB,MAAM1C,GACHA,EAAOA,GAAQ,CAAC,EAEhB,IAAIrZ,EAAS,CACVxF,IAAKtQ,KAAKiF,OAAO47B,eACjB/qB,OAAQqZ,GAEX,OAAOnvB,KAAKsY,QAAQ,MAAOxC,GACvBpB,MAAMosB,IACJpxB,QAAQoxB,EAAa,IAEvBnsB,OAAOxM,IAMLK,QAAQ+G,MAAMpH,EAAI,GAE3B,CAYA2pB,aAAa3C,GAEV,IAAIO,EAAK1vB,KAAKiF,OAAOyqB,KAEjBqR,EAAS5R,EAAKO,GAKlB,OAJIP,EAAKa,QACN+Q,EAAS5R,EAAKa,MAAMN,IAGhB,IAAIjgB,SAAQ,CAACC,EAASmH,KAC1B,IAAKkqB,EAAQ,CACV,IAAIC,EAAM,IAAI14B,MACX,4CAA8ConB,GAIjD,OAFAsR,EAAI7R,KAAOA,OACXtY,EAAOmqB,EAEV,CAGA,IAAI5mB,EAAQ,CACT1K,QAASA,EACTmH,OAAQA,GAEXuD,EAAMsV,GAAMqR,EAGZ/gC,KAAK+/B,oBAAoBz7B,KAAK8V,GAGzBpa,KAAK6/B,wBAEH7/B,KAAKggC,qBACN/rB,aAAajU,KAAKggC,qBAErBhgC,KAAKggC,oBAAsBnrB,YAAW,KACnC7U,KAAKihC,qBAAqB,GAC1B,KACN,GAEN,CAMAA,sBACGjhC,KAAK6/B,uBAAwB,EAC7B,IAAIqB,EAAiBlhC,KAAK+/B,oBAC1B//B,KAAK+/B,oBAAsB,GAC3B,IAAIrQ,EAAK1vB,KAAKiF,OAAOyqB,KAEjByR,EAAe,CAEnB,EACIhS,EAAO,CAAEa,MAAO,CAAC,GACrBb,EAAKa,MAAMN,GAAM,GAEjBlnB,QAAQ6O,IACL,yCACG6pB,EAAe/6B,OACf,aAEN+6B,EAAej9B,SAASoG,IACrB82B,EAAa92B,EAAEqlB,IAAOyR,EAAa92B,EAAEqlB,KAAQ,GAC7CyR,EAAa92B,EAAEqlB,IAAKprB,KAAK+F,EAAE,IAG9B8kB,EAAKa,MAAMN,GAAMrb,OAAOC,KAAK6sB,GAE7BnhC,KAAKqwB,QAAQlB,GAAMza,MAAM4F,IAElBnN,MAAMC,QAAQkN,EAAIzQ,OAASyQ,EAAIzQ,KAAK1D,QACrCmU,EAAIzQ,KAAK5F,SAAS4F,IAEXs3B,EAAat3B,EAAK6lB,KAGLyR,EAAat3B,EAAK6lB,IACxBzrB,SAASmW,KAEd1K,EADc0K,EAAM1K,SACZ,CAAE7F,KAAM,CAACA,IAAQ,WAGrBs3B,EAAat3B,EAAK6lB,KAEzBlnB,QAAQ+G,MACL,2EACA1F,EACAs3B,EAEN,IAMN,IAAIC,EAAU/sB,OAAOC,KAAK6sB,GACtBC,EAAQj7B,OAAS,GAClBqC,QAAQC,KACL,gCACG24B,EAAQj7B,OACR,gCAGTi7B,EAAQn9B,SAASI,KAEdqL,EADcyxB,EAAa98B,GAAKqL,SACxB,CAAE7F,KAAM,YACTs3B,EAAa98B,EAAI,IAIvBrE,KAAK+/B,oBAAoB55B,OAAS,EAEnCnG,KAAKihC,sBAGLjhC,KAAK6/B,uBAAwB,CAChC,GAEN,CAsCAwB,cAAct6B,EAAQ8C,GAYnB,YAXmB,IAARA,IACHsD,MAAMC,QAAQrG,IAA4B,iBAAVA,IAClC8C,EAAO9C,EACPA,EAAS,KAIM,iBAAVA,IACRA,EAAS,CAACA,IAGN,IAAI0I,SAAQ,CAACC,EAASmH,KAE1B,IAAKhN,EAAKjJ,GAGP,YADA8O,EAAQ,MAIX,IAAIyf,EAAO,CAAC,EACZA,EAAKnvB,KAAKiF,OAAOyqB,MAAQ7lB,EAAKjJ,GAC9BZ,KAAKqwB,QAAQ,CAAEL,MAAOb,EAAMlmB,UAAU,IAClCyL,MAAM4sB,IACJ,GACIA,EAAQz3B,MACRsD,MAAMC,QAAQk0B,EAAQz3B,OACA,GAAvBy3B,EAAQz3B,KAAK1D,OAHhB,CAUA,IAAIo7B,EAAQD,EAAQz3B,KAAK,GAGzB,GAAqB,GAAjB9C,EAAOZ,OAAa,CACrB,IAAI0D,EACD03B,EACGx6B,EAAO,GAAGmM,QAAQ,gBAAiB,IAAM,cAE/C,OAAKrJ,GAEAsD,MAAMC,QAAQvD,KAAOA,EAAO,CAACA,SAElC6F,EAAQ7F,IAJU6F,EAAQ,GAM7B,CAGqB,GAAjB3I,EAAOZ,QACQnG,KAAKiF,OAAO8B,QAAQC,GAC1BA,EAAEZ,SAASa,WAEXhD,SAAS+C,IAChBD,EAAOzC,KAAK0C,EAAEF,WAAW,IAI/B,IAAI06B,EAAa,CAAC,EAClBz6B,EAAO9C,SAASu0B,IACbgJ,EAAWhJ,GACR+I,EAAM/I,EAAQtlB,QAAQ,gBAAiB,IAAM,aAAa,IAGhExD,EAAQ8xB,EAnCR,MAFG9xB,EAAQ,GAqCQ,IAErBiF,OAAOxM,IACLK,QAAQ+G,MAAM,0CAA2CpH,GACzD0O,EAAO1O,EAAI,GACZ,GAEX,CA0JAs5B,OAAO97B,GAIJ,IAAK,IAAItB,KAHTrE,KAAKogC,wBAAwBz6B,GAGbA,EACM,MAAfA,EAAOtB,WAAqBsB,EAAOtB,GAG1C,IAAIyR,EAAS,CACVxF,IAAKtQ,KAAKiF,OAAOu7B,UACjB1qB,OAAQnQ,GAEX,OAAO3F,KAAKsY,QAAQ,MAAOxC,GACvBpB,MAAM7K,IAGJ7J,KAAKmY,cAActO,GAEZA,KAMT8K,OAAOxM,IACLK,QAAQ+G,MAAMpH,EAAI,GAE3B,CAQA6nB,MAAMb,GAEH,OADAnvB,KAAKy/B,OAAStQ,EACPnvB,IACV,CAQA2N,KAAKwhB,GAEF,OADAnvB,KAAK0/B,MAAQvQ,EACNnvB,IACV,CAMA0E,UAEG,OADA8D,QAAQ+G,MAAM,qDACPE,QAAQC,SAMlB,CAEAyI,cAActO,GAELA,aAAgBsD,QAAQtD,EAAO,CAACA,IAGtC,IAAIkd,EAAkB/mB,KAAKiF,OAAO+hB,gBAG9B8X,EAAW9+B,KAAKiF,OAAOo7B,qBAGvBqB,EACD1hC,KAAKiF,OAAO8B,QAAO,SAAUC,GAC1B,MAAgB,QAATA,EAAE3C,KAA0B,YAAT2C,EAAE3C,GAC/B,KAAM,GAGLs9B,EAAmB3hC,KAAKiF,OAAO8B,QAAQC,GAAe,aAATA,EAAE3C,MAEnDwF,EAAK5F,SAAS+sB,IACF,MAALA,IAGCA,EAAEpwB,IAA0B,MAApBZ,KAAKiF,OAAOyqB,OAAcsB,EAAEpwB,GAAKowB,EAAEhxB,KAAKiF,OAAOyqB,OAG5D3I,EAAgB9iB,SAASV,IAEtB,IAAI4tB,EAAe5tB,EAAE4tB,eAMrB,GAAuB,MAAnBH,EAAEG,GAAuB,OAIA,iBAAnBH,EAAEG,IACTH,EAAEG,GAAchrB,OAAS,IAGzB6qB,EAAEG,GAAgBpd,KAAK0D,MAAMuZ,EAAEG,KAI9BhkB,MAAMC,QAAQ4jB,EAAEG,IACjBH,EAAEG,GAAcltB,SAAS2L,IAElBA,EAAE4V,cAAyC,iBAAlB5V,EAAE4V,eAE5B5V,EAAE4V,aAAezR,KAAK0D,MAAM7H,EAAE4V,cACjC,IAIHwL,EAAEG,GAAc3L,cACuB,iBAAhCwL,EAAEG,GAAc3L,eAGvBwL,EAAEG,GAAc3L,aAAezR,KAAK0D,MACjCuZ,EAAEG,GAAc3L,eAKtB,IAAIoc,EAAar+B,EAAEqD,eAEhBg7B,GACmB,MAAnBA,EAAWlS,MACXsB,EAAEG,KACDH,EAAEG,GAAcvwB,KAGbowB,EAAEG,GAAcltB,QACjB+sB,EAAEG,GAAcltB,SAAS49B,IAClBA,EAAQD,EAAWlS,QACpBmS,EAAQjhC,GAAKihC,EAAQD,EAAWlS,MAAK,IAEnCsB,EAAEG,GAAcyQ,EAAWlS,QACnCsB,EAAEG,GAAcvwB,GAAKowB,EAAEG,GAAcyQ,EAAWlS,QAItD,IAAIoS,EAAkBF,EAAWvB,qBAC7ByB,EAAgB37B,QACjBy7B,EAAW7C,UACR/N,EAAEG,GACFH,EAAEG,GACF2Q,GAKD9Q,EAAEztB,EAAEuD,cAAakqB,EAAEztB,EAAEuD,YAAckqB,EAAEG,GAAa,IAGtD2N,EAAS34B,QACVnG,KAAKiF,OAAO85B,UAAU/N,EAAGA,EAAG8N,GAI/B4C,EAAWz9B,SAAS0c,IACbqQ,GAA2B,MAAtBA,EAAErQ,EAAK7Z,aAEoB,iBAAtBkqB,EAAErQ,EAAK7Z,cACC,QAAZ6Z,EAAKtc,IAGN2sB,EAAErQ,EAAK7Z,YAAc9G,KAAK+B,GAAGsf,MAAMhB,OAChC2Q,EAAErQ,EAAK7Z,YACP,CACG0Z,OAAQ,aACRD,YAAY,IAKlByQ,EAAErQ,EAAK7Z,YAAc9G,KAAK+B,GAAGsf,MAAMhB,OAChC2Q,EAAErQ,EAAK7Z,aAKnB,IAGH66B,EAAiB19B,SAAS89B,IACvB/Q,EAAE+Q,EAASj7B,YAAci7B,EAASvhB,OAAOwQ,EAAE,IAC5C,GAER,oBC7yBH,IAAIgR,EAAU,EAAQ,OAClB/e,EAAY,EAAQ,OAExB,MAAMljB,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAElDrW,EAAOC,QAAU,MAAMuiC,UAAqBhf,EACzCtjB,YAAYujB,EAAYnhB,GACrBjC,MAAM,CAAC,SAAUiC,GA6BjB/B,KAAKiG,WAAWid,EACnB,CASAkI,oBACG,MAAO,QACV,CAMAnlB,WAAWid,GA4BRljB,KAAKY,GAAKsiB,EAAWtiB,GAIrBZ,KAAK4B,KAAOshB,EAAWthB,MAAQ,SAI/B5B,KAAKkiC,SAAWhf,EAAWgf,eAAY7W,EAKvCrrB,KAAKmH,KAAO+b,EAAW/b,MAAQ,GAK/BnH,KAAKmiC,YAAcjf,EAAWif,aAAe,GAK7CniC,KAAKoiC,cAAgBlf,EAAWkf,eAAiB,CAAC,EAGlDpiC,KAAKoiC,cAAcC,iBAAmB1c,SACnC3lB,KAAKoiC,cAAcC,kBAAoB,GAI1CriC,KAAK4I,WAAa+c,SAASzC,EAAWta,YAAc,GAMpD5I,KAAKk6B,WAAavU,SAASzC,EAAWgX,YAAc,GAUpDl6B,KAAKsiC,UAAYpf,EAAWof,WAAa,GAMzCtiC,KAAKsiC,UAAYtiC,KAAKsiC,UAAUpvB,QAAQ,mBAAoB,IAE5DlT,KAAKuiC,kBAAoBrf,EAAWqf,mBAAqB,GAMzDviC,KAAKwiC,gBAAkBtf,EAAWsf,iBAAmB,GAIrDxiC,KAAKyiC,QAAUvf,EAAWuf,SAAW,GAIrCziC,KAAK4jB,eAAiBV,EAAWU,oBAOA,IAAvB5jB,KAAK4jB,gBACW,SAAvB5jB,KAAK4jB,iBAEL5jB,KAAK4jB,gBAAiB,GAGzB5jB,KAAK0iC,eAAiBxf,EAAWwf,oBAMQ,IAA9Bxf,EAAW6G,uBACiC,IAAzC7G,EAAW6G,gBAAgBxd,aACnC2W,EAAW6G,gBAAgBxd,WAAa,SACe,IAA/C2W,EAAW6G,gBAAgBC,mBACnC9G,EAAW6G,gBAAgBC,iBAAmB,SACO,IAA7C9G,EAAW6G,gBAAgB4Y,iBACnCzf,EAAW6G,gBAAgB4Y,eAAiB,SACO,IAA3Czf,EAAW6G,gBAAgB6Y,eACnC1f,EAAW6G,gBAAgB6Y,aAAe,KAEhD5iC,KAAK+pB,gBAAkB7G,EAAW6G,iBAAmB,CAClDxd,WAAY,GACZyd,iBAAkB,GAClB2Y,eAAgB,GAChBC,aAAc,IAQjB,IAAI77B,EAAS,GACb/G,KAAKq+B,SAAWnb,EAAWmb,UAAY,GAMvCr+B,KAAK6iC,iBAAmB3f,EAAW2f,kBAAoB,GAKvD7iC,KAAKs+B,iBAAmB,GACxBt+B,KAAKq+B,SAASp6B,SAASrD,IACpB,GAAKA,EAAL,CAEA,IAAI+gB,EAAM3hB,KAAK+B,GAAG2iB,eAAe9jB,GACjC,GAAI+gB,EACD5a,EAAOzC,KAAKtE,KAAK+B,GAAGmE,SAASyb,EAAK3hB,WAC9B,CACJA,KAAKs+B,iBAAiBh6B,KAAK1D,GAC3B,IAAIuH,EAAM,IAAIG,MACX,KAAKtI,KAAKmH,6CAA6CvG,MAE1DZ,KAAK+B,GAAGqG,OAAOuuB,QAAQxuB,EAAK,CACzBvC,MAAO,CAAEhF,KAAIqE,OAAQ,CAAErE,GAAIZ,KAAKY,GAAIuG,KAAMnH,KAAKmH,QAErD,CAbe,CAaf,IAEHnH,KAAK8iC,QAAU/7B,EAGf/G,KAAK+iC,cAAc7f,EAAW8f,UAG9BljC,MAAMmG,WAAWid,EACpB,CAQA6f,cAAcC,GACXhjC,KAAKijC,cAAgB,GACrB,IAAIC,EAAU,IACbF,GAAY,IAAI/+B,SAASrD,IACvB,IAAI+gB,EAAM3hB,KAAK+B,GAAG2iB,eAAe9jB,GACjC,GAAI+gB,EACDuhB,EAAQ5+B,KAAKtE,KAAK+B,GAAGi4B,SAASrY,EAAK3hB,WAC/B,CACJA,KAAKijC,cAAc3+B,KAAK1D,GACxB,IAAIuH,EAAM,IAAIG,MACX,KAAKtI,KAAKmH,6CAA6CvG,MAE1DZ,KAAK+B,GAAGqG,OAAOuuB,QAAQxuB,EAAK,CACzBvC,MAAO,CAAEhF,KAAIqE,OAAQ,CAAErE,GAAIZ,KAAKY,GAAIuG,KAAMnH,KAAKmH,QAErD,KAEHnH,KAAKmjC,SAAWD,CACnB,CAuCAp9B,QAEG,IAAIkS,EAAMlY,MAAMgG,QAGZu4B,EAAWr+B,KAAK+G,SAASoH,KAAKnH,GAAMA,EAAEpG,MACzCZ,KAAKs+B,kBAAoB,IAAIr6B,SAASrD,IACpCy9B,EAAS/5B,KAAK1D,EAAG,IAOpB,IAAIoiC,EAAWhjC,KAAKkjC,UAAU/0B,KAAKnH,GAAMA,EAAEpG,KAK3C,OAJCZ,KAAKijC,eAAiB,IAAIh/B,SAASrD,IACjCoiC,EAAS1+B,KAAK1D,EAAG,IAGb,CACJA,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,SACnBsgC,SAAUliC,KAAKkiC,SACf/6B,KAAMnH,KAAKmH,KACXg7B,YAAaniC,KAAKmiC,YAClBC,cAAepiC,KAAKoiC,eAAiB,CAAC,EACtCx5B,WAAY5I,KAAK4I,WACjBsxB,WAAYl6B,KAAKk6B,WACjBoI,UAAWtiC,KAAKsiC,UAEhBC,kBAAmBviC,KAAKuiC,kBAExBC,gBAAiBxiC,KAAKwiC,gBAEtBC,QAASziC,KAAKyiC,QAEd1Y,gBAAiB/pB,KAAK+pB,gBACtBnG,eAAgB5jB,KAAK4jB,eAErB4B,aAAcxN,EAAIwN,aAClB6Y,SAAUA,EACVwE,iBAAkB7iC,KAAK6iC,iBACvBG,SAAUA,EACVN,eAAgB1iC,KAAK0iC,eAE3B,CAcAU,cAGG,OAFoBpjC,KAAKgnB,gBAEJ7Y,KAAKnH,GAAMA,EAAEJ,gBACrC,CAcAG,OAAO2J,EAAK,MAAM,IACf,OAAO1Q,KAAK8iC,QAAQh6B,OAAO4H,EAC9B,CASA3C,UAAUnN,GACP,OAAOZ,KAAK+G,QAAQC,GAAMA,GAAGpG,IAAMA,IAAI,EAC1C,CAWAomB,cAActW,EAAK,MAAM,IACtB,OAAO1Q,KAAK+G,QAAQC,GAAMA,GAAKA,EAAEq8B,eAAcv6B,OAAO4H,EACzD,CAWA4yB,YAAY1iC,GACT,GAAKA,KAEqC,GAAtCZ,KAAK6iC,iBAAiBx1B,QAAQzM,IAC/BZ,KAAK6iC,iBAAiBv+B,KAAK1D,IAIhBZ,KAAK8iC,QAAQtV,MAAMxmB,GAAMA,EAAEpG,IAAMA,KACjC,CACX,IAAI+gB,EAAM3hB,KAAK+B,GAAG2iB,eAAe9jB,GACjC,GAAI+gB,EACD3hB,KAAK8iC,QAAQx+B,KAAKtE,KAAK+B,GAAGmE,SAASyb,EAAK3hB,WACpC,CACJA,KAAKs+B,iBAAmBt+B,KAAKs+B,kBAAoB,GACjDt+B,KAAKs+B,iBAAiBh6B,KAAK1D,GAC3B,IAAIuH,EAAM,IAAIG,MACX,KAAKtI,KAAKmH,0CAA0CvG,MAEvDZ,KAAK+B,GAAGqG,OAAOuuB,QAAQxuB,EAAK,CACzBvC,MAAO,CAAEhF,KAAIqE,OAAQ,CAAErE,GAAIZ,KAAKY,GAAIuG,KAAMnH,KAAKmH,QAErD,CACH,CACH,CAaAjB,SAASP,GACN,OAAO3F,KAAK+B,GAAGmE,SAASP,EAAQ3F,KACnC,CAWAujC,YAAY39B,GACT,IAAI49B,EAAUxjC,KAAK8iC,QAAQ38B,OAW3B,OAVAnG,KAAK8iC,QAAU9iC,KAAK+G,QAAO,SAAUof,GAClC,OAAOA,EAAEvlB,IAAMgF,EAAMhF,EACxB,IAIAZ,KAAK6iC,iBAAmB7iC,KAAK6iC,iBAAiB/5B,QAC1C26B,GAAQA,GAAO79B,EAAMhF,KAGrBZ,KAAK8iC,QAAQ38B,OAASq9B,EAChBxjC,KAAK4H,OAIR6H,QAAQC,SAClB,CAUAg0B,aAAaC,EAAUC,GAIpB,IAAIC,EAAY,KACZC,EAAO,EACX,IAAK,IAAIvwB,EAAI,EAAGA,EAAIvT,KAAK8iC,QAAQ38B,OAAQoN,IACtC,GAAIvT,KAAK8iC,QAAQvvB,GAAGzM,YAAc68B,EAAU,CACzCE,EAAY7jC,KAAK8iC,QAAQvvB,GACzBvT,KAAK8iC,QAAQ32B,OAAOoH,EAAG,GACvBuwB,EAAOvwB,EACP,KACH,CAKH,IAAK,IAAIwwB,EAAI,EAAGA,EAAI/jC,KAAK8iC,QAAQ38B,OAAQ49B,IACtC,GAAI/jC,KAAK8iC,QAAQiB,GAAGj9B,YAAc88B,EAAU,CAIrCE,GAAQC,GACTA,IAEH/jC,KAAK8iC,QAAQ32B,OAAO43B,EAAG,EAAGF,GAC1B,KACH,CAGH,OAAO7jC,KAAK4H,MACf,CAWAo8B,UAAUp+B,GAEP,OADiB5F,KAAK+N,UAAUnI,EAAMhF,IAM/B6O,QAAQC,WAJZ1P,KAAK8iC,QAAQx+B,KAAKsB,GACX5F,KAAK4H,OAIlB,CAWAq8B,SAASr+B,GAEN,OADiB5F,KAAK+N,UAAUnI,EAAMhF,IAQ/B6O,QAAQC,WALZ1P,KAAK8iC,QAAQx+B,KAAKsB,GACX5F,KAAK4H,OAKlB,CAWAs8B,YAAYxzB,EAAK,MAAM,IACpB,OAAO1Q,KAAK+G,QAAQC,GAAMA,GAAc,SAATA,EAAE3C,MAAgByE,OAAO4H,EAC3D,CASA2vB,qBACG,OAAOrgC,KAAK+G,QAAQC,GAAMA,GAAKA,EAAEm9B,iBAAgBh2B,KAAKnH,GAAMA,EAAEF,YACjE,CAWAo8B,QAAQp6B,EAAS,MAAM,IACpB,OAAO9I,KAAKmjC,SAASr6B,OAAOA,EAC/B,CASAs7B,UAAUxjC,GACP,OAAOZ,KAAKkjC,SAASl8B,GAAMA,EAAEpG,IAAMA,IAAI,EAC1C,CASAyjC,YAAYt4B,GACT,IAAIy3B,EAAUxjC,KAAKmjC,SAASh9B,OAM5B,OALAnG,KAAKmjC,SAAWnjC,KAAKkjC,SAAQ,SAAUoB,GACpC,OAAOA,EAAI1jC,IAAMmL,EAAMnL,EAC1B,IAGI4iC,GAAWxjC,KAAKmjC,SAASh9B,OACnBnG,KAAK4H,OAIR6H,QAAQC,SAClB,CASA60B,UAAUx4B,GAEP,OADiB/L,KAAKokC,UAAUr4B,EAAMnL,IAM/B6O,QAAQC,WAJZ1P,KAAKmjC,SAAS7+B,KAAKyH,GACZ/L,KAAK4H,OAIlB,CAWAI,QACG,IAAIA,EAAQ,IAAIg6B,EAAQhiC,MAMxB,OAHAgI,EAAMk4B,WAAW+B,EAAa/B,cAC9Bl4B,EAAMm4B,cAAc,CAAEv/B,GAAIZ,KAAKY,KAExBoH,CACV,CAWAw4B,UACG,MAAO,sBAAsBxgC,KAAKY,IACrC,CAOA4jC,eACG,MAAO,4BAA4BxkC,KAAKY,IAC3C,CAOA8/B,YAAY9/B,GACT,MAAO,sBAAsBZ,KAAKY,MAAMA,GAC3C,CAOA6jC,aACG,MAAO,uBAAuBzkC,KAAKY,UACtC,CAOA8jC,iBACG,MAAO,oCAAoC1kC,KAAKY,IACnD,CAOAigC,eACG,MAAO,4BAA4B7gC,KAAKY,IAC3C,CAKI+jC,0BAED,GAAI3kC,KAAK4kC,eAAgB,CACtB,IAAIC,EAAW7kC,KAAK4kC,eAAeE,iBACnC,OAAID,EAAiBA,EAASt4B,WAClB,IACf,CAGG,OAAOvM,KAAK+pB,gBAAgBxd,UAElC,CAEIo4B,wBAAoB59B,GAErB,GAAI/G,KAAK4kC,eAAgB,CACtB,IAAIC,EAAW7kC,KAAK4kC,eAAeE,iBAC/BD,IAAUA,EAASt4B,WAAaxF,EACvC,MAGG/G,KAAK+pB,gBAAgBxd,WAAaxF,CAExC,CAEIg+B,gCAED,GAAI/kC,KAAK4kC,eAAgB,CACtB,IAAIC,EAAW7kC,KAAK4kC,eAAeE,iBACnC,OAAID,EAAiBA,EAAS7a,iBAClB,IACf,CAGG,OAAOhqB,KAAK+pB,gBAAgBC,gBAElC,CAEI+a,8BAA0B/a,GAE3B,GAAIhqB,KAAK4kC,eAAgB,CACtB,IAAIC,EAAW7kC,KAAK4kC,eAAeE,iBAC/BD,IAAUA,EAAS7a,iBAAmBA,EAC7C,MAGGhqB,KAAK+pB,gBAAgBC,iBAAmBA,CAE9C,CAEIgb,8BACD,OAAOhlC,KAAK+pB,gBAAgB4Y,cAC/B,CAEIqC,4BAAwBpkC,GACzBZ,KAAK+pB,gBAAgB4Y,eAAiB/hC,CACzC,CAEIqkC,4BACD,OAAOjlC,KAAK+pB,gBAAgB6Y,cAAgB,EAC/C,CAEIqC,0BAAsBl+B,GACvB/G,KAAK+pB,gBAAgB6Y,aAAe77B,CACvC,CAOIm+B,iBACD,OAAOllC,KAAK4I,YAAc5I,KAAKk6B,UAClC,CASAiL,gBACG,IAAIx/B,EAAS,CAAC,EAKd,OAJA3F,KAAK+G,SAAS9C,SAAS+C,IACpBA,EAAEo+B,aAAaz/B,EAAO,IAGlBA,CACV,CASA6qB,cAGG,OADAhoB,QAAQC,KAAK,4CACN,CACV,CAYAogB,WAAWC,GAGR,OAFAtgB,QAAQ+G,MAAM,wBAEU,MAApBvP,KAAK+E,YAA4B,KAE9B/E,KAAK+E,YAAYgkB,UAAUD,GAAa9oB,KAAKY,EACvD,CAUAykC,SAASvc,GAGN,OAFAtgB,QAAQ+G,MAAM,wBAEPvP,KAAK6oB,WAAWC,GAAa,WACvC,CAQA4G,KACG,OAAO1vB,KAAKuiC,mBAAqB,MACpC,CAEA+C,aAAaz7B,GACVrB,QAAQ6O,IACL,UAAYrX,KAAKmH,KAAO,yCACxB0C,EAEN,CAQAosB,QAGG,IAEIsP,EAAWxxB,KAAK0D,MAAM1D,KAAKC,UAAUhU,OAMzC,MARkB,CAAC,cAAe,WAItBiE,SAASuhC,IAClBD,EAASC,GAAQxlC,KAAKwlC,EAAK,IAGvBD,CACV,CAGAE,YAAYhX,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAIqQ,EAAW9+B,KAAKqgC,qBACpBrgC,KAAK++B,UAAUtQ,EAASA,EAASqQ,GAEjC,IAAI4G,EAAY1lC,KAAKmiC,aAAe,GAGpC,IAAKuD,GAAa1lC,KAAK+G,SAASZ,OAAS,EAAG,CACzC,IAAIw/B,EAAe3lC,KAAK+G,QAAQC,GAAMA,EAAE4+B,oBAAmB,GAC3D,GAAID,EAAcD,EAAY,IAAMC,EAAa/kC,GAAK,SAGnD,IAAK8kC,EAAUG,OAAQ,CACpB,IAAIzD,EAAgBpiC,KAAKoiC,eAAiB,CAAC,EAExCsD,EADCtD,GAAiBA,EAAcC,iBACpBtiC,EAAEqiC,EAAc0D,aAAe,cAG/B,GACT9lC,KAAK+B,GAAGsf,MAAMgB,OAAOoM,EAAQ7tB,IAAM,OAAS,KAC5C6tB,EAAQ7tB,IAEjB,CAEN,CAIA,IAAImlC,EAASL,EAAUM,MAAM,cAc7B,GAZID,GAAUA,EAAO9hC,SAClB8hC,EAAO9hC,SAASgiC,IACb,IAAIC,EAAiBD,EAAM/yB,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErDtN,EAAQ5F,KAAK+N,UAAUm4B,GACd,MAATtgC,IAEJ8/B,EAAYA,EAAUxyB,QAAQ+yB,EAAOrgC,EAAM4a,OAAOiO,IAAY,IAAG,KAKlEiX,EAAUG,OAAQ,CACpB,IAAIzD,EAAgBpiC,KAAKoiC,eAAiB,CAAC,EAExCsD,EADCtD,GAAiBA,EAAcC,iBACpBtiC,EAAEqiC,EAAc0D,aAAe,cAG/B,GAAG9lC,KAAK+B,GAAGsf,MAAMgB,OAAOoM,EAAQ7tB,IAAM,OAAS,KACxD6tB,EAAQ7tB,IAGjB,CAEA,OAAO8kC,CACV,oBCt7BH,IAAI9T,EAAW,EAAQ,OACnBuU,EAAe,EAAQ,OAE3B1mC,EAAOC,QAAU,cAAgCkyB,EAC9CjyB,YAAYujB,EAAYnhB,GACrBjC,MAAMojB,EAAYnhB,GAgDlB/B,KAAKmqB,SAAU,EAIfnqB,KAAKomC,gBAAkBpmC,KAAKomC,iBAAmB,GAI/CpmC,KAAKqmC,gBAAkBrmC,KAAKqmC,iBAAmB,GAI/CrmC,KAAKsmC,aAAe,GAIpBtmC,KAAKumC,kBAAoB,GAIzBvmC,KAAKwmC,eAAiB,EAGzB,CAeApb,oBACG,MAAO,OACV,CAQAnlB,WAAWid,GACRpjB,MAAMmG,WAAWid,GAEjBljB,KAAK4B,KAAO,QAMZ5B,KAAKymC,UAAY,CAAC,EAKlBzmC,KAAKqkB,UAAY,GAKjBrkB,KAAKo9B,SAAWla,EAAWka,UAAY,GAMvCp9B,KAAK0mC,YAAYxjB,EAAWyjB,OAAS,CAAC,GAGtC3mC,KAAK8iC,QAAU,KACf9iC,KAAK4mC,aAAa1jB,EAAWnc,QAAU,IASvC/G,KAAKgwB,MAAQ9M,EAAW8M,OAAS,CAAC,EAG/BhwB,KAAKgwB,QACJhwB,KAAKgwB,MAAM/F,MACZjqB,KAAKgwB,MAAM3O,OACXrhB,KAAKgwB,MAAM3O,MAAMlb,OAAS,IAE1BnG,KAAKgwB,MAAM/F,KAAO,OAErBjqB,KAAK6mC,sBAAwB3jB,EAAW4jB,sBAAwB,CAAC,EAEjE9mC,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAE9B8c,GAAcA,EAAW9c,WAE1BpG,KAAKoG,SAAS2gC,SAAWhzB,KAAK0D,MAC3ByL,EAAW9c,SAAS2gC,WAAY,GAEnC/mC,KAAKoG,SAAS4gC,WAAajzB,KAAK0D,MAC7ByL,EAAW9c,SAAS4gC,aAAc,GAG3C,CAUAlhC,QACG,IAAIgI,EAAShO,MAAMgG,QAUnB,OARAgI,EAAOsvB,SAAWp9B,KAAKo9B,SAEvBtvB,EAAO64B,MAAQ3mC,KAAKinC,cACpBn5B,EAAO/G,OAAS/G,KAAKknC,eACrBp5B,EAAOkiB,MAAQhwB,KAAKgwB,MAEpBliB,EAAO1H,SAAWpG,KAAKoG,SAEhB0H,CACV,CAaA84B,aAAaO,GACV,IAAIC,EAAY,IACfD,GAAiB,IAAIljC,SAASojC,IAC5B,GAAiB,MAAbA,EAAmB,OAGvB,IAAIpiC,EAASjF,KAAKsnC,cAAcD,EAAUnX,OAa1C,IAVKjrB,GAAUjF,KAAK+B,KACjBkD,EAASjF,KAAK+B,GAAGkW,WAAWovB,EAAUnL,UAGlCj3B,IACDjF,KAAKunC,SAAWvnC,KAAKunC,UAAY,CAAC,EAClCvnC,KAAKunC,SAASF,EAAUnX,OAASjrB,KAIlCA,EAGF,OAFAjF,KAAKomC,gBAAkBpmC,KAAKomC,iBAAmB,QAC/CpmC,KAAKomC,gBAAgB9hC,KAAK+iC,GAI7B,IAAIzhC,EAAQX,EAAO8I,UAAUs5B,EAAUlL,SACvC,IAAKv2B,EAOF,OANA5F,KAAKqmC,gBAAkBrmC,KAAKqmC,iBAAmB,QAC/CrmC,KAAKqmC,gBAAgB/hC,KAAK,CACvBkjC,MAAOviC,EAAOrE,GACdu7B,QAASkL,EAAUlL,QACnBkL,cAKDrnC,KAAKynC,eAAe7hC,KACtB5F,KAAKsmC,aAAetmC,KAAKsmC,cAAgB,GACzCtmC,KAAKsmC,aAAahiC,KAAK,CAAEsB,QAAOyhC,eAInC,IAAIK,EACDN,EAAUt+B,QACN9B,GACEA,EAAEkpB,OAASmX,EAAUnX,OAASlpB,EAAEpB,MAAMhF,IAAMymC,EAAUlL,UAC1Dh2B,OAAS,EAQd,GANKuhC,IACF1nC,KAAKumC,kBAAoBvmC,KAAKumC,mBAAqB,GACnDvmC,KAAKumC,kBAAkBjiC,KAAK,CAAE+iC,eAI7BzhC,GAAS5F,KAAKynC,eAAe7hC,IAAU8hC,EAAO,CAG/C,IAAI/lB,EAAM/b,EAAME,QAChB,IAAI6hC,EAAc,IAAI/hC,EAAMjG,YAAYgiB,EAAK/b,EAAMX,QAEnD0iC,EAAYzX,MAAQmX,EAAUnX,MAE9B,IAAIA,EAAQmX,EAAUnX,MAClB/iB,MAAMC,QAAQpN,KAAK2mC,WAEpBzW,EAAQtqB,EAAMX,OAAOkC,MAGxBigC,EAAU9iC,KAAK,CACZ4rB,MAAOA,EACPtqB,MAAO+hC,GAEb,KAEH3nC,KAAK8iC,QAAUsE,CAClB,CAOAF,eACG,IAAIU,EAAa,GAmBjB,OAlBA5nC,KAAK8iC,QAAQ7+B,SAASojC,IACnBO,EAAWtjC,KAAK,CACb4rB,MAAOmX,EAAUnX,MACjBgM,SAAUmL,EAAUzhC,MAAMX,OAAOrE,GACjCu7B,QAASkL,EAAUzhC,MAAMhF,IAC1B,KAKJZ,KAAKomC,iBAAmB,IAAIniC,SAAS+C,IACnC4gC,EAAWtjC,KAAK0C,EAAE,KAGpBhH,KAAKsmC,cAAgB,IAAIriC,SAAS+C,IAChC4gC,EAAWtjC,KAAK0C,EAAEqgC,UAAU,IAGxBO,CACV,CAUA7gC,OAAO2J,EAAK,MAAM,IAEf,OADKA,IAAIA,EAAK,KAAM,GACb1Q,KAAK8iC,QAAQ30B,KAAKnH,GAAMA,EAAEpB,QAAOkD,OAAO4H,EAClD,CAaAi2B,QACG,OAAO3mC,KAAK6nC,QAAU,CAAC,CAC1B,CASArhB,QAAQ9V,EAAK,MAAM,IAIhB,OAAO1Q,KAAK+B,GAAGykB,SAASL,GAAMnmB,KAAKqkB,UAAUhX,QAAQ8Y,EAAEvlB,KAAO,IAAGkI,OAC9D4H,EAEN,CASAyf,YAAYjY,GACT,IAAIpK,EAAS,KAQb,OANAuG,OAAOC,KAAKtU,KAAKymC,WAAa,CAAC,GAAGxiC,SAASisB,IACnCpiB,GAAU9N,KAAKymC,UAAUvW,IAAUhY,IACrCpK,EAASoiB,EACZ,IAGIpiB,CACV,CAQAg6B,aACG,OAAK9nC,KAAK6nC,OAAO3L,UAEVl8B,KAAK+B,GAAGkW,WAAWjY,KAAK6nC,OAAO3L,WAFJ,IAGrC,CASAoL,cAAcpX,GACX,IAAIsX,EAAQxnC,KAAKymC,UAAUvW,GAC3B,OAAIsX,EACMxnC,KAAKwmB,SAASL,GAAMA,EAAEvlB,IAAM4mC,IAAO,GAEtC,IACV,CASAvvB,WAAWuvB,GACR,OAAIA,EACMxnC,KAAKwmB,SAASL,GAAMA,EAAEvlB,IAAM4mC,IAAO,GAEtC,IACV,CASAO,MAAMj/B,EAAS,MAAM,IAClB,OAAQ9I,KAAKgoC,QAAU,IAAIl/B,OAAOA,EACrC,CASA49B,YAAYtgC,GAETpG,KAAK6nC,OAAS7nC,KAAK+B,GAAG2D,UAAUU,GAEhC,IAAI6hC,EAAkB,CAAC,EAKnBC,EAAW,GAIf,IAAIC,EAAc,CAACljC,EAAQirB,KACnBjrB,IAMLjF,KAAKymC,UAAUvW,GAASjrB,EAAOrE,GAC/BqnC,EAAgBhjC,EAAOrE,IAAMqE,EAAOrE,GAAE,EAQrCwnC,EAAcL,KACdA,GAAS,IAAI9jC,SAASokC,IAGpBH,EAAS5jC,KAAK+jC,EAAK,GAEpB,EAGDC,EAAc,CAACC,EAAY5B,KACvB4B,IAELvoC,KAAKwmC,eAAiBxmC,KAAKwmC,gBAAkB,IAE5CG,GAAS,IAAI1iC,SAASokC,IAkBpB,IAAIG,EAAYD,EAAWx6B,UAAUs6B,EAAKlM,SAC1C,GAAKqM,EAAL,CAWA,IAAI7hC,EAAa3G,KAAK+B,GAAGkW,WAAWuwB,EAAUpiC,SAASO,YAClDA,GAULwhC,EAAYxhC,EAAY0hC,EAAKnY,OAE7BkY,EAAWC,EAAKN,OAEhBO,EAAY3hC,EAAY0hC,EAAKN,QAb1B/nC,KAAKwmC,eAAeliC,KAAK,CACtBgN,QAAS,oDAAoDk3B,EAAUpiC,SAASO,cAChFkD,KAAM,CACHw+B,SART,MAPGroC,KAAKwmC,eAAeliC,KAAK,CACtBgN,QAAS,mCAAmC+2B,EAAKlM,WACjDtyB,KAAM,CACHw+B,SAsB0B,IACpC,EAQL,IAAII,EAAazoC,KAAK8nC,aACjBW,GAWLN,EAAYM,EAAY,eAExBL,EAAWhiC,EAAS2hC,OAEpBO,EAAYG,EAAYriC,EAAS2hC,OAGjC/nC,KAAKgoC,OAASE,EACdloC,KAAKqkB,UAAYhQ,OAAOC,KAAK2zB,IAjB1BjoC,KAAKwmC,eAAeliC,KAAK,CACtBgN,QAAS,oCACTzH,KAAM,CACHqyB,SAAUl8B,KAAK6nC,QAAQ3L,WAenC,CAOA+K,cACG,OAAOjnC,KAAK+B,GAAG2D,UAAU1F,KAAK6nC,QAAU,CAAC,EAC5C,CAWA7/B,QACG,IAAIA,EAAQ,IAAIm+B,EAAanmC,MAM7B,OAHAgI,EAAMk4B,WAAWlgC,KAAKL,YAAYugC,cAClCl4B,EAAMm4B,cAAc,CAAEv/B,GAAIZ,KAAKY,KAExBoH,CACV,CASA0gC,gBAAgBzjC,GACb,QAAKA,GAIFjF,KAAKwmB,SAASxO,GACJA,EAAIpX,IAAMqE,EAAOrE,KACxBuF,OAAS,CAElB,CASAshC,eAAe7hC,GACZ,IAAKA,EAAO,OAAO,EAGnB,IAAIX,EAASW,EAAMX,OAKnB,IAAI0jC,EAAe/iC,EAAMgB,eAEzB,OAAO5G,KAAK0oC,gBAAgBzjC,IAAWjF,KAAK0oC,gBAAgBC,EAC/D,CAYA9f,WAAWC,GAIR,OAHAtgB,QAAQ+G,MACL,sEAEIvP,KAAK+E,YAAYkkB,SAASH,GAAa9oB,KAAKY,EACtD,CAOI2kB,cACD,OAAOvlB,KAAKoG,SAAS2gC,WAAY,CACpC,CAOI7B,iBACD,OAAO,CACV,CAQA0D,aACG,OAAO5oC,KAAK6oC,WAAY,CAC3B,CAEI9D,gCACD,IAAI/a,EAAmBlqB,MAAMilC,0BAS7B,OAPuB,MAApB/a,GAC0B,MAA1BA,EAAiB3I,OAChB2I,EAAiB3I,MAAMlb,SAExB6jB,EAAmBhqB,KAAKgwB,OAGpBhG,CACV,oBCxqBH,IAAI/G,EAAY,EAAQ,OACxB,MAAM6lB,EAAU,EAAQ,OAExBrpC,EAAOC,QAAU,cAA4BujB,EAC1CtjB,YAAYujB,EAAYnhB,GACrBjC,MAAM,CAAC,SAAUiC,GAEjB/B,KAAKiG,WAAWid,GAGhBljB,KAAKkJ,WAAWjF,SAASoG,IACtBA,EAAE0+B,gBAAgB,GAExB,CASA9iC,WAAWid,GASRljB,KAAKY,GAAKsiB,EAAWtiB,GACrBZ,KAAKmH,KAAO+b,EAAW/b,MAAQ,GAC/BnH,KAAK4B,KAAOshB,EAAWthB,MAAQ,UAC/B5B,KAAKgpC,cAAgB9lB,EAAW8lB,eAAiB,KAGjD,IAAIC,EAAejpC,KAAKkpC,WAAa,CAAC,EACtClpC,KAAKkpC,UAAY,CAAC,GACjBhmB,EAAWimB,YAAc,IAAIllC,SAASmlC,IACpC,IAAIrL,EAAM/9B,KAAK+B,GAAGm5B,kBAAkBkO,EAAKppC,MACrC+9B,EACD/9B,KAAKkpC,UAAUE,GAAOrL,EAIlBkL,EAAaG,GACdppC,KAAKkpC,UAAUE,GAAOH,EAAaG,GAEnCppC,KAAKwP,KACF,UACA,KAAKxP,KAAKmH,sDAAsDiiC,KAChE,CAAE1hB,QAAS1nB,KAAKY,GAAIwoC,OAG7B,IAGHppC,KAAKqpC,aAAenmB,EAAWomB,aAAe,CAAC,EAE/CxpC,MAAMmG,WAAWid,GAGZljB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAQArB,QAEQ9F,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAQjB,IAAK,IAAIuE,IANU,CAAC,KAAM,OAAQ,iBACrBpG,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGpB6C,EAAKs/B,WAAa,GACJnpC,KAAKkpC,UAGhBr/B,EAAKs/B,WAAW7kC,KACbtE,KAAKkpC,UAAU7+B,GAAGzJ,IAAMZ,KAAKkpC,UAAU7+B,GAAGk/B,WAWhD,OAPA1/B,EAAKy/B,YAActpC,KAAKqpC,aAOjBx/B,CACV,CAWA2/B,kBACG,OAAOxpC,KAAKgpC,aACf,CAOAS,WACGzpC,KAAKgpC,cAAgB,saACkWhpC,KAAKY,8gBAc/X,CAQA8oC,YAAYC,GACT3pC,KAAKgpC,cAAgBW,CACxB,CAcAL,YAAY54B,EAAK,MAAM,IACpB,IAAIk5B,EAAiBv1B,OAAOC,KAAKtU,KAAKqpC,cAAcl7B,KAAK9D,GAC/CrK,KAAKqpC,aAAah/B,KAQ5B,OAJIrK,KAAK0nB,SAAwB,eAAb1nB,KAAKqE,MACtBulC,EAAiBA,EAAe5hB,OAAOhoB,KAAK0nB,QAAQ4hB,gBAGhDM,EAAe9gC,OAAO4H,EAChC,CAQAm5B,uBAAuBC,GACpB,OAAO9pC,KAAKspC,aAAahK,GACfA,EAAE1+B,IAAMkpC,IACf,EACN,CAQAC,oBAAoBD,GACjB,OAAO9pC,KAAKspC,aAAa/lC,GACfA,EAAEymC,IAAMF,GAErB,CAQAG,oBAAoBH,GACjB,OAAO9pC,KAAKspC,aAAa/lC,GACfA,EAAE2mC,MAAQJ,GAEvB,CAQAK,iBAAiB7O,UACPt7B,KAAKqpC,aAAa/N,EAAQ16B,GACpC,CAcAwpC,wBAAwB9O,GACrB,IAAI+O,EAAK/O,EAAQgP,eACbJ,EAAO,KACPG,EAAGE,YACJL,EAAOG,EAAGE,UAAU3pC,IAGvB,IAAIopC,EAAK,KAWT,OAVIK,EAAGG,YACJR,EAAKK,EAAGG,UAAU5pC,IAGJ,CACdA,GAAI06B,EAAQ16B,GACZgB,KAAM05B,EAAQ15B,KACdsoC,KAAMA,EACNF,GAAIA,EAGV,CAQAS,iBAAiBnP,GACd,IAAIoP,EAAa1qC,KAAKoqC,wBAAwB9O,GAC1CoP,EAAWR,MAAQQ,EAAWV,IAAM1O,EAAQrmB,OAC7CjV,KAAKqpC,aAAaqB,EAAW9pC,IAAM8pC,EAInC1qC,KAAKmqC,iBAAiB7O,EAE5B,CAUApyB,SAASwH,EAAK,MAAM,IAIjB,OAHkB2D,OAAOC,KAAKtU,KAAKkpC,WAAW/6B,KAAK9D,GACzCrK,KAAKkpC,UAAU7+B,KAENvB,OAAO4H,EAC7B,CAQAi6B,WAAWrP,GACRt7B,KAAKkpC,UAAU5N,EAAQ16B,IAAM06B,EAAQiO,WAAajO,CACrD,CAQAsP,YAAYhqC,GACT,OAAOZ,KAAKkpC,UAAUtoC,IAAO,IAChC,CAQAiqC,oBAAoBf,GACjB,OAAO9pC,KAAKkJ,UAAUo2B,GACZA,EAAEiK,WAAaO,IACtB,EACN,CASAgB,cAAcnpB,UACJ3hB,KAAKkpC,UAAUvnB,EAAI/gB,IAAM+gB,EAAI4nB,UACvC,CASAwB,cAAc1mC,GACX,OAAsC,MAA/BrE,KAAKgrC,kBAAkB3mC,EACjC,CASA4mC,mBAAmBC,GAChB,IAAIhiC,EAAW,GAYf,OAXsBlJ,KAAKspC,aAAa/lC,GAC9BA,EAAE2mC,MAAQgB,EAAY3B,YAEhBtlC,SAASV,IACtB,IAAI+3B,EAAUt7B,KAAKkJ,UAAUmB,GACnBA,EAAEk/B,WAAahmC,EAAEymC,KACxB,GACC1O,GACDpyB,EAAS5E,KAAKg3B,EACjB,IAEIpyB,CACV,CASAiiC,uBAAuBD,GACpB,IAAIhiC,EAAW,GAYf,OAXsBlJ,KAAKspC,aAAa/lC,GAC9BA,EAAEymC,IAAMkB,EAAY3B,YAEdtlC,SAASV,IACtB,IAAI+3B,EAAUt7B,KAAKkJ,UAAUmB,GACnBA,EAAEk/B,WAAahmC,EAAE2mC,OACxB,GACC5O,GACDpyB,EAAS5E,KAAKg3B,EACjB,IAEIpyB,CACV,CAUAkiC,YAAYF,EAAap1B,GAStB,IAAIu1B,EAAarrC,KAAKsrC,iBAAiBJ,GACnCvlC,EAAS4lC,EAAmBF,EAAY,cAAev1B,EAAQ9V,MACnE,OAAO2F,EAAOQ,OAAS,EAClBR,EAAOQ,OAAS,EACbR,EACAA,EAAO,GACV,IACR,CAYA6lC,kBAAkBN,GACf,IAAIG,EAAarrC,KAAKsrC,iBAAiBJ,GAEnCnkC,EAASwkC,EACVF,EACA,oBACA,KACArrC,MAEH,OAAO+G,EAAOZ,OAAS,EAAIY,EAAS,IACvC,CAWA0kC,oCAAoCC,EAAMC,GACjB3rC,KAAKspC,aAAa/lC,GAC9BA,EAAEymC,IAAM0B,EAAKxB,OAGPjmC,SAASV,IACjBooC,EAASpoC,EAAE3C,MACb+qC,EAASpoC,EAAE3C,IAAM2C,EACjBvD,KAAKyrC,oCAAoCloC,EAAGooC,GAC/C,GAEN,CACAC,iCAAiCV,GAC9B,IAAIW,EAAkB7rC,KAAKspC,aAAa/lC,GAC9BA,EAAEymC,IAAMkB,EAAY3B,YAE1BoC,EAAW,CAEf,EAYA,OATAE,EAAgB5nC,SAASV,IACtBooC,EAASpoC,EAAE3C,IAAM2C,EACjBvD,KAAKyrC,oCAAoCloC,EAAGooC,EAAS,IAOjDt3B,OAAOC,KAAKq3B,GAAUx9B,KAAKoG,GAAMo3B,EAASp3B,IACpD,CAEA+2B,iBAAiBJ,GACd,IAGIY,EAHAC,EAAY,CAAC,EAiBjB,OAfG/rC,KAAK4rC,iCAAiCV,GAElBjnC,SAASynC,KAE7BI,EAAO9rC,KAAK6qC,oBAAoBa,EAAK1B,OAC3B+B,EAAUD,EAAKlrC,IAAMkrC,IAE/BA,EAAO9rC,KAAK6qC,oBAAoBa,EAAKxB,SAC3B6B,EAAUD,EAAKlrC,IAAMkrC,EAAI,IAGrBz3B,OAAOC,KAAKy3B,GACzB59B,KAAKoG,GAAMw3B,EAAUx3B,KACrBzL,QAAQw2B,GAAMA,EAAE1+B,IAAMsqC,EAAYtqC,IAGzC,CAUAorC,mBAAmBd,GAChB,IAAIG,EAAarrC,KAAKmrC,uBAAuBD,GACzCnkC,EAASwkC,EACVF,EACA,qBACA,KACArrC,MAEH,OAAO+G,EAAOZ,OAAS,EAAIY,EAAS,IACvC,CAQAikC,kBAAkB3mC,GAIf,OAHcrE,KAAKkJ,UAAUo2B,GACnBA,EAAE2M,YAAc5nC,IACvB,IAIO,IAEb,GAsCH,IAAIknC,EAAqB,CACtBthC,EACAiN,EACAg1B,EACAxkB,EACAykB,EACAC,KAUA,QANwB,IAAbD,IACRA,EAAY,SAEY,IAAhBC,IACRA,EAAe,IAEC,GAAfniC,EAAK9D,OACN,OAAOgmC,EAGP,IAAIL,EAAO7hC,EAAKwK,QAGhB,IAA6C,GAAzC23B,EAAa/+B,QAAQy+B,EAAKvC,WAAkB,CAE7C6C,EAAa9nC,KAAKwnC,EAAKvC,WAGvB,IAAI5mC,EAAQmpC,EAAK50B,GAAQm1B,MAAMP,EAAMI,GACvB,OAAVvpC,IAAgBA,EAAQ,IAC5BwpC,EAAYrD,EAAQqD,EAAWxpC,GAG/BsH,EAAO6+B,EAAQ7+B,EAAMyd,EAAQyjB,uBAAuBW,GACvD,CAGA,OAAOP,EACJthC,EACAiN,EACAg1B,EACAxkB,EACAykB,EACAC,EAEN,iBCzmBH,IAAInpB,EAAY,EAAQ,OACR,EAAQ,OAExBxjB,EAAOC,QAAU,cAAyBujB,EACvCtjB,YAAYujB,EAAYnhB,GACrBjC,MAAM,CAAC,OAAQ,QAASiC,GAExB/B,KAAKiG,WAAWid,EAMnB,CASAjd,WAAWid,GASRljB,KAAKY,GAAKsiB,EAAWtiB,GACrBZ,KAAKmH,KAAO+b,EAAW/b,MAAQ,WAC/BnH,KAAK4B,KAAOshB,EAAWthB,MAAQ,OAC/B5B,KAAKqO,KAAO6U,EAAW7U,MAAQ,GAC/BrO,KAAKoG,SAAW8c,EAAW9c,UAAY,CAAC,EACxCpG,KAAKoG,SAASyqB,MAAQ3N,GAAY9c,UAAUyqB,OAAS,QACrD7wB,KAAKoG,SAASoG,GAAK0W,GAAY9c,UAAUoG,IAAM,GAG/C1M,MAAMmG,WAAWid,GAGZljB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAQArB,QAGQ9F,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAOjB,MALmB,CAAC,KAAM,OAAQ,WAAY,QACjC7B,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGb6C,CACV,oBCjEH,IAAIyibD,EAASroC,SAASqP,IACXA,EAAEk5B,SAASC,SACZn5B,EAAIA,EAAEk5B,SAETD,EAAMj5B,EAAEm5B,SAASpoC,KAAOiP,CAAC,IAG5B7T,EAAOC,QAAU,MAMd0rB,gBAAgB1a,EAAK,MAAM,IACxB,IAAIiX,EAAQ,GACZ,IAAK,IAAIrU,KAAKi5B,EAAO,CAClB,IAAIG,EAAIH,EAAMj5B,GACV5C,EAAGg8B,IACJ/kB,EAAMrjB,KAAKooC,EAEjB,CACA,OAAO/kB,CACV,CAOAyD,eAAezlB,EAAQZ,EAAakQ,GAQjC,GAPAA,EAASA,GAAU,KAED,qBAAdtP,EAAOtB,MACRsB,EAAOtB,IAAM,iBAIZsB,EAAOtB,IACR,OAAKkoC,EAAM5mC,EAAOtB,KASX,IAAIkoC,EAAM5mC,EAAOtB,KAAKsB,EAAQZ,EAAakQ,IAR/CzM,QAAQ+G,MACL,WACG5J,EAAOtB,IACP,+CAEC,IAAIkoC,EAAY,KAAE5mC,EAAQZ,EAAakQ,IAKjD,IAAI9M,EAAM,IAAIG,MAAM,qBAAqB3C,EAAOtB,QAOhD,OANAmE,QAAQ+G,MAAMpH,GACdK,QAAQ+G,MAAM,CACXA,MAAOpH,EACPxC,OAAQA,EACRZ,YAAaA,IAET,IAEb,CAEAqmB,iBAAiB/mB,GACd,GAAIkoC,EAAMloC,GACP,OAAOkoC,EAAMloC,GAEhBmE,QAAQ+G,MAAM,oBAAoBlL,KAErC,oBC/IH,MAAM9E,EAAc,EAAQ,MAM5B,SAASotC,EAAYle,EAAS7oB,GAC3B,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMkB,WAAY,OAAO,KAC9B,MAAMA,EAAalB,EAAMkB,WAEzB,IAAInE,EAAQ,KAEZ,GAAImE,EAAWuG,QAAQ,MAAQ,EAAG,CAC/B,IAAImrB,EAAU1xB,EAAW4hB,MAAM,KAAK,GACpC/lB,EAAQ8rB,EAAQ3nB,IAAe2nB,EAAQ+J,EAC1C,MACG71B,EAAQ8rB,EAAQ3nB,GAGnB,QAAoB,IAATnE,EACR,OAAOA,EAKV,IAAK,MAAM4R,KAAKka,EAAS,CACtB,MAAMpqB,EAAMkQ,EAAEmU,MAAM,KAAK,GACrBrkB,GAAOA,GAAOuB,EAAMhF,KACrB+B,EAAQ8rB,EAAQla,GAEtB,CACA,OAAO5R,CACV,CA2BAlD,EAAOC,QAAU,cAAgCH,EAC9CI,YAAYE,EAAQkC,GACjBlC,EAASA,GAAU,yBAED,IAAPkC,GACRyG,QAAQ+G,MAAM,oDAGjBzP,MAAM,KAAMD,EAAQkC,GAEpB/B,KAAK8S,QAAU,CAAElC,SAAU,MAC3B5Q,KAAKqM,UAAY,CAAC,EAClBrM,KAAK4sC,UAAY,CAAC,EAGlB5sC,KAAK6sC,aAAe,GACpB7sC,KAAK8sC,QAGW9sC,KAAKwB,OAAS,CAC3BgC,UAAW,CACRnB,SAAU,QAGb0qC,eAAgB,SAAU1+B,GACvB,IAAIP,EAAS,GACb,IACG,IAAIk/B,EAAMC,SAASC,cAAc,OACjCF,EAAIG,UAAY9+B,EAEhBP,EAASk/B,EAAII,aAAeJ,EAAIK,WAAa,EAGhD,CAFE,MAAOllC,GACN2F,GAAUO,GAAQ,IAAI6E,QAAQ,gBAAiB,GAClD,CAEA,OAAOpF,CACV,EAQN,CAEAxK,KAAKnB,EAAU,CAAC,GACbnC,KAAKqM,UAAYlK,CACpB,CAYAoD,QAAQkpB,EAASme,EAAY5sC,KAAK4sC,WAE/B,GAAIA,GAAWvrB,OAAOlb,QAAqB,MAAXsoB,EAAiB,OAAO,EAGxD,IAAKme,GAAWvrB,OAAOlb,QAAqB,MAAXsoB,EAAiB,OAAO,EAEzD,IAAI3gB,EAA4B,QAAnB8+B,EAAU3iB,KA2FvB,OAzFA2iB,EAAUvrB,MAAMpd,SAAS6E,IAEtB,GAAIA,GAAQuY,OAAOlb,OAIhB,YAFG2H,EADoB,OAAnB8+B,EAAU3iB,KACFnc,GAAU9N,KAAKuF,QAAQkpB,EAAS3lB,GAC9BgF,GAAU9N,KAAKuF,QAAQkpB,EAAS3lB,IAI5C,IAAKA,EAAOzE,MAAQyE,EAAOsnB,KAAM,OAEtC,MAAMiX,GAAarnC,KAAK8sC,SAAW,IAAIhkC,QACnC9B,GAAMA,EAAEpG,IAAMkI,EAAOzE,KAAO2C,EAAEF,YAAcgC,EAAOzE,MACrD,GAEF,IAAKgjC,EAAW,OAEhB,IAAIiG,EAAa,KAIbC,EAAgBlG,EAAUhjC,SAEF,IAAjBgjC,EAAUhjC,MACE,eAAhBgjC,EAAUzmC,IACXymC,EAAUhjC,IAAM,eAChBkpC,EAAgBlG,EAAUhjC,KACtBkpC,EAAgB,eAG1B,IAAI5qC,EAAQ,KAQZ,OALGA,EADC0kC,EAAUlW,aA9HvB,SAA8B1C,EAAS7oB,GACpC,IAAI4nC,EAAe,GAEnB,GAAI/e,EAAS,CACV,IAAI0C,EAAevrB,EAAMurB,eACzB,GAAI1C,EAAQ0C,GACTqc,GACI5nC,EAAMyB,WACFonB,EAAQ0C,GAAcvrB,EAAMyB,WAAWP,YACvC,QACJlB,EAAM0B,YACFmnB,EAAQ0C,GAAcvrB,EAAM0B,YAAYR,YACxC,OACL2nB,EAAQ0C,GAAcvwB,IACtB6tB,EAAQ0C,OACP,CACJ,IAAIsc,EAAWd,EAAYle,EAAS7oB,GACpB,MAAZ6nC,IACDD,EAAeC,EAErB,CACH,CACA,OAAOD,CACV,CAwGoBE,CAAqBjf,EAAS4Y,GAE9BsF,EAAYle,EAAS4Y,GAGxBkG,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACW,MAAT5qC,IAAeA,EAAQ,IAE3B2qC,EAAattC,KAAK2tC,UAAUhrC,EAAOmG,EAAOsnB,KAAMtnB,EAAOnG,OACvD,MACH,IAAK,OACL,IAAK,WACF2qC,EAAattC,KAAK4tC,UAAUjrC,EAAOmG,EAAOsnB,KAAMtnB,EAAOnG,OACvD,MACH,IAAK,SACL,IAAK,YACL,IAAK,UACF2qC,EAAattC,KAAK6tC,YAAYlrC,EAAOmG,EAAOsnB,KAAMtnB,EAAOnG,OACzD,MACH,IAAK,OACF2qC,EAAattC,KAAK8tC,UAAUnrC,EAAOmG,EAAOsnB,KAAMtnB,EAAOnG,OACvD,MACH,IAAK,UACF2qC,EAAattC,KAAK+tC,aAAaprC,EAAOmG,EAAOsnB,KAAMtnB,EAAOnG,OAC1D,MACH,IAAK,OACF2qC,EAAattC,KAAKguC,UAAUrrC,EAAOmG,EAAOsnB,KAAMtnB,EAAOnG,OACvD,MACH,IAAK,eACL,IAAK,gBACF2qC,EAAattC,KAAKiuC,kBACfxf,EACA4Y,EACAv+B,EAAOsnB,KACPtnB,EAAOnG,OAEV,MACH,IAAK,cACF2qC,EAAattC,KAAKkuC,gBACfzf,EACA3lB,EAAOsnB,KACPtnB,EAAOnG,OAMbmL,EADoB,QAAnB8+B,EAAU3iB,KACFnc,GAAUw/B,EAEVx/B,GAAUw/B,CACtB,IAGIx/B,CACV,CAEA6/B,UAAUhrC,EAAOytB,EAAM+d,GACpB,IAAIrgC,GAAS,EAEbnL,EAAQA,EAAMkjC,OAAOxtB,cACrB1V,EAAQ3C,KAAKwB,OAAOurC,eAAepqC,GAKnC,MAAMyrC,GAHND,EAAeA,EAAatI,OAAOxtB,cAAcnF,QAAQ,OAAQ,MAG/BwV,MAAM,KAExC,OAAQ0H,GACL,IAAK,WACFge,EAAanqC,SAASiS,IACL,GAAVpI,IAEDA,EAASnL,EAAM0K,QAAQ6I,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFpI,GAAS,EACTsgC,EAAanqC,SAASiS,IACL,GAAVpI,IAEDA,EAASnL,EAAM0K,QAAQ6I,GAAO,EAAC,IAErC,MACH,IAAK,SACFk4B,EAAanqC,SAASiS,IACL,GAAVpI,IAEDA,EAASnL,GAASuT,EAAG,IAE3B,MACH,IAAK,YACFpI,GAAS,EACTsgC,EAAanqC,SAASiS,IACL,GAAVpI,IAEDA,EAASnL,GAASuT,EAAG,IAE3B,MACH,IAAK,WACFpI,EAAkB,IAATnL,GAAwB,MAATA,EACxB,MACH,IAAK,eACFmL,EAAkB,IAATnL,GAAwB,MAATA,EACxB,MACH,QACGmL,EAAS9N,KAAKquC,gBAAgB1rC,EAAOytB,EAAM+d,GAIjD,OAAOrgC,CACV,CAEA8/B,UAAUjrC,EAAOytB,EAAM+d,GACpB,IAAIrgC,GAAS,EAOb,OALMnL,aAAiB8d,OAAO9d,EAAQ,IAAI8d,KAAK9d,IAEzCwrC,aAAwB1tB,OAC3B0tB,EAAe,IAAI1tB,KAAK0tB,IAEnB/d,GACL,IAAK,OACFtiB,EAASnL,EAAQwrC,EACjB,MACH,IAAK,UACFrgC,EAASnL,EAAQwrC,EACjB,MACH,IAAK,gBACFrgC,EAASnL,GAASwrC,EAClB,MACH,IAAK,mBACFrgC,EAASnL,GAASwrC,EAClB,MACH,QACGrgC,EAAS9N,KAAKquC,gBAAgB1rC,EAAOytB,EAAM+d,GAIjD,OAAOrgC,CACV,CAEA+/B,YAAYlrC,EAAOytB,EAAM+d,GACtB,IAAIrgC,GAAS,EAKb,OAHAnL,EAAQ2rC,OAAO3rC,GACfwrC,EAAeG,OAAOH,GAEd/d,GACL,IAAK,QACL,IAAK,SACFtiB,EAASnL,GAASwrC,EAClB,MACH,IAAK,YACFrgC,EAASnL,GAASwrC,EAClB,MACH,IAAK,OACFrgC,EAASnL,EAAQwrC,EACjB,MACH,IAAK,UACFrgC,EAASnL,EAAQwrC,EACjB,MACH,IAAK,gBACFrgC,EAASnL,GAASwrC,EAClB,MACH,IAAK,mBACFrgC,EAASnL,GAASwrC,EAClB,MACH,QACGrgC,EAAS9N,KAAKquC,gBAAgB1rC,EAAOytB,EAAM+d,GAIjD,OAAOrgC,CACV,CAEAggC,UAAUnrC,EAAOytB,EAAM+d,GACpB,IAAIrgC,GAAS,EAMb,OAFKX,MAAMC,QAAQ+gC,KAAeA,EAAe,CAACA,IAE1C/d,GACL,IAAK,SACEztB,IAAOmL,EAASqgC,EAAa9gC,QAAQ1K,IAAU,GACnD,MACH,IAAK,YACSmL,GAAPnL,GAAgBwrC,EAAa9gC,QAAQ1K,GAAS,EAElD,MACH,QACGmL,EAAS9N,KAAKquC,gBAAgB1rC,EAAOytB,EAAM+d,GAIjD,OAAOrgC,CACV,CAEAigC,aAAaprC,EAAOytB,EAAM+d,GACvB,IAAIrgC,GAAS,EAWb,OAPMA,EADE,WADAsiB,EAEOztB,GAASwrC,EAGTnuC,KAAKquC,gBAAgB1rC,EAAOytB,EAAM+d,GAI1CrgC,CACV,CAEAkgC,UAAUrrC,EAAOytB,EAAM+d,GACpB,IAAKxrC,EAAO,OAAO,EACnB,IAAImL,GAAS,EAIb,OAAQsiB,GACL,IAAK,kBACFtiB,EAASnL,GAAS3C,KAAK8S,QAAQlC,SAC/B,MACH,IAAK,sBACF9C,EAASnL,GAAS3C,KAAK8S,QAAQlC,SAC/B,MACH,IAAK,uBACGzD,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,EACGnL,EAAMmG,QAAQwK,IAAOA,EAAE1C,UAAY0C,IAAMtT,KAAK8S,QAAQlC,WAClDzK,OAAS,EAChB,MACH,IAAK,2BACGgH,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,EACGnL,EAAMmG,QAAQwK,IAAOA,EAAE1C,UAAY0C,IAAMtT,KAAK8S,QAAQlC,WAClDzK,OAAS,EAChB,MACH,IAAK,SACF2H,EAASnL,EAAM0K,QAAQ8gC,IAAiB,EACxC,MACH,IAAK,YACFrgC,EAASnL,EAAM0K,QAAQ8gC,GAAgB,EACvC,MACH,QACGrgC,EAAS9N,KAAKquC,gBAAgB1rC,EAAOytB,EAAM+d,GAIjD,OAAOrgC,CACV,CAEAugC,gBAAgB5f,EAAS2B,EAAM+d,GAC5B,IAAIrgC,GAAS,EAEb,IAAKqgC,EAAc,OAAOrgC,EAG1B,MAAMygC,EAAUJ,EAAazlB,MAAM,KAAK,GACrChe,EAAUyjC,EAAazlB,MAAM,KAAK,GAG/BgB,EAAQ1pB,KAAK+B,GAAGqmB,SAASC,GAAMA,EAAEznB,IAAM2tC,IAAS,GACtD,IAAK7kB,EAAO,OAAO5b,EAInB,IADc4b,EAAM3iB,QAAQC,GAAMA,EAAEpG,IAAM8J,IAAS,GACvC,OAAOoD,EAEnB,IAAI0gC,EAAU,4BACPt7B,QAAQ,WAAYlT,KAAKH,QACzBqT,QAAQ,OAAQwW,EAAM9oB,IAC1B6tC,EAAqB,IAAIzuC,KAAKL,YAAY6uC,EAASxuC,KAAK+B,IAK3D,OAJA0sC,EAAmB37B,QAAU9S,KAAK8S,QAClC27B,EAAmBzZ,WAAWtL,EAAM3iB,UACpC0nC,EAAmB5pC,SAAS6kB,EAAMqb,2BAE1B3U,GACL,IAAK,iBACFtiB,EAAS2gC,EAAmBlpC,QAAQkpB,GACpC,MACH,IAAK,qBACF3gB,GAAU2gC,EAAmBlpC,QAAQkpB,GAI3C,OAAO3gB,CACV,CAEA4gC,aAAajgB,EAAS2B,EAAM+d,GACzB,IAAIrgC,GAAS,EAEb,IAAKqgC,IAAiBnuC,KAAK+B,GAAI,OAAO+L,EAGtC,IAAI4b,EAAQ1pB,KAAK+B,GAAGqmB,SAASC,GAAMA,EAAEznB,IAAMutC,IAAc,GACzD,IAAKzkB,EAAO,OAAO5b,EAEnB,IAAI0gC,EAAU,sBACPt7B,QAAQ,WAAYlT,KAAKH,QACzBqT,QAAQ,OAAQwW,EAAM9oB,IAC1B+tC,EAAgB,IAAI3uC,KAAKL,YAAY6uC,EAASxuC,KAAK+B,IAKtD,OAJA4sC,EAAc77B,QAAU9S,KAAK8S,QAC7B67B,EAAc3Z,WAAWtL,EAAM3iB,UAC/B4nC,EAAc9pC,SAAS6kB,EAAMqb,2BAErB3U,GACL,IAAK,WACFtiB,EAAS6gC,EAAcppC,QAAQkpB,GAC/B,MACH,IAAK,eACF3gB,GAAU6gC,EAAcppC,QAAQkpB,GAItC,OAAO3gB,CACV,CAEA8gC,oBAAoBjsC,EAAOytB,EAAM+d,GAC9B,IAAIrgC,GAAS,EAEb,IAAKqgC,EAAc,OAAOrgC,EAE1B,IAAIuf,EAAKrtB,KAAK+B,GAAGmkB,iBAAiB8K,GAAMA,EAAEpwB,IAAMutC,IAAc,GAE9D,OAAQ/d,GACL,IAAK,qBACF,IAAK/C,EAAI,OAAO,EAEhBvf,EAASuf,EAAGkH,SAASvD,GAAMA,EAAEpwB,IAAM+B,EAAM/B,KAAIuF,OAAS,EACtD,MACH,IAAK,yBACF,IAAKknB,EAAI,OAAO,EAEhBvf,EAASuf,EAAGkH,SAASvD,GAAMA,EAAEpwB,IAAM+B,EAAM/B,KAAIuF,OAAS,EAI5D,OAAO2H,CACV,CAEAmgC,kBAAkBxf,EAAS7oB,EAAOwqB,EAAM+d,GACrC,IAAIhd,EAAevrB,EAAMurB,eAErBqc,EAAe,GAEnB,GAAI/e,EACD,GAAIA,EAAQ0C,GACTqc,IACI5nC,EAAMyB,WACFonB,EAAQ0C,GAAcvrB,EAAMyB,WAAWP,YACvC,QACJlB,EAAM0B,YACFmnB,EAAQ0C,GAAcvrB,EAAM0B,YAAYR,YACxC,OACL2nB,EAAQ0C,GAAcvwB,IACtB6tB,EAAQ0C,IAEPvc,WACAyD,kBACA,CACJ,IAAIo1B,EAAWd,EAAYle,EAAS7oB,GACpB,MAAZ6nC,IACDD,EAAeC,EAErB,CAGH,IAAIoB,GAAyBV,GAAgB,IAAI91B,cAEjD,OAAQ+X,GACL,IAAK,WACF,OAAOod,EAAa54B,WAAWvH,QAAQwhC,IAA0B,EACpE,IAAK,eACF,OAAkE,GAA3DrB,EAAa54B,WAAWvH,QAAQwhC,GAC1C,IAAK,SACF,OAAOrB,GAAgBqB,EAC1B,IAAK,YACF,OAAOrB,GAAgBqB,EAC1B,IAAK,WACL,IAAK,eACF,OAAO7uC,KAAK0uC,aAAajgB,EAAQ0C,GAAef,EAAM+d,GACzD,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAOnuC,KAAKguC,UAAUR,EAAcpd,EAAM+d,GAC7C,IAAK,WACF,OAC4B,MAAzB1f,EAAQ0C,IACR1C,EAAQ0C,GAAchrB,OAAS,GACN,IAAzBsoB,EAAQ0C,GAEd,IAAK,eACF,OAC4B,MAAzB1C,EAAQ0C,KACNhkB,MAAMC,QAAQqhB,EAAQ0C,KACrB1C,EAAQ0C,GAAchrB,OAAS,GACN,IAAzBsoB,EAAQ0C,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAOnxB,KAAK4uC,oBAAoBpB,EAAcpd,EAAM+d,GAE7D,CAEAD,gBAAgBzf,EAAS2B,EAAM+d,GAC5B,IACIzkB,EAAQ,KACRolB,EAAkB,KAClB5e,EAAQ,KACR6e,EAAa,KAEjB,OAAQ3e,GAEL,IAAK,WACL,IAAK,eACF,QAAKpwB,KAAKgvC,UAGVtlB,EAAQ1pB,KAAK+B,GAAGqmB,SAASC,GAAMA,EAAEznB,IAAMutC,IAAc,KAEhDzkB,IAELolB,EAAkBplB,EAAMlD,SAASL,GACvBA,EAAEvlB,IAAMZ,KAAKgvC,QAAQpuC,KAG3BkuC,EAAgB3oC,OAAS,GAK1BqC,QAAQ+G,MACL,iFAGI,IAIV2gB,EAAQxG,EAAMyG,YAAYnwB,KAAKgvC,QAAQpuC,IAGvCmuC,EAAa,CAAC,EAEd16B,OAAOC,KAAKma,GAASxqB,SAASI,IAC3B0qC,EAAW,GAAG7e,KAAS7rB,KAASoqB,EAAQpqB,EAAI,IAIxCrE,KAAK0uC,aAAaK,EAAY3e,EAAM+d,MAG9C,IAAK,qBACL,IAAK,yBAEF,OAAOnuC,KAAK4uC,oBAAoBngB,EAAS2B,EAAM+d,GAExD,CAEAc,kBAAkBC,EAAgB,IAC3BA,IAAkB/hC,MAAMC,QAAQ8hC,KACjCA,EAAgB,CAACA,IAEpBlvC,KAAKmvC,eAAiBD,EAEtBlvC,KAAKovC,QACR,CASApa,WAAWjuB,EAAS,GAAI9B,EAAS,MAS9B,GARAjF,KAAK8sC,QAAU/lC,EAAO+B,QAClB9B,GAAMA,GAAKA,EAAEqoC,mBAAqBroC,EAAEqoC,sBAExCrvC,KAAK6sC,aAAe7sC,KAAK8sC,QACpB9sC,KAAK8sC,QAAQhkC,QAAQ9B,GAAMA,GAAKA,EAAEq8B,cAAyB,QAATr8B,EAAE3C,MACpD,GAGDY,EAAQ,CACTjF,KAAKgvC,QAAU/pC,EAGf,IAAIqqC,EAAgB,CACjB1uC,GAAI,cACJQ,MAAO6D,EAAO7D,MACdiD,IAAK,QAMJY,EAAOm4B,WACRkS,EAAcpf,MAAQ,eAGzBlwB,KAAK8sC,QAAQvZ,QAAQ+b,EACxB,aACUtvC,KAAKgvC,OAElB,CAEAO,aA+MG,OAjLcvvC,KAAK8sC,SAAW,IAAI3+B,KAAKnH,IACpC,IAAI5F,EAAQ4F,EAAE5F,MACVpB,KAAKqM,UAAUmjC,gBAAkBxoC,EAAE/B,QAAU+B,EAAE/B,OAAO7D,QACvDA,EAAQ,GAAG4F,EAAE/B,OAAO7D,SAAS4F,EAAE5F,SAElC,IAAIQ,EAAO,OACP6tC,EAAa,GACbC,EAAmB,GACnBC,GAAgB,EAEpB,GAAK3vC,KAAKqM,UAAUujC,qBA2FjB,OAAQ5oC,EAAE3C,KACP,IAAK,gBACL,IAAK,OACFsrC,GAAgB,OA7FtB,OAAQ3oC,EAAE3C,KACP,IAAK,UACForC,EAAaA,EAAWznB,OACrBhoB,KAAK6vC,wBAAwB7oC,IAEhC0oC,EAAmB,CAAC,WAEpB,MAEH,IAAK,gBACFD,EAAazvC,KAAK8vC,8BAA8B9oC,GAI7CA,EAAEZ,SAASgB,aAEc,OAAvBJ,EAAEZ,SAASa,UACgB,QAA1BD,EAAEZ,SAASc,aAEa,OAAvBF,EAAEZ,SAASa,UACiB,OAA1BD,EAAEZ,SAASc,aACXF,EAAEZ,SAASM,YAIjB+oC,EAFsBzvC,KAAK+vC,uBAAuB/oC,GAEvBghB,OAAOynB,IAGrCE,GAAgB,EAChBD,EAAmB,CAAC,iBAEpB,MAEH,IAAK,OACL,IAAK,WACF9tC,EAAO,OACP6tC,EAAaA,EAAWznB,OAAOhoB,KAAKgwC,qBAAqBhpC,IACzD0oC,EAAmB,CAAC,OAAQ,YAE5B,MAEH,IAAK,YACL,IAAK,UACL,IAAK,SACF9tC,EAAO,SACP6tC,EAAaA,EAAWznB,OACrBhoB,KAAKiwC,uBAAuBjpC,IAE/B0oC,EAAmB,CAAC,YAAa,UAAW,UAE5C,MAEH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACFD,EAAaA,EAAWznB,OACrBhoB,KAAK+vC,uBAAuB/oC,IAE/B0oC,EAAmB,CAChB,SACA,WACA,QACA,aAGH,MAEH,IAAK,OACFD,EAAaA,EAAWznB,OAAOhoB,KAAKkwC,qBAAqBlpC,IAEzD,MAEH,IAAK,OACFyoC,EAAaA,EAAWznB,OAAOhoB,KAAKmwC,qBAAqBnpC,IACzD0oC,EAAmB,CAAC,QAEpB,MAEH,IAAK,OACFD,EAAaA,EAAWznB,OACrBhoB,KAAKowC,2BAA2BppC,IAEnC2oC,GAAgB,EAuDzB,OAxCAF,EAAaA,EAAWznB,OACrBhoB,KAAKqwC,sBAAsBrpC,EAAG2oC,IAG7B3vC,KAAKqM,UAAUikC,eAChBb,EAAaA,EAAWznB,OAAOhoB,KAAKuwC,2BAA2BvpC,MAI9DhH,KAAKmvC,gBAAkB,IAAIrmC,QAAQ0nC,IACjC,IAAKA,EAAc,OAAO,EAE1B,GAAIA,EAAa5qC,MACd,OAAO8pC,EAAiBe,SAASD,EAAa5qC,MAAMvB,KAChD,GAAImsC,EAAansC,IAAK,CAE1B,IAAIqsC,EAAiBF,EAAansC,IAAIqkB,MAAM,KAAKioB,MACjD,OAAOD,GAAkB1pC,EAAEpG,IAAM8vC,GAAkB1pC,EAAE3C,GACxD,KACA8B,OAAS,IAGZspC,EAAaA,EAAWznB,OAAOhoB,KAAK4wC,wBAAwB5pC,KAG/DyoC,EAAaA,EAAWznB,OAAOhoB,KAAK6wC,uBAAuB7pC,IAepD,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOvB,EACPQ,KAAMA,EACN6tC,WAAYA,EAEd,GAuBP,CAEAO,qBAAqBpqC,GAClB,IAAIkrC,EAAiB,CAClBC,KAAM/wC,KAAKwS,OAAOrS,UAAU6wC,gBAC5BC,QAASjxC,KAAKwS,OAAOrS,UAAU+wC,eAC/BC,cAAenxC,KAAKwS,OAAOrS,UAAUixC,oBACrCC,iBAAkBrxC,KAAKwS,OAAOrS,UAAUmxC,mBACxCC,aAAcvxC,KAAKwS,OAAOrS,UAAUqxC,uBACpCC,gBAAiBzxC,KAAKwS,OAAOrS,UAAUuxC,sBACvCC,sBACG3xC,KAAKwS,OAAOrS,UAAUyxC,2BACzBC,yBACG7xC,KAAKwS,OAAOrS,UAAU2xC,0BACzBC,UAAW/xC,KAAKwS,OAAOrS,UAAU6xC,oBACjCC,UAAWjyC,KAAKwS,OAAOrS,UAAU+xC,qBAGhCpkC,EAAS,GAEb,IAAK,IAAIqkC,KAAWrB,EACjBhjC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAOmuC,EAAeqB,GACtBC,MAAO,aACPC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAK4tC,UAAUhgC,EAAGukC,EAAStkC,KAIpD,OAAOC,CACV,CAEAiiC,uBAAuBnqC,GACpB,IAAI0sC,EAAmB,CACpBC,SAAU,CACPH,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUqyC,mBAEhCC,aAAc,CACXL,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUuyC,sBAEhCC,OAAQ,CACLP,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUyyC,aAEhCC,UAAW,CACRT,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU2yC,gBAEhCC,SAAU,CACPX,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU6yC,SAEhCC,aAAc,CACXb,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU+yC,aAI/BplC,EAAS,GAEb,IAAK,IAAIqkC,KAAWG,EACjBxkC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAO2vC,EAAiBH,GAAS/wC,MACjCgxC,MAAOE,EAAiBH,GAASC,MACjCC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAK2tC,UAAU//B,EAAGukC,EAAStkC,KAIpD,OAAOC,CACV,CAEAmiC,uBAAuBrqC,GACpB,IAAIutC,EAAmB,CACpBR,OAAQ3yC,KAAKwS,OAAOrS,UAAUizC,eAC9BP,UAAW7yC,KAAKwS,OAAOrS,UAAUkzC,kBACjCtC,KAAM/wC,KAAKwS,OAAOrS,UAAUmzC,kBAC5BrC,QAASjxC,KAAKwS,OAAOrS,UAAUozC,kBAC/BpC,cAAenxC,KAAKwS,OAAOrS,UAAUqzC,yBACrCnC,iBAAkBrxC,KAAKwS,OAAOrS,UAAUszC,0BAGvC3lC,EAAS,GAEb,IAAK,IAAIqkC,KAAWgB,EACjBrlC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAOwwC,EAAiBhB,GACxBC,MAAO,OACPC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAK6tC,YAAYjgC,EAAGukC,EAAStkC,KAItD,OAAOC,CACV,CAEAoiC,qBAAqBtqC,GAClB,IAAI8tC,EAAiB,CAClBf,OAAQ3yC,KAAKwS,OAAOrS,UAAUwzC,mBAC9Bd,UAAW7yC,KAAKwS,OAAOrS,UAAUyzC,uBAGhC9lC,EAAS,GAEb,IAAK,IAAIqkC,KAAWuB,EACjB5lC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAO+wC,EAAevB,GACtBC,MAAO,OACPC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAK8tC,UAAUlgC,EAAGukC,EAAStkC,KAIpD,OAAOC,CACV,CAEA+hC,wBAAwBjqC,GACrB,IAAIiuC,EAAoB,CACrBlB,OAAQ3yC,KAAKwS,OAAOrS,UAAUwzC,oBAG7B7lC,EAAS,GAEb,IAAK,IAAIqkC,KAAW0B,EACjB/lC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAOkxC,EAAkB1B,GACzBC,MAAO,UACPC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAK+tC,aAAangC,EAAGukC,EAAStkC,KAIvD,OAAOC,CACV,CAEAqiC,qBAAqBvqC,GAClB,IAAIkuC,EAAiB,CAClBC,gBAAiB,CACd3B,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU6zC,wBAEhCC,oBAAqB,CAClB7B,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU+zC,2BAEhCC,qBAAsB,CACnB/B,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUi0C,8BAEhCC,yBAA0B,CACvBjC,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUm0C,iCAEhC3B,OAAQ,CACLP,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUwzC,oBAEhCd,UAAW,CACRT,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUyzC,wBAI/B9lC,EAAS,GAEb,IAAK,IAAIqkC,KAAW2B,EACjBhmC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAOmxC,EAAe3B,GAAS/wC,MAC/BgxC,MAAO0B,EAAe3B,GAASC,MAC/BC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAKguC,UAAUpgC,EAAGukC,EAAStkC,KAIpD,OAAOC,CACV,CAEAgiC,8BAA8BlqC,GAC3B,MAAM2uC,EAAoB,CACvBC,aAAc,CACXpC,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUs0C,WAC7BpC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAKguC,UAAUpgC,EAAG,eAAgBC,IAExD6mC,iBAAkB,CACftC,MAAO,OACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUw0C,cAC7BtC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAKguC,UAAUpgC,EAAG,mBAAoBC,IAE5D+mC,mBAAoB,CACjBxC,MAAO,iBACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU00C,iBAC7BxC,QAAS,CAACzkC,EAAGC,IACV7N,KAAK4uC,oBAAoBhhC,EAAG,qBAAsBC,IAExDinC,uBAAwB,CACrB1C,MAAO,iBACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU40C,oBAC7B1C,QAAS,CAACzkC,EAAGC,IACV7N,KAAK4uC,oBAAoBhhC,EAAG,yBAA0BC,KASzDC,EAAS,GAEf,IAAK,IAAIqkC,KAAWoC,EACjBzmC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAO4xC,EAAkBpC,GAAS/wC,MAClCgxC,MAAOmC,EAAkBpC,GAASC,MAClCC,QAASkC,EAAkBpC,GAASE,UAI1C,OAAOvkC,CACV,CAEAuiC,sBAAsBzqC,EAAO+pC,GAAgB,GAC1C,MAAMqF,EAAkBrF,EACnB,CACGsF,eAAgB,CACb7zC,MAAOpB,KAAKwS,OAAOrS,UAAU+0C,aAC7B9C,MAAO,cAEV+C,mBAAoB,CACjB/zC,MAAOpB,KAAKwS,OAAOrS,UAAUi1C,gBAC7BhD,MAAO,eAGb,CACGiD,SAAU,CACPj0C,MAAOpB,KAAKwS,OAAOrS,UAAUm1C,QAC7BlD,MAAO,SAEVmD,aAAc,CACXn0C,MAAOpB,KAAKwS,OAAOrS,UAAUq1C,WAC7BpD,MAAO,UAIZtkC,EAAS,GAEf,IAAK,MAAMqkC,KAAW6C,EACnBlnC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAOqyC,EAAgB7C,GAAS/wC,MAChCgxC,MAAO4C,EAAgB7C,GAASC,MAChCC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAKquC,gBAAgBzgC,EAAGukC,EAAStkC,KAI1D,OAAOC,CACV,CAEAsiC,2BAA2BxqC,GACxB,IAAI6vC,EAAuB,CACxBb,mBAAoB,CACjBxC,MAAO,iBACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU00C,kBAEhCC,uBAAwB,CACrB1C,MAAO,iBACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU40C,sBAI/BjnC,EAAS,GAEb,IAAK,IAAIqkC,KAAWsD,EACjB3nC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAO8yC,EAAqBtD,GAAS/wC,MACrCgxC,MAAOqD,EAAqBtD,GAASC,MACrCC,QAAS,CAACzkC,EAAGC,IAAM7N,KAAKkuC,gBAAgBtgC,EAAGukC,EAAStkC,KAI1D,OAAOC,CACV,CAEAyiC,2BAA2B3qC,GACxB,IAAI8vC,EAAuB,CACxBC,cAAe31C,KAAKwS,OAAOrS,UAAUy1C,YACrCC,kBAAmB71C,KAAKwS,OAAOrS,UAAU21C,gBAGxChoC,EAAS,GAEb,IAAK,IAAIqkC,KAAWuD,EACjB5nC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAO+yC,EAAqBvD,GAC5BC,MAAO,aACPC,QAAS,CAACzkC,EAAGC,KAAM,IAIzB,OAAOC,CACV,CAEA8iC,wBAAwBhrC,GACrB,IAAImwC,EAAoB,CACrBC,eAAgB,CACb5D,MAAO,UACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAU81C,mBAC7B5D,QAAS,CAACzkC,EAAGC,IAAMD,GAAKC,GAE3BqoC,kBAAmB,CAChB9D,MAAO,UACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUg2C,+BAC7B9D,QAAS,CAACzkC,EAAGC,IAAMD,GAAKC,GAE3BuoC,WAAY,CACThE,MAAO,UACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUk2C,wBAC7BhE,QAAS,CAACzkC,EAAGC,IAAMD,EAAEP,QAAQQ,IAAM,GAEtCyoC,eAAgB,CACblE,MAAO,UACPhxC,MAAOpB,KAAKwS,OAAOrS,UAAUo2C,2BAC7BlE,QAAS,CAACzkC,EAAGC,KAAuB,GAAjBD,EAAEP,QAAQQ,KAI/BC,EAAS,GAEb,IAAK,IAAIqkC,KAAW4D,EACjBjoC,EAAOxJ,KAAK,CACT1D,GAAIuxC,EACJxvC,MAAOozC,EAAkB5D,GAAS/wC,MAClCgxC,MAAO2D,EAAkB5D,GAASC,MAClCC,QAAS0D,EAAkB5D,GAASE,UAI1C,OAAOvkC,CACV,CAEA+iC,uBAAuBjrC,GAGpB,QAFsB5F,KAAKw2C,gBAAkB,CAAC,GAChB5wC,EAAMhF,IAAMgF,IAAU,CAAC,GACtC6pC,YAAc,EAChC,CAEAgH,YAAYruB,EAAU,IACnBpoB,KAAK02C,SAAWtuB,CACnB,CAWAA,QAAQtf,EAAS,MAAM,IAGpB,OAFkB9I,KAAK02C,UAAY12C,KAAK+B,IAAIqmB,aAAe,IAE1Ctf,QAAQuf,GAAMvf,EAAOuf,IACzC,CAEAxjB,SAASuB,GACNpG,KAAK4sC,UAAYxmC,GAAY,CAAC,EAE9BpG,KAAK4sC,UAAUvrB,MAAQrhB,KAAK4sC,UAAUvrB,OAAS,EAClD,CAiBApV,WAMG,YAHkC,IAAvBjM,KAAK4sC,UAAU3iB,OACvBjqB,KAAK4sC,UAAU3iB,KAAO,OAElBjqB,KAAK4sC,SACf,CAEA+J,aACG,IAAI7oC,GAAS,EAEb,MAAM8oC,EAAe,CAClB,kBACA,sBACA,uBACA,2BACA,eACA,oBAGGC,EAAkB,CAACx1B,EAAQ,MAChB,GAAVvT,GAEJuT,EAAMpd,SAAS2L,IACRA,GAAGyR,OAASlU,MAAMC,QAAQwC,GAAGyR,OAC9Bw1B,EAAgBjnC,GAAGyR,OAEnBvT,EACGA,GACU,MAAV8B,GAAGvL,KACO,IAAVuL,GAAGvL,KACQ,MAAXuL,GAAGwgB,MACQ,IAAXxgB,GAAGwgB,OACW,MAAZxgB,GAAGjN,OAA6B,IAAZiN,GAAGjN,OACtBi0C,EAAavpC,QAAQuC,GAAGwgB,OAAS,EAC1C,GACD,EAKL,OAFAymB,EAAgB72C,KAAK4sC,WAAWvrB,OAEzBvT,CACV,oBCtyCH,MAAMvO,EAAc,EAAQ,MAK5B,SAASotC,EAAYle,EAAS7oB,EAAOkxC,GAAiB,GACnD,IAAKlxC,EAAO,OAAO,KACnB,IAAKA,EAAMkB,WAAY,OAAO,KAE1B2nB,GAAWA,EAAQ,KAAIA,EAAUA,EAAQ,IAE7C,IAAItjB,EAAWvF,EAAMhF,GACjBkG,EAAalB,EAAMkB,WAEnBnE,EAAQ,KACZ,GAAImE,EAAWuG,QAAQ,MAAQ,EAAG,CAC/B,IAAImrB,EAAU1xB,EAAW4hB,MAAM,KAAK,GACpC/lB,EAAQ8rB,EAAQ3nB,IAAe2nB,EAAQ+J,IAAY/J,EAAQtjB,EAC9D,MACGxI,EAAQ8rB,EAAQ3nB,IAAe2nB,EAAQtjB,GAG1C,GAAIxI,EACD,OAAOA,EAKV,IAAK,IAAI4R,KAAKka,EAAS,CACpB,IAAIpqB,EAAMkQ,EAAEmU,MAAM,KAAK,IACnBrkB,GAAQA,GAAO8G,GAAY9G,GAAOyC,IACnCnE,EAAQ8rB,EAAQla,GAEtB,CAQA,OALI5R,GAASwK,MAAMC,QAAQzK,KACxBA,EAAQA,EAAMmG,QAAQwK,GAAW,MAALA,IACxBwjC,IAAgBn0C,EAAQA,EAAM,KAG9BA,CACV,CAEAlD,EAAOC,QAAU,cAA4BH,EAC1CI,YAAYC,EAAKC,EAAQkC,GAGtBjC,MAAMF,EAFNC,EAASA,GAAU,gBAEAkC,GAEnB/B,KAAK8S,QAAU,CAAElC,SAAU,MAC3B5Q,KAAKqM,UAAY,CAAC,EAClBrM,KAAK+2C,gBAAkB,CAAC,EAGxB/2C,KAAK6sC,aAAe,GACpB7sC,KAAK8sC,QAGL,IAAItrC,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACRnB,SAAU,QAkBb4J,SAAU,IACAjM,KAAK+2C,gBAGfhK,eAAgB,SAAU1+B,GACvB,IAAIP,EAAS,GACb,IACG,IAAIk/B,EAAMC,SAASC,cAAc,OACjCF,EAAIG,UAAY9+B,EAEhBP,EAASk/B,EAAII,aAAeJ,EAAIK,WAAa,EAGhD,CAFE,MAAOllC,GACN2F,GAAUO,GAAQ,IAAI6E,QAAQ,gBAAiB,GAClD,CAEA,OAAOpF,CACV,EAEA6/B,UAAW,SAAUlf,EAAS7oB,EAAOwqB,EAAM+d,GACxC,IAAIrgC,GAAS,EAETnL,EAAQgqC,EAAYle,EAAS7oB,GACpB,MAATjD,IAAeA,EAAQ,IAE3BA,EAAQA,EAAMiS,WAAWixB,OAAOxtB,cAChC1V,EAAQnB,EAAOurC,eAAepqC,GAS9B,IAAIyrC,GAPJD,EAAeA,EACXv5B,WACAixB,OACAxtB,cACAnF,QAAQ,OAAQ,MAGYwV,MAAM,KAEtC,OAAQ0H,GACL,IAAK,WACFge,EAAanqC,SAASiS,IACL,GAAVpI,IAEDA,EAASnL,EAAM0K,QAAQ6I,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFpI,GAAS,EACTsgC,EAAanqC,SAASiS,IACL,GAAVpI,IAEDA,EAASnL,EAAM0K,QAAQ6I,GAAO,EAAC,IAErC,MACH,IAAK,SACFk4B,EAAanqC,SAASiS,IACL,GAAVpI,IAEDA,EAASnL,GAASuT,EAAG,IAE3B,MACH,IAAK,YACFpI,GAAS,EACTsgC,EAAanqC,SAASiS,IACL,GAAVpI,IAEDA,EAASnL,GAASuT,EAAG,IAE3B,MACH,IAAK,WACFpI,EAAkB,MAATnL,GAA0B,IAATA,EAC1B,MACH,IAAK,eACFmL,EAAkB,MAATnL,GAA0B,IAATA,EAC1B,MACH,QACGmL,EAAStM,EAAOw1C,WAAWvoB,EAAS2B,EAAM+d,GAIhD,OAAOrgC,CACV,EAEA8/B,UAAW,SAAUnf,EAAS7oB,EAAOwqB,EAAM+d,GACxC,IAAIrgC,GAAS,EAETnL,EAAQgqC,EAAYle,EAAS7oB,GAMjC,OALMjD,aAAiB8d,OAAO9d,EAAQ,IAAI8d,KAAK9d,IAEzCwrC,aAAwB1tB,OAC3B0tB,EAAe,IAAI1tB,KAAK0tB,IAEnB/d,GACL,IAAK,SACFtiB,EAASnL,GAASwrC,EAClB,MACH,IAAK,YACFrgC,EAASnL,GAASwrC,EAClB,MACH,IAAK,OACFrgC,EAASnL,EAAQwrC,EACjB,MACH,IAAK,UACFrgC,EAASnL,EAAQwrC,EACjB,MACH,IAAK,gBACFrgC,EAASnL,GAASwrC,EAClB,MACH,IAAK,mBACFrgC,EAASnL,GAASwrC,EAClB,MACH,QACGrgC,EAAStM,EAAOw1C,WAAWvoB,EAAS2B,EAAM+d,GAIhD,OAAOrgC,CACV,EAEA+/B,YAAa,SAAUpf,EAAS7oB,EAAOwqB,EAAM+d,GAC1C,IAAIrgC,GAAS,EAETnL,EAAQgqC,EAAYle,EAAS7oB,GAIjC,OAHAjD,EAAQ2rC,OAAO3rC,GACfwrC,EAAeG,OAAOH,GAEd/d,GACL,IAAK,SACFtiB,EAASnL,GAASwrC,EAClB,MACH,IAAK,YACFrgC,EAASnL,GAASwrC,EAClB,MACH,IAAK,OACFrgC,EAASnL,EAAQwrC,EACjB,MACH,IAAK,UACFrgC,EAASnL,EAAQwrC,EACjB,MACH,IAAK,gBACFrgC,EAASnL,GAASwrC,EAClB,MACH,IAAK,mBACFrgC,EAASnL,GAASwrC,EAClB,MACH,QACGrgC,EAAStM,EAAOw1C,WAAWvoB,EAAS2B,EAAM+d,GAIhD,OAAOrgC,CACV,EAEAggC,UAAW,SAAUrf,EAAS7oB,EAAOwqB,EAAM+d,GACxC,IAAIrgC,GAAS,EAETnL,EAAQgqC,EAAYle,EAAS7oB,GAOjC,OANIjD,GAASA,EAAM0V,cAAa1V,EAAQA,EAAM0V,eAE9C81B,EAAeA,EAAa91B,cAEvBlL,MAAMC,QAAQ+gC,KAAeA,EAAe,CAACA,IAE1C/d,GACL,IAAK,SACEztB,IAAOmL,EAASqgC,EAAa9gC,QAAQ1K,IAAU,GACnD,MACH,IAAK,YACSmL,GAAPnL,GAAgBwrC,EAAa9gC,QAAQ1K,GAAS,EAElD,MACH,QACGmL,EAAStM,EAAOw1C,WAAWvoB,EAAS2B,EAAM+d,GAIhD,OAAOrgC,CACV,EAEAigC,aAAc,SAAUtf,EAAS7oB,EAAOwqB,EAAM+d,GAC3C,IAAIrgC,GAAS,EAETnL,EAAQgqC,EAAYle,EAAS7oB,GAKjC,OAFa,MAATjD,IAAeA,GAAQ,GAEnBytB,GACL,IAAK,SACFtiB,EAASnL,GAASwrC,EAClB,MACH,IAAK,YACFrgC,EAASnL,GAASwrC,EAClB,MACH,QACGrgC,EAAStM,EAAOw1C,WAAWvoB,EAAS2B,EAAM+d,GAIhD,OAAOrgC,CACV,EAEAkgC,UAAW,CAACvf,EAAS7oB,EAAOwqB,EAAM+d,KAC/B,IAAIrgC,GAAS,EAETnL,EAAQgqC,EAAYle,EAAS7oB,GAIjC,OAAQwqB,GACL,IAAK,kBACFtiB,EAASnL,GAAS3C,KAAK8S,QAAQlC,SAC/B,MACH,IAAK,sBACF9C,EAASnL,GAAS3C,KAAK8S,QAAQlC,SAC/B,MACH,IAAK,uBACF,IAAKjO,EAAO,CACTmL,GAAS,EACT,KACH,CACKX,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,GACInL,GAAS,IAAImG,QAAQwK,KACfA,IAEGA,EAAE1C,UAAY0C,EAAE1S,IAAM0S,EAAEjF,MAAQiF,IACjCtT,KAAK8S,QAAQlC,WAKnBzK,OAAS,EACf,MACH,IAAK,2BACF,IAAKxD,EAAO,CACTmL,GAAS,EACT,KACH,CACKX,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,EAUgB,IATZnL,GAAS,IAAImG,QAAQwK,KACfA,IAEGA,EAAE1C,UAAY0C,EAAE1S,IAAM0S,EAAEjF,MAAQiF,IACjCtT,KAAK8S,QAAQlC,WAKnBzK,OACN,MACH,IAAK,SACF2H,EAASnL,EAAM0K,QAAQ8gC,IAAiB,EACxC,MACH,IAAK,YACFrgC,EAASnL,EAAM0K,QAAQ8gC,GAAgB,EACvC,MACH,QACGrgC,EAAStM,EAAOw1C,WAAWvoB,EAAS2B,EAAM+d,GAIhD,OAAOrgC,CAAM,EAGhBkpC,WAAY,CAACvoB,EAAS2B,EAAM+d,KACzB,IAAIrgC,GAAS,EAEb,IAAK9N,KAAK+B,KAAOosC,EAAc,OAAOrgC,EAGtC,IAAIygC,EAAUJ,EAAazlB,MAAM,KAAK,GACnChe,EAAUyjC,EAAazlB,MAAM,KAAK,GAGjCgB,EAAQ1pB,KAAKooB,SAASC,GAAMA,EAAEznB,IAAM2tC,IAAS,GACjD,IAAK7kB,EAAO,OAAO5b,EAInB,IADY4b,EAAM3iB,QAAQC,GAAMA,EAAEpG,IAAM8J,IAAS,GACrC,OAAOoD,EAEnB,IAAI0gC,EAAU,4BACPt7B,QAAQ,WAAYrT,GACpBqT,QAAQ,OAAQwW,EAAM9oB,IAC1B6tC,EAAqB,IAAIzuC,KAAKL,YAAYK,KAAKJ,IAAK4uC,GAMvD,OALAC,EAAmB37B,QAAU9S,KAAK8S,QAElC27B,EAAmBzZ,WAAWtL,EAAM3iB,UACpC0nC,EAAmB5pC,SAAS6kB,EAAMqb,2BAE1B3U,GACL,IAAK,iBACFtiB,EAAS2gC,EAAmBlpC,QAAQkpB,GACpC,MACH,IAAK,qBACF3gB,GAAU2gC,EAAmBlpC,QAAQkpB,GAI3C,OAAO3gB,CAAM,EAGhB4gC,aAAc,CAACjgB,EAAS3nB,EAAYspB,EAAM+d,KACvC,IAAIrgC,GAAS,EAMb,GAJIhH,IACD2nB,EAAUA,EAAQ3nB,IAAe,CAAC,IAGhCqnC,IAAiBnuC,KAAK+B,GAAI,OAAO+L,EAGtC,IAAI4b,EAAQ1pB,KAAKooB,SAASC,GAAMA,EAAEznB,IAAMutC,IAAc,GACtD,IAAKzkB,EAAO,OAAO5b,EAEnB,IAAI0gC,EAAU,sBACPt7B,QAAQ,WAAYrT,GACpBqT,QAAQ,OAAQwW,EAAM9oB,IAC1B+tC,EAAgB,IAAI3uC,KAAKL,YAAYK,KAAKJ,IAAK4uC,GAMlD,OALAG,EAAc77B,QAAU9S,KAAK8S,QAE7B67B,EAAc3Z,WAAWtL,EAAM3iB,UAC/B4nC,EAAc9pC,SAAS6kB,EAAMqb,2BAErB3U,GACL,IAAK,WACFtiB,EAAS6gC,EAAcppC,QAAQkpB,GAC/B,MACH,IAAK,eACF3gB,GAAU6gC,EAAcppC,QAAQkpB,GAItC,OAAO3gB,CAAM,EAGhB8gC,oBAAqB,CAACngB,EAAS3nB,EAAYspB,EAAM+d,KAC9C,IAAIrgC,GAAS,EAEb,IAAKqgC,IAAiBnuC,KAAK+B,GAAI,OAAO+L,EAElChH,IACD2nB,EAAUA,EAAQ3nB,IAAe,CAAC,GAGrC,IAAIumB,EAAKrtB,KAAK+B,GAAGyqB,mBAAmB2hB,GAEpC,OAAQ/d,GACL,IAAK,qBACF,IAAK/C,EAAI,OAAO,EAEhBvf,EACGuf,EAAGkH,SACCvD,IAAOA,EAAEpwB,IAAMowB,EAAEnhB,QAAU4e,EAAQ7tB,IAAM6tB,EAAQ5e,QACnD1J,OAAS,EACd,MACH,IAAK,yBACF,IAAKknB,EAAI,OAAO,EAEhBvf,EACGuf,EAAGkH,SACCvD,IAAOA,EAAEpwB,IAAMowB,EAAEnhB,QAAU4e,EAAQ7tB,IAAM6tB,EAAQ5e,QACnD1J,OAAS,EAIpB,OAAO2H,CAAM,EAGhBmgC,kBAAmB,SAAUxf,EAAS7oB,EAAOwqB,EAAM+d,GAChD,IAAIhd,EAAevrB,EAAMurB,eAGrBqc,GAFa5nC,EAAMkB,WAEJ,IAEnB,GAAI2nB,EACD,GAAIA,EAAQ0C,GACTqc,KACI5nC,EAAMyB,YACFonB,EAAQ0C,GAAcvrB,EAAMyB,WAAWP,eAE3ClB,EAAM0B,aACFmnB,EAAQ0C,GAAcvrB,EAAM0B,YAAYR,aAE7C2nB,EAAQ0C,GAAcvwB,IACtB6tB,EAAQ0C,IAEPvc,WACAyD,kBACA,CACJ,IAAIo1B,EAAWd,EAAYle,EAAS7oB,GACpB,MAAZ6nC,IACDD,EAAeC,EAErB,CAGH,IAAIoB,GAAyBV,GAAgB,IAAI91B,cAEjD,OAAQ+X,GACL,IAAK,WACF,OACGod,EAAa54B,WAAWvH,QAAQwhC,IAA0B,EAEhE,IAAK,eACF,OAEI,GADDrB,EAAa54B,WAAWvH,QAAQwhC,GAGtC,IAAK,SACF,OAAOrB,GAAgBqB,EAC1B,IAAK,YACF,OAAOrB,GAAgBqB,EAC1B,IAAK,WACL,IAAK,eACF,OAAOrtC,EAAOktC,aACXjgB,EACA0C,EACAf,EACA+d,GAEN,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAO3sC,EAAOwsC,UAAUvf,EAAS7oB,EAAOwqB,EAAM+d,GACjD,IAAK,WACF,OAC4B,MAAzB1f,EAAQ0C,IACR1C,EAAQ0C,GAAchrB,OAAS,GACN,IAAzBsoB,EAAQ0C,GAEd,IAAK,eACF,OAC4B,MAAzB1C,EAAQ0C,KACNhkB,MAAMC,QAAQqhB,EAAQ0C,KACrB1C,EAAQ0C,GAAchrB,OAAS,GACN,IAAzBsoB,EAAQ0C,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAO3vB,EAAOotC,oBACXngB,EACA0C,EACAf,EACA+d,GAGZ,EAEAD,gBAAiB,CAACzf,EAAS2B,EAAM+d,KAG9B,OAAQ/d,GAEL,IAAK,WACL,IAAK,eACF,IAAKpwB,KAAK+B,KAAO/B,KAAKgvC,QAAS,OANxB,EASP,IAAItlB,EAAQ1pB,KAAKooB,SAASC,GAAMA,EAAEznB,IAAMutC,IAAc,GACtD,IAAKzkB,EAAO,OAVL,EAeP,GAHsBA,EAAMlD,SAASL,GAC3BA,EAAEvlB,IAAMZ,KAAKgvC,QAAQpuC,KAEXuF,OAAS,EAQ1B,OAHAqC,QAAQ+G,MACL,iFAEI,EAIV,IAAI2gB,EAAQxG,EAAMyG,YAAYnwB,KAAKgvC,QAAQpuC,IAGvCmuC,EAAa,CAAC,EAMlB,OALA16B,OAAOC,KAAKma,GAASxqB,SAASI,IAC3B0qC,EAAW,GAAG7e,KAAS7rB,KAASoqB,EAAQpqB,EAAI,IAIxC7C,EAAOktC,aACXK,EACA,KACA3e,EACA+d,GAKN,IAAK,qBACL,IAAK,yBAEF,OAAO3sC,EAAOotC,oBACXngB,EACA,KACA2B,EACA+d,GAGT,GAONnuC,KAAKiM,SAAWzK,EAAOyK,QAG1B,CAEA3I,KAAKnB,GACEA,EAAQqtC,iBACTxvC,KAAKqM,UAAUmjC,eAAiBrtC,EAAQqtC,eAE9C,CAQAjqC,QAAQkpB,GACL,IAAIsoB,EAAkB/2C,KAAK+2C,gBACvBv1C,EAASxB,KAAKwB,OAGlB,GACsB,MAAnBu1C,GACyB,MAAzBA,EAAgB11B,OACgB,GAAhC01B,EAAgB11B,MAAMlb,OAEtB,OAAO,EAEV,GAAe,MAAXsoB,EAAiB,OAAO,EAE5B,IAAI3gB,EAAkC,QAAzBipC,EAAgB9sB,KAiG7B,OA/FA8sB,EAAgB11B,MAAMpd,SAAS6E,IAC5B,GAAKA,EAAOzE,KAAQyE,EAAOsnB,KAA3B,CAEA,IAAIiX,EAAYrnC,KAAK8sC,QAAQhkC,QAAQ9B,GAAMA,EAAEpG,IAAMkI,EAAOzE,MAAK,GAC/D,GAAKgjC,EAAL,CAEA,IAAIiG,EAIAC,EAAgBlG,EAAUhjC,IAQ9B,YAP4B,IAAjBgjC,EAAUhjC,MACE,eAAhBgjC,EAAUzmC,IACXymC,EAAUhjC,IAAM,eAChBkpC,EAAgBlG,EAAUhjC,KACtBkpC,EAAgB,eAGlBA,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACFD,EAAa9rC,EAAOmsC,UACjBlf,EACA4Y,EACAv+B,EAAOsnB,KACPtnB,EAAOnG,OAEV,MACH,IAAK,OACL,IAAK,WACF2qC,EAAa9rC,EAAOosC,UACjBnf,EACA4Y,EACAv+B,EAAOsnB,KACPtnB,EAAOnG,OAEV,MACH,IAAK,SACF2qC,EAAa9rC,EAAOqsC,YACjBpf,EACA4Y,EACAv+B,EAAOsnB,KACPtnB,EAAOnG,OAEV,MACH,IAAK,OACF2qC,EAAa9rC,EAAOssC,UACjBrf,EACA4Y,EACAv+B,EAAOsnB,KACPtnB,EAAOnG,OAEV,MACH,IAAK,UACF2qC,EAAa9rC,EAAOusC,aACjBtf,EACA4Y,EACAv+B,EAAOsnB,KACPtnB,EAAOnG,OAEV,MACH,IAAK,OACF2qC,EAAa9rC,EAAOwsC,UACjBvf,EACA4Y,EACAv+B,EAAOsnB,KACPtnB,EAAOnG,OAEV,MACH,IAAK,eACL,IAAK,gBACF2qC,EAAa9rC,EAAOysC,kBACjBxf,EACA4Y,EACAv+B,EAAOsnB,KACPtnB,EAAOnG,OAEV,MACH,IAAK,cACF2qC,EAAa9rC,EAAO0sC,gBACjBzf,EACA3lB,EAAOsnB,KACPtnB,EAAOnG,OAMbmL,EAD0B,QAAzBipC,EAAgB9sB,KACRnc,GAAUw/B,EAEVx/B,GAAUw/B,CAvFA,CAHiB,CA2FvC,IAGIx/B,CACV,CAsBAknB,WAAWjuB,EAAS,GAAI9B,EAAS,MAS9B,GARAjF,KAAK8sC,QAAU/lC,EAAO+B,QAAQ9B,GAAMA,GAAKA,EAAEqoC,sBAG3CrvC,KAAK6sC,aAAe7sC,KAAK8sC,QACpB9sC,KAAK8sC,QAAQhkC,QAAQ9B,GAAMA,GAAKA,EAAEq8B,cAAyB,QAATr8B,EAAE3C,MACpD,GAGDY,EAAQ,CACTjF,KAAKgvC,QAAU/pC,EAEf,IAAIqqC,EAAgB,CACjB1uC,GAAI,cACJQ,MAAO6D,EAAO7D,OAIb6D,EAAOm4B,WACRkS,EAAcpf,MAAQ,eAGzBlwB,KAAK8sC,QAAQvZ,QAAQ+b,EACxB,aACUtvC,KAAKgvC,OAElB,CAEAyH,YAAYruB,EAAU,IACnBpoB,KAAK02C,SAAWtuB,CACnB,CAQAA,QAAQtf,EAAS,MAAM,IACpB,IAAIgF,EAAS,GAcb,OAZI9N,KAAK+B,KACN+L,EAASA,EAAOka,OAAOhoB,KAAK+B,GAAGqmB,QAAQtf,KAGtC9I,KAAK02C,WACN5oC,EAASA,EAAOka,QACZhoB,KAAK02C,UAAY,IAAI5tC,QAClBuf,GAAMvf,EAAOuf,IAAMva,EAAOhF,QAAQ8G,GAAMA,EAAEhP,IAAMynB,EAAEznB,KAAIuF,OAAS,MAKlE2H,CACV,CAEAjJ,SAASuB,GACNpG,KAAK+2C,gBAAkB3wC,GAAY,CAAC,EACpCpG,KAAK+2C,gBAAgB11B,MAAQrhB,KAAK+2C,gBAAgB11B,OAAS,EAC9D,oBC7xBH,MAAM41B,EAAU,EAAQ,OAExB,SAASl3C,EAAEsE,EAAK0O,GAEb,OAAOA,CACV,CAEA,MAAMmkC,EAA2B,CAC9B7yC,IAAK,YAGLo5B,YAAa,uBAIblyB,KAAM,MAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,aAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,UAAW,WAAY,YAAa,MAAO,YAO/DtS,EAAgB,CACnBtqB,OAAQ,GACR68B,UAAW,OACXC,cAAe,EACfC,YAAa,QAGhBn4C,EAAOC,QAAU,cAAmCu3C,EACjDt3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQiyC,EACzB,CAGA9rB,kBACG,OAAO8rB,CACV,CAEA9rB,uBACG,OAAO+Z,CACV,CAEA/Z,wBAAwB/c,GACrB,MAAMwpC,EAAgB73C,KAAK83C,gBAAgBhvC,QAAQsF,GACzCA,EAAKxN,IAAMyN,IAClB,GAEH,OAAOwpC,EAAgBA,EAAcE,KAAO,EAC/C,CAEA3sB,uBACG,MAAO,CACJ,CAAExqB,GAAI,OAAQ+B,MAAO5C,IAAWg4C,KAAM,IACtC,CAAEn3C,GAAI,QAAS+B,MAAO5C,IAAYg4C,KAAM,MACxC,CAAEn3C,GAAI,QAAS+B,MAAO5C,IAAYg4C,KAAM,KACxC,CAAEn3C,GAAI,QAAS+B,MAAO5C,IAAYg4C,KAAM,KACxC,CAAEn3C,GAAI,OAAQ+B,MAAO5C,IAAWg4C,KAAM,KACtC,CAAEn3C,GAAI,QAAS+B,MAAO5C,IAAYg4C,KAAM,KAE9C,CAEA3sB,uBAAuBvQ,EAAQ68B,EAAWC,EAAeK,GAMtD,OAJGn9B,EACA7a,KAAKi4C,iBAAiBP,IACrB,aAAeM,GAAe5kC,OAAOuS,SAASgyB,GAGrD,CAEA1xC,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASuxC,cAAgBhyB,SAAS3lB,KAAKoG,SAASuxC,cACxD,CAQAvS,aAAaz/B,UAEHA,EAAO3F,KAAK8G,WACtB,CAEA0Z,OAAOiO,GACJ,IAAKA,IAAUzuB,KAAK8G,YAAa,MAAO,GAExC,IAQG,OAPwB9G,KAAKL,YAAYu4C,gBACtCl4C,KAAKoG,SAASyU,OACd7a,KAAKoG,SAASsxC,UACd13C,KAAKoG,SAASuxC,cACdlpB,EAAQzuB,KAAK8G,YAMnB,CAFE,MAAOqB,GACN,MAAO,EACV,CACH,oBC/IH,MAAM8uC,EAAU,EAAQ,OAOlBkB,EAAyB,CAC5B9zC,IAAK,UAGLo5B,YAAa,sDAIblyB,KAAM,iBAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,WAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAKrBC,qBAAsB,CAAC,OAAQ,YAM5BtS,EAAgB,CACnBqH,QAAS,GAGZ/sC,EAAOC,QAAU,cAAiCu3C,EAC/Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQkzC,EACzB,CAGA/sB,kBACG,OAAO+sB,CACV,CAEA/sB,uBACG,OAAO+Z,CACV,CAYAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEY,MAAzB3F,KAAKoG,SAASomC,UACfxsC,KAAKoG,SAASomC,QAAU7mB,SAAS3lB,KAAKoG,SAASomC,SACrD,CAQApH,aAAaz/B,GACqB,MAA3BA,EAAO3F,KAAK8G,aAAgD,MAAzB9G,KAAKoG,SAASomC,UAClD7mC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAASomC,QAE9C,kECzGH,MAAMyK,QAAU,oBAAQ,OAExB,SAASl3C,EAAEsE,EAAK0O,GAEb,OAAOA,CACV,CAGA,SAASqlC,IAAIC,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAI73B,KAAK43B,GAC1B,IAAKC,EAAU,OAAO,EAEtB,MAEMC,GAFQ,IAAI93B,KAES63B,GADX,QAGhB,OAAIC,EAAY,EAAUhyC,KAAKiyC,MAAkB,GAAZD,GAAkB,GAE3ChyC,KAAKC,MAAM+xC,EAc1B,CAEA,SAASE,KAAKJ,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAI73B,KAAK43B,GAC1B,OAAKC,EAEEA,EAASI,cAFM,CAGzB,CAEA,SAASC,MAAMN,GAEZ,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAI73B,KAAK43B,GAC1B,OAAKC,EAGEA,EAASM,WAHM,CAIzB,CAEA,SAASC,IAAIR,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAI73B,KAAK43B,GAC1B,OAAKC,EAEEA,EAASQ,UAFM,CAGzB,CAEA,SAASC,KAAKV,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAI73B,KAAK43B,GAC1B,OAAKC,EAME/xC,KAAKiyC,MAAMF,EAASU,UAHZ,OAHO,CAOzB,CAEA,SAASC,KAAKZ,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAI73B,KAAK43B,GAC1B,OAAKC,EAME/xC,KAAKiyC,MAAMF,EAASU,UAHX,MAHM,CAOzB,CAEA,SAASE,OAAOb,GAEb,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAI73B,KAAK43B,GAC1B,OAAKC,EAME/xC,KAAKiyC,MAAMF,EAASU,UAHT,KAHI,CAOzB,CAEA,SAASG,eAAeC,GACrB,MAAMC,EAAQD,EAAO,GACfE,EAAS/yC,KAAKC,MAAM6yC,GACpBE,EAA6B,IAAlBF,EAAQC,GACnBE,EAAWjzC,KAAKiyC,MAAMe,GAE5B,OAAOE,WAAW,GAAGH,KAAUE,IAClC,CAEA,MAAME,yBAA2B,CAC9Br1C,IAAK,YAGLo5B,YAAa,mDAIblyB,KAAM,aAIN4rC,aAAevxC,GAKiB,GAJD,CAAC,iBAAkB,OAAQ,OAAQ,UACvBkD,QAAQsF,GAC7CxI,EAAMQ,SAASuzC,QAAQlJ,SAASriC,KAEhBjI,OAQtBixC,YAAY,EAMZjzC,SAAU,YAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAtS,cAAgB,CACnBwU,QAAS,GACTC,YAAa,OACbC,cAAe,GAGlBp6C,OAAOC,QAAU,MAAMo6C,6BAA6B7C,QACjDt3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQy0C,yBACzB,CAGAtuB,kBACG,OAAOsuB,wBACV,CAEAtuB,uBACG,OAAO+Z,aACV,CAWA/Z,mBAAmBnmB,OAAQ00C,QAASlrB,QAASsrB,MAAO7pB,MAAQ,MACzD,OAAKypB,SAGLA,QAAUA,QAAQzmC,QAAQ,eAAgB,gBAE1CjO,OAAO8B,SAAS9C,SAAS+C,IACtB,IAAIwxB,EAAUxxB,EAAEF,WAMhB,GALI0xB,EAAQnrB,QAAQ,MAAQ,IAEzBmrB,EAAUA,EAAQ9P,MAAM,KAAK,IAG5BixB,QAAQtsC,QAAQ,IAAMmrB,EAAU,KAAO,EAAG,OAE9C,MAAM3uB,EACH4kB,QAAQ,GAAGxpB,OAAOirB,OAASA,SAASlpB,EAAEF,eACtC2nB,QAAQznB,EAAEF,YAGb,GAAa,UAATE,EAAE3C,IAAiB,CACpB,MAAM21C,EAAY,IAAInwC,GAAQ,KAC9B8vC,QAAUA,QAAQzmC,QACf,IAAIoP,OAAO,IAAMkW,EAAU,IAAK,KAChCwhB,EAEN,MAEK,GAAa,aAAThzC,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAAkB,CAClD,IAAI41C,EAASjzC,EAAEwZ,OAAOiO,UAAY,EAGb,iBAAVwrB,IACRA,EAASA,EAAO/mC,QAAQ,YAAa,KAExC+mC,EAAS,IAAIA,KAEbN,QAAUA,QAAQzmC,QACf,IAAIoP,OAAO,IAAMkW,EAAU,IAAK,KAChCyhB,EAEN,MAEK,GAAa,QAATjzC,EAAE3C,IAAe,CACvB,MAAM61C,EAAU,IAAIrwC,GAAQ,MAC5B8vC,QAAUA,QAAQzmC,QACf,IAAIoP,OAAO,IAAMkW,EAAU,IAAK,KAChC0hB,EAEN,MAEK,GAAa,WAATlzC,EAAE3C,IAAkB,CAC1B,MAAM81C,EAAa,IAAItwC,GAAQ,KAC/B8vC,QAAUA,QAAQzmC,QACf,IAAIoP,OAAO,IAAMkW,EAAU,IAAK,KAChC2hB,EAEN,KAMIC,KAAKT,SAASU,QAAQN,OAAS,IA9DjB,EA+DxB,CAYA3U,aAAaz/B,UAEHA,EAAO3F,KAAK8G,WACtB,CAEA0Z,OAAOiO,GACJ,IAAIsrB,EAAQ,EACqB,QAA7B/5C,KAAKoG,SAASwzC,cACfG,EAAQ/5C,KAAKoG,SAASyzC,eAGzB,IACG,IAAI/rC,EAAS9N,KAAKL,YAAY26C,YAC3Bt6C,KAAKiF,OACLjF,KAAKoG,SAASuzC,QACdlrB,EACAsrB,EACA/5C,KAAKkwB,OAGR,OAAQlwB,KAAKoG,SAASwzC,aACnB,IAAK,QACF9rC,EAASA,EAAOoF,QAAQ,IAAK,KAC7B,MACH,IAAK,QACFpF,EAASA,EAAOoF,QAAQ,IAAK,KAInC,OAAOpF,CAGV,CAFE,MAAO3F,GACN,MAAO,EACV,CACH,oBClUH,MAAM8uC,EAAU,EAAQ,OAOlBsD,EAA0B,CAC7Bl2C,IAAK,WAGLo5B,YAAa,iBAIblyB,KAAM,MAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,iBAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1CtS,EAAgB,CACnBqV,eAAgB,GAKhB9C,UAAW,QAGdj4C,EAAOC,QAAU,cAAiCu3C,EAC/Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQs1C,EACzB,CAGAnvB,kBACG,OAAOmvB,CACV,CAEAnvB,uBACG,OAAO+Z,CACV,CAEAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASsxC,UACX/xC,EAAOS,SAASsxC,WAAavS,EAAcuS,SACjD,CAQAtS,aAAaz/B,UAEHA,EAAO3F,KAAK8G,WACtB,oBCpGH,IAAImwC,EAAU,EAAQ,OAOtB,MAAMwD,EAAyB,CAC5Bp2C,IAAK,gBAGLo5B,YAAa,oCAIblyB,KAAM,gBAIN4rC,cAAc,EAOdC,WAAaxxC,GAEH,CAAC,WAAY,WAAWyH,QADd,GAAGzH,GAAOQ,UAAUa,YAAYrB,GAAOQ,UAAUc,gBACd,EAOvD/C,SAAU,4BAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCtS,EAAgB,CACnBx+B,WAAY,GAGZM,SAAU,MAIVC,YAAa,OAIbe,WAAY,GAIZvB,SAAU,KAUVU,WAAY,EAKZC,WAAY,GASZC,YAAa,IAMhB7H,EAAOC,QAAU,cAAiCu3C,EAC/Ct3C,YAAYgG,EAAQV,EAAQy1C,EAAgBD,GACzC36C,MAAM6F,EAAQV,EAAQy1C,GAEtB16C,KAAKqjC,cAAe,CAUvB,CAGAjY,kBACG,OAAOqvB,CACV,CAEArvB,uBACG,OAAO+Z,CACV,CAMAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASM,SAAWif,SAAS3lB,KAAKoG,SAASM,UAAY,GAC5D1G,KAAKoG,SAASgB,WAAaue,SAAS3lB,KAAKoG,SAASgB,YAAc,EACnE,CAYAg+B,eAA4B,CAU5B5U,YAAY3mB,EAAMtC,GACfzH,MAAM0wB,YAAY3mB,EAAMtC,EAC3B,CAEA4pB,eAEG,GAAInxB,KAAK8G,WAAWuG,QAAQ,MAAQ,EAAG,CACpC,MAAMstC,EAAQ36C,KAAK8G,WAAW4hB,MAAM,KACpC,MAAO,GAAGiyB,EAAM,MAAM36C,KAAK+B,GAAGsf,MAAMkX,sBAAsBoiB,EAAM,KACnE,CACG,OAAO36C,KAAK+B,GAAGsf,MAAMkX,sBAAsBv4B,KAAK8G,WAEtD,CAOIF,qBACD,MAAMg0C,EAAU56C,KAAK+B,GAAGkW,WAAWjY,KAAKoG,SAASO,YACjD,IAAKi0C,EAAS,CACX,MAAMC,EAAc,IAAIvyC,MACrB,gBAAgBtI,KAAKoB,UAAUpB,KAAKY,iCAAiCZ,KAAKoG,SAASO,eAEtF3G,KAAK+B,GAAGqG,OAAOuuB,QAAQkkB,EAAa,CACjCj1C,MAAO5F,KACP2G,WAAY3G,KAAKoG,SAASO,YAEhC,CACA,OAAOi0C,CACV,CAOInuB,gBACD,MAAMmV,EAAa5hC,KAAK4G,eACxB,IAAKg7B,EAAY,OAAO,KAExB,MAAM35B,EAAa25B,EAAW7zB,UAAU/N,KAAKoG,SAAS6B,YACtD,IAAKA,EAAY,CACd,MAAM4yC,EAAc,IAAIvyC,MACrB,gBAAgBtI,KAAKoB,UAAUpB,KAAKY,iCAAiCZ,KAAKoG,SAAS6B,eAEtFjI,KAAK+B,GAAGqG,OAAOuuB,QAAQkkB,EAAa,CACjCj1C,MAAO5F,KACPiI,WAAYjI,KAAKoG,SAAS6B,YAEhC,CACA,OAAOA,CACV,CAQA6yC,mBAAmB17B,GAChB,IAAI27B,EAGJ,MAAMpS,EAAe3oC,KAAK4G,eAE1B,IAAIiD,EAAO7J,KAAKg7C,UAAU57B,GAC1B,GAAIvV,GAAQ8+B,EAAc,CAEvB,GAAmB,iBAAR9+B,EACR,IACGA,EAAOkK,KAAK0D,MAAM5N,EAKrB,CAJE,MAAOQ,GAGN0wC,EAAelxC,CAClB,CAGHkxC,EAAelxC,CAClB,CAEA,OAAOkxC,CACV,CAEAC,UAAUvsB,GACP,GAAe,MAAXA,EAAiB,MAAO,GAE5B,MAAMwsB,EAAW,GAAGj7C,KAAKiF,OAAOkC,QAAQnH,KAAKmxB,iBAE7C,OACG1C,EAAQzuB,KAAKmxB,iBACb1C,EAAQwsB,IACRxsB,EAAQzuB,KAAK8G,aACb,EAEN,CAEA0Z,OAAOiO,GACJ,MAAMvY,EAAMlW,KAAK86C,mBAAmBrsB,GAC9Bka,EAAe3oC,KAAK4G,eAG1B,OAAIuG,MAAMC,QAAQ8I,GACRA,EACH/H,KAAKmF,GACW,MAAVA,EAAEjF,KAAqBs6B,EAAalD,YAAYnyB,IAAM,GAC9CA,EAAEjF,MAAQ,KAExBC,KAAK,MAEH4H,EACU,MAAZA,EAAI7H,KAAqBs6B,EAAalD,YAAYhX,IAAY,GACzDvY,EAAI7H,KAAa6H,EAAI7H,MAAQ,QAAjC,EAGI,EACf,CAOApH,WACG,OAAOjH,KAAKoG,SAASa,QACxB,CAOAC,cACG,OAAOlH,KAAKoG,SAASc,WACxB,CAOAR,WACG,OAAO1G,KAAKoG,SAASM,QACxB,CAMIW,iBACD,IAAKrH,KAAKoG,SAASgB,aAAepH,KAAKoG,SAASiB,WAC7C,OAAO,KAEV,MAAMJ,EAAW,GAAGjH,KAAKoG,SAASa,YAAYjH,KAAKoG,SAASc,cAE5D,GAAiB,aAAbD,EACD,OAAOjH,KAAK4G,eAAemH,UAAU/N,KAAKoG,SAASiB,YAGjD,GAAiB,YAAbJ,EACN,OAAIjH,KAAKoG,SAASM,SACR1G,KAAK4G,eAAemH,UAAU/N,KAAKoG,SAASiB,YAE5CrH,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASiB,YAI5C,GAAiB,aAAbJ,EACN,OAAOjH,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASiB,YAGzC,GAAiB,cAAbJ,EAA0B,CAChC,IAAII,EAAarH,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASiB,YAOrD,OALkB,MAAdA,IACDA,EAAarH,KAAK4G,eAAemH,UAC9B/N,KAAKoG,SAASiB,aAGbA,CACV,CAEA,OAAO,IACV,CAMIC,kBACD,IAAKtH,KAAKoG,SAASgB,aAAepH,KAAKoG,SAASkB,YAC7C,OAAO,KAGV,IAAID,EAeJ,MAX6B,QAA1BrH,KAAKoG,SAASa,UACe,QAA7BjH,KAAKoG,SAASc,cAEdG,EAAarH,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASkB,aAE/B,MAAdD,IACDA,EAAarH,KAAK4G,eAAemH,UAC9B/N,KAAKoG,SAASkB,eAIhBD,CACV,CAWAgsB,iBAAiB5E,EAAStsB,EAAU,CAAC,GAClC,GAAe,MAAXssB,EAAiB,OACrB,IAAI+J,EACJ,MAAMnxB,EAAarH,KAAKqH,WAClBT,EAAiB5G,KAAK4G,eAEtBK,EAAW,GAAGjH,KAAKoG,SAASa,YAAYjH,KAAKoG,SAASc,cAI5D,GAAiB,cAAbD,EAA0B,CAC3B,MAAMK,EAActH,KAAKsH,YAErBD,GAAcA,EAAWpC,OAAOrE,IAAMgG,EAAehG,GACtD43B,EAAUnxB,EAAWP,WACbQ,GAAeA,EAAYrC,OAAOrE,IAAMgG,EAAehG,KAC/D43B,EAAUlxB,EAAYR,WAE5B,MAGGO,IACc,aAAbJ,GACgB,YAAbA,GAA0BjH,KAAKoG,SAASM,UAE5C8xB,EAAUnxB,EAAWP,WAGF,aAAbG,EAMHuxB,EADCr2B,EAAQ+4C,UACCt0C,EAAe8oB,KAEfroB,EACLA,EAAWP,WACX9G,KAAKysB,UAAU3lB,WAIjBF,IACN4xB,EAAU5xB,EAAe8oB,MAG5B,IAAI5hB,EAAS2gB,EAAQ+J,IAAY/J,EAAQ7tB,IAAM6tB,EAM/C,MAJe,MAAX+J,IACD1qB,EAAS6X,SAAS7X,IAGdA,CACV,oBCxbH,MAAMmV,EAAY,EAAQ,OAE1BxjB,EAAOC,QAAU,cAA0BujB,EACxCtjB,YAAYgG,EAAQV,EAAQy1C,GACzB56C,MAAM,CAAC,SAAUmF,EAAOlD,IAGxB/B,KAAKoE,SAAWs2C,GAAiB,CAAC,EAsBlC16C,KAAKiF,OAASA,EAEdjF,KAAKiG,WAAWN,EACnB,CAQWw1C,2BACR,MAAO,CACJ,KACA,aACA,aACA,aACA,YACA,YAEN,CAEA/vB,uBACG,MAAO,CAAC,CACX,CAGA1hB,WACG,OAAO1J,KAAKoE,SAASC,GACxB,CAMA+2C,gBACG,OAAIp7C,KAAKoE,SAASozC,mBACXrqC,MAAMC,QAAQpN,KAAKoE,SAASozC,oBACtBx3C,KAAKoE,SAASozC,mBAEd,CAACx3C,KAAKoE,SAASozC,oBAGlB,EAEb,CAMA6D,kBACG,OAAIr7C,KAAKoE,SAASqzC,qBACXtqC,MAAMC,QAAQpN,KAAKoE,SAASqzC,sBACtBz3C,KAAKoE,SAASqzC,qBAEd,CAACz3C,KAAKoE,SAASqzC,sBAGlB,EAEb,CAGA6D,YACG,OAAOt7C,KAAKoE,SAASmH,IACxB,CAGAgwC,gBACG,OAAOv7C,KAAKoE,SAASD,QACxB,CAGAq3C,mBACG,OAAOx7C,KAAKoE,SAASq5B,WACxB,CAGA4R,oBACG,OAAkC,MAA9BrvC,KAAKoE,SAAS+yC,aAC2B,mBAA/Bn3C,KAAKoE,SAAS+yC,aACfn3C,KAAKoE,SAAS+yC,aAAan3C,MAE3BA,KAAKoE,SAAS+yC,aAIpB,CACV,CAGAvrC,kBACG,OAAgC,MAA5B5L,KAAKoE,SAASgzC,WACyB,mBAA7Bp3C,KAAKoE,SAASgzC,WACfp3C,KAAKoE,SAASgzC,WAAWp3C,MAEzBA,KAAKoE,SAASgzC,WAIpB,CACV,CAGAxR,kBACG,OAAgC,MAA5B5lC,KAAKoE,SAASmzC,WACyB,mBAA7Bv3C,KAAKoE,SAASmzC,WACfv3C,KAAKoE,SAASmzC,WAAWv3C,MAEzBA,KAAKoE,SAASmzC,WAIpB,CACV,CAEAkE,sBACG,OAAIz7C,KAAKoE,SAASizC,gBAAuBr3C,KAAKoE,SAASizC,cAG1D,CAEAqE,oBACG,OAAkC,MAA9B17C,KAAKoE,SAASu3C,eAC2B,mBAA/B37C,KAAKoE,SAASu3C,aACf37C,KAAKoE,SAASu3C,aAAa37C,MAE3BA,KAAKoE,SAASu3C,aAK9B,CAgBA71C,QACG,MAAMkS,EAAMlY,MAAMgG,QAElB,MAAO,CACJlF,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,QACnByC,IAAKrE,KAAKqE,IACVkH,KAAMvL,KAAKuL,KACX3C,WAAY5I,KAAK4I,WACjB9B,WAAY9G,KAAK8G,WACjBV,SAAUpG,KAAKoG,SACfof,aAAcxN,EAAIwN,aAExB,CAEAo2B,aAAa1lC,EAAK2lC,GACf,IAAIC,EAAYD,EAIhB,YAHkB,IAAP3lC,IACR4lC,EAAY5lC,GAER4lC,CACV,CAQA71C,WAAWN,GACH3F,KAAKY,KAAIZ,KAAKY,GAAK+E,EAAO/E,IAC/BZ,KAAK4B,KAAQ+D,EAAO/D,KACpB5B,KAAKqE,IAAMsB,EAAOtB,KAAOrE,KAAK0J,WAC9B1J,KAAKuL,KAAO5F,EAAO4F,MAAQvL,KAAKs7C,YAEhC31C,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EAItCpG,KAAKoB,MAAQuE,EAAOvE,OAASuE,EAAOS,SAAShF,OAAS,UAEtDpB,KAAK8G,WAAanB,EAAOmB,YAAc,GAEvC9G,KAAK4I,WAAajD,EAAOiD,YAAc,EAEvC5I,KAAKoG,SAAWT,EAAOS,SACvBpG,KAAKoG,SAASC,SAAWrG,KAAK47C,aAAaj2C,EAAOS,SAASC,SAAU,KACrErG,KAAKoG,SAAS21C,SAAW/7C,KAAK47C,aAAaj2C,EAAOS,SAAS21C,SAAU,KACrE/7C,KAAKoG,SAASpF,MAAQhB,KAAK47C,aAAaj2C,EAAOS,SAASpF,MAAO,KAG/DhB,KAAK4I,WAAa+c,SAAS3lB,KAAK4I,YAChC5I,KAAKoG,SAASC,SAAWsf,SAAS3lB,KAAKoG,SAASC,UAChDrG,KAAKoG,SAAS21C,SAAWp2B,SAAS3lB,KAAKoG,SAAS21C,UAChD/7C,KAAKoG,SAAShG,OAASulB,SAAS3lB,KAAKoG,SAAShG,QAAU,GACxDJ,KAAKoG,SAASpF,MAAQ2kB,SAAS3lB,KAAKoG,SAASpF,OAG7C,MAAMmkC,EAAgBnlC,KAAKL,YAAYwlC,iBAAmB,CAAC,EAC3D,IAAK,MAAMxR,KAAMwR,EACdnlC,KAAKoG,SAASutB,GAAM3zB,KAAK47C,aACtBj2C,EAAOS,SAASutB,GAChBwR,EAAcxR,IAKpB7zB,MAAMmG,WAAWN,GAGjB3F,KAAK8G,WAAa9G,KAAK8G,YAAc9G,KAAKoB,MAI1CpB,KAAK8G,WAAa9G,KAAK8G,WAAWoM,QAAQ,mBAAoB,GACjE,CAQA2V,aACG,OAAO7oB,KAAKiF,OAAOogC,WAAarlC,KAAKY,EACxC,CAQAwkC,aAAaz/B,GACVA,EAAO3F,KAAK8G,YAAc,EAC7B,CAQA0pB,YAAY3mB,EAAMtC,IAGZvH,KAAKoG,SAAS21C,UACY,MAAzBlyC,EAAK7J,KAAK8G,aAAgD,IAAzB+C,EAAK7J,KAAK8G,aACnB,GAAzB+C,EAAK7J,KAAK8G,aAEVS,EAAUkW,SAASzd,KAAK8G,WAAY,4BAE1C,CAOIq9B,qBACD,OAAO,CACV,CAEA6W,UAAUvsB,GACP,MAAMwsB,EAAW,GAAGj7C,KAAKkwB,OAASlwB,KAAKiF,OAAOkC,QAAQnH,KAAK8G,aAE3D,IAAIgH,EAAS,GAOb,OANkC,MAA9B2gB,IAAUzuB,KAAK8G,YAChBgH,EAAS2gB,EAAQzuB,KAAK8G,YACS,MAAvB2nB,IAAUwsB,KAClBntC,EAAS2gB,EAAQwsB,IAGbntC,CACV,CAQA0S,OAAOiO,GACJ,OAAIA,EACMzuB,KAAKg7C,UAAUvsB,GACX,EACjB,CASA1Z,eACG,MAAMinC,EAAQl8C,MAAMiV,eAWpB,MAPkB,IAAdinC,EAAM70C,OACP60C,EAAM70C,KACH60C,EAAMv6B,KAAKta,MAAQ60C,EAAMv6B,KAAKrgB,OAAS46C,EAAMv6B,KAAK3a,YAEpD9G,KAAKiF,QAAUjF,KAAKiF,OAAOkC,OAC5B60C,EAAM70C,KAAO,GAAGnH,KAAKiF,OAAOkC,SAAS60C,EAAM70C,QAEvC60C,CACV,oBC5VH,MAAM/E,EAAU,EAAQ,OAExB,SAASl3C,EAAEsE,EAAK0O,GAEb,OAAOA,CACV,CAEA,MAAMkpC,EAAsB,CACzB53C,IAAK,OAGLo5B,YAAa,4BAIblyB,KAAM,WAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,OAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpBtS,EAAgB,CACnB+W,WAAY,EACZC,YAAa,EACbC,iBAAkB,KAClBC,kBAAmB,OACnBC,kBAAmB,OACnBC,oBAAqB,EACrBC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,MAGpBj9C,EAAOC,QAAU,cAA8Bu3C,EAC5Ct3C,YAAYgG,EAAQV,EAAQkgC,EAAgB8W,GACzCn8C,MAAM6F,EAAQV,EAAQkgC,EACzB,CAGA/Z,kBACG,OAAO6wB,CACV,CAEA7wB,uBACG,OAAO+Z,CACV,CAgBAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS81C,WAAav2B,SAAS3lB,KAAKoG,SAAS81C,YAClDl8C,KAAKoG,SAAS+1C,YAAcx2B,SAAS3lB,KAAKoG,SAAS+1C,YACtD,CAYA/W,aAAaz/B,GACV,GAA+B,MAA3BA,EAAO3F,KAAK8G,YAAqB,OAErC,IAAI61C,EAG6B,GAA7B38C,KAAKoG,SAAS+1C,YACfQ,EAAa,IAAIl8B,KAIY,GAA7BzgB,KAAKoG,SAAS+1C,aACdn8C,KAAKoG,SAASg2C,mBAEdO,EAAa,IAAIl8B,KAAKzgB,KAAKoG,SAASg2C,mBAIrB,MAAdO,IACDh3C,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAGsf,MAAMX,aAAai8B,EAAY,CAC9Dn8B,OAAQ,eAIjB,CASAgQ,YAAY3mB,EAAMtC,GAGf,GAFAzH,MAAM0wB,YAAY3mB,EAAMtC,GAEpBsC,EAAK7J,KAAK8G,YAAa,CACxB,IAAInE,EAAQkH,EAAK7J,KAAK8G,YAQtB,GANMnE,aAAiB8d,OACpB9d,EAAQ3C,KAAK+B,GAAGsf,MAAMhB,OAAO1d,IAMa,kBAA1C0R,OAAOuoC,UAAUhoC,SAASioC,KAAKl6C,IAC/Bm6C,SAASn6C,GACV,CACC,IAAI4C,GAAU,EAGd,GAAIvF,KAAKoG,UAAYpG,KAAKoG,SAASi2C,kBAAmB,CACnD,MAAMU,EAAY/8C,KAAKoG,SAASq2C,kBACxB,IAAIh8B,KAAKzgB,KAAKoG,SAASq2C,mBACvB,KACLO,EAAUh9C,KAAKoG,SAASs2C,gBACnB,IAAIj8B,KAAKzgB,KAAKoG,SAASs2C,iBACvB,KACLO,EAAmBj9C,KAAKk9C,eAAeH,GACvCI,EAAiBn9C,KAAKk9C,eAAeF,GAClCI,EAAUp9C,KAAK+B,GAAGsf,MAAMN,aAC3B,IAAIN,KACJzgB,KAAKoG,SAASm2C,oBACdv8C,KAAKoG,SAASk2C,mBAEXe,EAAUr9C,KAAK+B,GAAGsf,MAAMF,QAC3B,IAAIV,KACJzgB,KAAKoG,SAASo2C,mBACdx8C,KAAKoG,SAASk2C,mBAEjB,OAAQt8C,KAAKoG,SAASi2C,mBACnB,IAAK,YACEe,EAAUz6C,GAASA,EAAQ06C,EAAS93C,GAAU,GAE/CA,GAAU,EACVgC,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,EAAoC,CACnCC,KAAKk9C,eAAeE,GACpBp9C,KAAKk9C,eAAeG,OAK7B,MACH,IAAK,UACEN,EAAYp6C,GAASA,EAAQq6C,EAASz3C,GAAU,GAEjDA,GAAU,EACVgC,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,EAAoC,CACnCk9C,EACAE,MAIT,MACH,IAAK,aACEx6C,EAAQo6C,GAAaC,EAAUr6C,EAAO4C,GAAU,GAEjDA,GAAU,EACVgC,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,EAAwC,CACvCk9C,EACAE,MAIT,MACH,IAAK,IACF53C,EACG5C,EAAMq2C,SACN+D,EAAU/D,SACVr2C,EAAMq2C,WAAa+D,EAAU/D,UAC3BzzC,GACFgC,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,EAAoB,CAACk9C,KAE7B,MACH,IAAK,KACF13C,EACG5C,EAAMq2C,SACN+D,EAAU/D,SACVr2C,EAAMq2C,WAAa+D,EAAU/D,UAC3BzzC,GACFgC,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,EAAwB,CAACk9C,KAEjC,MACH,IAAK,IACF13C,EACG5C,EAAMq2C,SACN+D,EAAU/D,SACVr2C,EAAMq2C,UAAY+D,EAAU/D,UAC1BzzC,GACFgC,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,EAAoB,CAACk9C,KAE7B,MACH,IAAK,IACF13C,EACG5C,EAAMq2C,SACN+D,EAAU/D,SACVr2C,EAAMq2C,UAAY+D,EAAU/D,UAC1BzzC,GACFgC,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,EAAqB,CAACk9C,KAE9B,MACH,IAAK,KACF13C,EACG5C,EAAMq2C,SACN+D,EAAU/D,SACVr2C,EAAMq2C,WAAa+D,EAAU/D,UAC3BzzC,GACFgC,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,EAA6B,CAACk9C,KAEtC,MACH,IAAK,KACF13C,EACG5C,EAAMq2C,SACN+D,EAAU/D,SACVr2C,EAAMq2C,WAAa+D,EAAU/D,UAC3BzzC,GACFgC,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,EAA8B,CAACk9C,KAIhD,CAEI13C,IAGDsE,EAAK7J,KAAK8G,YAAc9G,KAAKs9C,YAAY36C,GAE/C,MAEG4E,EAAUkW,SAASzd,KAAK8G,WAAY,oBAE1C,CACH,CAEA0Z,OAAOiO,GACJ,MAAMuC,EAAIhxB,KAAKg7C,UAAUvsB,GAEzB,GAAS,IAALuC,GAAgB,MAALA,EACZ,MAAO,GAIV,MAAMusB,EAAUv9C,KAAK+B,GAAGsf,MAAMhB,OAAO2Q,GACrC,OAAOhxB,KAAKk9C,eAAeK,EAI9B,CAEAC,YACG,IAAIC,EAAmB,GAOvB,OAJGz9C,KAAKoG,UAAYpG,KAAKoG,SAAS81C,WAC1Bl8C,KAAKoG,SAAS81C,WACd,IAIL,KAAS,EAuBT,QAEMuB,EAAmB,WAEtB,MArBH,KAAK,EAECA,EAAmB,WAEtB,MAEH,KAAK,EAECA,EAAmB,YAEtB,MAEH,KAAK,EAECA,EAAmB,YAU5B,OAAOA,CACV,CAEAP,eAAeQ,GACZ,MAAMxB,EAAal8C,KAAKw9C,YAExB,OAAOx9C,KAAK29C,aAAazB,EAAYwB,EACxC,CAmBAJ,YAAY36C,GACT,OAAOA,EAAQ3C,KAAK+B,GAAGsf,MAAMX,aAAa/d,EAAO,CAC9C6d,OAAQ,eACN,EAER,CAEAm9B,aAAazB,EAAYwB,GACtB,OAAIA,GAAYA,EAAS9oC,SAAiB8oC,EAAS9oC,WACvC,EACf,GAKHnV,EAAOC,QAAQk+C,MAAQ,+CCvZvB,MAAMC,EAAkB,EAAQ,OAO1B5B,EAAsB,CACzB53C,IAAK,WAGLo5B,YAAa,6BAIblyB,KAAM,UAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,cAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,YAKrBC,qBAAsB,CAAC,aAMpBtS,EAAgB,CACnB2Y,WAAY,EACZC,YAAa,EACbC,iBAAkB,MAGrBv+C,EAAOC,QAAU,cAAkCm+C,EAChDl+C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQg3C,EACzB,CAGA7wB,kBACG,OAAO6wB,CACV,CAEA7wB,uBACG,MAAM6yB,EAAcn+C,MAAMqlC,gBAC1B,OAAO9wB,OAAO6pC,OAAOD,EAAa9Y,EACrC,CAgBAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS03C,WAAan4B,SAAS3lB,KAAKoG,SAAS03C,YAClD99C,KAAKoG,SAAS23C,YAAcp4B,SAAS3lB,KAAKoG,SAAS23C,YACtD,CAYA3Y,aAAaz/B,GACV,GAA+B,MAA3BA,EAAO3F,KAAK8G,YAAqB,OAIrC,IAAI61C,EAYJ,GAdA78C,MAAMslC,aAAaz/B,GAKfA,EAAO3F,KAAK8G,cACb61C,EAAa38C,KAAK+B,GAAGsf,MAAMhB,OAAO1a,EAAO3F,KAAK8G,cAQhB,GAA7B9G,KAAKoG,SAAS23C,YAAkB,CACjC,MAAMI,EAAW,IAAI19B,KAEH,MAAdk8B,IAAoBA,EAAa,IAAIl8B,MAEzCk8B,EAAWyB,SAASD,EAASE,YAC7B1B,EAAW2B,WAAWH,EAASI,cAC/B5B,EAAW6B,WAAWL,EAASM,cAC/B9B,EAAW+B,gBAAgBP,EAASQ,kBACvC,MAEK,GAC2B,GAA7B3+C,KAAKoG,SAAS23C,aACd/9C,KAAKoG,SAAS43C,iBACf,CACC,MAAMD,EAAc,IAAIt9B,KAAKzgB,KAAKoG,SAAS43C,kBAEzB,MAAdrB,IAAoBA,EAAa,IAAIl8B,MAEzCk8B,EAAWyB,SAASL,EAAYM,YAChC1B,EAAW2B,WAAWP,EAAYQ,cAClC5B,EAAW6B,WAAWT,EAAYU,cAClC9B,EAAW+B,gBAAgBX,EAAYY,kBAC1C,CAGkB,MAAdhC,IACDh3C,EAAO3F,KAAK8G,YAAc61C,EAAWh5B,cAC3C,CAEA65B,YACG,MAAMM,EAAa99C,KAAK4+C,gBAIxB,OAFA5+C,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAEF,GAA5BpG,KAAKoG,SAAS81C,WACR4B,EAKH,GAFYh+C,MAAM09C,eAEDM,GAC3B,CAEAt9B,OAAOiO,GACJ,MAAMowB,EAAiB7+C,KAAKw9C,YACtBxsB,EAAIhxB,KAAKg7C,UAAUvsB,GACnB8uB,EAAUv9C,KAAK+B,GAAGsf,MAAMhB,OAAO2Q,GAErC,MAAS,IAALA,GAAgB,MAALA,EACL,GAGHvtB,MAAMgd,KAAKq+B,UAAUD,EAArBp7C,CAAqC85C,EAC/C,CAEAqB,gBAEG,OADA5+C,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAC1BpG,KAAKoG,SAAS03C,YACnB,KAAK,EACF,MAAO,YACV,KAAK,EACF,MAAO,SACV,QACG,MAAO,GAEhB,CAOAR,YAAY38B,GACT,OAAOA,GAAMgD,iBAAmB,EACnC,GAKHlkB,EAAOC,QAAQk+C,MACZ,0ECnNH,MAAM3G,EAAU,EAAQ,OAOlB8H,EAAuB,CAC1B16C,IAAK,QAGLo5B,YAAa,kDAIblyB,KAAM,WAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,QAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCtS,EAAgB,CACnBqH,QAAS,GACTwS,gBAAiB,GAGpBv/C,EAAOC,QAAU,cAA+Bu3C,EAC7Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ85C,EACzB,CAGA3zB,kBACG,OAAO2zB,CACV,CAEA3zB,uBACG,OAAO+Z,CACV,CAMAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASomC,QAAU7mC,EAAOS,SAASomC,SAAW,EACtD,CAYApH,aAAaz/B,GAELA,EAAO3F,KAAK8G,aAEV9G,KAAKoG,SAASomC,UACf7mC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAASomC,QAGjD,CAUAhc,YAAY3mB,EAAMtC,GACf,GAAIsC,EAAK7J,KAAK8G,YAAa,CACxB,MAAMm4C,EAAM,wJAEZ,IAAIt8C,EAAQkH,EAAK7J,KAAK8G,YACtBnE,EAAQyY,OAAOzY,GAAO0V,cACjB4mC,EAAI18B,KAAK5f,IACX4E,EAAUkW,SAASzd,KAAK8G,WAAY,gBAE1C,CACH,oBC/HH,MAAMmwC,EAAU,EAAQ,OAOlBiI,EAAsB,CACzB76C,IAAK,OAGLo5B,YAAa,gCAIblyB,KAAM,OAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,kBAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCtS,EAAgB,CACnBga,mBAAoB,EACpBC,SAAU,EACVC,SAAU,IAGb5/C,EAAOC,QAAU,cAA8Bu3C,EAC5Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQi6C,EACzB,CAGA9zB,kBACG,OAAO8zB,CACV,CAEA9zB,uBACG,OAAO+Z,CACV,CAMAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASg5C,SAAWz5B,SAAS3lB,KAAKoG,SAASg5C,UAChDp/C,KAAKoG,SAASk5C,cAAgB35B,SAAS3lB,KAAKoG,SAASk5C,eACrDt/C,KAAKoG,SAASm5C,cAAgB55B,SAAS3lB,KAAKoG,SAASm5C,eACrDv/C,KAAKoG,SAAS+4C,mBAAqBx5B,SAChC3lB,KAAKoG,SAAS+4C,mBAEpB,CAcAnE,UAAUvsB,GACP,MAAMwsB,EAAW,GAAGj7C,KAAKkwB,OAASlwB,KAAKiF,OAAOkC,QAAQnH,KAAK8G,aAE3D,IAAIgH,EAAS2gB,EAAQzuB,KAAK8G,aAAe2nB,EAAQwsB,IAAa,CAAC,EAC/D,GAAqB,iBAAVntC,EACR,IACGA,EAASiG,KAAK0D,MAAM3J,EAGvB,CAFE,MAAO3F,GAET,CAGH,OAAO2F,CACV,CAcAs3B,aAAaz/B,GACVA,EAAO3F,KAAK8G,YAAc,IAC7B,CAEA0Z,OAAOiO,GACJ,IAAI3gB,EAAS9N,KAAKg7C,UAAUvsB,GAC5B,GAAI3gB,EAAQ,CACT,GAAqB,iBAAVA,EACR,IACGA,EAASiG,KAAK0D,MAAM3J,EAGvB,CAFE,MAAO3F,GAET,CAIH,OAAO2F,GAASA,EAAO0xC,UAAiB,EAC3C,CACG,MAAO,EAEb,CAQAC,aAAaC,GACV,MAAMC,EAAc7/C,MAAM2/C,aAAaC,GAQvC,MAJsC,MAAlCC,IAAc3/C,KAAK8G,oBACb64C,EAAY3/C,KAAK8G,YAGpB64C,CACV,oBC5KH,MAAM1I,EAAU,EAAQ,OAMlB2I,EAAyB,CAC5Bv7C,IAAK,UAGLo5B,YACG,qEAIHlyB,KAAM,iBAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,UAIVw3C,aAAe/1C,IACZ,MAAM6mB,EAAY7mB,EAAM6mB,UACxB,OAAiB,MAAbA,GAGqB,cAAlBA,EAAUpoB,GAAmB,EAGvCgzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAtS,EAAgB,CACnBv/B,MAAO,GACPg8B,WAAY,GACZnV,UAAW,GACX7qB,KAAM,MACNouB,MAAO,IAGVvwB,EAAOC,QAAU,cAAiCu3C,EAC/Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ26C,EACzB,CAGAx0B,kBACG,OAAOw0B,CACV,CAEAx0B,uBACG,OAAO+Z,CACV,CAYAC,aAAaz/B,UAEHA,EAAO3F,KAAK8G,WACtB,CAWA0Z,OAAOiO,EAASoxB,GAAc,EAAOC,GAAY,GAC9C,MAAMrzB,EAAYzsB,KAAKysB,UAEjBszB,EAAYC,IAEf,GAAKvzB,GAA8B,aAAjBA,EAAUpoB,IAErB,CACJ,MAAM47C,EAAgB,CAAC,EAEvB,OADAA,EAAcxzB,EAAU3lB,YAAck5C,EAC/BvzB,EAAUjM,OAAOy/B,EAC3B,CALG,OAAOD,CAKV,EAKH,GAAgC,MAA5BvxB,EAAQzuB,KAAK8G,cAAwB+4C,IAAgBC,EAEtD,OAAOC,EAAStxB,EAAQzuB,KAAK8G,aACzB,GACwB,MAA5B2nB,EAAQzuB,KAAK8G,cACZ+4C,GACDC,EAEA,OAAOrxB,EAAQzuB,KAAK8G,YAGvB,IAAK2lB,EAAW,OAAO,EAEvB,MAAMyzB,EAAYlgD,KAAKkgD,YACvB,IAAKA,EAAW,OAAO,EAEvB,IAAIr2C,EACD4kB,EAAQyxB,EAAU/uB,iBAClB1C,EAAQyxB,EAAUp5C,aAClB,GACEqG,MAAMC,QAAQvD,KAAOA,EAAO,CAACA,IAI/BA,GACAA,EAAK1D,QACLnG,KAAKoG,UACLpG,KAAKoG,SAAS4pB,OACdhwB,KAAKoG,SAAS4pB,MAAM3O,OACpBrhB,KAAKoG,SAAS4pB,MAAM3O,MAAMlb,SAE1BnG,KAAKmgD,aAAat7C,SAAS7E,KAAKoG,SAAS4pB,OACzCnmB,EAAOA,EAAKf,QAAQsF,GAASpO,KAAKmgD,aAAa56C,QAAQ6I,MAG1D,IAAIgyC,EAAa,GAGjB,OAAQ3zB,EAAUpoB,KACf,IAAK,YACFwF,EAAK5F,SAAS+sB,IACXovB,EAAW97C,KAAKm1C,WAAWhtB,EAAUjM,OAAOwQ,IAAM,GAAG,IAExD,MACH,IAAK,SACFovB,EAAav2C,EAAKsE,KAAK6iB,GAAMA,EAAEvE,EAAU3lB,aAAe,IAI9D,IAAIgH,EAAS,EAGb,MAAMuyC,EAAc5zB,EAAU6zB,iBAG9B,OAAQtgD,KAAKoG,SAASxE,MACnB,IAAK,MACF,GAAIw+C,EAAWj6C,OAAS,EAAG,CAGxB,MAAMo6C,EAAah6C,KAAKi6C,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAWn8C,SAASiS,IACjBuqC,GAAOvqC,EAAMqqC,GAAc,CAAC,IAG/BzyC,EAAS2yC,EAAMF,CAClB,CACA,MAEH,IAAK,UACF,GAAIH,EAAWj6C,OAAS,EAAG,CAGxB,MAAMo6C,EAAah6C,KAAKi6C,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAWn8C,SAASiS,IACjBuqC,GAAOvqC,EAAMqqC,GAAc,CAAC,IAI/BzyC,EAAS2yC,EAAMF,EAAaH,EAAWj6C,MAC1C,CACA,MAEH,IAAK,MACF2H,EAASvH,KAAKm6C,OAAON,IAAe,EACpC,MACH,IAAK,MACFtyC,EAASvH,KAAKo6C,OAAOP,IAAe,EACpC,MACH,IAAK,QACFtyC,EAASsyC,EAAWj6C,OAO1B,OAHAsoB,EAAQzuB,KAAK8G,YAAcgH,EAGN,aAAjB2e,EAAUpoB,IACJyJ,EAEAiyC,EAASjyC,EAEtB,CAEAoyC,YACG,OAAOlgD,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASR,MAC9C,CAEI6mB,gBACD,MAAMzU,EAAMhY,KAAK+B,GAAGkW,WAAWjY,KAAKoG,SAASnB,QAC7C,IAAK+S,EAAK,OAAO,KAGjB,OADcA,EAAIjK,UAAU/N,KAAKoG,SAASqmB,YACvB,IAGtB,CAEI0zB,mBAUD,OATuB,MAAnBngD,KAAK4gD,aACN5gD,KAAK4gD,WAAa5gD,KAAK+B,GAAGgzB,iBAAiB,GAAG/0B,KAAKY,oBAE/CZ,KAAKysB,WAAazsB,KAAKysB,UAAUxnB,SAClCjF,KAAK4gD,WAAW5rB,WAAWh1B,KAAKysB,UAAUxnB,OAAO8B,UACjD/G,KAAK4gD,WAAW/7C,SAAS7E,KAAKoG,SAAS4pB,SAItChwB,KAAK4gD,UACf,oBCzRH,MAAM3J,EAAU,EAAQ,OAElB4J,EAAuB,CAC1Bx8C,IAAK,QAGLo5B,YAAa,kCAIblyB,KAAM,eAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,mBAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCtS,EAAgB,CACnB2b,SAAU,EACVC,WAAY,GACZC,UAAW,EACXC,YAAa,GACb9B,mBAAoB,EACpB+B,iBAAiB,EACjBC,gBAAiB,IAGpB1hD,EAAOC,QAAU,cAA+Bu3C,EAC7Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ47C,EAuBzB,CAGAz1B,kBACG,OAAOy1B,CACV,CAEAz1B,uBACG,OAAO+Z,CACV,CAMAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS06C,SAAWn7B,SAAS3lB,KAAKoG,SAAS06C,UAChD9gD,KAAKoG,SAAS46C,UAAYr7B,SAAS3lB,KAAKoG,SAAS46C,WACjDhhD,KAAKoG,SAAS26C,WAAap7B,SAAS3lB,KAAKoG,SAAS26C,YAClD/gD,KAAKoG,SAAS66C,YAAct7B,SAAS3lB,KAAKoG,SAAS66C,aACnDjhD,KAAKoG,SAAS86C,gBAAkBv7B,SAAS3lB,KAAKoG,SAAS86C,iBACvDlhD,KAAKoG,SAAS+4C,mBAAqBx5B,SAChC3lB,KAAKoG,SAAS+4C,mBAEpB,CAUA3uB,YAAY3mB,EAAMtC,GACfzH,MAAM0wB,YAAY3mB,EAAMtC,EAC3B,oBCjIH,MAAM0vC,EAAU,EAAQ,OAElBmK,EAAsB,CACzB/8C,IAAK,OAGLo5B,YAAa,aAIblyB,KAAM,OAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,OAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpBtS,EAAgB,CAAC,EAEvB1lC,EAAOC,QAAU,cAA8Bu3C,EAC5Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQm8C,EACzB,CAGAh2B,kBACG,OAAOg2B,CACV,CAEAh2B,uBACG,OAAO+Z,CACV,CAQAC,aAAaz/B,GAIb,oBChFH,MAAMsxC,EAAU,EAAQ,OAOlBoK,EAAsB,CACzBh9C,IAAK,OAGLo5B,YACG,6EAIHlyB,KAAM,UAIN4rC,aAAevxC,IACRA,EAAMQ,SAASk7C,WAYtBlK,WAAaxxC,IACNA,EAAMQ,SAASk7C,WAWtBn9C,SAAU,cAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,OACA,UACA,YAMH8J,UAAY37C,KACLA,EAAMQ,SAASm7C,WAQnBpc,EAAgB,CACnBmc,WAAY,EAIZC,UAAW,EAIXp/C,QAAS,GASTqqC,QAAS,OACTgV,gBAAiB,IAGpB/hD,EAAOC,QAAU,cAA8Bu3C,EAC5Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQo8C,GAEtBrhD,KAAKyhD,iBAAmB,EAI3B,CAGAr2B,kBACG,OAAOi2B,CACV,CAEAj2B,uBACG,OAAO+Z,CACV,CAYAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGb3F,KAAKoG,SAASjE,SAAWnC,KAAKoG,SAASjE,QAAQgE,OAAS,GACzDnG,KAAKoG,SAASjE,QAAQ8B,SAASy9C,IAC5B1hD,KAAK++B,UAAU2iB,EAAKA,EAAK,CAAC,QAAQ,IAIxC1hD,KAAKoG,SAASk7C,WAAa37B,SAAS3lB,KAAKoG,SAASk7C,YAClDthD,KAAKoG,SAASm7C,UAAY57B,SAAS3lB,KAAKoG,SAASm7C,UACpD,CAaAz7C,QACG,MAAMkS,EAAMlY,MAAMgG,QAOlB,OAJAkS,EAAI5R,SAASjE,QAAQ8B,SAASy9C,IAC3B1hD,KAAKm/B,YAAYuiB,EAAKA,EAAK,CAAC,QAAQ,IAGhC1pC,CACV,CAYAotB,aAAaz/B,GAEV,GAAgC,GAA5B3F,KAAKoG,SAASk7C,WAAoB,CACnC,IAAIK,EAAc,GAClB3hD,KAAKoG,SAASo7C,gBAAgBv9C,SAAS0d,IACpC3hB,KAAKoG,SAASjE,QAAQ8B,SAASy9C,IACxBA,EAAI9gD,IAAM+gB,EAAItT,MACfszC,EAAYr9C,KAAKo9C,EACpB,GACD,IAEL/7C,EAAO3F,KAAK8G,YAAc66C,GAAe,EAC5C,MAES3hD,KAAKoG,SAASomC,SAAoC,IAAzBxsC,KAAKoG,SAASomC,UAC7C7mC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAASomC,QAE9C,CAUAhc,YAAY3mB,EAAMtC,GACfzH,MAAM0wB,YAAY3mB,EAAMtC,EAC3B,CAOApF,UACG,OAAOnC,KAAKoG,SAASjE,QAAQgM,KAAKuzC,IACxB,CACJ9gD,GAAI8gD,EAAI9gD,GACRyN,KAAMqzC,EAAIrzC,KACVuzC,IAAKF,EAAIE,IAAMF,EAAIE,IAAM,GACzBp8B,aAAck8B,EAAIl8B,aAAek8B,EAAIl8B,aAAe,MAG7D,CAEAhF,OAAOiO,EAAStsB,EAAU,CAAC,GACxB,IAAI+T,EAAMlW,KAAKg7C,UAAUvsB,IAAY,GAErC,GAAkB,iBAAPvY,EACR,IACGA,EAAMnC,KAAK0D,MAAMvB,EAGpB,CAFE,MAAO7L,GAET,CAqBH,OAjBK8C,MAAMC,QAAQ8I,KAAMA,EAAM,CAACA,IAEZlW,KAAKoG,SAASjE,QAC9B2G,QAAQ44C,GAAQxrC,EAAIpN,QAAQwK,IAAOA,EAAE1S,IAAM0S,IAAMouC,EAAI9gD,KAAIuF,OAAS,IAClEgI,KAAKuzC,IACH,IAAIrzC,EAAOqzC,EAAIrzC,KACf,MAAM8B,EAAehO,EAAQgO,cAAgB,KAGvC0xC,GAAWH,EAAIl8B,cAAgB,IAAI1c,QACrCqd,GAAMA,EAAE8Y,eAAiB9uB,IAC3B,GAGF,OAFI0xC,IAASxzC,EAAOwzC,EAAQxzC,MAErBA,CAAI,IAGEC,KAAK,KAC3B,oBCpQH,MAAM2oC,EAAU,EAAQ,OASlB6K,EAA0B,CAC7Bz9C,IAAK,WAELo5B,YAAa,yBAIblyB,KAAM,cAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,YAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAAY,aAAc,QAK/CC,qBAAsB,CAAC,OAAQ,aAAc,YAK7CsK,gBA1DqB,KAgElB5c,EAAgB,CACnBqH,QAAS,GACTwV,oBAAqB,GAGxBviD,EAAOC,QAAU,cAA8Bu3C,EAC5Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ68C,EAUzB,CAGA12B,kBACG,OAAO02B,CACV,CAEA12B,uBACG,OAAO+Z,CACV,CAYAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASomC,QAAU7mC,EAAOS,SAASomC,SAAW,GAGnDxsC,KAAKoG,SAAS47C,oBACXr8C,EAAOS,SAAS47C,oBAAsB,IACtC7c,EAAc6c,oBAGjBhiD,KAAKoG,SAAS47C,oBAAsBr8B,SACjC3lB,KAAKoG,SAAS47C,qBAGbhiD,KAAKoG,SAAS47C,oBACXhiD,KAAKiF,QACNjF,KAAKiF,OAAO85B,UAAU/+B,KAAKoG,SAAUpG,KAAKoG,SAAU,CAAC,YACpDpG,KAAKoG,SAASomC,QAAU7mC,EAAOS,SAASomC,SAAW,EAC7D,CAaA1mC,QACG,MAAMkS,EAAMlY,MAAMgG,QAOlB,OALI9F,KAAKoG,SAAS47C,sBACXhiD,KAAKiF,OACNjF,KAAKiF,OAAOk6B,YAAYnnB,EAAI5R,SAAU4R,EAAI5R,SAAU,CAAC,YACnD4R,EAAI5R,SAASomC,QAAUxsC,KAAKoG,SAASomC,SAEtCx0B,CACV,CAOImsB,qBACD,OAA4C,GAArCnkC,KAAKoG,SAAS47C,mBACxB,CAQA5c,aAAaz/B,GACqB,MAA3BA,EAAO3F,KAAK8G,cACuB,iBAAzB9G,KAAKoG,SAASomC,QACtB7mC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAASomC,QAExC7mC,EAAO3F,KAAK8G,YAAc,GAGnC,CAUA0pB,YAAY3mB,EAAMtC,GACfzH,MAAM0wB,YAAY3mB,EAAMtC,GAGrBsC,GACAA,EAAK7J,KAAK8G,aACV+C,EAAK7J,KAAK8G,YAAYX,OAxLP,KA0LfoB,EAAUkW,SACPzd,KAAK8G,WACL,4CAGT,oBCjMH,MAAMmwC,EAAU,EAAQ,OAElBgL,EAAwB,CAC3B59C,IAAK,SAGLo5B,YAAa,2BAIblyB,KAAM,UAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,SAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAtS,EAAgB,CAEnBqH,QAAS,GACT0V,WAAY,OACZC,aAAc,OACdC,kBAAmB,EACnBC,aAAc,OACdC,cAAe,OACfC,WAAY,EACZC,gBAAiB,GACjBC,gBAAiB,IAGpB,IAAI1iD,EAAI,KAERN,EAAOC,QAAU,cAAgCu3C,EAC9Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQg9C,GAkBjBliD,IACFA,EAAIC,KAAK+B,GAAG9B,QAElB,CAGAmrB,kBACG,OAAO62B,CACV,CAEA72B,uBACG,OAAO+Z,CACV,CAEA/Z,kBAAkBs3B,GAEf,OADIA,IAAO3iD,IAAGA,EAAI2iD,GACX,CACJ,CAAE9hD,GAAI,OAAQ+B,MAAO5C,EAAE,SACvB,CACGa,GAAI,SACJ+B,MAAO5C,EAAE,KACTg4C,KAAM,IACNp3C,SAAU,UAEb,CACGC,GAAI,MACJ+B,MAAO5C,EAAE,KACTg4C,KAAM,IACNp3C,SAAU,UAEb,CACGC,GAAI,QACJ+B,MAAO5C,EAAE,KACTg4C,KAAM,IACNp3C,SAAU,UAEb,CACGC,GAAI,aACJ+B,MAAO5C,EAAE,cACTg4C,KAAM,IACNp3C,SAAU,UAEb,CACGC,GAAI,YACJ+B,MAAO5C,EAAE,aACTg4C,KAAM,IACNp3C,SAAU,WAEb,CACGC,GAAI,UACJ+B,MAAO5C,EAAE,KACTg4C,KAAM,IACNp3C,SAAU,WAGnB,CAEAyqB,uBACG,MAAO,CACJ,CAAExqB,GAAI,OAAQ+B,MAAO5C,EAAE,SACvB,CACGa,GAAI,QACJ+B,MAAO5C,EAAE,SACTg4C,KAAM,KAET,CACGn3C,GAAI,SACJ+B,MAAO5C,EAAE,UACTg4C,KAAM,KAET,CACGn3C,GAAI,QACJ+B,MAAO5C,EAAE,SACTg4C,KAAM,KAGf,CAMA9xC,WAAWN,GACR7F,MAAMmG,WAAWN,GAIjB3F,KAAKoG,SAASm8C,WAAa58B,SAAS3lB,KAAKoG,SAASm8C,WACrD,CAYAnd,aAAaz/B,GAEmB,IAAzB3F,KAAKoG,SAASomC,UACf7mC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAASomC,QAE9C,CAUAhc,YAAY3mB,EAAMtC,GAKf,GAJAzH,MAAM0wB,YAAY3mB,EAAMtC,GAIK,MAAzBsC,EAAK7J,KAAK8G,aAAgD,IAAzB+C,EAAK7J,KAAK8G,YAAmB,CAC/D,IAAInE,EAAQkH,EAAK7J,KAAK8G,YAGtB,GAAkC,QAA9B9G,KAAKoG,SAAS+7C,aACfx/C,EAAQgjB,SAAShjB,OACb,CACJ,MAAMggD,EAASh9B,SAAS3lB,KAAKoG,SAASg8C,oBAAsB,EAC5Dz/C,EAAQ82C,WAAWA,WAAW92C,GAAO03C,QAAQsI,GAChD,CAUA,GARmBC,EAGJjgD,GAFJ2rC,OAAOuU,MAAMpJ,WAAWmJ,KAAOtU,OAAOwO,SAAS8F,IAGvDr7C,EAAUkW,SAASzd,KAAK8G,WAAY/G,EAAE,mBAKV,GAA5BC,KAAKoG,SAASm8C,YACmB,MAAjCviD,KAAKoG,SAASo8C,iBACdxiD,KAAKoG,SAASo8C,gBAAkB7/C,EACjC,CACC,MAAMmgD,EAAa/iD,EAAE,6BAA8B,CAChDC,KAAKoG,SAASo8C,kBAGjBj7C,EAAUkW,SAASzd,KAAK8G,WAAYg8C,EACvC,CAGA,GAC+B,GAA5B9iD,KAAKoG,SAASm8C,YACmB,MAAjCviD,KAAKoG,SAASq8C,iBACdziD,KAAKoG,SAASq8C,gBAAkB9/C,EACjC,CACC,MAAMmgD,EAAa/iD,EAAE,0BAA2B,CAC7CC,KAAKoG,SAASq8C,kBAGjBl7C,EAAUkW,SAASzd,KAAK8G,WAAYg8C,EACvC,CACH,CAhCqB,IAACF,CAiCzB,CAEApiC,OAAOiO,GACJ,GAC0B,MAA9BA,IAAUzuB,KAAK8G,aACqB,GAA5B2nB,EAAQzuB,KAAK8G,aAAgD,IAA5B2nB,EAAQzuB,KAAK8G,YAE/C,MAAO,GAEV,IAAI+C,EAAO4kB,EAAQzuB,KAAK8G,aAAe,EAEpB,iBAAR+C,IACRA,EAAOA,EAAKqJ,QAAQ,KAAM,KAIzB2vC,MAAMpJ,WAAW5vC,MAAQA,EAAO,GAEpC,MAAMk5C,EAAa/iD,KAAKL,YACpBqjD,aACAl6C,QAAQsF,GAASA,EAAKxN,IAAMZ,KAAKoG,SAAS87C,aAAY,GACpDrI,EACgC,QAAnC75C,KAAKoG,SAASg8C,kBACTz8B,SAAS3lB,KAAKoG,SAASg8C,mBACvB,EAER,IAAIa,EAAgBjjD,KAAKL,YACrBm4C,gBACAhvC,QAAQsF,GAASA,EAAKxN,IAAMZ,KAAKoG,SAASk8C,gBAAe,GACzD1I,EAAc55C,KAAKL,YACnBm4C,gBACAhvC,QAAQsF,GAASA,EAAKxN,IAAMZ,KAAKoG,SAAS+7C,eAAc,GACxDtnC,EAAS,GACTqoC,EAAU,GAEd,GAAIH,GAAcA,EAAWhL,KAC1B,OAAQgL,EAAWpiD,UAChB,IAAK,SACFka,EAASkoC,EAAWhL,KACpB,MACH,IAAK,UACFmL,EAAUH,EAAWhL,KAS9B,GAJA6B,EAAcA,EAAY7B,MAAQ,GAClCkL,EAAgBA,EAAclL,MAAQ,GAGJ,aAA9B/3C,KAAKoG,SAASi8C,aAA6B,CAC5C,MAAMc,EAAQ58C,KAAKi6C,IAAI,GAAI3G,GAC3BhwC,EAAOtD,KAAKC,MAAMqD,EAAOs5C,GAASA,CACrC,CASA,MAAO,GAAGtoC,KAPK7a,KAAKojD,aAAav5C,EAAM,CACpCw5C,eAAgBJ,EAChBK,UAAW,EACXC,iBAAkB3J,EAClByG,YAAaxG,OAGcqJ,GACjC,CAEAE,aAAav5C,EAAM1H,EAAU,CAAC,GAC3B,GAAa,KAAT0H,GAAuB,MAARA,EAAc,OAAOA,EAGxC,MAAM25C,GADN35C,EAAO4vC,WAAW5vC,IACU,EAAI,IAAM,GAGhC45C,GAFN55C,EAAOtD,KAAKm9C,IAAI75C,IAEK+K,WACf+uC,EAAaF,EAAQ/6B,MAAM,KAAK,GAChCk7B,EAAaH,EAAQ/6B,MAAM,KAAK,GAEtC,IAAIm7B,EAAe,GAGnB,GAAI1hD,EAAQkhD,eAAgB,CACzB,MAAMplB,EAAO,EACb,IAAI1qB,EAAIowC,EAAWx9C,OAEnB,GACGoN,GAAK0qB,EAKL4lB,EAAe,GAHZtwC,EAAI,EACCowC,EAAWG,OAAOvwC,EAAG0qB,GACrB0lB,EAAWG,OAAO,EAAG7lB,EAAO1qB,KAEjCswC,EAAe1hD,EAAQkhD,eAAiBQ,EAAe,WAEpDtwC,EAAI,EAChB,MACGswC,EAAeF,EAGlB,IAAI71C,EAAS,GAgBb,OAZGA,EADC3L,EAAQohD,kBAAoBphD,EAAQk+C,YAC5B,GAAGmD,IAAeK,IACxBD,EACKzhD,EAAQohD,iBACRK,EAAWhvC,WAAWkvC,OAAO,EAAG3hD,EAAQk+C,aACxC,KAKC,GAAGmD,IAAeK,IAGvB/1C,CACV,CAEAwyC,iBACG,MAAuC,QAAnCtgD,KAAKoG,SAASg8C,kBACRz8B,SAAS3lB,KAAKoG,SAASg8C,mBAEvB,CAEb,oBCrYH,MAAMnL,EAAU,EAAQ,OAIlB8M,EAAwB,CAC3B1/C,IAAK,SAGLo5B,YAAa,qBAIblyB,KAAM,OAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,mBAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1CsK,gBAtDqB,KA2DlB5c,EAAgB,CACnBqH,QAAS,GACTwV,oBAAqB,GAGxBviD,EAAOC,QAAU,cAAgCu3C,EAC9Ct3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ8+C,EAUzB,CAGA34B,kBACG,OAAO24B,CACV,CAEA34B,uBACG,OAAO+Z,CACV,CAYAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASomC,QAAU7mC,EAAOS,SAASomC,SAAWrH,EAAcqH,QACjExsC,KAAKoG,SAAS47C,oBACXr8C,EAAOS,SAAS47C,oBAAsB,IACtC7c,EAAc6c,oBAGjBhiD,KAAKoG,SAAS47C,oBAAsBr8B,SACjC3lB,KAAKoG,SAAS47C,qBAGbhiD,KAAKoG,SAAS47C,oBACfhiD,KAAK++B,UAAU/+B,KAAKoG,SAAUpG,KAAKoG,SAAU,CAAC,YAC1CpG,KAAKoG,SAASomC,QAAU7mC,EAAOS,SAASomC,SAAW,EAC7D,CAaA1mC,QACG,MAAMkS,EAAMlY,MAAMgG,QAMlB,OAJI9F,KAAKoG,SAAS47C,oBACfhiD,KAAKm/B,YAAYnnB,EAAI5R,SAAU4R,EAAI5R,SAAU,CAAC,YAC1C4R,EAAI5R,SAASomC,QAAUxsC,KAAKoG,SAASomC,QAErCx0B,CACV,CAYAotB,aAAaz/B,GAELA,EAAO3F,KAAK8G,aAEV9G,KAAKoG,SAASomC,UACXxsC,KAAKoG,SAASomC,QAAQn/B,QAAQ,WAAa,EAC5C1H,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAG8N,OAElClK,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAASomC,QAIpD,CAUAhc,YAAY3mB,EAAMtC,GACfzH,MAAM0wB,YAAY3mB,EAAMtC,GAExB,MAAMxH,EAAIC,KAAK+B,GAAG9B,QAGf4J,GACAA,EAAK7J,KAAK8G,aACV+C,EAAK7J,KAAK8G,YAAYX,OAjLP,KAmLfoB,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,2CAA4C,CArLlC,MAwLrB,CAOIokC,qBACD,OAA4C,GAArCnkC,KAAKoG,SAAS47C,mBACxB,kECnMH,MAAM/K,QAAU,oBAAQ,OAExB,SAASl3C,EAAEsE,EAAK0O,GAEb,OAAOA,CACV,CAEA,MAAMixC,2BAA6B,CAChC3/C,IAAK,cAGLo5B,YAAa,eAIblyB,KAAM,WAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,eAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1CtS,cAAgB,CACnB8e,YAAa,IAoBhB,SAASC,kBAAkBj/C,OAAQk/C,cAAe11B,SAC/C,IAAK01B,cAAe,OAEpB,MAAMC,YAAc,aACdC,oBAAsBF,cAAcne,MAAMoe,aA8BhD,OA7BAC,oBAAoBpgD,SAASq3B,UAC1B,MAAMx0B,WAAaw0B,QAAQpoB,QAAQ,SAAU,IAC7CjO,OAAO8B,SAAS9C,SAAS2B,QACtB,GAAIA,MAAMkB,YAAcA,WACrB,GAAiB,aAAblB,MAAMvB,IAAoB,CAE3B,MAAMigD,EAAe1+C,MAAM4a,OAAOiO,UAAY,EAC9C01B,cAAgBA,cAAcjxC,QAAQooB,QAASgpB,EAClD,MAAO,GAAiB,aAAb1+C,MAAMvB,IAAoB,CAElC,MAAM41C,OAAS,IAAIr0C,MAAM4a,OAAOiO,UAAY,KAC5C01B,cAAgBA,cAAcjxC,QAAQooB,QAAS8e,KAAKH,QACvD,MACGkK,cADqB,QAAbv+C,MAAMvB,IACE8/C,cAAcjxC,QAC3BooB,QACA7M,QAAQ3nB,YACHlB,MAAM03C,YAAY7uB,QAAQ3nB,aAC1B,IAGQq9C,cAAcjxC,QAC3BooB,QACA7M,QAAQ3nB,YAAclB,MAAM4a,OAAOiO,SAAW,GAGvD,GACD,IAGE01B,aACV,CASA,SAASI,yBAAyBxiD,EAAIoiD,GACnC,MACMK,EAAwBL,EAAcne,MADtB,gBAEtB,GAAIwe,EAAuB,CACxB,MAAMC,EAAcC,qBACpBF,EAAsBvgD,SAASq3B,IAC5B,MAAMqpB,EAAgBrpB,EAAQ5S,MAAM,SAC9Bk8B,EACHD,EAAcx+C,OAAS,GAAyB,IAApBw+C,EAAc,GACvCE,EAAeF,EAAc,GAC7BG,EAAmBH,EAAc,GAAGj8B,MAAM,KAChD,IAAIq8B,GAAU,EACd,IAAK,IAAIxxC,EAAI,EAAGA,EAAIkxC,EAAYt+C,OAAQoN,IAAK,CAC1C,IAAIyxC,EAAmB1pB,EACvB,GAAIupB,GAAgBJ,EAAYlxC,GAAG3S,GAAI,CACpC,GAAIkkD,EAAiB3+C,QAAUs+C,EAAYlxC,GAAG0xC,eAAgB,CAC3D,OAAQJ,GACL,IAAK,OACFG,EAAmBE,QAChBJ,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,QACFE,EAAmBG,SAChBL,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,MACFE,EAAmBI,OAChBN,EAAiB,GACjBA,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,OACFE,EAAmBK,QAAQP,EAAiB,IAC5C,MACH,IAAK,WACFE,EAAmBM,YAAYR,EAAiB,IAChD,MACH,IAAK,YACFE,EAAmBO,aAAaT,EAAiB,IACjD,MACH,IAAK,SACFE,EAAmBQ,UAAUV,EAAiB,IAC9C,MACH,IAAK,eACFE,EAAmBS,iBAChBX,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,eACFV,EAAmBW,gBAChBb,EAAiB,GACjBA,EAAiB,GAAGY,YAEvB,MACH,IAAK,UACFV,EAAmBY,WAChBd,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,QACFV,EAAmBa,SAASf,EAAiB,IAC7C,MACH,IAAK,QACFE,EAAmBc,SAAShB,EAAiB,IAC7C,MACH,IAAK,aACFE,EAAmBe,cAAcjB,EAAiB,IAClD,MACH,IAAK,SACFE,EAAmBgB,UAAUlB,EAAiB,IAC9C,MACH,IAAK,gBACFE,EAAmBiB,iBAChBnB,EAAiB,IAEpB,MACH,IAAK,uBACEF,IACDtpB,GAAoB,KAEvB0pB,EAAmBkB,qBAChBnkD,EACA+iD,EAAiB,IAEpB,MACH,IAAK,yBACEF,IACDtpB,GAAoB,KAEvB0pB,EAAmBmB,uBAChBpkD,EACA+iD,EAAiB,IAEpB,MACH,IAAK,aACFE,EAAmBoB,cAChBtB,EAAiB,GACjBA,EAAiB,GAAGY,YAW7B,OALAX,GAAU,OACVZ,EAAgBA,EAAcjxC,QAC3BooB,EACA0pB,GAGN,CACGA,EAAmBH,EAAe,kBAClCV,EAAgBA,EAAcjxC,QAC3BooB,EACA0pB,EAGT,CACH,IAEN,CACA,OAAOb,CACV,CAEA,SAASO,qBA0GN,MAzGqB,CAClB,CACG9jD,GAAI,OACJ+B,MAAO,yBACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,QACJ+B,MAAO,0BACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,MACJ+B,MAAO,2BACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,OACJ+B,MAAO,sBACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,WACJ+B,MAAO,0BACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,YACJ+B,MAAO,2BACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,SACJ+B,MAAO,wBACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,eACJ+B,MAAO,kDACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,eACJ+B,MAAO,mCACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,UACJ+B,MAAO,sDACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,QACJ+B,MAAO,uBACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,QACJ+B,MAAO,uBACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,aACJ+B,MAAO,4BACPf,KAAM,WACNqjD,eAAgB,GAEnB,CAAErkD,GAAI,SAAU+B,MAAO,YAAaf,KAAM,WAAYqjD,eAAgB,GACtE,CACGrkD,GAAI,gBACJ+B,MAAO,2CACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,uBACJ+B,MAAO,sCACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,yBACJ+B,MAAO,wCACPf,KAAM,WACNqjD,eAAgB,GAEnB,CACGrkD,GAAI,aACJ+B,MAAO,2CACPf,KAAM,WACNqjD,eAAgB,GAIzB,CAEA,SAASC,QAAQmB,EAAQC,GACtB,OAAOD,EAAOztB,UAAU,EAAGjT,SAAS2gC,GACvC,CAEA,SAASnB,SAASkB,EAAQE,GACvB,MAAMC,EAAaC,cAAcJ,GAAQztB,UAAU,EAAGjT,SAAS4gC,IAC/D,OAAOE,cAAcD,EACxB,CAEA,SAASC,cAAcJ,GACpB,OAAOA,EAAO39B,MAAM,KAAKg+B,UAAUp4C,KAAK,IAC3C,CAEA,SAAS82C,OAAOiB,EAAQM,EAAexgD,GACpC,OAAIkgD,EAAOlgD,OAASwgD,EAAsB,qBACnCN,EAAOztB,UACXjT,SAASghC,GACThhC,SAASghC,GAAiBhhC,SAASxf,GAEzC,CAEA,SAASk/C,QAAQgB,GACd,OAAOA,EAAOxgB,MACjB,CAEA,SAASyf,YAAYe,GAClB,OAAOA,EAAOX,UACjB,CAEA,SAASH,aAAac,GACnB,OAAOA,EAAOO,WACjB,CAEA,SAASpB,UAAUa,GAChB,OAAOA,EAAOlgD,MACjB,CAEA,SAASs/C,iBAAiBY,EAAQQ,EAAQC,GACvC,OAAOT,EAAOnzC,QAAQ2zC,EAAQC,EACjC,CAEA,SAASnB,gBAAgBU,EAAQQ,GAC9B,MAAME,EAAgBV,EAAOrgB,MAAM6gB,GACnC,OAAI15C,MAAMC,QAAQ25C,GACRA,EAAc,GAEjBA,CACV,CAEA,SAASnB,WAAWS,EAAQW,EAAaC,GACtC,OAAOZ,EAAOnzC,QAAQ8zC,EAAaC,EACtC,CAEA,SAASpB,SAASQ,GACf,OAAOA,EAAOhuC,aACjB,CAEA,SAASytC,SAASO,GACf,OAAOA,EAAOa,aACjB,CAEA,SAASnB,cAAcM,GACpB,OAAOA,EACHhuC,cACAqQ,MAAM,KACNva,KAAKvB,GAAMA,EAAEu6C,OAAO,GAAGD,cAAgBt6C,EAAEgsB,UAAU,KACnDtqB,KAAK,IACZ,CAEA,SAAS03C,UAAUtF,GAChB,OAAOn6C,KAAKC,MAAMD,KAAKE,UAAYi6C,EAAM,GAC5C,CAEA,SAASuF,iBAAiBjlC,GACvB,MAAMqlC,EAASrlC,EAAO6kB,KAAK,KAAKjxB,WAEhC,IAAIwyC,EACDC,EACAC,EACAv0B,EACAw0B,EACAC,EACAC,EACAC,EACAC,EACAp0C,EACAq0C,EACAC,EAKH,GAAyB,IAArBliC,SAAS0gC,GACV,MAAO,OAuEV,IAnEAe,EAAQ,CACL,GACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,SACA,SACA,WACA,WACA,UACA,UACA,YACA,WACA,YAIHC,EAAO,CACJ,GACA,GACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,UAIHC,EAAS,CACN,GACA,WACA,UACA,UACA,WACA,cACA,cACA,aACA,aACA,YACA,YACA,YACA,cACA,eACA,eACA,sBACA,gBACA,eACA,mBACA,gBACA,iBACA,eACA,cAIHv0B,EAAQszB,EAAOlgD,OACfqhD,EAAS,GACFz0B,EAAQ,GACZw0B,EAAMx0B,EACNy0B,EAAOljD,KAAK+hD,EAAOjzC,MAAO2f,EAAQxsB,KAAKm6C,IAAI,EAAG3tB,EAAQ,GAAKw0B,IAK9D,GADAE,EAAYD,EAAOrhD,OACfshD,EAAYH,EAAOnhD,OACpB,MAAO,GAKV,IADA0hD,EAAQ,GACHt0C,EAAI,EAAGA,EAAIk0C,EAAWl0C,IACxBm0C,EAAQ/hC,SAAS6hC,EAAOj0C,IAEpBm0C,IAEDC,EAAOH,EAAOj0C,GAAGmV,MAAM,IAAIg+B,UAAUv4C,IAAIsrC,YAGzB,IAAZkO,EAAK,KACNA,EAAK,IAAM,KAITC,EAAON,EAAO/zC,KAChBs0C,EAAMvjD,KAAKsjD,IAITA,EAAOR,EAAMO,EAAK,MACpBE,EAAMvjD,KAAKsjD,IAITA,EAAOP,EAAKM,EAAK,MACnBE,EAAMvjD,KAAKsjD,IAIVD,EAAK,IAAMA,EAAK,MAEbA,EAAK,KAAQp0C,GAAKk0C,IACnBI,EAAMvjD,KAvHN,KA4HDsjD,EAAOR,EAAMO,EAAK,MACpBE,EAAMvjD,KAAKsjD,EAAO,aAK3B,OAAOC,EAAMnB,UAAUp4C,KAAK,IAC/B,CAEA,SAAS43C,qBAAqBnkD,EAAI4e,GAK/B,OAAO5e,EAAGsf,MAAMX,aAAaC,EAAM,CAChCH,OAAQ,OACRK,WAAY9e,EAAG+Q,QAAQ5C,YAE7B,CAEA,SAASi2C,uBAAuBpkD,EAAI4e,GAKjC,OAAO5e,EAAGsf,MAAMX,aAAaC,EAAM,CAChCH,OAAQ,OACRK,WAAY9e,EAAG+Q,QAAQ5C,YAE7B,CAEA,SAASk2C,cAAczlC,EAAMH,GAE1B,OADW,IAAIC,KAAKE,GACV/L,SAAS4L,EACtB,CAEA/gB,OAAOC,QAAU,cAAqCu3C,QACnDt3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ++C,2BAazB,CAGA54B,kBACG,OAAO44B,0BACV,CAEA54B,uBACG,OAAO+Z,aACV,CAEA/Z,4BACG,OAAOs5B,oBACV,CAYAtf,aAAaz/B,GAELA,EAAO3F,KAAK8G,WAIpB,CAUA0pB,YAAY3mB,EAAMtC,GAKf,OAJYzH,MAAMyF,SAKrB,CAOI4+B,qBAED,OAAO,CACV,CAEA3jB,OAAOiO,GACJ,IACG,IAAKzuB,KAAKoG,SAAS69C,YAAa,MAAO,GAEvC,IAAI6D,EAAgB9nD,KAAKoG,SAAS69C,YAQlC,OALA6D,EAAgB5D,kBAAkBlkD,KAAKiF,OAAQ6iD,EAAer5B,GAG9Dq5B,EAAgBvD,yBAAyBvkD,KAAK+B,GAAI+lD,GAE3CA,CAGV,CAFE,MAAO3/C,GACN,MAAO,EACV,CACH,oBClsBH,MAAM4/C,EAAqB,EAAQ,OAO7BC,EAAsB,CACzB3jD,IAAK,OAGLo5B,YACG,2GAIHlyB,KAAM,UAIN4rC,cAAc,EAOdC,YAAY,EAMZjzC,SAAU,YAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAM1CtS,EAAgB,CACnBhjC,QAAS,IAGZ1C,EAAOC,QAAU,cAA8BqoD,EAC5CpoD,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ+iD,EACzB,CAGA58B,kBACG,OAAO48B,CACV,CAEA58B,uBACG,OAAO+Z,CACV,CAYAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGb3F,KAAKoG,SAASjE,SAAWnC,KAAKoG,SAASjE,QAAQgE,OAAS,GACzDnG,KAAKoG,SAASjE,QAAQ8B,SAASy9C,IAC5B1hD,KAAK++B,UAAU2iB,EAAKA,EAAK,CAAC,QAAQ,GAG3C,CAaA57C,QACG,MAAMkS,EAAMlY,MAAMgG,QASlB,OANIkS,EAAI5R,SAASjE,SAAW6V,EAAI5R,SAASjE,QAAQgE,OAAS,GACvD6R,EAAI5R,SAASjE,QAAQ8B,SAASy9C,IAC3B1hD,KAAKm/B,YAAYuiB,EAAKA,EAAK,CAAC,QAAQ,IAInC1pC,CACV,CAYAotB,aAAaz/B,GAAS,CAUtB6qB,YAAY3mB,EAAMtC,GACfzH,MAAM0wB,YAAY3mB,EAAMtC,EAC3B,oBClJH,MAAM0gD,EAAiB,EAAQ,OAOzBC,EAAsB,CACzB7jD,IAAK,OAGLo5B,YAAa,yBAIblyB,KAAM,SAIN4rC,cAAc,EAOdC,WAAaxxC,IACNA,EAAMQ,SAASk7C,WAWtBn9C,SAAU,OAIVkzC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1C0Q,kBAAmB,wCAMhBhjB,EAAgB,CACnBijB,SAAU,EACV9G,WAAY,EACZ+G,cAAe,EACfC,mBAAoB,EACpBC,eAAgB,GAGnB9oD,EAAOC,QAAU,cAA8BuoD,EAC5CtoD,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQijD,EACzB,CAGA98B,kBACG,OAAO88B,CACV,CAEA98B,uBACG,OAAO+Z,CACV,CAMAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASgiD,SAAWziC,SAAS3lB,KAAKoG,SAASgiD,UAChDpoD,KAAKoG,SAASk7C,WAAa37B,SAAS3lB,KAAKoG,SAASk7C,YAClDthD,KAAKoG,SAASiiD,cAAgB1iC,SAAS3lB,KAAKoG,SAASiiD,eACrDroD,KAAKoG,SAASkiD,mBAAqB3iC,SAChC3lB,KAAKoG,SAASkiD,oBAEjBtoD,KAAKoG,SAASmiD,eAAiB5iC,SAAS3lB,KAAKoG,SAASmiD,eACzD,CAMA/nC,OAAOiO,GACJ,IAAIvY,EAAMlW,KAAKg7C,UAAUvsB,IAAY,GAKrC,OAHIvY,IAAQ/I,MAAMC,QAAQ8I,KAAMA,EAAM,CAACA,IAClCA,IAAKA,EAAM,IAETA,EAAI/H,KAAKmF,GAAMA,EAAE1C,UAAY0C,IAAGhF,KAAK,KAC/C,oBCzHH,MAAMgpB,EAAuB,EAAQ,OAE/BkxB,EAAwB,CAC3B5mD,KAAM,gBASTnC,EAAOC,QAAU,cAAgC43B,EAC9C33B,YAAYujB,EAAYwE,EAAS3lB,GAC9BjC,MAAMojB,EAAYwE,EAAS3lB,EAK9B,CAEAqpB,kBACG,OAAOo9B,CACV,CAEAviD,WAAWid,GASRpjB,MAAMmG,WAAWid,GAEjBljB,KAAK4B,KAAOshB,EAAWthB,MAAQ4mD,EAAsB5mD,IACxD,oBCrCH,MAAMqhB,EAAY,EAAQ,OAEpBwlC,EAA+B,CAClC7mD,KAAM,uBAOTnC,EAAOC,QAAU,cAAuCujB,EACrDtjB,YAAYujB,EAAYwE,EAAS3lB,GAC9BjC,MAAM,CAAC,SAAUiC,GAEjB/B,KAAK0nB,QAAUA,EACV1nB,KAAKklB,YACPllB,KAAKklB,UAAYwC,EAAQ9mB,IAG5BZ,KAAKiG,WAAWid,EAKnB,CAEAkI,kBACG,OAAOq9B,CACV,CAEAxiD,WAAWid,GAwBR,SAASwlC,EAAaC,GACnB,YAA2B,IAAbA,GAAyC,MAAbA,CAC7C,CAhBA3oD,KAAKY,GAAKsiB,EAAWtiB,GACrBZ,KAAKmH,KAAO+b,EAAW/b,MAAQ,GAC/BnH,KAAK4B,KAAOshB,EAAWthB,MAAQ6mD,EAA6B7mD,KAC5D5B,KAAKqE,IAAM6e,EAAW7e,KAAOokD,EAA6B7mD,KAG1D5B,KAAKklB,UAAYhC,EAAWgC,WAAa,KACzCllB,KAAKupC,UAAYrmB,EAAWqmB,WAAa,cACzCvpC,KAAK4oD,QAAU1lC,EAAW0lC,SAAW,GACrC5oD,KAAK6oD,SAAU,EACX3lC,EAAW2lC,SAAiC,IAAtB3lC,EAAW2lC,UAClC7oD,KAAK6oD,QAAU3lC,EAAW2lC,SAO7B7oD,KAAK4lB,QAAU,EACX8iC,EAAaxlC,EAAW0C,WACzB5lB,KAAK4lB,QAAUD,SAASzC,EAAW0C,UAGtC5lB,KAAK6lB,KAAO,EACR6iC,EAAaxlC,EAAW2C,QACzB7lB,KAAK6lB,KAAO3C,EAAW2C,MAG1B7lB,KAAK8oD,WAAa,EACdJ,EAAaxlC,EAAW4lC,cACzB9oD,KAAK8oD,WAAanjC,SAASzC,EAAW4lC,aAGzC9oD,KAAK+oD,QAAU,EACXL,EAAaxlC,EAAW6lC,WACzB/oD,KAAK+oD,QAAU7lC,EAAW6lC,SAG7B/oD,KAAKgpD,SAAW,EACZN,EAAaxlC,EAAW8lC,YACzBhpD,KAAKgpD,SAAWrjC,SAASzC,EAAW8lC,WAGvChpD,KAAKipD,UAAY,GACbP,EAAaxlC,EAAW+lC,aACzBjpD,KAAKipD,UAAY/lC,EAAW+lC,WAI/BjpD,KAAK+G,OAAS,GACV2hD,EAAaxlC,EAAWnc,UACzB/G,KAAK+G,OAASmc,EAAWnc,QAG5BjH,MAAMmG,WAAWid,GAGZljB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAaArB,SAEQ9F,KAAKoB,OAASpB,KAAKmH,MAAqB,IAAbnH,KAAKmH,OAClCnH,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAuBjB,MArBmB,CAChB,KACA,OACA,OACA,YACA,YACA,UACA,QACA,UACA,OACA,aACA,UACA,WACA,YACA,SACA,WAEU7B,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGb6C,CACV,CAOAk/B,iBAAkB,oBClJrB,IAAImgB,EAAQ,CAAC,EAWTC,EAAkB,CAAC,EAEnBC,EAAqB,CACtB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAGXA,EAAmBnlD,SAASolD,IAGzB,OAFAH,EAAMG,EAAQjlD,WAAWC,KAAOglD,EAExBA,EAAQjlD,WAAWklD,UACxB,IAAK,QACL,IAAK,MACFH,EACGE,EAAQE,iBAAiBC,OAAOC,qBAC/BJ,EAAQjlD,WACZ,MAEH,IAAK,UACL,IAAK,OACF+kD,EACGE,EAAQE,iBAAiBC,OAAO5nD,MAC/BynD,EAAQjlD,WAElB,IAGH3E,EAAOC,QAAU,CAMdgqD,SAAU,WACP,IAAIC,EAAQ,GACZ,IAAK,IAAIrqB,KAAK4pB,EACXS,EAAMrlD,KAAK4kD,EAAM5pB,IAEpB,OAAOqqB,CACV,EAOAvuB,QAAS,SAAUz1B,EAAQ+hB,EAAS3lB,GACjC,GAAI4D,EAAOtB,IACR,OAAO,IAAI6kD,EAAMvjD,EAAOtB,KAAKsB,EAAQ+hB,EAAS3lB,EAIpD,EAEA6nD,iCAAkC,SAAUhoD,GAMzC,OALkBwnD,EAAmBtgD,QAAQuB,GACnCA,EAAEjG,WAAWklD,UAAY1nD,IAChCuM,KAAK9D,GACEA,EAAEk/C,kBAGf,EAEAM,YAAa,WACV,OAAO7pD,KAAK4pD,iCAAiC,QAChD,EAEAE,SAAU,WACP,OAAO9pD,KAAK4pD,iCAAiC,UAChD,EAEAV,MAAO,WACJ,OAAOlpD,KAAK4pD,iCAAiC,OAChD,EAEAG,UAAW,WACR,OAAO/pD,KAAK4pD,iCAAiC,MAChD,EAEAnuB,qBAAsB,SAAUH,GAG7B,IAAIj3B,EAAM,KACV,GAAIi3B,EAAQgP,eAAe0f,iBAAkB,CAC1C,IAAIroC,EAAM2Z,EAAQgP,eAAe0f,iBAAiB,GAC9CroC,IACDtd,EAAMsd,EAAIsoC,MAEhB,CAOA,OAJK5lD,IACFA,EAAMi3B,EAAQ15B,MAGVunD,EAAgB9kD,EAC1B,oBCvIH,IAAI4e,EAAY,EAAQ,OAExBxjB,EAAOC,QAAU,cAAgCujB,EAC9CtjB,YAAYujB,EAAYwE,EAAS3lB,EAAIojC,GAClCrlC,MAAM,CAAC,SAAUiC,GAEjB/B,KAAKoE,SAAW+gC,GAAiB,CAAE9gC,IAAK,OAAQkH,KAAM,QAKtDvL,KAAKiG,WAAWid,GAEhBljB,KAAK0nB,QAAUA,EACV1nB,KAAKklB,YACPllB,KAAKklB,UAAYwC,EAAQ9mB,IAQ5BZ,KAAKkqD,MAAQ,IAChB,CAMAjkD,WAAWid,GAURljB,KAAKY,GAAKsiB,EAAWtiB,GACrBZ,KAAKmH,KAAO+b,EAAW/b,MAAQ,GAC/BnH,KAAK4B,KAAOshB,EAAWthB,MAAQ,uBAG/B5B,KAAKqE,IAAM6e,EAAW7e,KAAOrE,KAAKoE,SAASC,KAAO,QAClDrE,KAAKklB,UAAYhC,EAAWgC,WAAa,KACzCllB,KAAKupC,UAAYrmB,EAAWqmB,WAAa,cACzCvpC,KAAKmqD,cAAgBjnC,EAAWinC,eAAiB,WAU7CnqD,KAAKoE,UAAYpE,KAAKoE,SAASgC,UAChCpG,KAAKoE,SAASgC,SAASnC,SAAS2I,SACD,IAAjBsW,EAAWtW,GAAmB5M,KAAK4M,GAAK,KAC9C5M,KAAK4M,GAAKsW,EAAWtW,EAAE,IAIlC9M,MAAMmG,WAAWid,GAGZljB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAaArB,SAEQ9F,KAAKoB,OAASpB,KAAKmH,MAAqB,IAAbnH,KAAKmH,OAClCnH,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAsBjB,MApBmB,CAChB,KACA,OACA,OACA,YACA,YACA,gBACA,OAEU7B,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAIhBhH,KAAKoE,UAAYpE,KAAKoE,SAASgC,UAChCpG,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B/C,EAAK+C,GAAK5M,KAAK4M,EAAE,IAIhB/C,CACV,CAmBAugD,YAAYC,EAAUprC,EAAKlY,EAAS,IACjC/G,KAAKqX,IAAIgzC,EAAUprC,GACnB,IAAI1P,EAAQ,IAAIjH,MAAM,GAAGtI,KAAK4B,SAASqd,KACnC4C,EAAO,CAAEiqB,KAAM9rC,MAMnB,OALKmN,MAAMC,QAAQrG,KAASA,EAAS,CAACA,IACtCA,EAAO9C,SAAS2B,IACbic,EAAKjc,GAAS5F,KAAK4F,EAAM,IAE5B5F,KAAK+B,GAAGqG,OAAOuuB,QAAQpnB,EAAOsS,GACvBpS,QAAQoH,OAAOtH,EACzB,CAYA+6C,UAAUh7C,EAASlL,EAAU8R,GAiB1B,GAhBA9R,EAAWA,GAAY,CAAC,EACnB8R,IACFA,EAAM9R,EACNA,EAAW,CAAC,EAGRpE,KAAKoE,UAAYpE,KAAKoE,SAASmmD,gBAChCvqD,KAAKoE,SAASmmD,eAAetmD,SAASqP,IACnClP,EAASkP,GAAK,IAAI,KAK3BhE,EAAQk7C,UAAYl7C,EAAQk7C,WAAa,CAAC,GAGrCl7C,EAAQk7C,UAAUxqD,KAAKupC,WAAY,CAKrC,IAAK,IAAIvY,KAJT1hB,EAAQk7C,UAAUxqD,KAAKupC,WAAa,CACjC5c,aAAa,EACbpV,OAAQ,eAEGnT,EACXkL,EAAQk7C,UAAUxqD,KAAKupC,WAAWvY,GAAK5sB,EAAS4sB,GAEnD,IAAK,IAAI1d,KAAK4C,EACX5G,EAAQk7C,UAAUxqD,KAAKupC,WAAWj2B,GAAK4C,EAAI5C,EAEjD,CACH,CAOAm3C,YACG,OAAO,CACV,CAQApzC,IAAIgzC,KAAaK,GACd,IAAIr8C,EAAO,GAAGrO,KAAKupC,eAChBvpC,KAAKmH,KAAOnH,KAAKmH,KAAOnH,KAAKqE,SAC1BqmD,EAAQp8C,KAAK,OACnB+7C,EAAShzC,IAAI/S,KAAK+J,EACrB,CAQAs8C,SACG,OAAO3qD,KAAK0nB,QAAQmjB,oBAAoB7qC,KAAKmqD,cAChD,CAQAS,QAAQP,GACL,OAAOA,EAAS/6C,QAAQk7C,UAAUxqD,KAAKupC,UAC1C,CASAshB,UAAUR,GACP,IAAIQ,EAAY,GAEZC,EAAeT,EAASU,mBAAmB/qD,KAAKupC,WACpD,IAAKuhB,EAAc,CAChB,IAAIv7C,EAAQ,IAAIjH,MACb,2DAA2DtI,KAAKupC,cAGnE,OADAvpC,KAAKgrD,QAAQX,EAAU96C,GAChB,IACV,CAUA,IAAI07C,EAAYH,EAAa,kBAC7B,IAAKG,EAMF,OALI17C,EAAQ,IAAIjH,MACb,gEAAgEtI,KAAKupC,cAExEvpC,KAAK+B,GAAGqG,OAAOuuB,QAAQpnB,EAAO,CAAEu8B,KAAM9rC,OACtCA,KAAKgrD,QAAQX,EAAU96C,GAChB,KAGLpC,MAAMC,QAAQ69C,KAChBA,EAAY,CAACA,IAGhB,IAAIC,EAAiBC,IAIlB,IAAIC,EAAUf,EAASU,mBAAmBI,EAAY,OACtD,GAAKC,EAAL,CAEA,IAAIC,EAAYD,EAAqB,YAAa,UAC7CC,IAEAl+C,MAAMC,QAAQi+C,KAChBA,EAAY,CAACA,IAGhBA,EAAUpnD,SAASqnD,IAChB,IAAIC,EAAavrD,KAAK0nB,QAAQmjB,oBAAoBygB,GAClD,GAAIC,EACGV,GACDA,EAAUvmD,KAAKinD,OAEd,CACJ,IAAIh8C,EAAQ,IAAIjH,MACb,8DAA8DgjD,MAEjEtrD,KAAK+B,GAAGqG,OAAOuuB,QAAQpnB,EAAO,CAAEu8B,KAAM9rC,OACtCA,KAAKgrD,QAAQX,EAAU96C,GACvBs7C,EAAY,IACf,KAtBiB,CAuBlB,EAOL,OAJAI,EAAUhnD,SAAS+C,IAChBkkD,EAAclkD,EAAE,IAGZ6jD,CACV,CAQAG,QAAQX,EAAU96C,GACf,GAAIA,EAAO,CACR,IAAIlB,EAAO,GAAGkB,EAAMqF,aACpB5U,KAAKqX,IAAIgzC,EAAUh8C,EACtB,CACcrO,KAAK4qD,QAAQP,GACnB9yC,OAAS,OACpB,CAUAi0B,oBACG,OAAO,IACV,CAQAJ,YAAYif,EAAUhmD,GACnB,OAAO,IACV,CAQA2nC,qBACG,OAAO,IACV,CAQAwf,sBAAsBnB,GACnB,IAAIoB,EAAiBzrD,KAAK0nB,QAAQ8jB,kBAAkBxrC,MAChD0rD,EAAuB,CAAC,EAO5B,OANAD,EAAexnD,SAAS+C,IACrB0kD,EAAqB1kD,EAAE3C,KAAOrE,KAAK0nB,QAAQ0jB,YAAYprC,KAAM,CAC1DqqD,EACArjD,EAAE3C,KACH,IAEEqnD,CACV,CAWAlxC,MAAM6vC,GAEH,IAAIO,EAAU5qD,KAAK4qD,QAAQP,GAItBO,EAKoB,aAAlBA,EAAQrzC,QAA2C,SAAlBqzC,EAAQrzC,gBAEnC8yC,EAAS/6C,QAAQk7C,UAAUxqD,KAAKupC,WAGvCvpC,KAAKsqD,UAAUD,EAAS/6C,SAGTtP,KAAK4qD,QAAQP,GACnBsB,WAAaf,EACtB5qD,KAAKqX,IAAIgzC,EAAU,qCAdtBrqD,KAAKsqD,UAAUD,EAAS/6C,QAiB9B,CAOAs8C,eAAevB,GACErqD,KAAK4qD,QAAQP,GACnB9yC,OAAS,WACpB,CAQAs0C,YAAYxB,EAAU1kD,GACnBA,EAASA,GAAU,CAAC,EACpB,IAAIilD,EAAU5qD,KAAK4qD,QAAQP,GAC3B,IAAK,IAAI/2C,KAAK3N,EACXilD,EAAQt3C,GAAK3N,EAAO2N,EAE1B,CAQAw4C,kBAAkBzB,GACf,IAAIH,EAAQlqD,KAAK4qD,QAAQP,GACzB,OAAIH,EACsB,aAAhBA,EAAM3yC,QAAyC,SAAhB2yC,EAAM3yC,QAG5C/O,QAAQC,KACL,4FACA4hD,GAGHrqD,KAAKsqD,UAAUD,EAAS/6C,SACjBtP,KAAK8rD,kBAAkBzB,GAEpC,CAMAthB,iBAAkB,CAEdgjB,oBAMD,OAJG/rD,KAAK0nB,QAAQxe,UACTE,GACEA,GAAQA,EAAKhF,UAAuC,UAA3BgF,EAAKhF,SAASklD,YACxC,EAEX,CAEI0C,uBACD,OAAOhsD,KAAK0nB,QAAQyjB,uBAAuBnrC,KAC9C,CAEIisD,2BACD,MAAMC,EAAYlsD,KAAK+rD,cAAc,GACrC,OAAKG,EAEElsD,KAAK+B,GAAGkW,WAAWi0C,EAAUhwB,UAFb,IAG1B,CAEIiwB,0BACD,IAGIjwB,EAHAkwB,EAAWpsD,KAAKgsD,iBAAiB,GACrC,OAAKI,GAKClwB,EADE,+BADAkwB,EAASxqD,KAEAwqD,EAASC,MAAQD,EAASC,MAAMnwB,SAAW,KAI3CkwB,EAASlwB,SAInBl8B,KAAK+B,GAAGkW,WAAWikB,IAbJ,IAczB,oBC/eH,MAAMowB,EAAmB,EAAQ,OAEjC,IAAIC,EAA2B,CAC5BjD,SAAU,MAQVviD,OAAQ,GAIRwE,KAAM,OAKNlH,IAAK,OAKR5E,EAAOC,QAAU,cAAmC4sD,EACjD3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,mBACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIwqD,EAGlC,CAGAnhC,kBACG,OAAOmhC,CACV,CAEAnhC,wBACG,MAAO,CACJhqB,MAAO,sBACPorD,WAAY,6BACZC,UAAW,gCACXjD,OAAQ,CACL5nD,KAAM,gBACN6nD,oBAAqB,iCAG9B,CA4BAa,UAAUh7C,EAAS4G,GAKhBpW,MAAMwqD,UAAUh7C,EAJC,CACdo9C,WAAW,GAGuBx2C,EACxC,CAOAu0C,YACG,OAAO,CACV,CASAI,UAAUR,GAEP,MAAO,EACV,oBCvGH,MAAMiC,EAAmB,EAAQ,OAEjC,IAAIK,EAAoC,CACrCrD,SAAU,UAQV/9C,KAAM,eAKNg/C,eAAgB,GAIhBlmD,IAAK,mBAIL+B,SAAU,CAAC,eAMd3G,EAAOC,QAAU,cAA4C4sD,EAC1D3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,4BACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAI4qD,EAGlC,CAGAvhC,kBACG,OAAOuhC,CACV,CAEAvhC,wBACG,MAAO,CACJhqB,MAAO,oBACPorD,WAAY,iCACZC,UAAW,wBACXjD,OAAQ,CACL5nD,KAAM,yBAGf,CAEAqE,WAAWid,GASRpjB,MAAMmG,WAAWid,GAEjBljB,KAAKyvC,WAAazvC,KAAKyvC,YAAc,CAAC,CACzC,oBChEH,MAAM6c,EAAmB,EAAQ,OAEjC,IAAIM,EAA6B,CAC9BtD,SAAU,OAQVviD,OAAQ,CACL,KACA,OACA,UACA,UACA,WACA,aACA,UACA,YACA,iBACA,oBAKHwE,KAAM,QAINlH,IAAK,SAKR5E,EAAOC,QAAU,cAAqC4sD,EACnD3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,qBACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAI6qD,EAGlC,CAGAxhC,kBACG,OAAOwhC,CACV,CAEAxhC,wBACG,MAAO,CACJhqB,MAAO,YACPorD,WAAY,yBACZC,UAAW,iBACXjD,OAAQ,CACL5nD,KAAM,iBAGf,CAEAqE,WAAWid,GASRpjB,MAAMmG,WAAWid,GAEjB0pC,EAA2B7lD,OAAO9C,SAAS+C,IACxChH,KAAKgH,GAAKkc,EAAWlc,EAAE,GAE7B,CAkBAlB,QACG,IAAI+D,EAAO/J,MAAMgG,QAMjB,OAJA8mD,EAA2B7lD,OAAO9C,SAAS+C,IACxC6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGb6C,CACV,CA8BAygD,UAAUh7C,EAAS4G,GAChB,IAAI22C,EAAa,CACd7iB,GAAI,GACJE,KAAM,GACN4iB,QAAS9sD,KAAK8sD,QACdx7C,QAAStR,KAAKsR,SAGjBxR,MAAMwqD,UAAUh7C,EAASu9C,EAAY32C,EACxC,mBC5IH,MAAMo2C,EAAmB,EAAQ,OAEjC,IAAIS,EAAoC,CACrCzD,SAAU,KAQV/9C,KAAM,eAINg/C,eAAgB,GAIhBlmD,IAAK,4BAIL+B,SAAU,CACP,cACA,oBACA,oBACA,4BACA,WACA,iBACA,YACA,gBACA,wBACA,WACA,yBACA,iBACA,YACA,mBAON3G,EAAOC,QAAU,cAA4C4sD,EAC1D3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,kDACtB9B,MAAMojB,EAAYwE,EAAS3lB,EAAIgrD,EAGlC,CAGA3hC,kBACG,OAAO2hC,CACV,CAEA3hC,wBACG,OAAO,IACV,oBC5DH,MAAMkhC,EAAmB,EAAQ,OAEjC,IAAIU,EAA4B,CAC7B1D,SAAU,KAQV/9C,KAAM,eAINg/C,eAAgB,GAIhBlmD,IAAK,oBAIL+B,SAAU,CACP,iBACA,WACA,WACA,YACA,eACA,cACA,gBACA,gBACA,kBACA,iBACA,iBACA,YACA,eACA,gBACA,eACA,gBACA,kBACA,sBACA,iBACA,mBAON3G,EAAOC,QAAU,cAAoC4sD,EAClD3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,0CACtB9B,MAAMojB,EAAYwE,EAAS3lB,EAAIirD,EAGlC,CAGA5hC,kBACG,OAAO4hC,CACV,CAEA5hC,wBACG,OAAO,IACV,oBClEH,MAAMkhC,EAAmB,EAAQ,OAEjC,IAAIW,EAAgC,CACjC3D,SAAU,KAQV/9C,KAAM,eAINg/C,eAAgB,GAIhBlmD,IAAK,wBAIL+B,SAAU,CACP,qBACA,eACA,gBACA,WACA,gBACA,oBACA,iBACA,mBACA,iBACA,oBACA,oBACA,oBACA,kBACA,sBACA,wBACA,YACA,iBACA,eACA,qBACA,sBACA,uBAON3G,EAAOC,QAAU,cAAwC4sD,EACtD3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,8CACtB9B,MAAMojB,EAAYwE,EAAS3lB,EAAIkrD,EAGlC,CAGA7hC,kBACG,OAAO6hC,CACV,CAEA7hC,wBACG,OAAO,IACV,oBCnEH,MAAMkhC,EAAmB,EAAQ,OAEjC,IAAIY,EAA8B,CAC/B5D,SAAU,KAQV/9C,KAAM,UAINg/C,eAAgB,GAIhBlmD,IAAK,sBAIL+B,SAAU,CACP,oBACA,cACA,gBACA,WACA,kBAEA,wBACA,iBACA,YACA,wBACA,qBACA,iBACA,YACA,gBAON3G,EAAOC,QAAU,cAAsC4sD,EACpD3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,4CACtB9B,MAAMojB,EAAYwE,EAAS3lB,EAAImrD,EAGlC,CAGA9hC,kBACG,OAAO8hC,CACV,CAEA9hC,wBACG,OAAO,IACV,oBC5DH,MAAMkhC,EAAmB,EAAQ,OAEjC,IAAIa,EAAoB,CACrB7D,SAAU,KAQV/9C,KAAM,aAINg/C,eAAgB,GAIhBlmD,IAAK,YAIL+B,SAAU,CAAC,gBAGd3G,EAAOC,QAAU,cAAgC4sD,EAC9C3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,iCACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIorD,EAGlC,CAGA/hC,kBACG,OAAO+hC,CACV,CAEA/hC,wBACG,OAAO,IACV,CAUAogB,oBACG,MAAMpqC,EAAQ,GAAGpB,KAAKoB,eAWtB,OAPKpB,KAAKotD,WACPptD,KAAKqtD,SAAWrtD,KAAK+B,GAAGk4B,UAAU,CAAC,GACnCj6B,KAAKotD,SAAWptD,KAAK+B,GAAGmE,SACrB,CAAE7B,IAAK,SAAU8C,KAAM/F,EAAOA,SAC9BpB,KAAKqtD,WAGJ,CACJhpD,IAAK,GAAGrE,KAAKY,WACbQ,QACAwE,MAAO5F,KAAKotD,SAElB,oBCzDH,MAAMd,EAAmB,EAAQ,OAEjC,IAAIgB,EAA+B,CAChChE,SAAU,OAQV/9C,KAAM,eAINg/C,eAAgB,GAIhBlmD,IAAK,cAIL+B,SAAU,IAMb3G,EAAOC,QAAU,cAAuC4sD,EACrD3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,uBACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIurD,EAGlC,CAGAliC,kBACG,OAAOkiC,CACV,CAEAliC,wBACG,MAAO,CACJhqB,MAAO,eACPorD,WAAY,4BACZC,UAAW,oBACXjD,OAAQ,CACL5nD,KAAM,oBAGf,oBC5DH,MAAM0qD,EAAmB,EAAQ,OAE3BiB,EAA2C,CAC9CjE,SAAU,KAQV/9C,KAAM,cAINg/C,eAAgB,GAIhBlmD,IAAK,sBAIL+B,SAAU,CAAC,UAMd3G,EAAOC,QAAU,cAAmD,EAGjEC,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,2CACtB9B,MAAMojB,EAAYwE,EAAS3lB,EAAIwrD,EAGlC,CAGAniC,kBACG,OAAOmiC,CACV,CAEAniC,wBACG,OAAO,IACV,CAUAogB,oBACG,MAAO,CACJnnC,IAAK,GAAGrE,KAAKY,SACbQ,MAAO,GAAGpB,KAAKoB,aAErB,oBChEH,MAAMkrD,EAAmB,EAAQ,OAEjC,IAAIkB,EAAuB,CACxBlE,SAAU,KAQV/9C,KAAM,cAINg/C,eAAgB,GAIhBlmD,IAAK,eAIL+B,SAAU,CACP,WACA,cACA,WACA,aACA,iBAIN3G,EAAOC,QAAU,cAA+B4sD,EAC7C3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,oCACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIyrD,GAE/BxtD,KAAKshC,QAAU,EAGlB,CAGAlW,kBACG,OAAOoiC,CACV,CAEApiC,wBACG,OAAO,IACV,CAEAnlB,WAAWid,GACRpjB,MAAMmG,WAAWid,GAEjBljB,KAAKytD,SAAW15C,KAAK0D,MAAMyL,EAAWuqC,WAAY,EACrD,CAEIC,mBACD,IAAIxB,EAAY,KACZyB,EAAc3tD,KAAK0nB,QAGvB,MAAQwkC,GAAayB,GAClBzB,EAAYyB,EAAYzkD,UACpBE,GAAqC,SAA5BA,GAAMhF,UAAUklD,WAC3B,GAGFqE,EAAcA,EAAYjmC,QAG7B,OAAOwkC,CACV,CAEI0B,sBACD,OAAO5tD,KAAK0nB,QAAQyjB,uBAAuBnrC,MAAM,EACpD,CAEIisD,2BACD,IAAIC,EAAYlsD,KAAK0tD,aACrB,OAAKxB,EAEclsD,KAAK+B,GAAGkW,WAAWi0C,EAAUhwB,UAFzB,IAI1B,CAEIiwB,0BACD,IAGIjwB,EAHAkwB,EAAWpsD,KAAK4tD,gBACpB,OAAKxB,GAKClwB,EADE,+BADAkwB,EAASxqD,KAEAwqD,EAASC,MAAQD,EAASC,MAAMnwB,SAAW,KAI3CkwB,EAASlwB,SAInBl8B,KAAK+B,GAAGkW,WAAWikB,IAbJ,IAczB,CAEI2xB,kBACD,IAAI71C,EAAMhY,KAAKisD,qBACf,OAAKj0C,EAEEA,EAAIjR,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAK8tD,eAAc,GAFnC,IAGpB,CAUAtiB,oBACG,MAAO,CACJ,CACGnnC,IAAK,GAAGrE,KAAKY,UACbQ,MAAO,GAAGpB,KAAKoB,+BACfwE,MAAO,CACJhF,GAAIZ,KAAKY,GACTqE,OAAQ,CAAErE,GAAIZ,KAAKk8B,UACnB73B,IAAK,iBACLyC,WAAY,QAEf7B,OAAQjF,KAAKk8B,SACbniB,KAAK,GAGd,oBCtIH,MAAMuyC,EAAmB,EAAQ,OAE3ByB,EAAc,EAAQ,OAEtBC,EAAoC,CACvC1E,SAAU,KAQV/9C,KAAM,eAINg/C,eAAgB,GAIhBlmD,IAAK,mBAIL+B,SAAU,CAAC,UAMd3G,EAAOC,QAAU,cAA4C4sD,EAC1D3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,6BACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIisD,EAGlC,CAGA5iC,kBACG,OAAO4iC,CACV,CAEA5iC,wBACG,OAAO,IACV,CAEAnlB,WAAWid,GACRpjB,MAAMmG,WAAWid,GAGjBljB,KAAKiuD,aAAe,GAGhBjuD,KAAKqsD,QACNrsD,KAAKqsD,MAAQ0B,EAAYG,eAAeluD,KAAKqsD,MAAOrsD,KAAMA,KAAK+B,IAErE,CAQA+D,QACG,MAAM+D,EAAO/J,MAAMgG,QAKnB,OAFI9F,KAAKqsD,QAAOxiD,EAAKwiD,MAAQrsD,KAAKqsD,MAAMvmD,SAEjC+D,CACV,CAEAskD,mBAAmBn2C,GAChBhY,KAAKiuD,aAAa3pD,KAAK0T,EAC1B,CA+BAwzB,oBAEG,IAAIzkC,EAAS,KAcb,OAZI/G,KAAKiuD,aAAa9nD,OAAS,IAC5BY,EAAS,GAET/G,KAAKiuD,aAAahqD,SAAS2I,IACxB,MAAMs/B,EAAQt/B,EAAEwhD,iBAAiBpuD,KAAKY,GAAIZ,KAAKoB,OAE3C8qC,GACDnlC,EAAOzC,KAAK4nC,EACf,KAICnlC,CACV,CAQAqkC,YAAYif,EAAUhmD,GACnB,MAAMokB,EAAQpkB,EAAIqkB,MAAM,KAExB,OAAID,EAAM,KAAOzoB,KAAKY,GACHZ,KAAK4qD,QAAQP,GAEd5hC,EAAM,IAGjB,IACV,oBC/IH,MAAM6jC,EAAmB,EAAQ,OAEjC,IAAI+B,EAAqB,CACtB/E,SAAU,OAQV/9C,KAAM,eAINg/C,eAAgB,GAIhBlmD,IAAK,aAIL+B,SAAU,CACP,WACA,cACA,kBACA,aACA,aAIN,MAAMkoD,EAAS,CAEf,EAGA7uD,EAAOC,QAAU,cAA6B4sD,EAC3C3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,kCACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIssD,EAGlC,CAGAjjC,kBACG,OAAOijC,CACV,CAEAjjC,wBAEG,MAAO,CACJhqB,MAAO,cACPorD,WAAY,0BACZC,UAAW,gCACXjD,OAAQ,CACL5nD,KAAM,kBACN2sD,YAAY,GAGrB,CAEAtoD,WAAWid,GACRpjB,MAAMmG,WAAWid,GAGjBljB,KAAKwuD,SAA4B,MAAjBxuD,KAAKwuD,UAA0Bz6C,KAAK0D,MAAMzX,KAAKwuD,UAE/D,IAAIvlB,EAAejpC,KAAKkpC,WAAa,CAAC,EACtClpC,KAAKyuD,mBAAqB,GAC1BzuD,KAAKkpC,UAAY,CAAC,GACjBhmB,EAAWimB,YAAc,IAAIllC,SAASmlC,IACpC,IAAIrL,EAAM/9B,KAAK+B,GAAGm5B,kBAAkBkO,EAAKppC,MACrC+9B,EACD/9B,KAAKkpC,UAAUE,GAAOrL,EAIlBkL,EAAaG,GACdppC,KAAKkpC,UAAUE,GAAOH,EAAaG,GAEnCppC,KAAKyuD,mBAAmBnqD,KAAK8kC,EAEnC,IAGHppC,KAAKyuD,mBAAmBxqD,SAASmlC,IAC9B,IAAI/kC,EAAM,WAAWrE,KAAKklB,mBAAmBllB,KAAKoB,gDAAgDgoC,KAClG,IAAKklB,EAAOjqD,GAAM,CACf,IAAI8D,EAAM,IAAIG,MAAMjE,GACpBrE,KAAK+B,GAAGqG,OAAOuuB,QAAQxuB,EAAK,CAAEumD,YAAa1uD,KAAKY,GAAIwoC,QACpDklB,EAAOjqD,IAAO,CACjB,KAGHrE,KAAKqpC,aAAenmB,EAAWyrC,iBAAmB,CAAC,CACtD,CAaA7oD,QACG,IAAI+D,EAAO/J,MAAMgG,QAEjB+D,EAAKs/B,WAAa,GAClB,IAAK,IAAI9+B,KAAKrK,KAAKkpC,UAChBr/B,EAAKs/B,WAAW7kC,KAAKtE,KAAKkpC,UAAU7+B,GAAGzJ,IAK1C,OAFAiJ,EAAK8kD,gBAAkB3uD,KAAKqpC,aAErBx/B,CACV,CAYA2hC,kBAAkBN,GACf,GAAwB,MAApBlrC,KAAK4uD,YAAqB,MAAO,GAGrC,IAAIC,EAAgB7uD,KAAK0nB,QAAQ8jB,kBAAkBxrC,OAAS,GAGxD8uD,EAAeD,EAAc/lD,QAC7B44C,GAAQA,EAAIr9C,MAAQrE,KAAK4uD,cAC3B,GAGEG,EAAwBF,EAAc/lD,QACtC44C,GAAsB,mBAAdA,EAAI97C,QAGhB,GAAoB,MAAhBkpD,EAAsB,MAAO,GAEjC,IAAIhhD,EAAS,GAIVghD,EAAalpD,OACa,iBAA1BkpD,EAAalpD,MAAMvB,KACnByqD,EAAalpD,MAAMgB,gBACnBkoD,EAAalpD,MAAMgB,eAAeG,QAElC+G,EAAOxJ,KAAK,CACTD,IAAK,GAAGrE,KAAKY,UACbQ,MAAO,GAAGpB,KAAKoB,wBACf6D,OAAQ6pD,EAAalpD,MAAMgB,iBAG9BkoD,EAAalpD,MAAMgB,eAAeG,SAAS9C,SAAS+C,IACjD8G,EAAOxJ,KAAK,CACTD,IAAK,GAAGrE,KAAKY,MAAMoG,EAAEpG,KACrBQ,MAAO,GAAGpB,KAAKoB,sBAAsB4F,EAAE5F,QACvCwE,MAAOoB,EACP/B,OAAQ+B,EAAE/B,QACX,KAKL6I,EAAOxJ,KAAK,CACTD,IAAKyqD,EAAalpD,MACb,GAAG5F,KAAKY,MAAMkuD,EAAalpD,MAAMhF,KACjC,GAAGZ,KAAKY,gBACbQ,MAAO,GAAGpB,KAAKoB,qBACfwE,MAAOkpD,EAAalpD,MACpBX,OAAQ6pD,EAAa7pD,SAI3B8pD,EAAsB9qD,SAASy9C,IAC5B5zC,EAAOxJ,KAAK,CACTD,IAAK,GAAGq9C,EAAIr9C,KAAOq9C,EAAI9gD,KACvBQ,MAAO,wBAAwBsgD,EAAItgD,QACnCwE,MAAO87C,EAAI97C,MACXX,OAAQy8C,EAAIz8C,QACb,IAIL,IAAI+pD,EAAiBhvD,KAAK0nB,QAAQ8jB,kBAAkBqR,KACjD78C,KACAkrC,GAMH,OAJI8jB,GAAkBA,EAAe7oD,OAAS,IAC3C2H,EAASA,EAAOka,OAAOgnC,IAGnBlhD,CACV,CAUAs9B,YAAYF,EAAap1B,GACtB,IAEIjM,EAFAwgD,EAAWv0C,EAAO,GAClBzR,EAAMyR,EAAO,GAGjB,GAAIu0C,GAAYhmD,GAAK4qD,aAAajvD,KAAKY,IAAK,CACzC,IAAI8J,EAAUrG,EAAIqkB,MAAM,KAAK,GACzBkiC,EAAU5qD,KAAK4qD,QAAQP,GACvB6E,EAAYtE,EAAUA,EAAQ/gD,KAAO,KAGzC,GAFAA,EAAOqlD,EAEHA,GAAaxkD,EAAS,CACvB,IAAIokD,GACD9uD,KAAK0nB,QAAQ8jB,kBAAkBxrC,OAAS,IACzC8I,QAAQ44C,GAAQA,EAAIr9C,KAAOrE,KAAK4uD,cAAa,GAEf,iBAA5BE,GAAclpD,OAAOvB,MACjB8I,MAAMC,QAAQ8hD,KAAYA,EAAY,CAACA,IAG5CrlD,EAAOqlD,EAAU/gD,KAAKC,IACnB,GAAe,QAAX1D,GAAgC,MAAXA,EACtB,OAAO0D,EAAKyB,MAAQzB,EAAKxN,GACrB,GAAIkuD,EAAalpD,MAAMgB,eAAgB,CAC3C,IAAIuoD,EAAcL,EAAalpD,MAAMgB,eAAeG,QAChDC,GAAMA,EAAEpG,IAAM8J,IAChB,GACF,OAAIykD,EAAoB/gD,EAAK+gD,EAAYroD,YAC7BsH,CACf,KAGT,CACH,CAOA,OALY,MAARvE,IACDA,EAAO7J,KAAK0nB,QAAQ0jB,YAAYyR,KAAK78C,KAAMkrC,EAAap1B,IAE/C,MAARjM,IAAcA,EAAO7J,KAAK0nB,QAAQ0jB,YAAYprC,KAAM8V,IAEjDjM,CACV,CAEAyhC,oBAAoBx1B,GACjB,OAAO9V,KAAK0nB,QAAQ4jB,iBAAiBuR,KAAK78C,QAAS8V,EACtD,CAEA81B,oCAAoC91B,GACjC,OAAO9V,KAAK0nB,QAAQkkB,iCAAiCiR,KAClD78C,QACG8V,EAET,CAEA21B,uCAAuC31B,GACpC,OAAO9V,KAAK0nB,QAAQ+jB,oCAAoCoR,KACrD78C,QACG8V,EAET,CAcAwzB,YAAY54B,GACT,OAAO1Q,KAAK0nB,QAAQ4hB,YAAYuT,KAAK78C,KAAM0Q,EAC9C,CAQAm5B,uBAAuBC,GACpB,GAAKA,EAEL,OAAO9pC,KAAK0nB,QAAQmiB,uBAAuBgT,KAAK78C,KAAM8pC,EACzD,CAQAC,oBAAoBD,GACjB,GAAKA,EAEL,OAAO9pC,KAAK0nB,QAAQqiB,oBAAoB8S,KAAK78C,KAAM8pC,EACtD,CAQAG,oBAAoBH,GACjB,GAAKA,EAEL,OAAO9pC,KAAK0nB,QAAQuiB,oBAAoB4S,KAAK78C,KAAM8pC,EACtD,CAQAK,iBAAiB7O,GACTA,GAELt7B,KAAK0nB,QAAQyiB,iBAAiB0S,KAAK78C,KAAMs7B,EAC5C,CAcA8O,wBAAwB9O,GACrB,GAAKA,EAEL,OAAOt7B,KAAK0nB,QAAQ0iB,wBAAwByS,KAAK78C,KAAMs7B,EAC1D,CAQAmP,iBAAiBnP,GACTA,GAELt7B,KAAK0nB,QAAQ+iB,iBAAiBoS,KAAK78C,KAAMs7B,EAC5C,CASA6P,uBAAuBD,GACpB,GAAKA,EAEL,OAAOlrC,KAAK0nB,QAAQyjB,uBAAuB0R,KAAK78C,KAAMkrC,EACzD,CAUAhiC,SAASwH,EAAK,MAAM,IACjB,OAAO1Q,KAAK0nB,QAAQxe,SAAS2zC,KAAK78C,KAAM0Q,EAC3C,CAQAi6B,WAAWrP,GACHA,GAELt7B,KAAK0nB,QAAQijB,WAAWkS,KAAK78C,KAAMs7B,EACtC,CAQAuP,oBAAoBf,GACjB,OAAKA,EAEE9pC,KAAK0nB,QAAQmjB,oBAAoBgS,KAAK78C,KAAM8pC,GAFlC,IAGpB,CASAgB,cAAcnpB,GACNA,GAEL3hB,KAAK0nB,QAAQojB,cAAc+R,KAAK78C,KAAM2hB,EACzC,oBC/aH,MAAM2qC,EAAmB,EAAQ,OAE3B8C,EAAc,EAAQ,OAE5B,IAAIC,EAAgC,CACjC/F,SAAU,KAQV/9C,KAAM,eAINg/C,eAAgB,CAAC,aAAc,oBAI/BlmD,IAAK,WAIL+B,SAAU,CAAC,MAAO,UAAW,gBAMhC3G,EAAOC,QAAU,cAA4C4sD,EAC1D3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,6BACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIstD,EAGlC,CAGAjkC,kBACG,OAAOikC,CACV,CAEAjkC,wBACG,OAAO,IACV,CAEAnlB,WAAWid,GASRpjB,MAAMmG,WAAWid,GAEjB,SAASosC,EAAWt3C,GACbA,GACD3D,OAAOC,KAAK0D,GAAK/T,SAASsQ,IACT,SAAVyD,EAAIzD,GACLyD,EAAIzD,IAAK,EACS,QAAVyD,EAAIzD,GACZyD,EAAIzD,IAAK,EACgB,iBAAVyD,EAAIzD,IACnB+6C,EAAWt3C,EAAIzD,GAClB,GAGT,CACA+6C,CAAWtvD,KAAKuvD,YACnB,CA8CAC,6BACG,IAAIzoD,EAAS/G,KAAK0nB,QAAQ8jB,kBAAkBxrC,MAmD5C,OAlDI+G,GAAU/G,KAAKuvD,aAAevvD,KAAKuvD,YAAYE,YAChDzvD,KAAKuvD,YAAYE,WAAWxrD,SAASV,IAC9BA,EAAEmsD,UACH3oD,EAAO+B,QAAQsR,IACZ,GAAIA,EAAMxU,OAAOhF,IAAM2C,EAAEmsD,YACtBnsD,EAAEnC,MAAQgZ,EAAMxU,MAAMxE,MACtBmC,EAAEc,IAAM+V,EAAM/V,IACVd,EAAEsG,MAAMlE,QAAUyU,EAAMxU,MAAMQ,SAASjE,SAAS,CACjD,IAAIsD,EAAO,GACX2U,EAAMxU,MAAMQ,SAASjE,QAAQ8B,SAASy9C,IACnCj8C,EAAKnB,KAAK,CACPlD,MAAOsgD,EAAIrzC,KACX1L,MAAO++C,EAAI9gD,IACZ,IAEL2C,EAAEsG,KAAKlE,OAASF,CACnB,CACH,IAEKlC,EAAEksD,YAAclsD,EAAEksD,WAAWtpD,SACrC5C,EAAEc,IAAMd,EAAEosD,KACVpsD,EAAEksD,WAAWxrD,SAASkiB,IACnB,GAAIA,EAAEupC,UAAW,CAGd,IAAIE,EAAQ7oD,EAAO+B,QAAQ9B,GACjBA,EAAE3C,KAAOd,EAAEosD,OAClB,GACH,IAAKC,EAAO,OACZA,EAAM3qD,OAAO8B,SAAS+B,QAAQsR,IAC3B,GAAIA,GAAOxZ,IAAMulB,EAAEupC,YAChBvpC,EAAE/kB,MAAQgZ,EAAMhZ,MAChB+kB,EAAE9hB,IAAM+V,EAAMtT,WACVqf,EAAEtc,MAAMlE,QAAUyU,EAAMhU,SAASjE,SAAS,CAC3C,IAAIsD,EAAO,GACX2U,EAAMhU,SAASjE,QAAQ8B,SAASy9C,IAC7Bj8C,EAAKnB,KAAK,CACPlD,MAAOsgD,EAAIrzC,KACX1L,MAAO++C,EAAI9gD,IACZ,IAELulB,EAAEtc,KAAKlE,OAASF,CACnB,CACH,GAEN,KAEN,IAGCzF,KAAKuvD,WACf,CAUA/jB,oBAEG,IAAIrpC,EAAU,GACdnC,KAAKuvD,YAAYE,WAAWxrD,SAAS4rD,IACjB,UAAbA,EAAKjuD,MAAmC,SAAfiuD,EAAKC,QAAqBD,EAAKh/B,OACzD1uB,EAAQmC,KAAK,CACV1D,GAAIivD,EAAKh/B,MACTxiB,KAAMwhD,EAAKzuD,OAEjB,IAMH,IAAI2uD,EAAO/vD,KAAKupC,UAKZhI,EAAQvhC,KAAK+B,GAAGk4B,UAAU,CAAC,GAC3B+1B,EAAY,IAAIZ,EACjB,CACGxuD,GAAI,GAAGmvD,qBACP3uD,MAAO,GAAGpB,KAAKoB,kBACf0F,WAAY,GAAGipD,qBACf3pD,SAAU,CACPjE,QAASA,IAGfo/B,GAGH,MAAO,CACJ,CACGl9B,IAAK,GAAG0rD,qBACR3uD,MAAO,GAAGpB,KAAKoB,kBACfwE,MAAOoqD,EACP/qD,OAAQ,MAGjB,CAQAmmC,YAAYif,EAAUhmD,GACnB,GAAIA,EAAK,CACN,IAAIokB,EAAQpkB,EAAIqkB,MAAM,KACtB,GAAID,EAAM,IAAMzoB,KAAKupC,UAElB,OADcvpC,KAAK4qD,QAAQP,GACZ5hC,EAAM,GAE3B,CACA,OAAO,IACV,oBCjOH,MAAM6jC,EAAmB,EAAQ,OAEjC,IAAI2D,EAA4B,CAC7B3G,SAAU,OAQV/9C,KAAM,OAINg/C,eAAgB,GAIhBlmD,IAAK,WAIL+B,SAAU,IAMb3G,EAAOC,QAAU,cAAoC4sD,EAClD3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,oBACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIkuD,EAGlC,CAGA7kC,kBACG,OAAO6kC,CACV,CAEA7kC,wBAEG,MAAO,CACJhqB,MAAO,YACPorD,WAAY,yBACZC,UAAW,iBACXjD,OAAQ,CACL5nD,KAAM,iBAGf,CA8BA0oD,UAAUh7C,EAAS4G,GAMhBpW,MAAMwqD,UAAUh7C,EALC,CACdJ,MAAO,GACPzO,GAAI,MAG8ByV,EACxC,oBCtGH,MAAMo2C,EAAmB,EAAQ,OAE3B4D,EAAoC,CACvC5G,SAAU,KAQV/9C,KAAM,cAINg/C,eAAgB,CAAC,aAAc,oBAI/BlmD,IAAK,WAIL+B,SAAU,CAAC,MAAO,UAAW,QAM1BA,EAAW,CACd+pD,IAAK,EACLC,QAAS,KACT9/C,IAAK,IAGR7Q,EAAOC,QAAU,cAA4C4sD,EAC1D3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9B,IAAK,MAAMsC,KAAO+B,EACf8c,EAAW7e,GAAO6e,EAAW7e,IAAQ+B,EAAS/B,GACjDvE,MACGuU,OAAO6pC,OACJ,CACGt8C,KAAM,iCAETshB,GAEHwE,EACA3lB,EACAmuD,EAIN,CAGA9kC,kBACG,OAAO8kC,CACV,CAEA9kC,wBACG,OAAO,IACV,CAUAogB,oBACG,MAAO,CACJ,CACGnnC,IAAK,GAAGrE,KAAKY,sBACbQ,MAAO,GAAGpB,KAAKoB,mBAGxB,oBChFH,MAAMkrD,EAAmB,EAAQ,OAEjC,IAAI+D,EAA2B,CAC5B/G,SAAU,QAQVviD,OAAQ,GAIRwE,KAAM,MAINlH,IAAK,WAKR5E,EAAOC,QAAU,cAAmC4sD,EACjD3sD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,UACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIsuD,EAGlC,CAGAjlC,kBACG,OAAOilC,CACV,CAEAjlC,wBACG,MAAO,CACJhqB,MAAO,qBACPorD,WAAY,4BACZC,UAAW,+BACXjD,OAAQ,CACL5nD,KAAM,kBAGN6nD,oBAAqB,8BAG9B,CAEAxjD,WAAWid,GACRpjB,MAAMmG,WAAWid,GAEjBljB,KAAKisC,WAAa/oB,EAAW+oB,YAAc,eAC9C,CAaAnmC,QACG,IAAI+D,EAAO/J,MAAMgG,QAIjB,OAFA+D,EAAKoiC,WAAajsC,KAAKisC,WAEhBpiC,CACV,oBCxEH,MAAMymD,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzCjH,SAAU,QAQVviD,OAAQ,CACL,WACA,gBAKHwE,KAAM,MAINlH,IAAK,oBAKR5E,EAAOC,QAAU,cAAwC4wD,EACtD3wD,YAAYujB,EAAYwE,EAAS3lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,UACrC9B,MAAMojB,EAAYwE,EAAS3lB,EAAIwuD,EAGlC,CAGAnlC,kBACG,OAAOmlC,CACV,CAEAnlC,wBACG,MAAO,CACJhqB,MAAO,2BACPorD,WAAY,sCAEZC,UAAW,+BACXjD,OAAQ,CACL5nD,KAAM,kBAGN6nD,oBAAqB,sBAG9B,CAEAxjD,WAAWid,GACRpjB,MAAMmG,WAAWid,GAEjBljB,KAAKk8B,SAAWhZ,EAAWgZ,UAAY,WACvCl8B,KAAKwwD,aAAettC,EAAWstC,cAAgB,iBAClD,CAaA1qD,QACG,IAAI+D,EAAO/J,MAAMgG,QAIjB,OAFA+D,EAAKqyB,SAAWl8B,KAAKk8B,SACrBryB,EAAK2mD,aAAexwD,KAAKwwD,aAClB3mD,CACV,CAUA2hC,oBACG,IAAIzkC,EAAS,KACb,GAAI/G,KAAKk8B,SAAU,CAChBn1B,EAAS,GACT,IAAI9B,EAASjF,KAAK+B,GAAGkW,WAAWjY,KAAKk8B,UACrC,GAAIj3B,EAAQ,CACT,IAAI8qD,EAAO/vD,KAAKupC,UAChBtkC,EAAO8B,SAAS9C,SAAS2B,IACtBmB,EAAOzC,KAAK,CACTD,IAAK,GAAG0rD,KAAQnqD,EAAMhF,KACtBQ,MAAO,GAAGpB,KAAKoB,UAAU6D,EAAO7D,UAAUwE,EAAMxE,QAChDwE,QACAX,UACD,IAEL8B,EAAOzC,KAAK,CACTD,IAAK,GAAG0rD,SACR3uD,MAAO,GAAGpB,KAAKoB,UAAU6D,EAAO7D,QAChCwE,MAAO,KACPX,UAEN,KAAO,CAGJ,IAAIsK,EAAQ,IAAIjH,MACb,4DAA4DtI,KAAKY,gDAAgDZ,KAAKk8B,aAEzHl8B,KAAK+B,GAAGqG,OAAOuuB,QAAQpnB,EAAO,CAC3Bu8B,KAAM9rC,KAAKY,GACX4mC,MAAOxnC,KAAKk8B,UAElB,CACH,CACA,OAAOn1B,CACV,CAQAqkC,YAAYif,EAAUhmD,GACnB,IAAIokB,EAAQpkB,EAAIqkB,MAAM,KACtB,GAAID,EAAM,IAAMzoB,KAAKupC,UAAW,CAC7B,IAAIqhB,EAAU5qD,KAAK4qD,QAAQP,GAC3B,GAAIO,EAAc,KAAG,CAClB,IA8BOhlD,EA1BP,GAHIA,EADS5F,KAAK+B,GAAGkW,WAAWjY,KAAKk8B,UAClBn1B,QAAQC,GACjBA,EAAEpG,IAAM6nB,EAAM,KACrB,GAEA,OAAIA,EAAM,GACA7iB,EAAM6iB,EAAM,IAAIo0B,KAAKj3C,EAAOglD,EAAc,OAKO,GAApD,CAAC,YAAa,eAAev9C,QAAQzH,EAAMvB,KACrCuB,EAAM4a,OAAOoqC,EAAc,MAErB,iBAAbhlD,EAAMvB,KACO,QAAbuB,EAAMvB,IAGHumD,EAAc,KAAEhlD,EAAMkB,aACtB8jD,EAAc,KAAEhlD,EAAMurB,gBAGlBy5B,EAAc,KAAEhlD,EAAMkB,YAG/B,GAAgB,QAAZ2hB,EAAM,GACd,OAAOmiC,EAAc,KAAQ,KAO7B,GAHIhlD,EADS5F,KAAK+B,GAAGkW,WAAWjY,KAAKk8B,UAClBn1B,QAAQC,GACjBA,EAAEpG,IAAM6nB,EAAM,KACrB,GAEA,OAAIA,EAAM,GACA7iB,EAAM6iB,EAAM,IAAIo0B,KAAKj3C,EAAOglD,EAAc,MAG1CA,EAAc,KAAEhlD,EAAMkB,WAIzC,CACH,CACA,OAAO,IACV,CAQAklC,qBACG,IAAIxlB,EAAU,KAId,OAHIxmB,KAAKk8B,WACN1V,EAAU,CAACxmB,KAAK+B,GAAGkW,WAAWjY,KAAKk8B,YAE/B1V,CACV,oBCrMH,MAAM8pC,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzCjH,SAAU,QAQVviD,OAAQ,CACL,cACA,aACA,cACA,eACA,gBACA,aAKHwE,KAAM,UAINlH,IAAK,kBAILosD,YAAa,QACbC,WAAY,QACZC,YAAa,MACbC,aAAc,MACdC,cAAe,OACfC,WAAW,GAGdrxD,EAAOC,QAAU,cAAoC4wD,EAClD3wD,YAAYujB,EAAYwE,EAAS3iB,GAC9Bme,EAAWthB,KAAOshB,EAAWthB,MAAQ,UACrC9B,MACGojB,EACAwE,EACA3iB,EACAwrD,EAEN,CAGAnlC,kBACG,OAAOmlC,CACV,CAEAnlC,wBACG,MAAO,CACJhqB,MAAO,oBACPorD,WAAY,kCAEZC,UAAW,8BACXjD,OAAQ,CACL5nD,KAAM,kBAGN6nD,oBAAqB,yBAG9B,CAEAxjD,WAAWid,GAoBR,GAnBApjB,MAAMmG,WAAWid,GAEjBljB,KAAKywD,YACFvtC,EAAWutC,aACXF,EAAsCE,YAEzCzwD,KAAK2wD,YACFztC,EAAWytC,aACXJ,EAAsCI,YAEzC3wD,KAAK4wD,aACF1tC,EAAW0tC,cACXL,EAAsCK,aAEzC5wD,KAAK6wD,cACF3tC,EAAW2tC,eACXN,EAAsCM,cAGrC3tC,EAAWwtC,WAAY,CACxB,IAAIK,EAAW7tC,EAAWwtC,WAAWhoC,MAAM,KACvCy1B,EAAW,IAAI19B,KACnB09B,EAAS6S,YAAYD,EAAS,IAC9B5S,EAAS8S,cAAcF,EAAS,IAChC/wD,KAAK0wD,WAAa,GAAGvS,EAASE,cAAcF,EAASI,cACxD,MACGv+C,KAAK0wD,WAAaH,EAAsCG,gBAGxB,IAAxBxtC,EAAW4tC,UACnB9wD,KAAK8wD,UAAY/8C,KAAK0D,MAAMyL,EAAW4tC,WAEvC9wD,KAAK8wD,UAAYP,EAAsCO,SAE7D,CAaAhrD,QACG,IAAI+D,EAAO/J,MAAMgG,QAejB,OAbA+D,EAAK4mD,YAAczwD,KAAKywD,YACxB5mD,EAAK8mD,YAAc3wD,KAAK2wD,YACxB9mD,EAAK+mD,aAAe5wD,KAAK4wD,aACzB/mD,EAAKgnD,cAAgB7wD,KAAK6wD,cAG1BhnD,EAAK6mD,WAAa1wD,KAAK0wD,WACnB7mD,EAAK6mD,YAAc7mD,EAAK6mD,sBAAsBjwC,OAC/C5W,EAAK6mD,WAAa,GAAG7mD,EAAK6mD,WAAWQ,iBAAiBrnD,EAAK6mD,WAAWnS,gBAGzE10C,EAAKinD,UAAY9wD,KAAK8wD,UAEfjnD,CACV,CAEAsnD,oBACG,IAIIC,EACAC,EACAC,EANAP,EAAW/wD,KAAK0wD,WAAWhoC,MAAM,KAEjC6oC,EAASR,EAAS,GAClBS,EAAOT,EAAS,GAMpB,OAAQ/wD,KAAKywD,aACV,IAAK,QACFW,EAAM,IACNC,EAAQ,IACRC,EAA8B,WAApBtxD,KAAK2wD,YAA2B,MAAQ,IAClD,MACH,IAAK,SACFS,EAAM,IACNC,EAAQ,IACRC,EAAUtxD,KAAK4wD,aACf,MACH,IAAK,UACFQ,EAAMpxD,KAAK6wD,cACXQ,EAAQ,IACRC,EAAU,IAIhB,MAAO,KAAaC,KAAUC,KAAQJ,KAAOC,KAASC,KACzD,oBC5JH,IAAI1yB,EAAY,EAAQ,OAwKxBn/B,EAAOC,QAvKP,cAAuBk/B,EACpBj/B,YAAYujB,EAAYuuC,EAAsBC,EAAQ5lB,EAAM/pC,GACzDjC,QAGKqN,MAAMC,QAAQqkD,KAChBA,EAAuB,CAACA,IAG3BzxD,KAAKyxD,qBAAuBA,EAE5BzxD,KAAKiF,OAASysD,EAASA,EAAOzsD,OAAS,KAOnCysD,GAAUA,EAAOC,YAAW3xD,KAAKiF,OAASysD,EAAOC,WAErD3xD,KAAK0xD,OAASA,EACd1xD,KAAK8rC,KAAOA,EAMZ9rC,KAAK+B,GAAKA,EACV/B,KAAK6rB,KAAO,KAEZ7rB,KAAKkuD,eAAehrC,EACvB,CAKA0uC,WAAW1uC,GAAa,CAExBgrC,eAAehrC,GAsCZ,GA3BAljB,KAAKqE,IAAMrE,KAAKL,YAAY0E,KAAO,KAGnCrE,KAAK8V,OAASoN,EAAWpN,QAAU,CAAC,EAKpC9V,KAAKk8B,SAAWhZ,EAAWgZ,UAAY,KAGnCl8B,KAAKk8B,WAAUl8B,KAAKiF,OAASjF,KAAK6xD,aAAa7xD,KAAKk8B,WAExDl8B,KAAK4xD,WAAW1uC,GAGZljB,KAAKk8B,WAAal8B,KAAKiF,QACxBjF,KAAK+B,GAAGqG,OAAOC,UACZ,IAAIC,MACD,6DAA6DtI,KAAKk8B,aAErE,CACGhZ,aACAgZ,SAAUl8B,KAAKk8B,WAIpBhZ,EAAW2I,KAAM,CAClB,IAAIimC,EAAS,KAMb,IAJC9xD,KAAK+xD,WAAa/xD,KAAKL,YAAYoyD,WAAW9tD,SAAS+tD,IACjDA,EAAG3tD,MAAQ6e,EAAW2I,KAAKxnB,MAAKytD,EAASE,EAAE,IAG9CF,EAAQ,CAET,MAAMG,EAAO,IAAIH,EAAO5uC,EAAW2I,KAAM7rB,KAAMA,KAAK8rC,KAAM9rC,KAAK+B,IAE/D/B,KAAK6rB,KAAOomC,CACf,CACH,CACH,CAUAJ,aAAarqB,GACV,OAAOxnC,KAAK+B,GAAGykB,SAASL,IACrB,MAAM+rC,EAAc,IAAI/rC,EAAE/kB,SAE1B,OAEG+kB,EAAEvlB,KAAO4mC,GAAwC,IAA/B0qB,EAAY7kD,QAAQm6B,EACxC,IACD,EACN,CAQA2qB,iCACG,MAAMC,EACHpyD,KAAK8rC,KAAKpkB,QAAQ8jB,kBAAkBxrC,KAAK8rC,OAAS,GAC/CumB,EAAe,CAAC,EAUtB,OARAD,EAA2BnuD,SAAS+C,IAC7BA,EAAEpB,MACHysD,EAAarrD,EAAEpB,MAAMhF,IAAMoG,EAE3BqrD,EAAarrD,EAAE3C,KAAO2C,CACzB,IAGIqrD,CACV,CAUAC,aAAaC,GAAO,CAQpBzsD,QACG,MAAMkS,EAAM,CACT3T,IAAKrE,KAAKL,YAAY0E,IAEtByR,OAAQ9V,KAAK8V,OAGbomB,SAAUl8B,KAAKiF,QAAQrE,IAAM,MAOhC,OAJIZ,KAAK6rB,OACN7T,EAAI6T,KAAO7rB,KAAK6rB,KAAK/lB,SAGjBkS,CACV,oBCtKH,MAAMw6C,EAAO,EAAQ,OACfT,EAAY,EAAQ,OAMpBU,EAAuB,CAC1B,CACG7wD,KAAM,mBACNuF,KAAM,SAIZ,MAAMurD,UAAqBF,EACxB7yD,YAAYujB,EAAYwuC,EAAQ5lB,EAAM/pC,GACnCjC,MAAMojB,EAAYuvC,EAAsBf,EAAQ5lB,EAAM/pC,EACzD,EAOH2wD,EAAaruD,IAAM,OACnBquD,EAAatxD,MAAQ,OACrBsxD,EAAaX,UAAYA,EAEzBtyD,EAAOC,QAAUgzD,mBC5BjB,MAGMC,EAAkB,CAarBzE,eAAgB,SAAUhrC,EAAY4oB,EAAM/pC,GACzC,IAAKmhB,EAAY,OAAO,KAExB,MAAM0vC,EAAc,GAMpB,OAJAD,EAAgBE,MAAM5uD,SAAS6uD,IACxBA,EAAGzuD,MAAQ6e,EAAW7e,KAAKuuD,EAAYtuD,KAAKwuD,EAAG,IAG3B,IAAvBF,EAAYzsD,OAGA,IAAIysD,EAAY,GAAG1vC,EAAY4oB,EAAM/pC,GAGvC,IACjB,EAMA8wD,MArCW,CADG,EAAQ,SAwCzBpzD,EAAOC,QAAUizD,mBCtCjB,MAAMH,EAAO,EAAQ,OAMfT,EAAY,CADH,EAAQ,QAGjBU,EAAuB,CAC1B,CACG7wD,KAAM,aACNuF,KAAM,SAIZ,MAAM4rD,UAAuBP,EAC1B7yD,YAAYujB,EAAY4oB,EAAM/pC,GAE3BjC,MAAMojB,EAAYuvC,EAAsB,KAAM3mB,EAAM/pC,EACvD,CAKA6vD,WAAW1uC,GACR,IAAKljB,KAAKiF,QAAUjF,KAAK8V,OAAQ,CAC9B,MAAMk9C,EAAahzD,KAAKyxD,qBAAqBjkC,MAAM+kC,GAC3B,eAAdA,EAAK3wD,OAGXoxD,IACDhzD,KAAKk8B,SAAWl8B,KAAK8V,OAAOk9C,EAAW7rD,MACvCnH,KAAKiF,OAASjF,KAAK6xD,aAAa7xD,KAAKk8B,WAGnCl8B,KAAKiF,QACPjF,KAAKizD,eAAe,qBAAsB,CACvC/2B,SAAUl8B,KAAKk8B,UAGxB,CACH,CAEAp2B,QACG,MAAMkS,EAAMlY,MAAMgG,QAIlB,IAAKkS,EAAIkkB,UAAYl8B,KAAK8V,OAAQ,CAC/B,MAAMk9C,EAAahzD,KAAKyxD,qBAAqBjkC,MAAM+kC,GAC3B,eAAdA,EAAK3wD,OAGXoxD,IAAYh7C,EAAIkkB,SAAWl8B,KAAK8V,OAAOk9C,EAAW7rD,MACzD,CAEA,OAAO6Q,CACV,EAGH+6C,EAAe1uD,IAAM,SACrB0uD,EAAe3xD,MAAQ,SACvB2xD,EAAehB,UAAYA,EAE3BtyD,EAAOC,QAAUqzD,mBClEjB,MAAMG,EAAW,EAAQ,KACnBC,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OAExB3zD,EAAOC,QAAU,CAACwzD,EAAUC,EAAQC,oBCDpC,MAAMC,EAAe,EAAQ,MACvBC,EAAgB,EAAQ,KACxBC,EAAc,EAAQ,OAE5B,MAAMC,UAAyBH,EAExBtB,gBACD,IAAI0B,EAAY,GAEhB,MAAM7tD,EAAQ5F,KAAK4F,OAAS5F,KAAKiF,OAAO8I,UAAU/N,KAAKm8B,UAAY,KAGnE,OAAQv2B,GAAOvB,KAEZ,IAAK,gBACF,GAAgC,SAA5BuB,EAAMQ,SAASa,SAAqB,CAIrCwsD,EAFgB,EAAQ,OAIxB,KACH,CAGAA,EAAYzzD,KAAK0xD,OAAO/xD,YAAYoyD,UAAUjpD,QAC1C4qD,GACEA,EAASrvD,MAAQrE,KAAKL,YAAY0E,KAClCqvD,EAASrvD,MAAQivD,EAAcjvD,MAGrC,MAEH,IAAK,OAEF,GAC+B,SAA5BuB,EAAMQ,SAASa,UACfrB,EAAMQ,SAASk7C,WAChB,CAICmS,EAFgB,EAAQ,OAIxB,KACH,CAGAA,EAAYzzD,KAAK0xD,OAAO/xD,YAAYoyD,UAAUjpD,QAC1C4qD,GACEA,EAASrvD,MAAQrE,KAAKL,YAAY0E,KAClCqvD,EAASrvD,MAAQivD,EAAcjvD,MAGrC,MAEH,QAEGovD,EAAYzzD,KAAK0xD,OAAO/xD,YAAYoyD,UAAUjpD,QAC1C4qD,GAAaA,EAASrvD,MAAQkvD,EAAYlvD,MAMpD,OAAOovD,CACV,EAGHD,EAAiBnvD,IAAM,YACvBmvD,EAAiBpyD,MAAQ,gCACzBoyD,EAAiBzB,UAAY,GAE7BtyD,EAAOC,QAAU8zD,mBC3EjB,MAAMG,EAAc,EAAQ,OAE5B,MAAMC,UAAwBD,GAE9BC,EAAgBvvD,IAAM,WACtBuvD,EAAgBxyD,MAAQ,oBACxBwyD,EAAgB7B,UAAY,GAG5BtyD,EAAOC,QAAUk0D,mBCVjB,MAAMpB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACG7wD,KAAM,eACNuF,KAAM,WAIZ,MAAM0sD,UAA0BrB,EAC7B7yD,YAAYujB,EAAYwuC,EAAQ5lB,EAAM/pC,GACnCjC,MAAMojB,EAAYuvC,EAAsBf,EAAQ5lB,EAAM/pC,GAKtD/B,KAAKL,YAAYoyD,UAAYL,EAAO/xD,YAAYoyD,SACnD,EAOH8B,EAAkBxvD,IAAM,SACxBwvD,EAAkBzyD,MAAQ,qBAC1ByyD,EAAkB9B,UAAY,GAG9BtyD,EAAOC,QAAUm0D,mBC9BjBp0D,EAAOC,QAAU,CACd,EAAQ,OACR,EAAQ,MACR,EAAQ,yBCFX,MAAM8yD,EAAO,EAAQ,OACfsB,EAAU,EAAQ,OAMxB,MAAMC,UAAyBvB,EAC5B7yD,YAAYujB,EAAYwuC,EAAQ5lB,EAAM/pC,GACnCjC,MAAMojB,EAAY,GAAIwuC,EAAQ5lB,EAAM/pC,EACvC,EAOHgyD,EAAiB1vD,IAAM,QACvB0vD,EAAiB3yD,MAAQ,0BACzB2yD,EAAiBhC,UAAY+B,EAE7Br0D,EAAOC,QAAUq0D,mBCrBjB,MAAMvB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACG7wD,KAAM,eACNuF,KAAM,YAIZ,MAAM6sD,UAAyBxB,EAC5B7yD,YAAYujB,EAAYwuC,EAAQ5lB,EAAM/pC,GACnCjC,MAAMojB,EAAYuvC,EAAsBf,EAAQ5lB,EAAM/pC,EACzD,CAMAmsD,eAAehrC,GAIZljB,KAAKL,YAAYoyD,UAAY/xD,KAAK0xD,OAAO/xD,YAAYoyD,UAKrD/xD,KAAKm8B,QAAUjZ,EAAWiZ,QAC1Bn8B,KAAK4F,MAAQ5F,KAAKiF,QAAQ8I,UAAU/N,KAAKm8B,SAkBrCjZ,EAAW+wC,cACZj0D,KAAK2xD,UAAY3xD,KAAK6xD,aAAa3uC,EAAW+wC,cAEjDn0D,MAAMouD,eAAehrC,EACxB,CAEApd,QACG,MAAMkS,EAAMlY,MAAMgG,QAElB,GAAI9F,KAAKm8B,QACNnkB,EAAImkB,QAAUn8B,KAAKm8B,QAEfn8B,KAAK2xD,YAAW35C,EAAIi8C,YAAcj0D,KAAK2xD,UAAU/wD,QACjD,CACJoX,EAAImkB,QAAUn8B,KAAK8V,OAAOlQ,OAAS,KAEnC,MAAMA,EAAQ5F,KAAKiF,OAAO8I,UAAUiK,EAAImkB,SAEpCv2B,GAAOy9B,eAAcrrB,EAAIi8C,YAAcruD,EAAMgB,eAAehG,GACnE,CAEA,OAAOoX,CACV,EAGHg8C,EAAiB3vD,IAAM,YACvB2vD,EAAiB5yD,MAAQ,gCACzB4yD,EAAiBjC,UAAY,GAE7BtyD,EAAOC,QAAUs0D,mBC5EjB,MAAMxB,EAAO,EAAQ,OAEfC,EAAuB,CAC1B,CACG7wD,KAAM,YACNuF,KAAM,eAIZ,MAAM+sD,UAAwB1B,EAC3B7yD,YAAYujB,EAAYwuC,EAAQ5lB,EAAM/pC,GACnCjC,MAAMojB,EAAYuvC,EAAsBf,EAAQ5lB,EAAM/pC,GAGlD/B,KAAKm0D,YACNroB,EAAKqiB,mBAAmBnuD,MACxBA,KAAKo0D,YAAa,EAExB,CAMAlG,eAAehrC,GAIZljB,KAAKL,YAAYoyD,UAAY/xD,KAAK0xD,OAAO/xD,YAAYoyD,UAErDjyD,MAAMouD,eAAehrC,GAErBljB,KAAKm0D,UAAYjxC,EAAWixC,WAAan0D,KAAK8V,OAAOu+C,UACxD,CAEAvuD,QACG,MAAMkS,EAAMlY,MAAMgG,QAIlB,OAFAkS,EAAIm8C,UAAYn0D,KAAKm0D,WAAan0D,KAAK8V,OAAOu+C,WAEvCr8C,CACV,CAEAo2C,iBAAiBxtD,EAAIQ,GAQlB,IAAIwE,EAAQ,KAUZ,MAHgC,kBAA5B5F,KAAK0xD,QAAQ9rD,OAAOvB,MACrBuB,EAAQ5F,MAAM0xD,QAAQ9rD,OAElB,CACJvB,IAAK,GAAGzD,KAAMZ,KAAKm0D,WAAan0D,KAAK8V,OAAOu+C,aAC5CjzD,MAAO,GAAGA,MAAUpB,KAAKm0D,WAAan0D,KAAK8V,OAAOu+C,aAClDzuD,MAAOA,EACPX,OAAQjF,KAAKiF,OACb8U,KAAK,EAEX,EAGHm6C,EAAgB7vD,IAAM,WACtB6vD,EAAgB9yD,MAAQ,oBACxB8yD,EAAgBnC,UAAY,GAG5BtyD,EAAOC,QAAUw0D,mBCrFjB,MAAMI,EAAe,EAAQ,OAEvBC,EAA4B,CAC/BlwD,IAAK,cACLkH,KAAM,WACNipD,SAAU,gBAGPC,EAA6C,CAChDC,WAAY,KACZ1kC,MAAO,KACP2kC,YAAa,aACbnV,SAAU,YACVoV,WAAW,EACX5zD,MAAO,KAGVvB,EAAOC,QAAU,cAAoC40D,EAClD30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBovB,EAEvB,CAEAnpC,gBACG,OAAOmpC,CACV,CAEAnpC,uBACG,OAAOqpC,CACV,CAYAxuD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGuB,iBAA7BA,EAAOS,SAASwuD,YACxB50D,KAAKoG,SAASwuD,UAAY7gD,KAAK0D,MAAM9R,EAAOS,SAASwuD,YAEzB,MAA3B50D,KAAKoG,SAASwuD,YACf50D,KAAKoG,SAASwuD,UACXH,EAA2CG,WAGjD50D,KAAKoG,SAASpF,MAAQ2kB,SACnBhgB,EAAOS,SAASpF,OACbyzD,EAA2CzzD,MAEpD,oBC7DH,MAAMszD,EAAe,EAAQ,OAEvBO,EAAe,EAAQ,OAEvBC,EAA4B,CAC/BzwD,IAAK,cAILkH,KAAM,SAINipD,SAAU,gBAMPO,EAA6C,CAChDL,WAAY,KAKZM,kBAAmB,GAInBL,YAAa,aAIb3zD,MAAO,EAIPi0D,YAAa,IAuBhBx1D,EAAOC,QAAU,cAAoC40D,EAClD30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiB2vB,EAEvB,CAOA1pC,gBACG,OAAO0pC,CACV,CAQA1pC,uBACG,OAAO2pC,CACV,CAYA9uD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASpF,MAAQ2kB,SACnB3lB,KAAKoG,SAASpF,OAAS+zD,EAA2C/zD,MAExE,CAEIk0D,iBACD,IAAIjwD,EAASjF,KAAKqsB,gBAAgBD,WAClC,GAAKnnB,EAUL,OARwB,MAApBjF,KAAKm1D,cACNn1D,KAAKm1D,YAAc,IAAIN,GAG1B70D,KAAKm1D,YAAYC,SAASp1D,MAC1BA,KAAKm1D,YAAYE,aAAar1D,KAAKoG,SAAS6uD,aAC5Cj1D,KAAKm1D,YAAYnwD,WAAWC,GAErBjF,KAAKm1D,WACf,CAEAG,iBAAiBC,GACVA,IAAapoD,MAAMC,QAAQmoD,KAC5BA,EAAW,CAACA,IAGfA,EAAStxD,SAASmb,IACfpf,KAAKk1D,YAAYM,WAAW,CAAE3rD,KAAMuV,EAAIvV,MAAQuV,EAAKlV,KAAMlK,MAAO,GAExE,CAEAy1D,cAAcF,GAKX,GAJIA,IAAapoD,MAAMC,QAAQmoD,KAC5BA,EAAW,CAACA,KAGVv1D,KAAKk1D,WAAY,OAAOzlD,QAAQC,UAErC,IAAIi6C,EAAQ,GAQZ,OANA4L,EAAStxD,SAASmb,IACfuqC,EAAMrlD,KACHtE,KAAKk1D,WAAWxtC,QAAQ,CAAE7d,KAAMuV,EAAIvV,MAAQuV,EAAKlV,KAAMlK,OACzD,IAGGyP,QAAQ8R,IAAIooC,EACtB,oBCrJH,MAAM2K,EAAe,EAAQ,OAEvBoB,EAA0C,CAC7ChB,WAAY,KACZ9uD,MAAO,KAEP5E,MAAO,IACPD,OAAQ,IACR40D,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,eAAgB,SAChBC,gBAAgB,EAEhBC,YAAa,KACbC,WAAY,KACZC,SAAU,KACVC,QAAS,MAGNC,EAAiB,CACpB/xD,IAAK,WACLkH,KAAM,QACNipD,SAAU,YAGb,SAAS6B,EAAkBC,EAAOjyD,QACG,IAAvBiyD,EAAMlwD,SAAS/B,GACvBiyD,EAAMlwD,SAAS/B,GAAOshB,SAAS2wC,EAAMlwD,SAAS/B,IAE9CiyD,EAAMlwD,SAAS/B,GAAOqxD,EAAwCrxD,EAEpE,CAEA,SAASkyD,EAAeD,EAAOjyD,GAC5B,IACGiyD,EAAMlwD,SAAS/B,GAAO0P,KAAK0D,MAAM6+C,EAAMlwD,SAAS/B,GAGnD,CAFE,MAAOgG,GACNisD,EAAMlwD,SAAS/B,GAAOqxD,EAAwCrxD,EACjE,CACH,CAEA5E,EAAOC,QAAU,cAAiC40D,EAC/C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOsqC,CACV,CAYAzvD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB0wD,EAAkBr2D,KAAM,SACxBq2D,EAAkBr2D,KAAM,UAGxBu2D,EAAev2D,KAAM,aACrBu2D,EAAev2D,KAAM,YACrBu2D,EAAev2D,KAAM,cAErBA,KAAKoG,SAAS0vD,eACX91D,KAAKoG,SAAS0vD,gBACdJ,EAAwCI,eAE3CS,EAAev2D,KAAM,iBACxB,CAMAw2D,gBACG,MAAO,EACV,CAEIC,iBACD,IAAIppC,EAAKrtB,KAAKqsB,eACd,IAAKgB,EAAI,OAAO,KAEhB,IAAIrV,EAAMqV,EAAGjB,WACb,OAAKpU,EAEEA,EAAIjK,UAAU/N,KAAKoG,SAASR,OAFlB,IAGpB,oBCpGH,MAAM8wD,EAAuB,EAAQ,OAE/BC,EAA2C,CAC9CC,SAAU,OACVC,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPb,EAAiB,CACpB/xD,IAAK,OACLkH,KAAM,aACNipD,SAAU,QAGb/0D,EAAOC,QAAU,cAAkCg3D,EAChD/2D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOurC,CACV,CAYA1wD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASwwD,SACX52D,KAAKoG,SAASwwD,UACdD,EAAyCC,SAE5C52D,KAAKoG,SAASywD,SAAWlxC,SACtB3lB,KAAKoG,SAASywD,UACXF,EAAyCE,UAI/C72D,KAAKoG,SAAS0wD,YAAcnxC,SACzB3lB,KAAKoG,SAAS0wD,aACXH,EAAyCG,aAG/C92D,KAAKoG,SAAS2wD,cAAgBpxC,SAC3B3lB,KAAKoG,SAAS2wD,eACXJ,EAAyCI,eAE/C/2D,KAAKoG,SAAS4wD,UAAYrxC,SACvB3lB,KAAKoG,SAAS4wD,WACXL,EAAyCK,WAE/Ch3D,KAAKoG,SAAS6wD,SAAWtxC,SACtB3lB,KAAKoG,SAAS6wD,UACXN,EAAyCM,UAG/Cj3D,KAAK++B,UAAU/+B,KAAMA,KAAM,CAAC,aAC/B,CAMAw2D,gBACG,MAAO,EACV,oBCjFH,MAAME,EAAuB,EAAQ,OAE/BQ,EAA0C,CAC7CC,QAAS,MACTC,UAAW,SACXP,SAAU,EAEV91D,OAAQ,IACRg2D,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPb,EAAiB,CACpB/xD,IAAK,MACLkH,KAAM,YACNipD,SAAU,OAGb/0D,EAAOC,QAAU,cAAiCg3D,EAC/C/2D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO8rC,CACV,CAYAjxD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS+wD,QACXn3D,KAAKoG,SAAS+wD,SACdD,EAAwCC,QAE3Cn3D,KAAKoG,SAASgxD,UACXp3D,KAAKoG,SAASgxD,WACdF,EAAwCE,UAE3Cp3D,KAAKoG,SAASywD,SAAWlxC,SACtB3lB,KAAKoG,SAASywD,UACXK,EAAwCL,UAI9C72D,KAAKoG,SAASrF,OAAS4kB,SACpB3lB,KAAKoG,SAASrF,QAAUm2D,EAAwCn2D,QAGnEf,KAAKoG,SAAS2wD,cAAgBpxC,SAC3B3lB,KAAKoG,SAAS2wD,eACXG,EAAwCH,eAE9C/2D,KAAKoG,SAAS4wD,UAAYrxC,SACvB3lB,KAAKoG,SAAS4wD,WACXE,EAAwCF,WAE9Ch3D,KAAKoG,SAAS6wD,SAAWtxC,SACtB3lB,KAAKoG,SAAS6wD,UACXC,EAAwCD,UAG9Cj3D,KAAK++B,UAAU/+B,KAAMA,KAAM,CAAC,YAC/B,CAMAw2D,gBACG,MAAO,EACV,oBCrFH,MAAMa,EAAkB,EAAQ,OAE1BC,EAAuC,CAC1C5C,WAAY,GACZ6C,YAAa,GACbC,YAAa,GACbC,aAAc,GACdC,aAAc,EACd/B,UAAW,EACXgC,cAAe,OACf71D,WAAY,IACZf,OAAQ,IACR62D,eAAgB,GAGbC,EAAsB,CACzBxzD,IAAK,QACLkH,KAAM,YACNipD,SAAU,SAGb/0D,EAAOC,QAAU,cAA8B23D,EAC5C13D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiB0yB,EACvD,CAEAzsC,gBACG,OAAOysC,CACV,CAEAzsC,uBACG,OAAOksC,CACV,CAYArxD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASsuD,WACX10D,KAAKoG,SAASsuD,YACd4C,EAAqC5C,WAExC10D,KAAKoG,SAASmxD,YACXv3D,KAAKoG,SAASmxD,aACdD,EAAqCC,YAExCv3D,KAAKoG,SAASoxD,YACXx3D,KAAKoG,SAASoxD,aACdF,EAAqCE,YAExCx3D,KAAKoG,SAASqxD,aACXz3D,KAAKoG,SAASqxD,cACdH,EAAqCG,aAExCz3D,KAAKoG,SAASsxD,aAAe/xC,SAC1B3lB,KAAKoG,SAASsxD,cACXJ,EAAqCI,cAG3C13D,KAAKoG,SAASuvD,UAAYhwC,SACvB3lB,KAAKoG,SAASuvD,WACX2B,EAAqC3B,WAG3C31D,KAAKoG,SAASuxD,cACX33D,KAAKoG,SAASuxD,eACdL,EAAqCK,cAExC33D,KAAKoG,SAAStE,WAAa6jB,SACxB3lB,KAAKoG,SAAStE,YACXw1D,EAAqCx1D,YAG3C9B,KAAKoG,SAASrF,OAAS4kB,SACpB3lB,KAAKoG,SAASrF,QAAUu2D,EAAqCv2D,QAGhEf,KAAKoG,SAASwxD,eAAiBjyC,SAC5B3lB,KAAKoG,SAASwxD,gBACXN,EAAqCM,gBAG3C53D,KAAK++B,UAAU/+B,KAAMA,KAAM,CAAC,cAC/B,CAMAw2D,gBACG,MAAMsB,EAAe,CAAC,QAAS,MAAO,MAAO,OAAQ,QACrD,OAAO93D,KAAK+E,YAAYkjB,SAAS1kB,GACvBu0D,EAAazqD,QAAQ9J,EAAEkpC,SAASpoC,MAAQ,GAErD,CAEA0zD,aACG,MAAM1qC,EAAKrtB,KAAKqsB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAMrV,EAAMqV,EAAGjB,WACf,OAAKpU,EAEEA,EAAIjK,UAAU/N,KAAKoG,SAASoxD,aAFlB,IAGpB,CAEAQ,aACG,MAAM3qC,EAAKrtB,KAAKqsB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAMrV,EAAMqV,EAAGjB,WACf,OAAKpU,EAEEA,EAAIjK,UAAU/N,KAAKoG,SAASmxD,aAFlB,IAGpB,CAEAU,cACG,MAAM5qC,EAAKrtB,KAAKqsB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAMrV,EAAMqV,EAAGjB,WACf,OAAKpU,EAEEA,EAAIjK,UAAU/N,KAAKoG,SAASqxD,cAFlB,IAGpB,oBCrIH,MAAMf,EAAuB,EAAQ,OAE/BwB,EAA2C,CAC9CC,SAAU,OACVC,WAAY,OACZvB,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPb,EAAiB,CACpB/xD,IAAK,OACLkH,KAAM,aACNipD,SAAU,QAGb/0D,EAAOC,QAAU,cAAkCg3D,EAChD/2D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO8sC,CACV,CAYAjyD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS+xD,SACXn4D,KAAKoG,SAAS+xD,UACdD,EAAyCC,SAE5Cn4D,KAAKoG,SAASgyD,WACXp4D,KAAKoG,SAASgyD,YACdF,EAAyCE,WAE5Cp4D,KAAKoG,SAASywD,SAAWlxC,SACtB3lB,KAAKoG,SAASywD,UACXqB,EAAyCrB,UAI/C72D,KAAKoG,SAAS0wD,YAAcnxC,SACzB3lB,KAAKoG,SAAS0wD,aACXoB,EAAyCpB,aAG/C92D,KAAKoG,SAAS2wD,cAAgBpxC,SAC3B3lB,KAAKoG,SAAS2wD,eACXmB,EAAyCnB,eAE/C/2D,KAAKoG,SAAS4wD,UAAYrxC,SACvB3lB,KAAKoG,SAAS4wD,WACXkB,EAAyClB,WAE/Ch3D,KAAKoG,SAAS6wD,SAAWtxC,SACtB3lB,KAAKoG,SAAS6wD,UACXiB,EAAyCjB,UAG/Cj3D,KAAK++B,UAAU/+B,KAAMA,KAAM,CAAC,aAC/B,CAMAw2D,gBACG,MAAO,EACV,oBCtFH,MAAME,EAAuB,EAAQ,OAE/B2B,EAA0C,CAC7CC,QAAS,MACTzB,SAAU,EAEV91D,OAAQ,IACRw3D,cAAe,GACfxB,cAAe,IAGZX,EAAiB,CACpB/xD,IAAK,MACLkH,KAAM,YACNipD,SAAU,OAGb/0D,EAAOC,QAAU,cAAiCg3D,EAC/C/2D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOitC,CACV,CAYApyD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASkyD,QACXt4D,KAAKoG,SAASkyD,SACdD,EAAwCC,QAE3Ct4D,KAAKoG,SAASywD,SAAWlxC,SACtB3lB,KAAKoG,SAASywD,UACXwB,EAAwCxB,UAI9C72D,KAAKoG,SAASrF,OAAS4kB,SACpB3lB,KAAKoG,SAASrF,QAAUs3D,EAAwCt3D,QAGnEf,KAAKoG,SAASmyD,cAAgB5yC,SAC3B3lB,KAAKoG,SAASmyD,eACXF,EAAwCE,eAE9Cv4D,KAAKoG,SAAS2wD,cAAgBpxC,SAC3B3lB,KAAKoG,SAAS2wD,eACXsB,EAAwCtB,eAG9C/2D,KAAK++B,UAAU/+B,KAAMA,KAAM,CAAC,YAC/B,CAMAw2D,gBACG,MAAO,EACV,oBC3EH,MAAMlC,EAAe,EAAQ,OAEvBkE,EAAyC,CAC5C9D,WAAY,KACZ+D,WAAY,KACZC,cAAe,KACfC,WAAY,KACZ53D,OAAQ,IACRK,MAAO,IAIJg1D,EAAiB,CACpB/xD,IAAK,UACLkH,KAAM,WACNipD,SAAU,WAGb/0D,EAAOC,QAAU,cAAgC40D,EAC9C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOotC,CACV,CAYAvyD,WAAWN,GACR7F,MAAMmG,WAAWN,GAKjB3F,KAAKoG,SAASrF,OAAS4kB,SAAS3lB,KAAKoG,SAASrF,QAAU,EAC3D,CAMAy1D,gBACG,MAAO,EACV,CAEAoC,mBACG,MAAMC,EAAa74D,KAAK84D,WAClBC,EAAc/4D,KAAK+B,GAAG+Q,QAAQlC,WAGpC,GAAKioD,EAEL,OAAOA,EAAWG,WAAW3uD,GAAMA,EAAE1H,QAAUo2D,IAAe,CACjE,CAEAD,WACG,OAAO94D,KAAK+B,GAAG+Q,QAAQjC,WAAW1C,KAAK9D,IAC7B,CACJzJ,GAAIyJ,EAAEuG,SACNjO,MAAO0H,EAAEuG,SACTqoD,MAAO5uD,EAAE0G,YAGlB,CAEAmoD,eACG,IAAIvlC,EAAK3zB,KAAKqsB,eACd,IAAKsH,EAAI,OAAO,KAEhB,IAAI3b,EAAM2b,EAAGvH,WACb,OAAKpU,EAEEA,EAAIjK,UAAU/N,KAAKoG,SAASqyD,YAFlB,IAGpB,CAEAU,kBACG,IAAIxlC,EAAK3zB,KAAKqsB,eACd,IAAKsH,EAAI,OAAO,KAEhB,IAAI3b,EAAM2b,EAAGvH,WACb,OAAKpU,EAEEA,EAAIjK,UAAU/N,KAAKoG,SAASsyD,eAFlB,IAGpB,CAEAU,eACG,IAAIzlC,EAAK3zB,KAAKqsB,eACd,IAAKsH,EAAI,OAAO,KAEhB,IAAI3b,EAAM2b,EAAGvH,WACb,OAAKpU,EAEEA,EAAIjK,UAAU/N,KAAKoG,SAASuyD,YAFlB,IAGpB,CAEAU,cACG,IAAIC,EAAiBt5D,KAAK+B,GAAG24B,aAAa3sB,UACvC,wCAGH,IAAI8qD,EAAa74D,KAAK84D,WAClBjoD,EAAW,GAEf,GAAKgoD,EAUL,OARAA,EAAW50D,SAAQ,CAACmK,EAAMrC,KACvB,IAAIwtD,EAAW,GACXnrD,EAAK6qD,QACNM,EAAWD,EAAeE,SAASprD,EAAK6qD,QAE3C,IAAIp8B,EAAO,CAAEj8B,GAAImL,EAAQ,EAAGpJ,MAAOyL,EAAKzL,MAAOs2D,MAAOM,GACtD1oD,EAASvM,KAAKu4B,EAAK,IAEfhsB,CACV,CAEA7I,QACG,IAAI2rB,EAAK3zB,KAAKqsB,eACd,OAAKsH,GAGOA,EAAG3rB,OAHC,IAOnB,oBC1IH,MAAMqvD,EAAkB,EAAQ,OAE1BoC,EAAyB,CAC5B/E,WAAY,KACZ1qC,iBAAkB,CAAC,GAGhBosC,EAAiB,CACpB/xD,IAAK,uBACLkH,KAAM,SACNipD,SAAU,yBAGb/0D,EAAOC,QAAU,cAA6C23D,EAC3D13D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,GAEpD,MAAMr2D,EAAI,IAAI+V,IAAW9V,KAAK+B,GAAGsP,aAAajQ,SAAS0U,GAGvD,GAAI9V,KAAK2nB,OAAOrU,GAAMA,aAAa+jD,IAAiBlxD,OAAS,EAAG,CAC7DnG,KAAK4nB,OAAS,GAGd,MAAM8xC,EAAU30D,EAAYykB,QACzB,CACGnlB,IAAKgzD,EAAgB5qB,SAASpoC,IAC9BjD,MAAOrB,EAAE,MACToH,KAAM,KACNf,SAAU,CACPuzD,WAAW,IAGjB50D,EACA/E,MAGHA,KAAK4nB,OAAOtjB,KAAKo1D,GAGjB,MAAME,EAAY70D,EAAYykB,QAC3B,CACGnlB,IAAKgzD,EAAgB5qB,SAASpoC,IAC9BjD,MAAOrB,EAAE,QACToH,KAAM,OACNf,SAAU,CACPuzD,WAAW,IAGjB50D,EACA/E,MAGHA,KAAK4nB,OAAOtjB,KAAKs1D,EACpB,CACH,CAEAxuC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOquC,CACV,CAOAjD,gBACG,MAAO,EACV,mBCxEH,MAAMlC,EAAe,EAAQ,OAEvBuF,EAAmD,CACtDnF,WAAY,KACZ9uD,MAAO,MAGJwwD,EAAiB,CACpB/xD,IAAK,sBACLkH,KAAM,SACNipD,SAAU,yBAGb/0D,EAAOC,QAAU,cAA0C40D,EACxD30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOyuC,CACV,CAUArD,gBACG,MAAO,EACV,oBC3BH,MAAMsD,EAAS,EAAQ,OAMjB1D,EAAiB,CACpB/xD,IAAK,gBACLkH,KAAM,UACNipD,SAAU,aAGPuF,EAA8B,CACjCC,QAAS,EACTC,QAAS,EACTC,SAAS,EACTP,WAAW,GAGdl6D,EAAOC,QAAU,cAAkCo6D,EAOhDn6D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO2uC,CACV,CAQA9zD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS4zD,QAAUr0C,SACrB3lB,KAAKoG,SAAS4zD,SAAWD,EAA4BC,cAGpB,IAAzBh6D,KAAKoG,SAAS6zD,SACtBj6D,KAAKoG,SAAS6zD,QAAQ9rD,KAAI,SAAU8rD,GACjC,OAAOt0C,SAASs0C,EACnB,IAG4B,MAA3Bj6D,KAAKoG,SAASuzD,UACf35D,KAAKoG,SAASuzD,UAAY5lD,KAAK0D,MAAMzX,KAAKoG,SAASuzD,WAEnD35D,KAAKoG,SAASuzD,UAAYI,EAA4BJ,UAG5B,MAAzB35D,KAAKoG,SAAS8zD,QACfl6D,KAAKoG,SAAS8zD,QAAUnmD,KAAK0D,MAAMzX,KAAKoG,SAAS8zD,SAEjDl6D,KAAKoG,SAAS8zD,QAAUH,EAA4BG,OAE1D,CAEAC,sBAEG,OAAOn6D,KAAK2nB,QAAQha,MAAK,CAACC,EAAGC,IACtBD,EAAEjN,SAASy5D,GAAKvsD,EAAElN,SAASy5D,EAAUxsD,EAAEjN,SAASuM,EAAIW,EAAElN,SAASuM,EACvDU,EAAEjN,SAASy5D,EAAIvsD,EAAElN,SAASy5D,GAE5C,oBC7EH,IAAIn3C,EAAY,EAAQ,OAExB,MAAMmzC,EAAiB,CACpB/xD,IAAK,OACLkH,KAAM,kBACNipD,SAAU,qBACV6F,QAAS,IAGNC,EAAkC,CACrCl5D,MAAO,IAGV3B,EAAOC,QAAU,cAAyBujB,EAMvCtjB,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM,CAAC,SAAUiF,EAAYhD,IAE7B/B,KAAKw2B,SAAW,GAGhBx2B,KAAKoE,SAAW+gC,GAAiBixB,EAEjCp2D,KAAK+E,YAAcA,EAEnB/E,KAAKiV,OAASA,GAAU,KAExBjV,KAAKu6D,gBAAiB,EAItBv6D,KAAKw6D,eAAiB,GAItBx6D,KAAKiG,WAAWN,EACnB,CAEAylB,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOkvC,CACV,CAUAlvC,mBAAmBrmB,EAAakQ,GAE7B,OAAOlQ,EAAYykB,QAChB,CAAEnlB,IAAKrE,KAAKysC,SAASpoC,KACrBU,EACAkQ,EAEN,CAEAooB,UACG,OAAOr9B,KAAKoE,SAASC,GACxB,CAEAo2D,WACG,OAAOz6D,KAAKoE,SAASmH,IACxB,CAEAmvD,UACG,OAAO16D,KAAKoE,SAASi2D,OACxB,CAUAv0D,QASG,IAAIkS,EAAMlY,MAAMgG,QAEZgI,EAAS,CACVlN,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,OACnByC,IAAKrE,KAAKqE,IACVkH,KAAMvL,KAAKuL,KACX8uD,QAASr6D,KAAKq6D,QACdlzD,KAAMnH,KAAKmH,KACXf,SAAUpG,KAAK+B,GAAG2D,UAAU1F,KAAKoG,UAAY,CAAC,GAC9Cu0D,aAAc36D,KAAK26D,aACnBn1C,aAAcxN,EAAIwN,cAerB,OAXA1X,EAAO8sD,SAAW56D,KAAK4nB,QAAU,IAAIzZ,KAAKmF,GAAMA,EAAE1S,KAAIkI,QAAQlI,GAAOA,IACrEkN,EAAO8sD,QAAU9sD,EAAO8sD,QAAQ5yC,OAAOhoB,KAAKw6D,gBAExCx6D,KAAKW,WAAUmN,EAAOnN,SAAWX,KAAKW,UAM1CmN,EAAO+sD,OAAS76D,KAAK66D,SAEd/sD,CACV,CAQA7H,WAAWN,GAkDR,GAjDA3F,KAAKY,GAAK+E,EAAO/E,GAIjBZ,KAAK4B,KAAO+D,EAAO/D,MAAQ,OAI3B5B,KAAKqE,IAAMsB,EAAOtB,KAAOrE,KAAKq9B,UAK9Br9B,KAAKuL,KAAO5F,EAAO4F,MAAQvL,KAAKy6D,WAKhCz6D,KAAKq6D,QAAU10D,EAAO00D,SAAWr6D,KAAK06D,UAEtC16D,KAAKmH,KAAOxB,EAAOwB,KAOnBxB,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCpG,KAAKoB,MAAQuE,EAAOvE,OAASuE,EAAOS,SAAShF,OAAS,UAEtDpB,KAAKoG,SAAWT,EAAOS,UAAY,CAAC,EAKpCpG,KAAKoG,SAASrF,OAAS4kB,SAAS3lB,KAAKoG,SAASrF,QAAU,GAExDf,KAAK26D,aAAeh1D,EAAOg1D,cAAgB,CAAC,EAQ5C76D,MAAMmG,WAAWN,IAIZ3F,KAAKmH,MAAQgG,MAAMC,QAAQpN,KAAKwlB,cAClC,IAAK,IAAIjS,EAAI,EAAGA,EAAIvT,KAAKwlB,aAAarf,OAAQoN,IAK3C,GAJS,GAALA,IAEDvT,KAAKmH,KAAOnH,KAAKwlB,aAAajS,GAAGnS,OAEM,MAAtCpB,KAAKwlB,aAAajS,GAAG0rB,cAAuB,CAE7Cj/B,KAAKmH,KAAOnH,KAAKwlB,aAAajS,GAAGnS,MACjC,KACH,CAKY,WAAdpB,KAAKoB,OACFpB,KAAKiV,SACNjV,KAAKoB,MAAQpB,KAAKiV,OAAO7T,MAAQ,IAAMpB,KAAKoE,SAASC,KAI3D,IAAIsjB,EAAQ,GACZ3nB,KAAKw6D,eAAiBx6D,KAAKw6D,gBAAkB,IAC5C70D,EAAOi1D,SAAW,IAAI32D,SAASrD,IAC7B,IAAI+gB,EAAM3hB,KAAK+B,GAAG2iB,eAAe9jB,GAC7B+gB,EACDgG,EAAMrjB,KAAKtE,KAAK+E,YAAYykB,QAAQ7H,EAAK3hB,KAAK+E,YAAa/E,OAE3DA,KAAKw6D,eAAel2D,KAAK1D,EAC5B,IAEHZ,KAAK4nB,OAASD,EAGd3nB,KAAKW,SAAWgF,EAAOhF,UAAY,CAAC,EAEb,MAAnBX,KAAKW,SAASuM,IAAWlN,KAAKW,SAASuM,EAAIyY,SAAS3lB,KAAKW,SAASuM,IAC/C,MAAnBlN,KAAKW,SAASy5D,IAAWp6D,KAAKW,SAASy5D,EAAIz0C,SAAS3lB,KAAKW,SAASy5D,IAEtEp6D,KAAKW,SAASm6D,GAAKn1C,SAAS3lB,KAAKW,SAASm6D,IAAM,GAChD96D,KAAKW,SAASo6D,GAAKp1C,SAAS3lB,KAAKW,SAASo6D,IAAM,EACnD,CAEAF,SACG,OAAsB,MAAf76D,KAAKiV,QAAkBjV,KAAKiV,QAAUjV,KAAK+E,WACrD,CAOAi2D,aACG,IAAIC,EAAU,GACVC,EAAUl7D,KAKd,IAFAi7D,EAAQ1nC,QAAQ2nC,IAERA,EAAQL,UAAYK,EAAQjmD,QACjCgmD,EAAQ1nC,QAAQ2nC,EAAQjmD,QAExBimD,EAAUA,EAAQjmD,OAGrB,OAAOgmD,CACV,CAUAx1C,qBAAqBvW,GAClB,IAAIwW,GAAY,EAEZy1C,EAAkB9mD,OAAOC,KAAKtU,KAAK26D,eAAiB,GAOxD,OANCzrD,GAAS,IAAIjL,SAAS2L,IAChBurD,EAAgB9tD,QAAQuC,EAAEC,MAAQD,IAAM,IACzC8V,GAAY,EACf,IAGIA,CACV,CASA01C,gBAEG,IAAIC,EAAc,EAElB,GAAIr7D,KAAK+E,YAAY+e,gBAAiB,CAEnC,IAAIw3C,GAAkB,EAEmC,GAArD31C,SAAS3lB,KAAK+E,YAAYgf,eAAe6B,UAE1C5lB,KAAK+B,GAAG+Q,QAAQ5D,QAAQjL,SAAS4hB,IAE3B7lB,KAAK+E,YAAYgf,eAAe8B,KAAKxY,QAClCwY,EAAKjlB,IAAMilB,EAAKhW,OACd,IAGLyrD,GAAkB,EAClBD,EAAc,EACjB,IAKFC,GACuD,GAAxD31C,SAAS3lB,KAAK+E,YAAYgf,eAAe+kC,aAItC9oD,KAAK+E,YAAYgf,eAAeglC,QAAQ17C,QACrCrN,KAAK+B,GAAG+Q,QAAQjD,OAAS,KACvB,IAGLyrD,GAAkB,EAClBD,EAAc,GAMjBr7D,KAAK26D,cACLtmD,OAAOC,KAAKtU,KAAK26D,cAAcx0D,OAAS,IACvCm1D,GAGDt7D,KAAK+B,GAAG+Q,QAAQ5D,QAAQjL,SAAS4hB,IAC9B,IAAI01C,EAAcv7D,KAAK26D,aAAa90C,EAAKjlB,IAAMilB,EAAKhW,MAChD0rD,GAAe51C,SAAS41C,GAAeF,IAExCA,EAAc11C,SAAS41C,GAAY,GAG/C,MACGF,EAAc,EAGjB,OAAOA,CACV,CAMAG,sBAIG,IAHA,IAAItxD,EAAO,KAEPwvB,EAAO15B,KACQ,QAAZ05B,EAAKr1B,MAAkBq1B,EAAKmhC,UAAYnhC,EAAKzkB,QACjDykB,EAAOA,EAAKzkB,OAOf,MAJgB,QAAZykB,EAAKr1B,MACN6F,EAAOwvB,GAGHxvB,CACV,CAOAuxD,wBAIG,IAHA,IAAIC,EAAS,KAEThiC,EAAO15B,KACQ,UAAZ05B,EAAKr1B,MAAoBq1B,EAAKmhC,UAAYnhC,EAAKzkB,QACnDykB,EAAOA,EAAKzkB,OAOf,MAJgB,UAAZykB,EAAKr1B,MACNq3D,EAAShiC,GAGLgiC,CACV,CAEAC,WAAWC,GAIR,GAHgB,MAAZA,IAAkBA,EAAW,KAAM,GAGnC57D,KAAK66D,SACN,OAAO76D,KAIV,IADA,IAAI67D,EAAa77D,KAAKiV,OAEnB4mD,IACmB,QAAlBA,EAAWx3D,MAAkBu3D,EAASC,KAEvCA,EAAaA,EAAW5mD,OAG3B,OAAO4mD,CACV,CAEAC,WAGG,IAFA,IAAIC,EAAW/7D,KAAK27D,cAEZI,EAASlB,UACdkB,EAAWA,EAASJ,aAGvB,OAAOI,CACV,CASAlzC,aACG,OAAI7oB,KAAKiV,OACCjV,KAAKiV,OAAO+mD,UAAYh8D,KAAKY,GAE7BZ,KAAK+E,YAAYikB,UAAYhpB,KAAKY,EAE/C,CAOAo7D,UACG,OAAOh8D,KAAK6oB,aAAe,UAC9B,CAQIwD,qBACD,IAAIqoC,GAAc10D,KAAKoG,UAAY,CAAC,GAAGsuD,WACvC,IAAKA,EAAY,CACd,GACG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,QAAS,UAAUrnD,QACxDrN,KAAKqE,MACH,EACN,CAEC,GAAgB,QAAZrE,KAAKqE,KAAiBrE,KAAKkD,eAAgB,OAAO,KAEtD,GAAIlD,KAAKu6D,eAAgB,OAAO,KAEhC,IAAI0B,EAAY,IAAI3zD,MACjB,yCAAyCtI,KAAKqE,oCAEjDrE,KAAK+B,GAAGqG,OAAOuuB,QAAQslC,EAAW,CAC/Bv7D,KAAMV,KACNoG,SAAUpG,KAAKoG,UAErB,MAKY,GAFN,CAAC,SAAU,QAAS,OAAQ,MAAO,iBAAiBiH,QACjDrN,KAAKqE,MAGRmE,QAAQC,KACL,yDAAyDzI,KAAKqE,QAIvE,OAAO,IACV,CAEA,IAAIgpB,EAAKrtB,KAAK+B,GAAGyqB,mBAAmBkoC,GACpC,IAAKrnC,EAAI,CACN,IAAI6uC,EAAU,IAAI5zD,MACf,QAAQtI,KAAKoB,UAAUpB,KAAKY,mDAE/BZ,KAAK+B,GAAGqG,OAAOuuB,QAAQulC,EAAS,CAC7Bx7D,KAAMV,KACN00D,cAEN,CACA,OAAOrnC,CACV,CAiBA8uC,mBAAmBC,EAAQf,GAOxB,OAN6B,GAAzB11C,SAAS01C,GACNr7D,KAAK26D,aAAayB,WAAgBp8D,KAAK26D,aAAayB,GAExDp8D,KAAK26D,aAAayB,GAAUf,EAGxBr7D,KAAK4H,MAAK,GAAO,EAC3B,CAiBA+f,MAAM7e,EAAS,MAAM,GAAMwe,GAAO,GAC/B,IAAIxZ,EAAS,GAEb,OAAK9N,KAAK4nB,QAAU5nB,KAAK4nB,OAAOzhB,OAAS,IAGrC2C,GAAUwe,GACXxZ,EAASA,EAAOka,OAAOhoB,KAAK4nB,OAAO9e,OAAOA,IAE1C9I,KAAK4nB,OAAO3jB,SAASqP,IAClB,IAAIuU,EAAWvU,EAAEqU,MAAM7e,EAAQwe,GAC3BO,GAAYA,EAAS1hB,OAAS,IAC/B2H,EAASA,EAAOka,OAAOH,GAC1B,KAGH/Z,EAAS9N,KAAK4nB,OAAO9e,OAAOA,IAboBgF,CAiBtD,CAQA0b,QAAQ7jB,EAAQZ,EAAakQ,GAC1B,OAAOjV,KAAK+E,YAAYykB,QACrB7jB,EACAZ,GAAe/E,KAAK+E,YACpBkQ,GAAUjV,KAEhB,CAUAq8D,YAAY37D,GAET,OADA8H,QAAQ+G,MAAM,sCACPvP,KAAKs8D,WAAW57D,EAC1B,CAUA47D,WAAW57D,GACR,IAAI8iC,EAAUxjC,KAAK4nB,OAAOzhB,OAK1B,OAJAnG,KAAK4nB,OAAS5nB,KAAK2nB,OAAM,SAAUrU,GAChC,OAAOA,EAAE1S,IAAMF,EAAKE,EACvB,IAEIZ,KAAK4nB,OAAOzhB,OAASq9B,EACfxjC,KAAK4H,OAGR6H,QAAQC,SAClB,CAUA6sD,WAAW77D,GAKR,OAHGV,KAAK2nB,OAAM,SAAUrU,GAClB,OAAOA,EAAE1S,IAAMF,EAAKE,EACvB,IAAGuF,OAAS,EAMRsJ,QAAQC,WAJZ1P,KAAK4nB,OAAOtjB,KAAK5D,GACVV,KAAK4H,OAIlB,CAWA40D,YAAYC,EAAQC,GACjB,IAAIxyB,EAAOlqC,KAAK4nB,OAAOoxC,WAAW1lD,GAAMA,EAAE1S,IAAM67D,IAChD,KAAIvyB,EAAO,GAMX,OAHAlqC,KAAK4nB,OAAOzb,OAAOuwD,EAAY,EAAG18D,KAAK4nB,OAAOzb,OAAO+9B,EAAM,GAAG,IAGvDlqC,KAAK4H,MAAK,EACpB,CAaAkN,UAIG,OAFA9U,KAAKy2B,YAAW,GAEThnB,QAAQC,UACXgF,MAAK,KAKH,IAAIioD,EAAiB,GACjBz0C,EAAWloB,KAAK2nB,QAQpB,OAPA3nB,KAAK4nB,OAAS,GAIdM,EAASjkB,SAASqP,IACfqpD,EAAer4D,KAAKgP,EAAEwB,UAAU,IAE5BrF,QAAQ8R,IAAIo7C,EAAe,IAEpCjoD,MAAK,KAEH,GAAI1U,KAAKiV,SAAWjV,KAAK8lB,MACtB,OAAO9lB,KAAKiV,OAAOqnD,WAAWt8D,KACjC,IAEF0U,MAAK,IACI5U,MAAMgV,YAEfJ,MAAK,KACH1U,KAAKwP,KAAK,YAAY,GAE/B,CAQA5H,OACG,OAAO6H,QAAQC,UACXgF,MAAK,IAEI5U,MAAM8H,SAEf8M,MAAK,KAEH,GAAI1U,KAAKiV,SAAWjV,KAAK8lB,MAGtB,OAAO9lB,KAAKiV,OAAOsnD,WAAWv8D,KACjC,IAEF0U,MAAK,IACI1U,MAEhB,CAiBAuyB,SAASgE,GACN,GAAKA,GAAQA,EAAI/D,SAAY+D,EAAI7D,SAAjC,CAEA,IAAIpF,EAASttB,KAAKw2B,SAAShJ,MAAMnjB,GACvBA,EAAEmoB,SAAW+D,EAAI/D,SAAWnoB,EAAEooB,WAAa8D,EAAI9D,cAIpDnF,GAAUA,EAAOnnB,OAAS,KAE5BnG,KAAKw2B,SAASlyB,KAAK,CAChBkuB,QAAS+D,EAAI/D,QACbC,UAAW8D,EAAI9D,UACfC,SAAU6D,EAAI7D,WAIjB6D,EAAI/D,QAAQpwB,GAAGm0B,EAAI9D,UAAW8D,EAAI7D,UAhBY,CAkBpD,CASA+D,WAAWnP,GACJA,GACDtnB,KAAK2nB,QAAQ1jB,SAASqP,IACnBA,EAAEmjB,WAAWnP,EAAK,IAIpBtnB,KAAKw2B,UAAYx2B,KAAKw2B,SAASrwB,OAAS,GACzCnG,KAAKw2B,SAASvyB,SAASoG,IACpBA,EAAEmoB,QAAQkE,eAAersB,EAAEooB,UAAWpoB,EAAEqoB,SAAS,GAG1D,CAkBAuD,MAAM2mC,EAAW3nD,EAAQ9S,EAAU,CAAC,GACjCy6D,EAAYA,GAAa,CAAC,EAG1B,IAAI36D,EAASjC,KAAK8F,QAGlB,CAAC,QAAS,SAAS7B,SAASuhC,WAClBvjC,EAAOujC,EAAK,IAIlBxlC,KAAK68D,wBACL78D,KAAK68D,yBAA2B,IAAI54D,SAASuhC,IACvCvjC,GAAUA,EAAOmE,WAClBnE,EAAOmE,SAASo/B,GAAQo3B,EAAU36D,EAAOmE,SAASo/B,IAAM,IAKjE,IAAI13B,EAAS9N,KAAKwpB,QAAQvnB,EAAQjC,KAAK+E,YAAakQ,GA+BpD,OA1BGnH,EAAOlN,GAFI,MAAVqU,EAEW,KAEA2nD,EAAU9uD,EAAOlN,KAAOZ,KAAK+B,GAAG8N,OAI3C7P,KAAK8lB,QAAU3jB,EAAQ26D,iBACxBhvD,EAAOgX,OAAS,GAChB9kB,KAAK8lB,QAAQ7hB,SAAS+d,IACnB,IAAI+6C,EAAgB/6C,EAAEiU,MAAM2mC,EAAW9uD,EAAQ3L,GAC/C46D,EAAc9nD,OAASnH,EAEvBA,EAAOgX,OAAOxgB,KAAKy4D,EAAc,KAKnC/8D,KAAK2nB,QAAUxlB,EAAQ66D,iBACxBlvD,EAAO8Z,OAAS,GAChB5nB,KAAK2nB,QAAQ1jB,SAASqP,IACnB,IAAI2pD,EAAa3pD,EAAE2iB,MAAM2mC,EAAW9uD,EAAQ3L,GAE5C2L,EAAO8Z,OAAOtjB,KAAK24D,EAAW,KAI7BnvD,CACV,CAsBAovD,KAAKN,EAAW3nD,EAAQ9S,EAAU,CAAC,GAChCy6D,EAAYA,GAAa,CAAC,EAG1B,IAAI36D,EAASjC,KAAK8F,QAGlB,CAAC,UAAW,WAAW7B,SAASuhC,WACtBvjC,EAAOujC,EAAK,IAIlBxlC,KAAK68D,wBACL78D,KAAK68D,yBAA2B,IAAI54D,SAASuhC,IACvCvjC,GAAUA,EAAOmE,WAClBnE,EAAOmE,SAASo/B,GAAQo3B,EAAU36D,EAAOmE,SAASo/B,IAAM,IAKjE,IAAI13B,EAAS9N,KAAK+E,YAAYykB,QAAQvnB,EAAQjC,KAAK+E,YAAakQ,GAuBhE,OApBAnH,EAAOmH,OAASA,GAAUjV,KAAKiV,OAM5BnH,EAAOlN,GAHI,MAAVqU,EAGW,KAEA2nD,EAAU9uD,EAAOlN,KAAOZ,KAAK+B,GAAG8N,OAI/B,QAAZ7P,KAAKqE,MACNyJ,EAAO3G,KACJhF,GAASg7D,SACT,GAAGrvD,EAAO3G,eAAenH,KAAK+B,GAAG8N,OAAOuD,MAAM,EAAG,KAEpDtF,EAAO1M,MAAQe,GAASg7D,SAAW,GAAGrvD,EAAO1M,kBAGzCqO,QAAQC,UACXgF,MAAK,KAEH,IAAI0oD,EAAW,GA4Bf,OA1BIp9D,KAAK8kB,SAAW3iB,EAAQ26D,iBACzBhvD,EAAOgX,OAAS,GAChB9kB,KAAK8lB,QAAQ7hB,SAAS+d,IAGfA,EAAE64C,UACH76D,KAAK+E,YAAY+f,OAAOxgB,KAAK,CAAE1D,GAAIg8D,EAAU56C,EAAEphB,MAElDw8D,EAAS94D,KACN0d,EACIk7C,KAAKN,EAAW9uD,EAAQ3L,GACxBuS,MAAMqoD,IACJA,EAAc9nD,OAASnH,EAEvB9N,KAAK+E,YAAY+f,OACd9kB,KAAK+E,YAAY+f,OAAOhc,QACpBu0D,GAAOA,EAAGz8D,IAAMg8D,EAAU56C,EAAEphB,MAInCkN,EAAOgX,OAAOxgB,KAAKy4D,EAAc,IAEzC,KAIAttD,QAAQ8R,IAAI67C,EAAS,IAE9B1oD,MAAK,KAEH,IAAI0oD,EAAW,GAsBf,OApBIp9D,KAAK4nB,SAAWzlB,EAAQ66D,iBACzBlvD,EAAO8Z,OAAS,GAChB5nB,KAAK2nB,QAAQ1jB,SAASqP,IACnB8pD,EAAS94D,KAGNgP,EAAE4pD,KAAKN,EAAW9uD,EAAQ3L,GAASuS,MAAMuoD,IAInCnvD,EAAO8Z,OAAO9e,QAAQw0D,GAAOA,EAAG18D,IAAMq8D,EAAWr8D,KAC7CuF,OAAS,GAEb2H,EAAO8Z,OAAOtjB,KAAK24D,EACtB,IAEL,KAIAxtD,QAAQ8R,IAAI67C,EAAS,IAE9B1oD,MAAK,IAEI5G,EAAOlG,SAEhB8M,MAAK,IACI5G,GAEhB,oBC18BH,MAAMwmD,EAAe,EAAQ,OAEvBiJ,EAA4C,CAC/C7I,WAAY,KACZ9uD,MAAO,KACP43D,SAAU,WACVC,WAAY,EACZC,SAAU,GAGPtH,EAAiB,CACpB/xD,IAAK,cACLkH,KAAM,SACNipD,SAAU,eAGb/0D,EAAOC,QAAU,cAAmC40D,EACjD30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOmyC,CACV,CAYAt3D,WAAWN,GACR7F,MAAMmG,WAAWN,EACpB,CAMA6wD,gBACG,MAAO,EACV,oBCjDH,MAAMmH,EAAe,EAAQ,OAEvBC,EAA0C,CAC7CC,OAAQ,EACR7H,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,QAAS,IAGN2H,EAAyB,CAC5Bz5D,IAAK,WACLkH,KAAM,KACNipD,SAAU,aAGb/0D,EAAOC,QAAU,cAAiCi+D,EAM/Ch+D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiB24B,EAEvB,CAEA1yC,gBACG,OAAO0yC,CACV,CAEA1yC,uBACG,OAAOwyC,CACV,CAYA33D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASy3D,OAASl4C,SACpB3lB,KAAKoG,SAASy3D,QAAUD,EAAwCC,QAEnE79D,KAAKoG,SAAS4vD,YACXh2D,KAAKoG,SAAS4vD,aACd4H,EAAwC5H,YAC3Ch2D,KAAKoG,SAAS8vD,SACXl2D,KAAKoG,SAAS8vD,UACd0H,EAAwC1H,SAC3Cl2D,KAAKoG,SAAS6vD,WACXj2D,KAAKoG,SAAS6vD,YACd2H,EAAwC3H,WAC3Cj2D,KAAKoG,SAAS+vD,QACXn2D,KAAKoG,SAAS+vD,SACdyH,EAAwCzH,OAC9C,CAEAsF,wBACG,IAAIsC,EAAW,KAEXrkC,EAAO15B,KACX,KAAmB,YAAZ05B,EAAKr1B,MAAsBq1B,EAAKmhC,UAAYnhC,EAAKzkB,QACrDykB,EAAOA,EAAKzkB,OAOf,MAJgB,YAAZykB,EAAKr1B,MACN05D,EAAWrkC,GAGPqkC,CACV,oBClFH,MAAMrmC,EAAmB,EAAQ,OAE3BsmC,EAAgD,CAAC,EAEjDC,EAA+B,CAClC55D,IAAK,iBACLkH,KAAM,iBACNipD,SAAU,iCAGb/0D,EAAOC,QAAU,cAAuCg4B,EAMrD/3B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiB84B,EAEvB,CAEA7yC,gBACG,OAAO6yC,CACV,CAEA7yC,uBACG,OAAO4yC,CACV,oBC9BH,MAAMtmC,EAAmB,EAAQ,OAE3BwmC,EAAwC,CAC3CC,SAAU,IAGP/H,EAAiB,CACpB/xD,IAAK,gBACLkH,KAAM,UACNipD,SAAU,gCAGb/0D,EAAOC,QAAU,cAAsCg4B,EAMpD/3B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO8yC,CACV,oBC7BH,MAAM7G,EAAkB,EAAQ,OAE1B+G,EAAuB,CAC1B/5D,IAAK,SACLkH,KAAM,cACNipD,SAAU,UAGP0J,EAAwC,CAC3CxJ,WAAY,KACZiB,WAAW,EACXgC,cAAe,OACf71D,WAAY,IACZf,OAAQ,GAGXtB,EAAOC,QAAU,cAA+B23D,EAM7C13D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBi5B,EACvD,CAEAhzC,gBACG,OAAOgzC,CACV,CAEAhzC,uBACG,OAAO8yC,CACV,CAQAj4D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASuxD,cACX33D,KAAKoG,SAASuxD,eACduG,EAAsCvG,cAGzC33D,KAAKoG,SAASuvD,UAAY5hD,KAAK0D,MACD,MAA3BzX,KAAKoG,SAASuvD,UACT31D,KAAKoG,SAASuvD,UACduI,EAAsCvI,WAI9C31D,KAAKoG,SAAStE,WAAa6jB,SACxB3lB,KAAKoG,SAAStE,YACXo8D,EAAsCp8D,YAE5C9B,KAAKoG,SAASrF,OAAS4kB,SACpB3lB,KAAKoG,SAASrF,QAAUm9D,EAAsCn9D,OAEpE,CAMAy1D,gBACG,IAAIsB,EAAe,CAAC,QAAS,QAG7B,OAFmB93D,KAAK+E,YAAYkjB,UAEfnf,QAAQvF,GACnBu0D,EAAazqD,QAAQ9J,EAAEkpC,SAASpoC,MAAQ,GAErD,CAEAg6D,iBAAiBz4D,EAAO04D,GACrB,GAAa,MAAT14D,EAAe,OAEnB,IAAI0jB,EAAU1jB,EAAM24D,kBAAkBC,YAAYx+D,KAAK+E,YAAa/E,MACpE,OAAe,MAAXspB,GAGJA,EAAQljB,SAAWkjB,EAAQljB,UAAY,CAAC,EACxCkjB,EAAQljB,SAASsE,QAAU9E,EAAMhF,GACjC0oB,EAAQljB,SAAStE,WACd9B,KAAKoG,SAAStE,YACdo8D,EAAsCp8D,WAIzCwnB,EAAQljB,SAAS8pB,MAAQtqB,EAAMsqB,MAI/B5G,EAAQ3oB,SAASy5D,EAAIkE,EAGrBt+D,KAAK4nB,OAAOtjB,KAAKglB,GAEVA,QApBP,CAqBH,oBCtGH,MAAMoO,EAAmB,EAAQ,OAE3B+mC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCr6D,IAAK,eACLkH,KAAM,eACNipD,SAAU,+BAGb/0D,EAAOC,QAAU,cAAqCg4B,EAMnD/3B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBu5B,EAEvB,CAEAtzC,gBACG,OAAOszC,CACV,CAEAtzC,uBACG,OAAOqzC,CACV,oBC/BH,MAAM/mC,EAAmB,EAAQ,OAE3BinC,EAA6C,CAChD59D,OAAQ,GACRC,MAAO,KAGJ49D,EAA4B,CAC/Bv6D,IAAK,cACLkH,KAAM,QACNipD,SAAU,8BAGb/0D,EAAOC,QAAU,cAAoCg4B,EAMlD/3B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBy5B,EAEvB,CAEAxzC,gBACG,OAAOwzC,CACV,CAEAxzC,uBACG,OAAOuzC,CACV,CAYA14D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASrF,OAAS4kB,SACpB3lB,KAAKoG,SAASrF,QACX49D,EAA2C59D,QAEjDf,KAAKoG,SAASpF,MAAQ2kB,SACnB3lB,KAAKoG,SAASpF,OAAS29D,EAA2C39D,MAExE,oBCzDH,MAAMszD,EAAe,EAAQ,OAE7B70D,EAAOC,QAAU,cAAmC40D,EAKjDiK,kBACG,IAAIM,EAAa,KAEbnlC,EAAO15B,KACX,MACI05B,EAAKmhC,UACNnhC,EAAKzkB,QACO,UAAZykB,EAAKr1B,KACO,YAAZq1B,EAAKr1B,KAELq1B,EAAOA,EAAKzkB,OAOf,MAJgB,UAAZykB,EAAKr1B,KAA+B,YAAZq1B,EAAKr1B,MAC9Bw6D,EAAanlC,GAGTmlC,CACV,CAEAj5D,QACG,IAAI24D,EAAkBv+D,KAAKu+D,kBAC3B,GAAuB,MAAnBA,EAAyB,OAAO,KAEpC,IAAIlyC,EAAiBkyC,EAAgBlyC,eACrC,GAAsB,MAAlBA,EAAwB,OAAO,KAEnC,IAAIpnB,EAASonB,EAAeD,WAC5B,GAAc,MAAVnnB,EAAgB,OAAO,KAE3B,IAAIW,EAAQX,EAAO8B,QAAQuM,GAAMA,EAAE1S,IAAMZ,KAAKoG,SAASsE,UAAS,GAQhE,OAJI9E,GAAS5F,KAAKoG,SAAS8pB,QACxBtqB,EAAMsqB,MAAQlwB,KAAKoG,SAAS8pB,OAGxBtqB,CACV,CAEAk5D,iBACG,IAAIC,EAAY/+D,KAAKu+D,kBACrB,IAAKQ,EAAW,OAAO,KAEvB,IAAIprC,EAAKorC,EAAU1yC,eACnB,IAAKsH,EAAI,OAAO,KAEhB,IAAI/tB,EAAQ5F,KAAK4F,QACjB,IAAKA,EAAO,OAAO,KAEnB,IAAI2pB,EAAWoE,EAAG1G,YAClB,OAAIsC,EAAiBA,EAAS3pB,EAAMkB,YACxB,IACf,CAMA0vD,gBACG,MAAO,EACV,CAQInqC,qBACD,OAAO,IACV,oBC/EH,MAAMqL,EAAmB,EAAQ,OAE3BsnC,EAA4C,CAC/Cj+D,OAAQ,GAGLk+D,EAA2B,CAC9B56D,IAAK,aACLkH,KAAM,OACNipD,SAAU,6BAGb/0D,EAAOC,QAAU,cAAmCg4B,EAMjD/3B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiB85B,EAEvB,CAEA7zC,gBACG,OAAO6zC,CACV,CAEA7zC,uBACG,OAAO4zC,CACV,CAYA/4D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASrF,OAAS4kB,SACpB3lB,KAAKoG,SAASrF,QACXi+D,EAA0Cj+D,OAEnD,mBCrDH,MAAM22B,EAAmB,EAAQ,OAE3BwmC,EAAwC,CAAC,EAEzCgB,EAA2B,CAC9B76D,IAAK,aACLkH,KAAM,UACNipD,SAAU,6BAGb/0D,EAAOC,QAAU,cAAmCg4B,EAMjD/3B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiB+5B,EAEvB,CAEA9zC,gBACG,OAAO8zC,CACV,CAEA9zC,uBACG,OAAO8yC,CACV,oBC/BH,MAAM5J,EAAe,EAAQ,OAEvB6K,EAA6C,CAChDC,YAAa,gBACb1K,WAAY,KACZ1zD,MAAO,EACPw+C,SAAU,GACV6f,UAAW,cACXnvD,SAAU,KACVovD,kBAAmB,wBACnBC,eAAgB,QAGbnJ,EAAiB,CACpB/xD,IAAK,cACLkH,KAAM,cACNipD,SAAU,gBAGb/0D,EAAOC,QAAU,cAAoC40D,EAClD30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO+zC,CACV,CAcAr5D,QACG9F,KAAKm/B,YAAYn/B,KAAMA,KAAM,CAAC,YAAa,gBAE3C,IAAIgY,EAAMlY,MAAMgG,QAEhB,OADAkS,EAAI4iD,QAAU,GACP5iD,CACV,CAQA/R,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASpF,MAAQ2kB,SACnB3lB,KAAKoG,SAASpF,OAASm+D,EAA2Cn+D,OAGrEhB,KAAK++B,UAAU/+B,KAAMA,KAAM,CAAC,YAAa,eAC5C,CAEAw/D,YAIG,MAAMv6D,EAASjF,KAAKqsB,eAAeD,WAG7BxmB,EAAQX,EAASA,EAAO8B,SAAS,GAAK,KAE5C,MAAO,gBAAgB9B,GAAQrE,MAAMgF,GAAOhF,MAC/C,CAEA6+D,cACG,MAAO,SAASz/D,KAAKoG,SAASo5C,UACjC,CAEIrvC,mBACD,OACGnQ,KAAKoG,SAAS8J,UACdivD,EAA2CjvD,QAEjD,CAEIgW,sBACD,IAAIwuC,GAAc10D,KAAKoG,UAAY,CAAC,GAAGsuD,WACvC,IAAKA,EAAY,MAAO,GAExB,IAAIgL,EAAShL,EAAWhsC,MAAM,MAAQ,GAEtC,OAAO1oB,KAAK+B,GAAGmkB,iBAAiByN,GAAO+rC,EAAOryD,QAAQsmB,EAAG/yB,KAAO,KAAM,EACzE,oBCnGH,MAAMk5D,EAAS,EAAQ,OAEjB6F,EAA4C,CAC/CC,aAAa,EACbC,UAAW,GACXC,eAAe,EACfC,YAAa,GACbC,cAAc,EACdC,WAAY,GACZC,YAAa,KACbC,UAAW,QACXC,WAAW,GAGRC,EAA2B,CAC9Bh8D,IAAK,SAGLkH,KAAM,SAGNipD,SAAU,wBAIb/0D,EAAOC,QAAU,cAAmCo6D,EACjDn6D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBk7B,EAEvB,CAEAj1C,gBACG,OAAOi1C,CACV,CAEAj1C,uBACG,OAAOu0C,CACV,CAMA75D,QAEG,IAAI0M,EAAS,GAYb,OAVIxS,KAAKoG,SAASy5D,WAAWrtD,EAAOlO,KAAK,aAErCtE,KAAKoG,SAAS25D,aAAavtD,EAAOlO,KAAK,eAEvCtE,KAAKoG,SAAS65D,YAAYztD,EAAOlO,KAAK,cAE1CtE,KAAKm/B,YAAYn/B,KAAKoG,SAAUpG,KAAKoG,SAAUoM,GAElC1S,MAAMgG,OAGtB,CAQIumB,qBACD,OAAO,IACV,CAEApmB,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB,IAAI6M,EAAS,GAETxS,KAAKoG,SAASy5D,WAAWrtD,EAAOlO,KAAK,aAErCtE,KAAKoG,SAAS25D,aAAavtD,EAAOlO,KAAK,eAEvCtE,KAAKoG,SAAS65D,YAAYztD,EAAOlO,KAAK,cAE1CtE,KAAKm/B,YAAYn/B,KAAKoG,SAAUpG,KAAKoG,SAAUoM,GAE/CxS,KAAKoG,SAASw5D,YAAc7rD,KAAK0D,MAC9BzX,KAAKoG,SAASw5D,aACXD,EAA0CC,aAEhD5/D,KAAKoG,SAAS05D,cAAgB/rD,KAAK0D,MAChCzX,KAAKoG,SAAS05D,eACXH,EAA0CG,eAEhD9/D,KAAKoG,SAAS45D,aAAejsD,KAAK0D,MAC/BzX,KAAKoG,SAAS45D,cACXL,EAA0CK,cAGhDhgE,KAAKoG,SAASg6D,UAAYrsD,KAAK0D,MAC5BzX,KAAKoG,SAASg6D,WACXT,EAA0CS,UAEnD,CAMA5J,gBACG,MAAO,EACV,oBCjHH,MAAM7+B,EAAiB,EAAQ,OAEzB2oC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCl8D,IAAK,WACLkH,KAAM,iBACNipD,SAAU,0BAGb/0D,EAAOC,QAAU,cAAqCi4B,EACnDh4B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBo7B,EAEvB,CAEAn1C,gBACG,OAAOm1C,CACV,CAEAn1C,uBACG,OAAOk1C,CACV,CAMA9J,gBACG,MAAO,EACV,oBClCH,MAAM7+B,EAAiB,EAAQ,OAEzB6oC,EAA6C,CAChDrC,SAAU,GACVn0C,iBAAkB,CAEfC,KAAM,MACN5I,MAAO,IAEV9U,WAAY,GAQZk0D,WAAY,IACZC,YAAa,KAGVC,EAA4B,CAC/Bt8D,IAAK,UACLkH,KAAM,UACNipD,SAAU,WAGb/0D,EAAOC,QAAU,cAAoCi4B,EAClDh4B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBw7B,EAEvB,CAEAv1C,gBACG,OAAOu1C,CACV,CAEAv1C,uBACG,OAAOo1C,CACV,CAYAv6D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS4jB,iBACXhqB,KAAKoG,SAAS4jB,kBACdw2C,EAA2Cx2C,gBACjD,CAMAwsC,gBACG,MAAO,EACV,oBCrEH,MAAMa,EAAkB,EAAQ,OAC1B1/B,EAAiB,EAAQ,OAEzBk9B,EAAe,EAAQ,OACvB+L,EAAe,EAAQ,OAEvBC,EAAqB,CACxBx8D,IAAK,OACLkH,KAAM,WACNipD,SAAU,QAGPsM,EAAsC,CACzCpM,WAAY,KACZiB,WAAW,EACXgC,cAAe,OACf71D,WAAY,IACZf,OAAQ,IACRggE,aAAa,EACbC,aAAa,EACbC,aAAc,GACdC,SAAU,OAkBVjM,YAAa,GAabkM,YAAa,IAGhB1hE,EAAOC,QAAU,cAA6B23D,EAC3C13D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiB07B,EACvD,CAEAz1C,gBACG,OAAOy1C,CACV,CAEAz1C,uBACG,OAAO01C,CACV,CAYA76D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASuxD,cACX33D,KAAKoG,SAASuxD,eACdmJ,EAAoCnJ,cAGvC33D,KAAKoG,SAASuvD,UAAY5hD,KAAK0D,MACD,MAA3BzX,KAAKoG,SAASuvD,UACT31D,KAAKoG,SAASuvD,UACdmL,EAAoCnL,WAE5C31D,KAAKoG,SAAS26D,YAAchtD,KAAK0D,MACD,MAA7BzX,KAAKoG,SAAS26D,YACT/gE,KAAKoG,SAAS26D,YACdD,EAAoCC,aAE5C/gE,KAAKoG,SAAS46D,YAAcjtD,KAAK0D,MACD,MAA7BzX,KAAKoG,SAAS46D,YACThhE,KAAKoG,SAAS46D,YACdF,EAAoCE,aAI5ChhE,KAAKoG,SAAStE,WAAa6jB,SACI,MAA5B3lB,KAAKoG,SAAStE,WACTg/D,EAAoCh/D,WACpC9B,KAAKoG,SAAStE,YAEtB9B,KAAKoG,SAASrF,OAAS4kB,SACI,MAAxB3lB,KAAKoG,SAASrF,OACT+/D,EAAoC//D,OACpCf,KAAKoG,SAASrF,OAEzB,CAGAiE,WAAWC,GACRjF,KAAKkD,eAAiB+B,CACzB,CAMAuxD,gBACG,IAAIsB,EAAe,CAAC,QAAS,SAAU,SAAU,QAGjD,OAFmB93D,KAAK+E,YAAYkjB,UAEfnf,QAAQvF,GACnBu0D,EAAazqD,QAAQ9J,EAAEkpC,SAASpoC,MAAQ,GAErD,CAWA+8D,gBAAgBt4D,GACb,MAAMu4D,EAAqB15C,IACxB,IAAI8nC,EAAa,GAYjB,OAVA9nC,EAAM1jB,SAASqP,IACH,MAALA,IAEJm8C,EAAWnrD,KAAKgP,GAEZA,EAAEsU,QAAQzhB,SACXspD,EAAaA,EAAWznC,OAAOq5C,EAAkB/tD,EAAEsU,UACtD,IAGI6nC,CAAU,EAGpB,OAAIzvD,KAAK4nB,QAAQzhB,QAGA,MAAV2C,IACDA,EAAU+mD,GAASA,aAAgBl4B,GAHhB0pC,EAAkBrhE,KAAK4nB,QAMxB9e,OAAOA,IAErB,EAEb,CAEAw4D,eAAe17D,EAAO04D,GACnB,GAAa,MAAT14D,EAAJ,CAEA,IAAI27D,EAAiB37D,EAAM47D,gBAC3B,GAAsB,MAAlBD,EAAJ,CAEA,IAAIj4C,EAAUi4C,EAAe/C,YAAYx+D,KAAK+E,YAAa/E,MAC3D,GAAe,MAAXspB,EAYJ,OATAA,EAAQljB,SAAWkjB,EAAQljB,UAAY,CAAC,EACxCkjB,EAAQljB,SAASsE,QAAU9E,EAAMhF,GAGhB,MAAb09D,IAAmBh1C,EAAQ3oB,SAASy5D,EAAIkE,GAG5Ct+D,KAAK4nB,OAAOtjB,KAAKglB,GAEVA,CAf2B,CAHT,CAmB5B,CAEI4rC,iBACD,IAAIjwD,EAASjF,KAAKqsB,eAAeD,WAUjC,OARwB,MAApBpsB,KAAKm1D,cACNn1D,KAAKm1D,YAAc,IAAIN,GAG1B70D,KAAKm1D,YAAYC,SAASp1D,MAC1BA,KAAKm1D,YAAYE,aAAar1D,KAAKoG,SAAS6uD,aAC5Cj1D,KAAKm1D,YAAYnwD,WAAWC,GAErBjF,KAAKm1D,WACf,CAEAG,iBAAiB7mC,GACd,OAAOzuB,KAAKk1D,WAAWM,WAAW,CAAE3rD,KAAM4kB,EAASvkB,KAAMlK,MAC5D,CAEAy1D,cAAchnC,GAEX,OAAIA,IACYzuB,KAAKqsB,eAAeD,WACNoE,YAAY/B,GACA/Q,QAEpClV,QAAQ+G,MAAM,2BAA4B,CAAEkf,QAASA,IAC9Chf,QAAQoH,OAAO,IAAIvO,MAAM,8BAI/BtI,KAAKk1D,WAAWxtC,QAAQ,CAAE7d,KAAM4kB,EAASvkB,KAAMlK,MACzD,CAEAyhE,cAAchzC,GACX,IAAIxpB,EAASjF,KAAKqsB,eAAeD,WAE7Bs1C,EAAc,IAAId,EAKtB,OAJAc,EAAYtM,SAASp1D,MACrB0hE,EAAYrM,aAAar1D,KAAKoG,SAAS+6D,aACvCO,EAAY18D,WAAWC,GAEhBy8D,EAAYh6C,QAAQ,CAAE7d,KAAM4kB,EAASvkB,KAAMlK,MACrD,oBC5OH,MAAM23B,EAAiB,EAAQ,OAEzBgqC,EAA4C,CAAC,EAE7CC,EAA2B,CAC9Bv9D,IAAK,cAELkH,KAAM,eAENipD,SAAU,wBAIb/0D,EAAOC,QAAU,cAA+Bi4B,EAC7Ch4B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBy8B,EAEvB,CAEAx2C,gBACG,OAAOw2C,CACV,CAEAx2C,uBACG,OAAOu2C,CACV,CAMAnL,gBACG,MAAO,EACV,oBCrCH,MAAM7+B,EAAiB,EAAQ,OAEzBkqC,EAAgD,CACnDC,YAAY,GAGTC,EAA+B,CAClC19D,IAAK,aACLkH,KAAM,WACNipD,SAAU,4BAGb/0D,EAAOC,QAAU,cAAuCi4B,EACrDh4B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiB48B,EAEvB,CAEA32C,gBACG,OAAO22C,CACV,CAEA32C,uBACG,OAAOy2C,CACV,CAUArL,gBACG,MAAO,EACV,oBCxCH,MAAMsD,EAAS,EAAQ,OAEjBkI,EAA2C,CAC9CjmB,SAAU,EACV32C,QAAS,GAGZ3F,EAAOC,QAAU,cAAsCo6D,EAKpD1uC,uBACG,OAAO42C,CACV,CAQI31C,qBACD,IAAIniB,EAAOlK,KAAKw7D,sBAChB,GAAY,MAARtxD,EAAc,OAAO,KAEzB,IAAImiB,EAAiBniB,EAAKmiB,eAC1B,OAAsB,MAAlBA,EAA+B,KAE5BA,CACV,CAEAzmB,QACG,GAAI5F,KAAKoG,SAAS8R,SAAU,CACzB,IAAIjT,EAASjF,KAAK+B,GAAGkW,WAAWjY,KAAKoG,SAAS8R,UAC9C,OAAKjT,EAEEA,EAAO8I,UAAU/N,KAAKoG,SAASsE,SAFlB,IAGvB,CAAO,CACJ,IAGIzF,EAHAiF,EAAOlK,KAAKw7D,sBAChB,GAAY,MAARtxD,EAAc,OAAO,KAGzB,GAAIA,EAAKhH,eACN+B,EAASiF,EAAKhH,mBACV,CACJ,IAAImpB,EAAiBniB,EAAKmiB,eAC1B,GAAsB,MAAlBA,EAAwB,OAAO,KAEnCpnB,EAASonB,EAAeD,UAC3B,CAEA,OAAc,MAAVnnB,EAAuB,KAEfA,EAAO8I,UAAU/N,KAAKoG,SAASsE,QAE9C,CACH,oBCzDH,MAAMitB,EAAiB,EAAQ,OAEzBsqC,EAA0C,CAC7CrgE,KAAM,UAGHsgE,EAAyB,CAC5B79D,IAAK,OACLkH,KAAM,iBACNipD,SAAU,sBAGb/0D,EAAOC,QAAU,cAAiCi4B,EAC/Ch4B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiB+8B,EAEvB,CAEA92C,gBACG,OAAO82C,CACV,CAEA92C,uBACG,OAAO62C,CACV,CAMAzL,gBACG,MAAO,EACV,oBCpCH,MAAM7+B,EAAiB,EAAQ,OAEzBwqC,EAA4C,CAC/CC,UAAW,GAGRC,EAA2B,CAC9Bh+D,IAAK,YACLkH,KAAM,UACNipD,SAAU,wBAGb/0D,EAAOC,QAAU,cAAmCi4B,EACjDh4B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBk9B,EAEvB,CAEAj3C,gBACG,OAAOi3C,CACV,CAEAj3C,uBACG,OAAO+2C,CACV,CAcAr8D,QACG9F,KAAKm/B,YAAYn/B,KAAMA,KAAM,CAAC,QAAS,cAEvC,IAAIgY,EAAMlY,MAAMgG,QAEhB,OADAkS,EAAI2P,MAAQ,GACL3P,CACV,CAQA/R,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASg8D,UACXpiE,KAAKoG,SAASg8D,WACdD,EAA0CC,UAG7CpiE,KAAKoG,SAASg8D,UAAYz8C,SAAS3lB,KAAKoG,SAASg8D,UACpD,CAMA5L,gBACG,MAAO,EACV,oBC1EH,MAAM8L,EAAmB,EAAQ,OAE3BC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCn+D,IAAK,gBACLkH,KAAM,aACNipD,SAAU,0BAGb/0D,EAAOC,QAAU,cAAiC4iE,EAC/C3iE,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBq9B,EAEvB,CAEAp3C,gBACG,OAAOo3C,CACV,CAEAp3C,uBACG,OAAOm3C,CACV,CAMA/L,gBACG,MAAO,EACV,oBClCH,MAAM7+B,EAAiB,EAAQ,OAEzB8qC,EAAoD,CACvD7gE,KAAM,cAGH8gE,EAA2B,CAC9Br+D,IAAK,iBACLkH,KAAM,UACNipD,SAAU,gCAGb/0D,EAAOC,QAAU,cAA2Ci4B,EACzDh4B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBu9B,EAEvB,CAEAt3C,gBACG,OAAOs3C,CACV,CAEAt3C,uBACG,OAAOq3C,CACV,CAMAjM,gBACG,MAAO,EACV,oBCpCH,MAAM7+B,EAAiB,EAAQ,OAEzBgrC,EAAkD,CACrD/gE,KAAM,cAGHghE,EAAyB,CAC5Bv+D,IAAK,eACLkH,KAAM,UACNipD,SAAU,8BAGb/0D,EAAOC,QAAU,cAAyCi4B,EACvDh4B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiBy9B,EAEvB,CAEAx3C,gBACG,OAAOw3C,CACV,CAEAx3C,uBACG,OAAOu3C,CACV,CAMAnM,gBACG,MAAO,EACV,oBCpCH,MAAM7+B,EAAiB,EAAQ,OAEzBkrC,EAA6C,CAChDjhE,KAAM,UAGHkhE,EAA4B,CAC/Bz+D,IAAK,UACLkH,KAAM,WACNipD,SAAU,yBAGb/0D,EAAOC,QAAU,cAAoCi4B,EAClDh4B,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MACG6F,EACAZ,EACAkQ,EACAkwB,GAAiB29B,EAEvB,CAEA13C,gBACG,OAAO03C,CACV,CAEA13C,uBACG,OAAOy3C,CACV,CAMArM,gBACG,MAAO,EACV,oBCpCH,MAAM8L,EAAmB,EAAQ,OAE3BS,EAA0C,CAAC,EAE3CC,EAAiB,CACpB3+D,IAAK,WACLkH,KAAM,UACNipD,SAAU,sBAGb/0D,EAAOC,QAAU,cAAiC4iE,EAC/C3iE,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiB69B,EACvD,CAEA53C,gBACG,OAAO43C,CACV,CAEA53C,uBACG,OAAO23C,CACV,CAMAvM,gBACG,MAAO,EACV,oBC7BH,MAAMlC,EAAe,EAAQ,OAEvB2O,EAAuC,CAC1CvO,WAAY,GAKZwO,aAAc,GAKdC,iBAAkB,GAIlBC,eAAgB,GAIhBC,gBAAiB,GAIjBC,gBAAiB,GAIjBC,aAAc,IAMXnN,EAAiB,CACpB/xD,IAAK,QACLkH,KAAM,QACNipD,SAAU,SAGb/0D,EAAOC,QAAU,cAA8B40D,EAM5C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO63C,CACV,CAQAh9D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB0O,OAAOC,KAAK2uD,GAAsCh/D,SAASsQ,IACxDvU,KAAKoG,SAASmO,GACXvU,KAAKoG,SAASmO,IAAM0uD,EAAqC1uD,EAAE,GAEpE,CAMAiiD,gBACG,MAAO,EACV,oBChFH,MAAMlC,EAAe,EAAQ,OAEvBkP,EAAsC,CACzCpiE,MAAO,GAKPszD,WAAY,GAIZlyD,QAAS,GAITihE,YAAa,EAIbC,WAAY,EAIZC,WAAY,EAKZC,YAAa,EAMbxsB,WAAY,EAIZysB,aAAc,EAWd7N,YAAa,GAIbC,WAAY,GAMZC,SAAU,GAIVC,QAAS,GAMT2N,UAAW,EAIXnhC,eAAgB,GAIhBC,aAAc,GAIdmhC,eAAgB,GAIhBC,aAAc,GAKdj6C,gBAAiB,CAGd4Y,eAAgB,GAChBC,aAAc,GACdmhC,eAAgB,GAChBC,aAAc,IAEjBC,WAAY,CACTC,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAKpBrjE,OAAQ,EAKRsjE,WAAY,EACZC,aAAc,EACdC,YAAa,EACbC,QAAS,GAGT/3D,aAAc,GAiBdg4D,UAAW,GAMRrO,EAAiB,CACpB/xD,IAAK,OACLkH,KAAM,QACNipD,SAAU,QAcb,SAASkQ,EAAgBC,EAAM/+D,QACF,IAAf++D,EAAK/+D,GAIhB++D,EAAK/+D,GAAS++D,EAAK/+D,IAAU49D,EAAoC59D,GAH9D++D,EAAK/+D,GAAS49D,EAAoC59D,EAIxD,CAYA,SAASg/D,EAAoBD,EAAM/+D,GAChC,IACG++D,EAAK/+D,GAASmO,KAAK0D,MAAMktD,EAAK/+D,GAGjC,CAFE,MAAOyE,GACNs6D,EAAK/+D,GAAS49D,EAAoC59D,EACrD,CACH,CAEAnG,EAAOC,QAAU,cAA6B40D,EAM3C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOo4C,CACV,CAYAv9D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB++D,EAAgB1kE,KAAKoG,SAAU,cAM/Bw+D,EAAoB5kE,KAAKoG,SAAU,WACnCw+D,EAAoB5kE,KAAKoG,SAAU,eACnCw+D,EAAoB5kE,KAAKoG,SAAU,cACnCw+D,EAAoB5kE,KAAKoG,SAAU,cACnCw+D,EAAoB5kE,KAAKoG,SAAU,eAEnCw+D,EAAoB5kE,KAAKoG,SAAU,cACnCw+D,EAAoB5kE,KAAKoG,SAAU,gBACnCw+D,EAAoB5kE,KAAKoG,SAAU,cACnCw+D,EAAoB5kE,KAAKoG,SAAU,gBACnCw+D,EAAoB5kE,KAAKoG,SAAU,eACnCw+D,EAAoB5kE,KAAKoG,SAAU,gBACnCw+D,EAAoB5kE,KAAKoG,SAAU,aAEnCpG,KAAKoG,SAAS69D,WACXjkE,KAAKoG,SAAS69D,YACdT,EAAoCS,WAEvC,IACGjkE,KAAKoG,SAAS69D,WAAWC,aAAenwD,KAAK0D,MAC1CzX,KAAKoG,SAAS69D,WAAWC,aAK/B,CAHE,MAAO75D,GACNrK,KAAKoG,SAAS69D,WAAWC,aACtBV,EAAoCS,WAAWC,YACrD,CAEA,IACGlkE,KAAKoG,SAAS69D,WAAWG,gBAAkBrwD,KAAK0D,MAC7CzX,KAAKoG,SAAS69D,WAAWG,gBAK/B,CAHE,MAAO/5D,GACNrK,KAAKoG,SAAS69D,WAAWG,gBACtBZ,EAAoCS,WAAWG,eACrD,CASAM,EAAgB1kE,KAAKoG,SAAU,eAC/Bs+D,EAAgB1kE,KAAKoG,SAAU,YAC/Bs+D,EAAgB1kE,KAAKoG,SAAU,cAC/Bs+D,EAAgB1kE,KAAKoG,SAAU,WAC/Bw+D,EAAoB5kE,KAAKoG,SAAU,aAwBnC,IAAIy+D,EAAW,CACZ,aACA,mBACA,iBACA,eACA,iBACA,gBAGC7kE,KAAKoG,SAAS2jB,iBACf86C,EAAS5gE,SAAS+C,IACVhH,KAAKoG,SAASY,KAChBhH,KAAKoG,SAASY,GAAKhH,KAAKoG,SAAS2jB,gBAAgB/iB,GAAE,IAK5D69D,EAAS5gE,SAAS+C,IACf09D,EAAgB1kE,KAAKoG,SAAUY,EAAE,IAIpChH,KAAK4nB,OAAS,EACjB,CAMA4uC,gBACG,MAAO,EACV,CAEAsO,YAAYl/D,EAAOuU,GAChB,IAAI4qD,GAAa,EAYjB,GARI/kE,KAAKoG,UAAUu8B,gBAAkB/8B,EAAMkB,aAExC9G,KAAKoG,SAASu8B,eAAiB,GAE/BoiC,GAAa,GAIZ/kE,KAAKoG,SAASw8B,cAAcz8B,OAAQ,CAErC,IAAI4F,EAAQ/L,KAAKoG,SAASw8B,aAAav1B,QAAQzH,EAAMkB,YAEjDiF,GAAS,IACV/L,KAAKoG,SAASw8B,aAAaz2B,OAAOJ,EAAO,GAEzCg5D,GAAa,EAEnB,CAGA,GAAI/kE,KAAKoG,SAAS29D,gBAAgB59D,OAAQ,CAEvC,IAAI4F,EAAQ/L,KAAKoG,SAAS29D,eAAe12D,QAAQzH,EAAMhF,IAEnDmL,GAAS,IACV/L,KAAKoG,SAAS29D,eAAe53D,OAAOJ,EAAO,GAE3Cg5D,GAAa,EAEnB,CAGA,GAAI/kE,KAAKoG,SAAS49D,cAAc79D,OAAQ,CAErC,IAAI4F,EAAQ/L,KAAKoG,SAAS49D,aAAa32D,QAAQzH,EAAMhF,IAEjDmL,GAAS,IACV/L,KAAKoG,SAAS49D,aAAa73D,OAAOJ,EAAO,GAEzCg5D,GAAa,EAEnB,CAGA5qD,EAAG,KAAM4qD,EACZ,CAEAlI,wBACG,MAAO,CAAC,cAAe,aAAc,WAAY,UACpD,oBC5XH,MAAMvI,EAAe,EAAQ,OAEvB0Q,EAAuC,CAC1CxlB,SAAU,GACVx+C,MAAO,IACPD,OAAQ,KAGLq1D,EAAiB,CACpB/xD,IAAK,QACLkH,KAAM,YACNipD,SAAU,SAGb/0D,EAAOC,QAAU,cAA8B40D,EAC5C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO45C,CACV,CAUAxO,gBACG,MAAO,EACV,CAQInqC,qBACD,OAAO,IACV,CAQApmB,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASpF,MAAQ2kB,SACnB3lB,KAAKoG,SAASpF,OAASgkE,EAAqChkE,OAE/DhB,KAAKoG,SAASrF,OAAS4kB,SACpB3lB,KAAKoG,SAASrF,QAAUikE,EAAqCjkE,OAEnE,oBCjEH,MAAMuzD,EAAe,EAAQ,OAEvB2Q,EAAwC,CAC3CvQ,WAAY,KAKZwQ,WAAY,GAKZC,sBAAuB,GAKvBC,wBAAyB,GAKzBC,WAAY,GAKZC,SAAU,IAWPlP,EAAiB,CACpB/xD,IAAK,SAILkH,KAAM,UAINipD,SAAU,UAMb/0D,EAAOC,QAAU,cAA+B40D,EAC7C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAnwD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGZ3F,KAAKoG,SAASk/D,WAChBtlE,KAAKoG,SAASk/D,SAAW,CAAE1kE,GAAI,GAAGZ,KAAKY,cAAeyD,IAAK,QAC3DrE,KAAKoG,SAASk/D,SAASj3D,KAAOrO,KAAKoG,SAASm/D,cAG/CvlE,KAAKwlE,aAAexlE,KAAK+B,GAAG+5B,iBAAiB97B,KAAKoG,SAASk/D,SAC9D,CAEAx/D,QACG,IAAIkS,EAAMlY,MAAMgG,QAKhB,OAJAkS,EAAI5R,SAASk/D,SAAWtlE,KAAKwlE,aAAa1/D,QAG1CkS,EAAI5R,SAASk/D,SAAS1kE,GAAK,GAAGZ,KAAKY,cAC5BoX,CACV,CAEAoT,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO65C,CACV,oBCtFH,MAAM3Q,EAAe,EAAQ,OAEvBmR,EAAuC,CAC1Cp3D,KAAM,GACNmS,OAAQ,EACR2/C,UAAW,QAGR/J,EAAiB,CACpB/xD,IAAK,QACLkH,KAAM,OACNipD,SAAU,SAGb/0D,EAAOC,QAAU,cAA8B40D,EAM5C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOq6C,CACV,CAcA3/D,QACG9F,KAAKm/B,YAAYn/B,KAAMA,KAAM,CAAC,QAAS,SAEvC,IAAIgY,EAAMlY,MAAMgG,QAEhB,OADAkS,EAAI4iD,QAAU,GACP5iD,CACV,CAQA/R,WAAWN,GACR7F,MAAMmG,WAAWN,GAIjB3F,KAAKqO,KAAO1I,EAAO0I,MAAQ1I,EAAOS,SAASiI,MAAQ,QAEnDrO,KAAKoG,SAASoa,OACXxgB,KAAKoG,SAASoa,QAAUilD,EAAqCjlD,OAChExgB,KAAKoG,SAAS+5D,UACXngE,KAAKoG,SAAS+5D,WACdsF,EAAqCtF,UAGxCngE,KAAK4nB,OAAS,GAGd5nB,KAAKoG,SAASoa,OAASmF,SAAS3lB,KAAKoG,SAASoa,QAE9CxgB,KAAK++B,UAAU/+B,KAAMA,KAAM,CAAC,QAAS,QACxC,CAMAw2D,gBACG,MAAO,EACV,CAQAkP,eACG1lE,KAAKoG,SAASoa,OAAS,CAC1B,CAMAmlD,cACG3lE,KAAKoG,SAASoa,OAAS,CAC1B,CAMAolD,oBACG5lE,KAAKoG,SAASoa,OAAS,CAC1B,oBChHH,MAAM62C,EAAkB,EAAQ,OAC1B/C,EAAe,EAAQ,OAEvBuR,EAA4B,CAC/BzkE,MAAO,GACP0kE,WAAY,GAGT1P,EAAiB,CACpB/xD,IAAK,SACLkH,KAAM,UACNipD,SAAU,UAGb/0D,EAAOC,QAAU,cAA+B40D,EAM7C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOy6C,CACV,CAOAE,YACG/lE,KAAK4nB,OAAOtjB,KACTtE,KAAK+E,YAAYykB,QACd,CACGnlB,IAAKgzD,EAAgB5qB,SAASpoC,KAEjCrE,KAAK+E,YACL/E,MAGT,CAQAw2D,cAAcwP,GACX,OAAIA,EAGM,GAKHhmE,KAAKiV,OACCjV,KAAKiV,OAAOuhD,eAAc,GAE1B,EAGhB,CAQInqC,qBACD,OAAO,IACV,oBChFH,MAAMioC,EAAe,EAAQ,OAEvB2R,EAAsC,CACzCvR,WAAY,KACZ9uD,MAAO,KACP7E,OAAQ,GAGLq1D,EAAiB,CACpB/xD,IAAK,OACLkH,KAAM,UACNipD,SAAU,QAGb/0D,EAAOC,QAAU,cAA8B40D,EAC5C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO66C,CACV,CAMAzP,gBACG,MAAO,EACV,CAEA5wD,QACG,IAAI+tB,EAAK3zB,KAAKqsB,eACd,IAAKsH,EAAI,OAAO,KAEhB,IAAI1uB,EAAS0uB,EAAGvH,WAChB,OAAKnnB,EAEEA,EAAO8I,UAAU/N,KAAKoG,SAASR,OAFlB,IAGvB,oBC3CH,MAAM0uD,EAAe,EAAQ,OAEvB4R,EAAsC,CACzCC,YAAa,IACbC,YAAa,kBACbC,cAAe,eACfC,cAAe,EACfC,YAAa,GACbC,UAAW,UACXC,aAAc,OACdC,aAAc,GACdC,cAAe,GACfC,eAAgB,GAWhB9gD,MAAO,GACP+gD,MAAO,IAGJC,EAAiB,CACpBziE,IAAK,OACLkH,KAAM,WACNipD,SAAU,QAGb/0D,EAAOC,QAAU,cAA6B40D,EAM3C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiB2hC,EACvD,CAEA17C,gBACG,OAAO07C,CACV,CAEA17C,uBACG,OAAO86C,CACV,CAcApgE,QACG9F,KAAKm/B,YAAYn/B,KAAMA,KAAM,CAC1B,eACA,iBACA,kBAECA,KAAKoG,SAAS0f,OACf9lB,KAAKoG,SAAS0f,MAAM7hB,SAAS8iE,IAC1B/mE,KAAKm/B,YAAY4nC,EAAMA,EAAM,CAAC,aAAa,IAIjD,IAAI/uD,EAAMlY,MAAMgG,QAEhB,OADAkS,EAAI4iD,QAAU,GACP5iD,CACV,CAQA/R,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAK++B,UAAU/+B,KAAMA,KAAM,CACxB,eACA,iBACA,kBAGHA,KAAKoG,SAAS0f,MACX9lB,KAAKoG,SAAS0f,OAASogD,EAAoCpgD,MAE9D,IAAK,IAAIvS,EAAI,EAAGA,EAAIvT,KAAKoG,SAAS0f,MAAM3f,OAAQoN,IAAK,CAClD,IAAIwzD,EAAO/mE,KAAKoG,SAAS0f,MAAMvS,GAC3BwzD,aAAgB1yD,QACjB0yD,EAAKC,UAAYjzD,KAAK0D,MAAMsvD,EAAKC,YAAa,GAE9ChnE,KAAK++B,UAAUgoC,EAAMA,EAAM,CAAC,eAGP,iBAARA,IACb/mE,KAAKoG,SAAS0f,MAAMvS,GAAK,CACtB0zD,OAAQF,EACRC,WAAW,GAGpB,CACH,CAMAxQ,gBACG,MAAO,EACV,CAEA0Q,iBAAiBxmE,GAEVA,GAAQA,EAAKmxB,QAAU,GACxBnxB,EAAK8sB,KAAK,CAAC,GAAGvpB,SAASmK,IACpB1N,EAAKqa,OAAO3M,EAAKxN,GAAG,GAG7B,CAQIyrB,qBACD,OAAO,IACV,CAEA86C,eAAezmE,EAAMolB,GACbplB,GAASolB,IAEbA,GAAS,IAAI7hB,SAASmjE,IACpB,GAAIA,EAAYJ,UAAW,CACxB,IAAIK,EAAarnE,KAAK+E,YAAY+gB,OAC9B9D,GAAMA,EAAEphB,IAAMwmE,EAAYH,SAC3B,GACD,GACF,IAAKI,EAAY,OAGjB,GAAuB,GADDA,EAAWjM,gBACP,OAE1B,GAAIgM,EAAYE,MAAO,CACpB,IAAIC,EAAYvnE,KAAK+E,YAAY4iB,OAC7BrU,GAAMA,EAAE1S,IAAMwmE,EAAYE,QAC3B,GACD,GACF,IAAKC,EAAW,OAGhB,GAAsB,GADDA,EAAUnM,gBACN,MAC5B,CAEA,IAAIh6D,EAAQpB,KAAKwnE,aAAaJ,GAE9B,IAAIK,EAoBJ,GAVgB,OANbA,EAFCL,EAAYnyD,QAAgC,KAAtBmyD,EAAYnyD,OAExBvU,EAAKqJ,WAAWq9D,EAAYnyD,QAG5BvU,KAKGA,EAAKgnE,YAAYN,EAAYnyD,QAEnCnL,QAAU,GAElBpJ,EAAKgE,QAAQ0iE,EAAYnyD,QAEzBwyD,EAAW/mE,EAAKqJ,WAAWq9D,EAAYnyD,SAEtCwyD,EAASn6C,OAAO85C,EAAYE,OAASF,EAAYH,QAClD,OAEHQ,EAASrmD,IACN,CACGxgB,GAAIwmE,EAAYE,OAASF,EAAYH,OACrCtkE,MAAOvB,EACPQ,KAAMwlE,EAAYxlE,KAClBqlE,OAAQG,EAAYH,OACpB17D,KAAM67D,EAAY77D,KACb,eAAiB67D,EAAY77D,KAC7B,IAER67D,EAAYzmE,SAAWglB,SAASyhD,EAAYzmE,UAAY,EAE9D,IAEN,CAgBA6mE,aAAaG,GACV,IAAIC,EAAO5nE,KAAK+B,GAAGsP,aAAawB,kBAC5Bg1D,EAAcF,EAASniD,aAAa1c,QAAQw2B,GACtCA,EAAEL,eAAiB2oC,IAGzBxmE,EAAQ,GAgBZ,GAdIymE,EAAY1hE,SACT0hE,EAAY,GAAGC,UAChB1mE,EAAQymE,EAAY,GAAGC,UACfD,EAAY,GAAGzmE,QACvBA,EAAQymE,EAAY,GAAGzmE,SAKxBA,GAASumE,EAASG,YACpB1mE,EAAQumE,EAASG,YAKhB1mE,IAEAA,EAAM8R,QAAQ,aAAc,IAC9B,CAGC,IAAI+zD,EAEDA,EADCU,EAASV,OACDU,EAASV,OAETjnE,KAAK+nE,gBAAgBJ,GAGjC,IAAIZ,EAAO/mE,KAAK+E,YAAY+gB,OAAO9D,GAAMA,EAAEphB,IAAMqmE,IAAQ,GAAM,GAC/D,GAAIF,EAED,GAAqB,OAAjBY,EAAS/lE,MAAiC,iBAAhB+lE,EAAStjE,IAAwB,CAC5D,IAAI2jE,EAAUjB,EAAKp/C,OACfrU,GAAMA,EAAE1S,IAAM+mE,EAASL,OAASh0D,EAAE1S,IAAM+mE,EAAS/mE,KAClD,GACD,GACEonE,IACD5mE,EAAQ4mE,EAAQ5mE,MAEtB,MACGA,EAAQ2lE,EAAK3lE,KAGtB,CAEA,OAAOA,CACV,CAEA2mE,gBAAgBE,GACb,MAAuB,QAAnBA,EAAY5jE,IACNrE,KAAK+nE,gBAAgBE,EAAYhzD,QAEjCgzD,EAAYrnE,EAEzB,CAEAs8D,KAAKN,EAAW3nD,GACb,OAAOnV,MAAMo9D,KAAKN,EAAW3nD,GAAQP,MAAM5G,KAEvCA,EAAO1H,SAAS0f,OAAS,IAAI7hB,SAAQ,CAAC+d,EAAGzO,KACvC,IAAIwzD,EAAOj5D,EAAO1H,SAAS0f,MAAMvS,GAGd,iBAARwzD,EACRj5D,EAAO1H,SAAS0f,MAAMvS,GAAKqpD,EAAUmK,IAErCA,EAAKE,OAASrK,EAAUmK,EAAKE,QAC7BF,EAAKO,MAAQ1K,EAAUmK,EAAKO,OAC/B,IAGIx5D,EAAOlG,OAAO8M,MAAK,IAChB5G,MAGhB,oBCrSH,MAAMupD,EAAkB,EAAQ,OAO1BjB,EAAiB,CACpB/xD,IAAK,OACLkH,KAAM,QAGHwuD,EAA8B,CACjCn4D,KAAM,OACN6+D,WAAY,IACZC,YAAa,IACbwH,UAAW,KACXC,eAAgB,EAChBC,eAAgB,yBAGnB3oE,EAAOC,QAAU,cAA6B23D,EAC3C13D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,GAiBpDp2D,KAAKiV,OAAS,IAMjB,CAEAmW,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO2uC,CACV,CAEA3uC,wBAAwB1qB,GACrB,MAAO,CACJ,WACA,MAAQ0a,OAAO1a,EAAKqE,YAAYoC,MAAM+L,QAAQ,cAAe,IAC7DkI,OAAO1a,EAAKyG,MACR+L,QAAQ,cAAe,IACvBmF,cACJ,QACD/J,KAAK,IACV,CAUAxI,QACG,IAAIkS,EAAMlY,MAAMgG,QAehB,OAbAkS,EAAI7Q,KAAOnH,KAAKmH,KAEhB6Q,EAAIqwD,QAAUroE,KAAKqoE,QAGO,SAAtBroE,KAAKoG,SAASxE,OAAiBoW,EAAIzM,KAAO,SAGzCvL,KAAKoB,OAAuB,WAAdpB,KAAKoB,QAAoB4W,EAAI5W,MAAQ4W,EAAI7Q,MAG5D6Q,EAAIyM,SAAWzkB,KAAK8kB,QAAU,IAAI3W,KAAK6T,GAAMA,EAAEphB,KAExCoX,CACV,CAQA/R,WAAWN,GACR7F,MAAMmG,WAAWN,GAGW,SAAxBA,EAAOS,SAASxE,OAAiB5B,KAAKuL,KAAO,SAG5CvL,KAAKoB,OAAuB,WAAdpB,KAAKoB,QAAoBpB,KAAKoB,MAAQpB,KAAKmH,MAG9DnH,KAAKqoE,QAAU1iE,EAAO0iE,SACjBroE,KAAKqoE,SAAWroE,KAAK+E,cACvB/E,KAAKqoE,QAAUroE,KAAK+E,YAAYnE,IAInC,IAAIklB,EAAQ,IACXngB,EAAO8e,SAAW,IAAIxgB,SAASrD,IAC7B,IAAI+gB,EAAM3hB,KAAK+B,GAAG2iB,eAAe9jB,GAC7B+gB,EACDmE,EAAMxhB,KAAKtE,KAAK2kB,QAAQhD,IAExB3hB,KAAK+B,GAAGwN,MACL,OAAOvP,KAAK+E,YAAYoC,SAASnH,KAAK+E,YAAYnE,aAAaZ,KAAKmH,SAASnH,KAAKY,kCAAkCA,KAE1H,IAEHZ,KAAK8kB,OAASgB,EAGd9lB,KAAKoG,SAAS4zD,QAAUh6D,KAAKoG,SAAS4zD,SAAW,EACjDh6D,KAAKoG,SAAS6zD,QAAUj6D,KAAKoG,SAAS6zD,SAAW,CAAC,EAGrD,CAWAnlD,UACG,OAAOrF,QAAQC,UACXgF,MAAK,KAMH,IAAI4zD,EAAiB,GACjBC,EAAWvoE,KAAK8lB,QAQpB,OAPA9lB,KAAK8kB,OAAS,GAIdyjD,EAAStkE,SAAS+d,IACfsmD,EAAehkE,KAAK0d,EAAElN,UAAU,IAE5BrF,QAAQ8R,IAAI+mD,EAAe,IAEpC5zD,MAAK,KACU1U,KAAKiV,QAAUjV,KAAK+E,aAEnByjE,WAAWxoE,QAE3B0U,MAAK,IACI5U,MAAMgV,WAuBtB,CAQAlN,OACG,OAAO6H,QAAQC,UACXgF,MAAK,IAEI5U,MAAM8H,SAEf8M,MAAK,KAEU1U,KAAKiV,QAAUjV,KAAK+E,aAEnB0jE,WAAWzoE,QAE3B0U,MAAK,IACI1U,MAEhB,CAiBA8lB,MAAMhd,EAAS,MAAM,GAAMwe,GAAO,GAC/B,IAAIxZ,EAAS,GAsBb,OAnBIhF,GAAUwe,EACPtnB,KAAK8kB,QAAU9kB,KAAK8kB,OAAO3e,OAAS,IACrC2H,EAAS9N,KAAK8kB,OAAOhc,OAAOA,IAEjB3C,OAAS,GACjBnG,KAAK8kB,OAAO7gB,SAAS+d,IAClB,IAAIuF,EAAWvF,EAAE8D,MAAMhd,EAAQwe,GAC3BC,GAAYA,EAASphB,OAAS,IAC/B2H,EAASyZ,EACZ,IAOTzZ,EAAS9N,KAAK8kB,OAAOhc,OAAOA,GAGxBgF,CACV,CAWA26D,WAAW1B,GAER,OADiB/mE,KAAK8lB,OAAOK,GAAMA,EAAEvlB,KAAOmmE,EAAKnmE,KAAIuF,OAAS,EAQvDsJ,QAAQC,WALZ1P,KAAK8kB,OAAOxgB,KAAKyiE,GACV/mE,KAAK4H,OAKlB,CAaA+c,QAAQhf,GAELA,EAAOtB,IAAM+xD,EAAe/xD,IAK5B,IAAI0iE,EAAO/mE,KAAK+E,YAAYykB,QAAQ7jB,EAAQ3F,KAAK+E,YAAa,MAE9D,OADAgiE,EAAK9xD,OAASjV,KACP+mE,CACV,CAWAyB,WAAWzB,GACR,IAAIvjC,EAAUxjC,KAAK8kB,OAAO3e,OAK1B,OAJAnG,KAAK8kB,OAAS9kB,KAAK8lB,OAAM,SAAU9D,GAChC,OAAOA,EAAEphB,IAAMmmE,EAAKnmE,EACvB,IAEIZ,KAAK8kB,OAAO3e,OAASq9B,EACfxjC,KAAK4H,OAIR6H,QAAQC,SAClB,CAOAsZ,UACG,OAAOhpB,KAAK6oB,aAAe,UAC9B,CASAA,aACG,OAAI7oB,KAAKiV,OACCjV,KAAKiV,OAAO+T,UAAYhpB,KAAKY,GAE7BZ,KAAK+E,YAAYikB,UAAYhpB,KAAKY,EAE/C,CAEA8nE,WAAW1wD,GAOR,MALyB,SAArBA,EAAI5R,SAASxE,KACdoW,EAAIzM,KAAO,QAEXyM,EAAIzM,KAAO6qD,EAAe7qD,KAEtByM,CACV,CAcAie,MAAM2mC,EAAW3nD,GAEd,GAAiB,MAAb2nD,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAI+L,EAAc9jC,IACV+3B,EAAU/3B,EAASjkC,MACrBg8D,EAAU/3B,EAASjkC,IAAMZ,KAAK+B,GAAG8N,QAEhCg1B,EAAS/e,OACV+e,EAAS/e,QAAQ7hB,SAAS+d,GAAM2mD,EAAW3mD,KAG1C6iB,EAASld,OACVkd,EAASld,QAAQ1jB,SAASqP,GAAMq1D,EAAWr1D,IAC9C,EAIHq1D,EAAW3oE,KACd,CAGA,IAAI8N,EAAShO,MAAMm2B,MAAM2mC,EAAW3nD,GAKpC,OAFAnH,EAAO3G,KAAO,KAEP2G,CACV,CAgBAovD,KAAKN,EAAW3nD,EAAQ9S,GAErB,GAAiB,MAAby6D,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAI+L,EAAc9jC,IACV+3B,EAAU/3B,EAASjkC,MACrBg8D,EAAU/3B,EAASjkC,IAAMZ,KAAK+B,GAAG8N,QAEhCg1B,EAAS/e,OACV+e,EAAS/e,QAAQ7hB,SAAS+d,GAAM2mD,EAAW3mD,KAG1C6iB,EAASld,OACVkd,EAASld,QAAQ1jB,SAASqP,GAAMq1D,EAAWr1D,IAC9C,EAIHq1D,EAAW3oE,KACd,CAGA,OAAOF,MAAMo9D,KAAKN,EAAW3nD,EAAQ9S,EACxC,oBCvcH,MAAMmyD,EAAe,EAAQ,OAEvBsU,EAAuC,CAC1ClU,WAAY,KACZmU,aAAc,EACdC,YAAa,EACbC,cAAe,EACfpoB,IAAK,EACLD,IAAK,EACL3/C,OAAQ,GAGLq1D,EAAiB,CACpB/xD,IAAK,QACLkH,KAAM,OACNipD,SAAU,SAGb/0D,EAAOC,QAAU,cAA8B40D,EAC5C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOw9C,CACV,CAYA3iE,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASyiE,aAAe90D,KAAK0D,MAC/BzX,KAAKoG,SAASyiE,cACXD,EAAqCC,cAE3C7oE,KAAKoG,SAAS0iE,YAAc/0D,KAAK0D,MAC9BzX,KAAKoG,SAAS0iE,aACXF,EAAqCE,aAE3C9oE,KAAKoG,SAAS2iE,cAAgBh1D,KAAK0D,MAChCzX,KAAKoG,SAAS2iE,eACXH,EAAqCG,eAE3C/oE,KAAKoG,SAASu6C,IAAM5sC,KAAK0D,MACtBzX,KAAKoG,SAASu6C,KAAOioB,EAAqCjoB,KAE7D3gD,KAAKoG,SAASs6C,IAAM3sC,KAAK0D,MACtBzX,KAAKoG,SAASs6C,KAAOkoB,EAAqCloB,KAGzD1gD,KAAKoG,SAAS4iE,WAA+C,iBAA3BhpE,KAAKoG,SAAS4iE,YACjDhpE,KAAKoG,SAAS4iE,UAAYj1D,KAAK0D,MAAMzX,KAAKoG,SAAS4iE,YAGtDhpE,KAAKoG,SAASrF,OAAS4kB,SACpB3lB,KAAKoG,SAASrF,QAAU6nE,EAAqC7nE,OAEnE,CAUA+E,QACG,IAAIkS,EAAMlY,MAAMgG,QAQhB,OANAkS,EAAI2P,MAAQ,GACZ3P,EAAI5R,SAAW4R,EAAI5R,UAAY,CAAC,EAE5BpG,KAAKoG,SAAS4iE,YACfhxD,EAAI5R,SAAS4iE,UAAYj1D,KAAKC,UAAUhU,KAAKoG,SAAS4iE,YAElDhxD,CACV,CAMAw+C,gBACG,MAAO,EACV,oBCnGH,MAAMlC,EAAe,EAAQ,OAEvB2U,EAA+C,CAClDC,WAAY,GACZC,UAAW,IAGR/S,EAAiB,CACpB/xD,IAAK,iBACLkH,KAAM,UACNipD,SAAU,mBAGb/0D,EAAOC,QAAU,cAAuC40D,EACrD30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO69C,CACV,CAYAhjE,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS8iE,WACXlpE,KAAKoG,SAAS8iE,YACdD,EAA6CC,WAEhDlpE,KAAKoG,SAAS+iE,UACXnpE,KAAKoG,SAAS+iE,WACdF,EAA6CE,SACnD,CAUArjE,QACG,IAAIkS,EAAMlY,MAAMgG,QAIhB,OAFAkS,EAAI5R,SAAW4R,EAAI5R,UAAY,CAAC,EAEzB4R,CACV,CAMAw+C,gBACG,MAAO,EACV,CAQInqC,qBACD,OAAO,IACV,oBChFH,MAAMioC,EAAe,EAAQ,OACvB+C,EAAkB,EAAQ,OAE1B+R,EAAqC,CACxCroE,OAAQ,EACRsoE,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,aAAc,IACdC,WAAY,OACZC,UAAW,EACX/uC,OAAQ,MAGLgvC,EAAoB,CACvBtlE,IAAK,MACLkH,KAAM,kBACNipD,SAAU,OAGb/0D,EAAOC,QAAU,cAA4B40D,EAM1C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBwkC,EACvD,CAEAv+C,gBACG,OAAOu+C,CACV,CAEAv+C,uBACG,OAAOg+C,CACV,CAYAnjE,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASrF,OAAS4kB,SAAS3lB,KAAKoG,SAASrF,QAC9Cf,KAAKoG,SAASijE,SAAW1jD,SAAS3lB,KAAKoG,SAASijE,UAAY,GAC5DrpE,KAAKoG,SAASkjE,UAAY3jD,SAAS3lB,KAAKoG,SAASkjE,WACjDtpE,KAAKoG,SAASmjE,UAAY5jD,SAAS3lB,KAAKoG,SAASmjE,WACjDvpE,KAAKoG,SAASojE,aAAe7jD,SAAS3lB,KAAKoG,SAASojE,cACpDxpE,KAAKoG,SAASqjE,WAAazpE,KAAKoG,SAASqjE,WACzCzpE,KAAKoG,SAASsjE,UAAY/jD,SAAS3lB,KAAKoG,SAASsjE,UACpD,CAEAE,OAAOC,EAASnP,GACb,OAAO16D,KAAK+E,YACRykB,QACE,CACGnlB,IAAKgzD,EAAgB5qB,SAASpoC,IAC9BjD,MAAOyoE,EACPxP,QAASK,GAEZ16D,KAAK+E,YACL/E,MAEF4H,MACP,CAMA4uD,gBACG,MAAO,EACV,oBCjFH,MAAMlC,EAAe,EAAQ,OAEvBwV,EAAsC,CACzCz7D,KAAM,GAKNtN,OAAQ,EAIR2zD,WAAY,MAST0B,EAAiB,CACpB/xD,IAAK,OAILkH,KAAM,OAINipD,SAAU,QAKb/0D,EAAOC,QAAU,cAA6B40D,EAC3C30D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,GAEpDp2D,KAAK+pE,QAAU,IAClB,CAEA3+C,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO0+C,CACV,CAcAhkE,QAGG9F,KAAKm/B,YAAYn/B,KAAMA,KAAM,CAAC,SAE9B,IAAIgY,EAAMlY,MAAMgG,QAEhB,OADAkS,EAAI2P,MAAQ,GACL3P,CACV,CAQA/R,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAGlCpG,KAAKoG,SAASrF,OAAS4kB,SACpB3lB,KAAKoG,SAASrF,QAAU+oE,EAAoC/oE,QAI/Df,KAAKqO,KAAO1I,EAAO0I,MAAQy7D,EAAoCz7D,KAI/DrO,KAAK++B,UAAU/+B,KAAMA,KAAM,CAAC,QAC/B,CAMAw2D,gBACG,MAAO,EACV,CAQInqC,qBACD,MAAwB,YAApBrsB,KAAKiV,QAAQ5Q,IACPrE,KAAK+B,GAAGyqB,mBAAmBxsB,KAAKiV,OAAO7O,SAASsuD,YAEhD10D,KAAK+B,GAAGyqB,mBAAmBxsB,KAAKoG,SAASsuD,WAEtD,CAEAhrD,SAAS9D,GACN,IAAIxE,EAAQwE,EAAMxE,OAAS,GAG3B,OAFAA,EAAQA,EAAM8R,QAAQ,MAAO,OAC7B9R,EAAQA,EAAM8R,QAAQ,MAAO,OACtB9R,CACV,CAEA4oE,YAAY9zD,EAAK+zD,GACd,IAAIn8D,EAAS9N,KAAKqO,KAMdslB,EAAK3zB,KAAKqsB,eAGVpnB,EAAS0uB,GAAIvH,YAAcpsB,KAAK+pE,QACpC,IAAK9kE,EAAQ,MARY,CAAC6I,GAChBA,EAAOoF,QAAQ,WAAY,IAOjBg3D,CAAmBp8D,GAEvC,MAAM2gB,EAAUvY,GAAOyd,EAAG1G,aAAe,CAAC,EAqE1C,OAnEAhoB,EAAO8B,SAAS9C,SAAS+C,IAKtB,IAAI5F,EAAQpB,KAAK0J,SAAS1C,GAE1B,IAAIs+D,EAAW,IAAIhjD,OAAO,IAAMlhB,EAAQ,IAAK,KAMzCyI,EAAO7C,EAAEwZ,OAAOiO,GACpB,GAAa,SAATznB,EAAE3C,IAAgB,CACnB,IAAI8lE,EAAQtgE,EACZA,EAAO7C,EAAEwyD,SAAS2Q,IAMdA,GACDnjE,EAAEZ,SAAS+6C,iBACXn6C,EAAEZ,SAAS86C,gBAEXr3C,EAAO7C,EAAEwyD,SAASxyD,EAAEZ,SAAS+6C,iBA4B7BrzC,EAASA,EAAOoF,QACb,MACA,oDAGT,CAEApF,EAASA,EAAOoF,QAAQoyD,EAAUz7D,EAAK,IAI1CiE,EAASA,EAAOoF,QAAQ,QAASub,EAAQxpB,EAAOyqB,MAGnD,CAEA1qB,WAAWC,GACRjF,KAAK+pE,QAAU9kE,CAClB,oBCpNH,MAAM60D,EAAS,EAAQ,OAEjB1D,EAAiB,CACpB/xD,IAAK,aACLkH,KAAM,kBACNipD,SAAU,wBAGPuF,EAA8B,CACjCqQ,WAAY,EACZC,QAAS,GAGZ5qE,EAAOC,QAAU,cAA+Bo6D,EAO7Cn6D,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAAiBixB,EACvD,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAO2uC,CACV,CAQA9zD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASgkE,WAAazkD,SACxB3lB,KAAKoG,SAASgkE,YAAcrQ,EAA4BqQ,YAE3DpqE,KAAKoG,SAASikE,QAAU1kD,SACrB3lB,KAAKoG,SAASikE,SAAWtQ,EAA4BsQ,QAE3D,oBChDO,EAAQ,OAAlB,MAGMC,EAAoB,EAAQ,OAE5BC,EAAa,EAAQ,OACL,EAAQ,OAE9B9qE,EAAOC,QAAU,cAAiC4qE,EAC/C3qE,YAAYujB,EAAYnhB,GACrBjC,MAAMojB,EAAYnhB,GAGlB/B,KAAKwqE,sBAAyBC,IAC3B,IAAIC,EAAW1qE,KAAK8kB,OAAO0I,MAAMxL,GAAMA,EAAEphB,KAAO6pE,EAAW7pE,KACvD8pE,IACD1qE,KAAK8kB,OAAS9kB,KAAK8kB,OAAOhc,QAAQkZ,GAAMA,EAAEphB,IAAM8pE,EAAS9pE,KACzDZ,KAAK8kB,OAAOxgB,KAAKomE,EAASC,mBAC7B,EAEH3qE,KAAK8kB,OAAO7gB,SAAS+d,IAClBA,EAAE5f,GAAG,qBAAsBpC,KAAKwqE,sBAAsB,GAE5D,CAEAp/C,sBAIG,OAHA5iB,QAAQ+G,MACL,qEAEI,IACV,CACA6b,0BACG,IAAIw/C,EAAiB,IAAItiE,MACtB,qEAGH,OADAE,QAAQ+G,MAAMq7D,GACP,IACV,CAEAx/C,yBACG,IAAIw/C,EAAiB,IAAItiE,MACtB,oEAGH,OADAE,QAAQ+G,MAAMq7D,GACP,IACV,CAEAC,UACG,OAAO7qE,KAAK+B,GAAG4gB,UAAU,MAAM3iB,KAAKmH,OACvC,CASAwjE,kBACG,IAAIG,EAAS9qE,KAAK+B,GAAG43B,gBAAgB35B,KAAKY,IAO1C,OAJAZ,KAAK8kB,OAAO7gB,SAAS+d,IAClBA,EAAE0U,eAAe,qBAAsB12B,KAAKwqE,sBAAsB,IAG9DM,CACV,CAcA3lE,kBAAkB4lE,EAAQ1mE,IAC2B,GAAjCrE,KAAKqE,GAAKgJ,QAAQ09D,EAAOnqE,MAEvCZ,KAAKqE,GAAKC,KAAKymE,EAAOnqE,UAChBZ,KAAK4H,OAEjB,CAEAzC,kBAAkB4lE,EAAQ1mE,GACvB,IAAI2mE,EAAShrE,KAAKqE,GAAK8B,OACvBnG,KAAKqE,GAAOrE,KAAKqE,GAAKyE,QAAQlI,GACpBA,GAAMmqE,EAAOnqE,KAGnBoqE,GAAUhrE,KAAKqE,GAAK8B,cACfnG,KAAK4H,MAEjB,CAQAqjE,qBAAqB59C,GAClB,OAAOrtB,KAAKkrE,YAAY79C,EAAI,oBAC/B,CAQAnB,qBAAqBmB,GAClB,OAAOrtB,KAAKmrE,YAAY99C,EAAI,oBAC/B,CAQA+9C,aAAanmE,GACV,OAAOjF,KAAKkrE,YAAYjmE,EAAQ,YACnC,CASAomE,aAAapmE,GACV,OAAOjF,KAAKmrE,YAAYlmE,EAAQ,YACnC,CAQAqmE,cAAc5jD,GACX,OAAO1nB,KAAKkrE,YAAYxjD,EAAS,aACpC,CASA6jD,cAAc7jD,GACX,OAAO1nB,KAAKmrE,YAAYzjD,EAAS,aACpC,CAQA8jD,YAAY9hD,GACT,OAAO1pB,KAAKkrE,YAAYxhD,EAAO,WAClC,CASA+hD,YAAY/hD,GACT,OAAO1pB,KAAKmrE,YAAYzhD,EAAO,WAClC,CAQAgiD,UAAUxrE,GAEP,KAAIA,EAAImN,QAAQrN,KAAKY,KAAO,GAA5B,CAEAV,EAAIoE,KAAKtE,KAAKY,IAGdZ,KAAKymB,kBAAkBxiB,SAASkiB,IAC7BA,EAAEulD,UAAUxrE,EAAI,IAInBF,KAAK6mB,gBAAgB5iB,SAAS2iB,IAC3BA,EAAE8kD,UAAUxrE,EAAI,IAInBF,KAAKsoB,kBAAkBrkB,SAASokB,IAC7BA,EAAEqjD,UAAUxrE,EAAI,IAMnBF,KAAKukB,kBAAkBtgB,SAAS6lC,IAC7B,KAAI5pC,EAAImN,QAAQy8B,IAAQ,GAAxB,CAEA,IAAInoB,EAAM3hB,KAAK+B,GAAG2iB,eAAeolB,GACjC,GAAInoB,IACDzhB,EAAIoE,KAAKwlC,GACLnoB,EAAIvb,SAASujB,cAAc,CAC5B,IAAI1kB,EAASjF,KAAK+B,GAAGkW,WAAW0J,EAAIvb,SAASujB,cACzC1kB,GACDA,EAAOymE,UAAUxrE,EAEvB,CAV8B,CAWjC,IAIHF,KAAKwnB,YAAYvjB,SAAS+d,IACvBA,EAAE0pD,UAAUxrE,EAAI,IAMnB,IAAIyrE,EAAajrE,IACVR,EAAImN,QAAQ3M,EAAKE,KAAO,IAC5BV,EAAIoE,KAAK5D,EAAKE,KACbF,EAAK+jB,SAAW,IAAIxgB,SAAS2nE,IAC3B,IAAIC,EAAO7rE,KAAK+B,GAAG2iB,eAAeknD,GAC9BC,GACDF,EAAUE,EACb,KAGFnrE,EAAKk6D,SAAW,IAAI32D,SAAS6nE,IAC3B,IAAIC,EAAO/rE,KAAK+B,GAAG2iB,eAAeonD,GAC9BC,GACDJ,EAAUI,EACb,IACD,GAGS/rE,KAAK8kB,OAAO3W,KAAK6T,GAAMA,EAAEphB,MAC3B,IAAIqD,SAAS2nE,IACtB,IAAIC,EAAO7rE,KAAK+B,GAAG2iB,eAAeknD,GAC9BC,GACDF,EAAUE,EACb,IAIH3rE,EAAMF,KAAK+B,GAAG2gB,KAAKxiB,EAxEkB,CAyExC,CASAykB,QAAQhf,GACL,OAAO,IAAI4kE,EAAW5kE,EAAQ3F,KACjC,CASAmF,iBAAiB4hE,GAGd,IADiB/mE,KAAK8kB,OAAOhc,QAAQkZ,GAAMA,EAAEphB,IAAMmmE,EAAKnmE,KAAI,GAIzD,OAFAZ,KAAK8kB,OAAOxgB,KAAKyiE,GAEV/mE,KAAK4H,MAElB,CAQAzC,iBAAiB4hE,GACd,IAAIvjC,EAAUxjC,KAAK8kB,OAAO3e,OAK1B,GAJAnG,KAAK8kB,OAAS9kB,KAAK8lB,OAAM,SAAU9D,GAChC,OAAOA,EAAEphB,IAAMmmE,EAAKnmE,EACvB,IAEIZ,KAAK8kB,OAAO3e,OAASq9B,EACtB,OAAOxjC,KAAK4H,MAIlB,CAEAA,OAMG,OAHI5H,KAAKmH,MAAQnH,KAAKoB,QACnBpB,KAAKmH,KAAOnH,KAAKoB,OAEbtB,MAAM8H,MAChB,CAEAokE,eACGlsE,MAAMksE,eAKN,IAAIC,EAAS,CACV5nD,UAAW,SACXC,SAAU,QACVC,kBAAmB,kBAGtBlQ,OAAOC,KAAK23D,GAAQhoE,SAASsQ,IAC1BvU,KAAKuU,GAAGtQ,SAASrD,IACJZ,KAAK+B,GAAG2iB,eAAe9jB,IAE9BZ,KAAKksE,gBAAgB,6BAA6BD,EAAO13D,KAAM,CAC5DqQ,MAAO5kB,KAAKY,GACZA,MAEN,GACD,IAMyB,GAA1BZ,KAAK6jB,WAAW1d,QAAgBnG,KAAK8jB,iBACtC9jB,KAAKksE,gBAAgB,+CAIxB,IAAIC,EAAWnsE,KAAK+B,GAAG+Q,QAAQnC,WAAWxC,KAAKyB,GAAMA,EAAEhP,KACvDZ,KAAK6jB,WAAW5f,SAAS2L,KACM,GAAxBu8D,EAAS9+D,QAAQuC,IAClB5P,KAAKksE,gBACF,0BAA0Bt8D,mCAC1B,CAAEiW,KAAMjW,GAEd,IAIH5P,KAAK8lB,QAAQ7hB,SAAS+d,IACnBA,EAAEgqD,cAAc,GAEtB,CAEAI,cACG,IAAIC,EAAW,GAAGrkD,OAAOhoB,KAAKssE,WAc9B,MAbA,CACG,kBACA,kBACA,0BACA,YACA,QACA,SACDroE,SAASsQ,IACRvU,KAAKuU,KAAKtQ,SAASkiB,IAChBkmD,EAAWA,EAASrkD,OAAO7B,EAAEimD,cAAc,GAC5C,IAGEC,CACV,CAEAH,gBAAgBjtD,EAAKpV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,eAAetR,KAAKoB,WAAW6d,IAC7Cjf,KAAKssE,UAAUhoE,KAAK,CAAEgN,UAASzH,QAClC,mBCvYH,MAAM+0B,EAAY,EAAQ,OAEpB2tC,EAAyB,EAAQ,OAEvC,IAAIxsE,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,cAA0Bk/B,EAOxCj/B,YAAYC,EAAKC,EAAQkC,GACtBjC,QAIIF,GAAOA,EAAImC,KACZ/B,KAAK+B,GAAKnC,EAAImC,IAIbA,IACD/B,KAAK+B,GAAKA,GAIRnC,IACEmC,EAAG85B,KACJj8B,EAAMmC,EAAG85B,MAETj8B,EAAM,CACHiQ,KAAM9N,EAAG4Y,MAAMzP,MAMfnJ,GAAIA,EAQJiI,QAAS,CAAC,EAMV/H,OAAQF,EAAGC,WAAWC,SAMtBuqE,OAAQ,KAMRlvD,MAAOvb,EAAGC,WAAWsb,MAErBrd,MAAOF,EAMPyS,OAAQ,CACL4O,IAAKrhB,EAAE,OACP0sE,OAAQ1sE,EAAE,UACVuW,OAAQvW,EAAE,UACV2sE,KAAM3sE,EAAE,QACR4sE,OAAQ5sE,EAAE,UACV6sE,SAAU7sE,EAAE,QACZ8sE,OAAQ9sE,EAAE,UACV+sE,OAAQ/sE,EAAE,UACVwR,GAAIxR,EAAE,MAEN4R,OAAQ5R,EAAE,UACV6H,KAAM7H,EAAE,QAERgtE,IAAKhtE,EAAE,OACPitE,GAAIjtE,EAAE,MAENktE,KAAMltE,EAAE,QACRmtE,MAAOntE,EAAE,SAETysC,QAASzsC,EAAE,WACXotE,mBAAoBptE,EAAE,uBAEtBqF,QAASrF,EAAE,WAEXg8C,SAAUh8C,EAAE,YACZK,OAAQL,EAAE,UAEVqtE,eAAgB,CACbrxB,SAAUh8C,EAAE,2BAGfstE,mBAAoBttE,EAAE,uCACtButE,qBAAsBvtE,EAAE,0BAExBwtE,mBAAoBxtE,EAAE,uCACtBytE,oBAAqBztE,EAAE,0BAEvB0tE,mBAAoB1tE,EAAE,uCACtB2tE,qBAAsB3tE,EAAE,0BAExB4tE,mBAAoB5tE,EAAE,uCACtB6tE,qBAAsB7tE,EAAE,0BAGxB8tE,qBAAsB9tE,EAAE,iBACxB+tE,gCAAiC/tE,EAAE,gBAEnCguE,eAAgBhuE,EAAE,SAClBiuE,0BAA2BjuE,EAAE,SAE7BkuE,oBAAqBluE,EAAE,cACvBmuE,+BAAgCnuE,EAAE,uBAElCouE,kBAAmBpuE,EAAE,cAErBquE,kBAAmBruE,EAAE,qBASxBK,OAAQ,SAAUiE,GACf,MAAO,GAAGA,IAAMrE,KAAK6P,MACxB,GAEH9N,EAAG85B,KAAOj8B,IAIXA,EAAI4sE,SACDzqE,EAAGyqE,OAIL5sE,EAAI4sE,OAASzqE,EAAGyqE,QAHO,IAAID,GACV8B,eAAezuE,IAMtCI,KAAKJ,IAAMA,EAEXI,KAAKH,OAASA,GAAU,UAC3B,CAEAmK,QAAQskE,GAEL,GADA9lE,QAAQ+G,MAAM,+BACV++D,EACD,IAAK,IAAI1gE,KAAK0gE,EACXtuE,KAAKJ,IAAIoK,QAAQ4D,GAAK0gE,EAAS1gE,EAGxC,CAEA3N,QACG,MAAO,IAAI6V,IAED9V,KAAK+B,GAAGsP,aAAajQ,SAAS0U,EAE3C,CAEA1V,OAAOiE,GACJ,OAAOrE,KAAKJ,IAAIQ,OAAO,GAAGJ,KAAKH,UAAUwE,IAC5C,oBClLH,MAAMyrB,EAAgB,EAAQ,OACxBy+C,EAAuB,EAAQ,MAErC9uE,EAAOC,QAAU,cAA+B6uE,EAC7C5uE,YAAYujB,EAAYnhB,GACrBjC,MAAMojB,EAAYnhB,GAClB/B,KAAK2Y,gBAAgB,EACxB,CAWAxT,aAQG,OAPKnF,KAAKY,KACPZ,KAAKoB,MAAQpB,KAAKoB,OAASpB,KAAKmH,YAE7BrH,MAAM8H,OACZ5H,KAAK+B,GAAGyN,KAAK,2BAA4B,CACtCg/D,iBAAkBxuE,KAAKY,KAEnBZ,IACV,CAEAuF,UACG,IAAIgC,EAAYvH,KAAK+B,GAAGgc,WAAWxW,YAC/BxH,EAAIC,KAAK+B,GAAG9B,QAiBhB,OARgB,GALbD,KAAK+B,GAAGmkB,iBAAiBC,GAEnBA,EAAEvlB,IAAMZ,KAAKY,IACbulB,EAAEhf,KAAKkR,eAAiBrY,KAAKmH,KAAKkR,gBAErClS,QAEHoB,EAAUkW,SACP,OACA1d,EAAE,6CAA8C,CAACC,KAAKmH,QAIrDI,CACV,CAaAqnB,sBACG,OAAO5uB,KAAK+B,GAAG+Q,QAAQlC,UAC1B,CAMAtN,OAEOtD,KAAK2sB,cAGT7sB,MAAMwD,OAKNtD,KAAK+B,GAAGK,GAAG,4BAA6ByH,IAErC7J,KAAKwP,KAAK,2BAA4B3F,EAAK,IAG9C7J,KAAK+B,GAAGK,GAAG,4BAA6ByH,IAErC7J,KAAKwP,KAAK,2BAA4B3F,EAAK,IAO9C7J,KAAK+B,GAAGK,GAAG,2BAA4ByH,IAEpC7J,KAAKwP,KAAK,0BAA2B3F,EAAK,IAG7C7J,KAAK+B,GAAGK,GAAG,4BAA6ByH,IAErC7J,KAAKwP,KAAK,2BAA4B3F,EAAK,IAG9C7J,KAAKyuE,eACR,CAEAA,eAIG,IAAIt7C,EAAqBnzB,KAAKusB,mBAC1BE,EAAYzsB,KAAKysB,UACrB,IAAKzsB,KAAKoG,SAAS8jB,SAAWiJ,GAAsB1G,EAAW,CAC5D,IAAIY,EAAKrtB,KAAK2qB,iBAEd0C,EAAGqH,KAAKvB,EAAmBxI,iBAAkB8B,EAAU7rB,IAEvDysB,EAAG5oB,OAAO,YAAY,CAAC9B,EAAOmT,KAC3B,IAAI44D,GAAgB,EAEhB1uE,MAAMusB,oBAAoBU,aAAarsB,IAAM+B,IAC9C+rE,GAAgB,GAIfA,GAMD1uE,KAAK8wB,WAAW,EAAG,GACtB,GAEN,CACH,CAEA+B,SAASE,EAAOC,EAAQ,IACrB,OAAOlzB,MAAM+yB,SAASE,EAAOC,GAAOre,OAAOxM,IAKxC,GAHAnI,KAAK2uE,2BAGDxmE,EACD,MAAMA,CACT,GAEN,CAcA2rB,oBAAoBjqB,GAkDjB,OA9CIA,EAAKA,OAASsD,MAAMC,QAAQvD,EAAKA,QAClCA,EAAKA,KAAO,CAACA,EAAKA,OA6Cd/J,MAAMg0B,oBAAoBjqB,GAAM6K,MAAK,KAGzC1U,KAAK2uE,0BAA0B,GAErC,CAYAC,iBAAiBzuE,GACLH,KAAK2qB,iBAGV3qB,KAAK+qB,mBAAmB1d,QAAQlN,EAAU8B,OAAOrB,KAAO,GAIzDZ,KAAK+qB,mBAAmBzmB,KAAKnE,EAAU8B,OAAOrB,GAEpD,CAQA8zB,KAAKv0B,GACF,IAAIktB,EAAKrtB,KAAK2qB,iBAIX3qB,KAAK8qB,mBAAmBzd,QAAQlN,EAAU8B,OAAOrB,KAAO,GACxD+C,GAAGxD,EAAU8B,OAAOrB,IAAIiJ,MACxBlG,GAAGxD,EAAU8B,OAAOrB,IAAIiJ,KAAK2jB,MAC7B7pB,GAAGxD,EAAU8B,OAAOrB,IAAIiJ,KAAK2jB,KAAK,CAAC,GAAGrnB,OAAS,IAI7CnG,KAAK8qB,mBAAmBxmB,KAAKnE,EAAU8B,OAAOrB,IAGvB,aAAzBT,EAAU8B,OAAOvB,MACQ,YAAzBP,EAAU8B,OAAOvB,MACQ,aAAzBP,EAAU8B,OAAOvB,MACQ,UAAzBP,EAAU8B,OAAOvB,KAEb2sB,GAGW,GAFAA,EAAGwE,SAGX7xB,KAAKgrB,aAAehrB,KAAKirB,eAAeC,YACtClrB,KAAKgrB,aAAehrB,KAAKirB,eAAeyB,eAC3CvsB,EAAUkF,cAEVlF,EAAUkF,aAAa,CAAEzD,KAAM,SAGlCzB,EAAUsE,OAAO,YAAa,IAC9BtE,EAAUsE,OAAO,eAAgB,KAGJ,aAAzBtE,EAAU8B,OAAOvB,KAEfV,KAAKosB,YACLpsB,KAAKosB,WAAW7G,SAChBvlB,KAAKyrB,kBAELtrB,EAAUsE,OAAO,OAAQzE,KAAKyrB,kBAC9BtrB,EAAUuE,YAIVvE,EAAUsE,OAAO,OAAQ,IACzBtE,EAAUsX,MAAM4V,EAAGG,KAAK,CAAC,KAG5BrtB,EAAU0J,KAAKglE,KAAKxhD,GAIlBrtB,KAAKoG,SAAS8jB,UAChB/pB,EAAUivB,MAAQjvB,EAAUivB,OAAS,CAAC,EAEjCjvB,EAAUivB,MAAM0/C,qBAClB3uE,EAAUivB,MAAM0/C,mBAAqB3uE,EAAUmvB,YAC5C,iBACA,CAACyD,EAAOlB,KACD1xB,EAAUkF,cACXlF,EAAUkF,aAAa,CAAEzD,KAAM,SAGlCyrB,EAAG0hD,SAASl9C,EAAOkB,IAEZ,QAsBnB5yB,EAAU0J,KAAKmlE,SAEV7uE,EAAUu0B,OACdrH,EAEDltB,EAAUu0B,KAAKrH,GAEfltB,EAAUw0B,SAGTx0B,EAAUuE,SAASvE,EAAUuE,WAEvC,CAEAiwB,OAAOx0B,GACCA,IAELA,EAAU8uE,YAAY,iBAClB9uE,EAAUivB,QACPjvB,EAAUivB,MAAM0/C,2BACV3uE,EAAUivB,MAAM0/C,mBAEtB3uE,EAAUivB,MAAM8/C,eACblvE,KAAKmvE,KAAKnvE,KAAKmvE,IAAI,WAAYhvE,EAAUivB,MAAM8/C,qBAC5C/uE,EAAUivB,MAAM8/C,eAIzB/uE,EAAU0J,MAAQ1J,EAAU0J,KAAKmlE,SAClC7uE,EAAU0J,KAAKmlE,SACf7uE,EAAUsE,OAAO,OAAQ,KAGxBtE,EAAUw0B,QAAQx0B,EAAUw0B,SAE5Bx0B,EAAUuE,SAASvE,EAAUuE,UAGjC1E,KAAK8qB,oBAAsB9qB,KAAK8qB,oBAAsB,IAAIhiB,QACtDlI,GAAOA,GAAMT,EAAU8B,OAAOrB,KAErC,CAEA+tE,2BACG3uE,KAAK8qB,mBAAmB7mB,SAAS4wB,IAC1BlxB,GAAGkxB,IAAUlxB,GAAGkxB,GAAOltB,cAAchE,GAAGkxB,GAAOltB,cAAc,GAEvE,CAYAijB,mBAAmB/gB,GAEhB,IAAIwjB,EAAK,IAAI5pB,MAAM2rE,eAAe,CAC/BvlE,KAAMA,GAAQ,KAKjB,OAFA7J,KAAKqvE,kBAAkBhiD,GAEhBA,CACV,CASA3B,qBAEG,IAAI4jD,EAAY,IAAI7rE,MAAM8rE,eAI1B,OAFAvvE,KAAKqvE,kBAAkBC,GAEhBA,CACV,CAEAD,kBAAkBG,GAGf/rE,MAAMC,OAAO8rE,EAAW/rE,MAAMgsE,gBAE9BD,EAAUpgD,MAAQogD,EAAUpgD,OAAS,CAAC,EAGjCpvB,KAAKoG,SAAS8jB,UACXslD,EAAUpgD,MAAM0/C,qBAClBU,EAAUpgD,MAAM0/C,mBAAqBU,EAAUlgD,YAC5C,iBACA,CAACyD,EAAOlB,KACDkB,EAAQ,IAAGA,EAAQ,GAGvB/yB,KAAK6yB,SAASE,EAAOlB,IAEd,MAKX29C,EAAUpgD,MAAMsgD,mBAClBF,EAAUpgD,MAAMsgD,iBAAmBF,EAAUlgD,YAC1C,eACA,KACGtvB,KAAKwP,KAAK,WAAY,CAAC,EAAE,MAOrCggE,EAAUG,OAAS,WAAa,EAChCH,EAAUI,UAAY,WAAa,EACnCJ,EAAUK,OAAS,WAAa,EAE3BL,EAAUpgD,MAAM0gD,cAClBN,EAAUpgD,MAAM0gD,YAAcN,EAAUlgD,YACrC,eACA,KACGtvB,KAAK2uE,0BAA0B,IAI3C,CAEA59C,oBAAoBlnB,EAAO,CAAC,GACzB,KACK7J,KAAKurB,wBAAwBuE,GAC9B9vB,KAAKurB,aAAahG,SAClBvlB,KAAKyrB,kBAEN,OAEH,IAAIskD,EAAe,CAACzhE,EAAO,CAAC,EAAG0hE,EAAc,QAC1C,IAAI9/C,EAAQ5hB,EAAK4hB,OAEhBrmB,EAAKA,MAAQ,IAAI5F,SAASmb,IACxB,IAAI6wD,EAAS7wD,EAAI,GAAG8Q,WAAiB9Q,EAAI,GAAG8Q,QAC5C,IAAK+/C,EAAQ,OAGb,IAAIC,EAAgB,GAChBC,EACD/wD,EAAI,GAAG4wD,WAAuB5wD,EAAI,GAAG4wD,QAmBxC,GAlBIG,IACDD,EAAgBlwE,KAAKyrB,iBACjB+B,MACGpf,GACEA,EAAKgiE,QAAUJ,GAAe5hE,EAAKiiE,SAAWF,IAEnDhiE,KAAKC,GAASA,EAAKxN,MAIbZ,KAAKyrB,iBAAiB+B,MAAMpf,GAEnCA,EAAKgiE,QAAUlgD,GACf9hB,EAAKiiE,SAAWJ,IACS,GAAxBC,EAAc/pE,QACZ+pE,EAAc7iE,QAAQe,EAAKsf,UAAY,KAE7C,GACS,OAEZ,IAAI4iD,EAAW,CAAC,EAChBA,EAASF,OAASlgD,EAClBogD,EAASD,QAAUJ,EACnBK,EAASljD,QAAUhO,EAAIxe,GAEvByT,OAAOC,KAAK8K,GAAKnb,SAASg3C,IAEc,GAAjCA,EAAS5tC,QAAQ,GAAG6iB,QACrBogD,EAASr1B,GAAY77B,EAAI67B,GAC5B,IAGC77B,EAAIoG,eAAc8qD,EAAS9qD,aAAepG,EAAIoG,cAG9C0qD,EAAc/pE,OAAS,EACxB+pE,EAAcjsE,SAASssE,IACpBvwE,KAAKyrB,iBAAiBrK,IAAIkvD,EAAU,KAAMC,EAAa,IAGxDvwE,KAAKyrB,iBAAiBrK,IAAIkvD,EAAU,KAAK,KAIhDhiE,EAAKy5B,OAAS,IAAI9jC,SAASokC,IACzB0nC,EAAa1nC,EAAMnY,EAAM,GAC1B,GAIJlwB,KAAK8qB,oBAAsB,IAAI7mB,SAAS4wB,IAEtC,IAAI27C,EAAY7sE,GAAGkxB,GACf27C,GAAaA,EAAUnrE,cACxBmrE,EAAUnrE,aAAa,CAAEzD,KAAM,SAE9B4uE,EAAU3mE,MAAQ2mE,EAAU3mE,KAAKmlE,QAAQwB,EAAU3mE,KAAKmlE,QAAQ,IAGvEe,EAAa/vE,KAAKurB,aAAaob,UAG9B3mC,KAAK8qB,oBAAsB,IAAI7mB,SAAS4wB,IACtC,IAAI27C,EAAY7sE,GAAGkxB,GACf27C,GAAaA,EAAU7oE,cAAc6oE,EAAU7oE,eACnD6oE,EAAU/rE,OAAO,OAAQzE,KAAKyrB,iBAAiB,GAErD,CAEAugD,eACGlsE,MAAMksE,eAEDhsE,KAAKosB,WAECpsB,KAAK4pB,uBACE5pB,KAAK+B,GAAG0uE,mBAAmBzwE,KAAK4pB,uBAG5C5pB,KAAKksE,gBACF,sCAAsClsE,KAAK4pB,0BANjD5pB,KAAKksE,gBAAgB,6BAS3B,CAEAA,gBAAgBjtD,EAAKpV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,kBAAkBtR,KAAKoB,WAAW6d,IAChDjf,KAAKssE,UAAUhoE,KAAK,CAAEgN,UAASzH,QAClC,CAEIurB,iBACD,OAAOp1B,KAAK+B,GAAG+Q,QAAQ3D,QAC1B,oBCpkBH,IAAIuhE,EAAmB,EAAQ,OAE/BjxE,EAAOC,QAAU,cAA2BgxE,qBCK5C,IAAIniE,EAAe,sBAEnB9O,EAAOC,QAAU,cAAwB6O,EACtC5O,cACGG,OACH,oBCZH,MAAM6wE,EAAa,EAAQ,OAE3B,IAAI5wE,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,cAAqBixE,EACnChxE,YAAYujB,EAAYnhB,GACrBjC,MAAMojB,EAAYnhB,EAMrB,CAWA+S,QAAQlV,GAGL,IAAIgxE,EAAW5wE,KAAK4oB,QAChBioD,EAAa,GACjBD,EAAS3sE,SAASoG,IACfwmE,EAAWvsE,KAAK+F,EAAEyK,UAAU,IAG/B,IAAIg8D,EAAYlxE,EAAIwkB,QAAQ/W,QAAQrN,KAAKY,IACrCkwE,GAAa,IACdlxE,EAAIwkB,QAAQjY,OAAO2kE,EAAW,GAC9BlxE,EAAIgI,QAGP,IAAIlH,EAAOd,EAAI+nB,OAAOrU,GACZA,EAAE1S,IAAMZ,KAAKoG,SAAS1F,OAC7B,GAOH,OALIA,WACMA,EAAK0F,SAASu0B,OACrBj6B,EAAKkH,QAGD6H,QAAQ8R,IAAIsvD,GAAYn8D,MAAK,IAE1B,IAAIjF,SAAQ,CAACC,EAASmH,KAC1B7W,KAAK+U,eACDD,UACAJ,MAAK,KACHjR,MAAM6N,QAAQ,CACXjD,KAAMtO,EAAE,oBACR6B,KAAM,UACNuQ,OAAQ,MAEXzC,GAAS,IAEXiF,OAAOxM,IACL0O,EAAO1O,EAAI,GACZ,KAGd,CAWAP,OACG,OAAO5H,KAAK+U,eACRnN,OACA8M,MAAM7K,IAIC7J,KAAKY,KACPZ,KAAKY,GAAKiJ,EAAKjJ,IAEXZ,OAEhB,CAEAuF,UAEG,OAAO,CAgBV,CAQA6mE,cA+DA,CAEA2E,eAEG,GAAIptE,GAAG3D,KAAKY,IAAK,OAEjB,IAAIgoB,EAAQ,GACRiD,EAAO,EAEX,GADcpoB,MAAMmX,QAAQo2D,OAAOn7D,IAAI7V,KAAKY,KAC/B+D,KAAM,OACnB,IAAIssE,EAAW,2JAEMjxE,KAAKY,kDAENb,EAAE,2DAEtBC,KAAK49B,QAAQ35B,SAASg6B,IACnBpS,IACA,IAAIqlD,EAAU,CAAC,EACfA,EAAQtwE,GAAKZ,KAAK69B,OAAOI,GAAMr9B,GAC/BswE,EAAQ1kE,GAAKxM,KAAK69B,OAAOI,GAAM73B,SAASoG,GACxC0kE,EAAQrgD,MAAQ7wB,KAAK69B,OAAOI,GAAM73B,SAASyqB,MAC3CqgD,EAAQ9/D,MAAQpR,KAAK69B,OAAOI,GAAM92B,KAClC+pE,EAAQ7iE,KAAOrO,KAAK69B,OAAOI,GAAM5vB,KAAO4iE,EACpCjxE,KAAK49B,QAAQ/R,KACdqlD,EAAQC,OAASnxE,KAAK69B,OAAO79B,KAAK49B,QAAQ/R,IAAOzlB,SAASoG,GACtD0kE,EAAQC,SACTD,EAAQE,OAASpxE,KAAKY,GACtBswE,EAAQG,QAAU,SAClBH,EAAQrlD,KAAO,SAAUgF,GACtB,IAAIsgD,EAASnxE,KAAKmxE,OACdG,EAAYrkC,SAASskC,cAAcJ,GACvC,OAAIG,GAAaA,EAAUE,mBAGxBvkC,SAASskC,cAAcvxE,KAAKwM,IAAIjL,SAFzB,CAKb,IAGF2vE,EAAQ1kE,IAAIoc,EAAMtkB,KAAK4sE,EAAQ,IAGtC,IAAIzwE,EAAK,CACNC,KAAM,OACNE,GAAIZ,KAAKY,GACTgoB,MAAOA,EACPxmB,GAAI,CACDqvE,OAASxzC,IACNppB,YAAW,KACR,MAAM68D,EAAQzkC,SAAS0kC,iBACpB,uBAAyB3xE,KAAKY,GAAK,MAEtC,IAAIgxE,EAAUnuE,MAAMmX,QAAQo2D,OAAOn7D,IAAI7V,KAAKY,IAC5C8wE,EAAMztE,SAAS4J,IACZA,EAAEgkE,QAAUD,GAASjtE,OAAQ,CAAK,GACnC,GACF,IAAI,EAEVmtE,WAAa7zC,IACVppB,YAAW,KACR,MAAM68D,EAAQzkC,SAAS0kC,iBACpB,uBAAyB3xE,KAAKY,GAAK,MAEtC,IAAIgxE,EAAUnuE,MAAMmX,QAAQo2D,OAAOn7D,IAAI7V,KAAKY,IAC5C8wE,EAAMztE,SAAS4J,IACZA,EAAEgkE,QAAUD,GAASjtE,OAAQ,CAAK,GACnC,GACF,IAAI,IAKhBlB,MAAMsuE,OACH,KACGtuE,MAAMhD,GAAGA,GAAIsyB,OAAO,GAEvB,KACA,KACA,IAIN,mBCvQH,MAAMi/C,EAAc,EAAQ,OAE5BvyE,EAAOC,QAAU,cAAsBsyE,EAUpCpqE,OACG,OAAO9H,MACH8H,OACA8M,MAAK,IAAM1U,KAAKiF,OAAOs/B,UAAUvkC,QACjC0U,MAAK,IAAM1U,KAAKkI,iBACvB,CAQA4M,UACG,OAAO,IAAIrF,SAAQ,CAACC,EAASmH,KACtB7W,KAAKY,GACNZ,KAAKiyE,cACDv9D,MAAK,IACI5U,MAAMgV,YAEfJ,MAAK,IAAM1U,KAAKiF,OAAOo/B,YAAYrkC,QACnC0U,KAAKhF,GACLiF,MAAMkC,GAEVnH,GACH,GAEN,CAEAs8D,eACGlsE,MAAMksE,gBAELhsE,KAAKs+B,kBAAoB,IAAIr6B,SAASrD,IACpCZ,KAAKksE,gBAAgB,sCAAsCtrE,KAAM,IAG1C,GAAtBZ,KAAK+G,OAAOZ,QACbnG,KAAKksE,gBAAgB,gCAE3B,CAYAA,gBAAgBjtD,EAAKpV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,SAAStR,KAAKoB,WAAW6d,IACvCjf,KAAKssE,UAAUhoE,KAAK,CAAEgN,UAASzH,QAClC,CAMA3B,gBACG,OAAOlI,KAAK+B,GAAGsN,QAAQgB,KAAK,CACzBC,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAGtE,CAEAqxE,cACG,OAAOjyE,KAAK+B,GAAGsN,QAAgB,OAAE,CAC9BiB,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,oBCzEH,IAAIsxE,EAAgB,EAAQ,OAE5BzyE,EAAOC,QAAU,cAAwBwyE,EACtCvyE,YAAYk/B,EAAW98B,GACpBjC,MAAM++B,EAAW98B,GAEjB/B,KAAKssE,UAAY,EAQpB,CAWAD,WACG,OAAOrsE,KAAKssE,SACf,CAOAN,eACGhsE,KAAKssE,UAAY,EACpB,CASAF,cACG,OAAOpsE,KAAKqsE,UACf,CAOAntC,kBACG,OAAOl/B,KAAK+B,GAAG+Q,QAAQ5C,YAAc,IACxC,CAOA/K,gBACG,IAAIwc,EAAM3hB,KAAK+U,eACf,OAAI4M,EAAI/gB,GACE+gB,EAAI7M,UAAUH,OAAOxM,IACzB,GAAIA,EAAIyM,WAAWvH,QAAQ,oBAAsB,EAM9C,OAJA7E,QAAQ6O,IACL,qDAAqDsK,EAAI/gB,YAE5D4H,QAAQ6O,IAAIsK,GAGf,MAAMxZ,CAAG,IAGRsH,QAAQC,SAClB,CAOAvK,aACG,IAAIwc,EAAM3hB,KAAK+U,eAEf4M,EAAIxa,KAAOwa,EAAIxa,MAAQnH,KAAKmH,MAAQnH,KAAKoB,OAAS,OAClD,IAAIyI,QAAa8X,EAAI/Z,OAChB5H,KAAKY,KACPZ,KAAKY,GAAKiJ,EAAKjJ,GAErB,oBCxGH,MAAMuxE,EAAc,EAAQ,OAuB5B,SAASC,EAAW7iE,GAEbA,GAASA,EAAM1F,MAA4B,YAApB0F,EAAM1F,KAAK0F,OACnC9L,MAAM0N,MAAM,CACTC,MAAO,yBACPG,GAAI,KACJlD,KAAMkB,EAAM1F,KAAKyH,SAAW,GAC5B1P,KAAM,iBAGf,CA0BAnC,EAAOC,QAAU,cAAsByyE,EACpCxyE,YAAYsF,GACTnF,MAAMmF,GAENjF,KAAKqyE,eAAiB,IAAIv8D,KACvB9V,KAAKsyE,eAAe,8BAA+Bx8D,EAAO,EAG7D9V,KAAKuyE,eAAiB,IAAIz8D,KACvB9V,KAAKsyE,eAAe,8BAA+Bx8D,EAAO,EAG7D9V,KAAKwyE,gBAAkB,IAAI18D,KACxB9V,KAAKsyE,eAAe,QAASx8D,EAAO,EAGvC9V,KAAKyyE,aAAe,CAACnjE,EAASnH,EAAK0B,KAC5B1B,EACDmH,EAAQuH,SAAS1O,GAGpBmH,EAAQI,UAAU7F,EAAK,EAG1B7J,KAAK0yE,eAAiB,IAAI58D,KACvB9V,KAAKsyE,eAAe,8BAA+Bx8D,EAAO,EAG7D9V,KAAKsyE,eAAiB,CAACjuE,EAAKiL,EAASnH,EAAK0B,KAQnC1B,EACDmH,EAAQuH,SAAS1O,IAGhB9D,GAE6B,GAA1BA,EAAIgJ,QAAQ,WACbrN,KAAKmY,cAActO,GAItB7J,KAAKmY,cAActO,EAAKA,MAG3ByF,EAAQI,UAAU7F,GAEdxF,GA/Db,SAA2B2D,EAAO3D,EAAKwF,GAGL,UAA3B7B,EAAMjG,GAAGsN,QAAQzN,QAClBoG,EAAMjG,GAAGyN,KAAKnL,EAAK,CAChB6T,SAAUlQ,EAAM/C,OAAOrE,GACvBiJ,QAGT,CAuDY8oE,CAAkB3yE,KAAMqE,EAAKwF,GAChC,CAEN,CAeAu2B,wBAAwBz6B,GAErB,IAAIm5B,EAAW9+B,KAAKiF,OAAOo7B,qBAEvBC,GAAkB,EAClBxB,EAAS34B,QACV24B,EAAS76B,SAAQ,SAAU2B,GACH,MAAjBD,EAAOC,KACR06B,GAAkB,EAExB,IAECA,IAEyB,MAAvB36B,EAAO6f,mBACuB,IAAvB7f,EAAO6f,cACS,IAAvB7f,EAAO6f,eAEP7f,EAAO6f,aAAe,IAEzBxlB,KAAKiF,OAAOk6B,YAAYx5B,EAAQA,EAAQm5B,GAE9C,CAEAxmB,QAAQpB,EAAQpB,GACb,OAAO9V,KAAK+B,GAAGsN,QAAQ6H,GAAQpB,EAClC,CAMA88D,YAAYjtE,GAKT,OAJAA,EAAOysC,MAAMjkC,KAAK1I,GACRzF,KAAKogC,wBAAwB36B,EAAKoE,QAGrC,IAAI4F,SAAQ,CAACC,EAASmH,KAC1B,IAAIsL,EAAQniB,KAAK+B,GAAGogB,QACpBniB,KAAK+B,GAAGsN,QAAQwjE,KAAK1wD,GAAO,CAAC7S,EAASnH,EAAK0B,KACpC1B,EACD0O,EAAO1O,IAGVnI,KAAKmY,cAActO,GACnB6F,EAAQ7F,GAAK,IAMhB7J,KAAK+B,GAAGsN,QAAQgB,KACb,CACGC,IAAKtQ,KAAKiF,OAAOu/B,eACjB1uB,OAAQnQ,GAEX,CACGtB,IAAK8d,EACL7S,QAAS,CAAC,IAYZqF,MAAMkC,EAAO,GAEvB,CAMA41D,OAAO9mE,GAUJ,OATA3F,KAAKogC,wBAAwBz6B,GAG7B3F,KAAKiF,OAAO8B,SAAS9C,SAAS+C,SACEqkB,IAAzB1lB,EAAOqB,EAAEF,aACVE,EAAEo+B,aAAaz/B,EAClB,IAGI,IAAI8J,SAAQ,CAACC,EAASmH,KAC1B,IAAIsL,EAAQniB,KAAK+B,GAAGogB,QACpBniB,KAAK+B,GAAGsN,QAAQwjE,KAAK1wD,EAAOniB,KAAKqyE,gBACjCryE,KAAK+B,GAAGsN,QAAQgB,KACb,CACGC,IAAKtQ,KAAKiF,OAAOu7B,UACjB1qB,OAAQnQ,GAEX,CACGtB,IAAK8d,EACL7S,QAAS,CAAEI,UAASmH,YAExBlC,OAAOxM,IACNiqE,EAAWjqE,GACX0O,EAAO1O,EAAI,GACZ,GAER,CAQAmO,OAAO1V,GACJ,OAAO,IAAI6O,SAAQ,CAACC,EAASmH,KAC1B,IAAIsL,EAAQniB,KAAK+B,GAAGogB,QACpBniB,KAAK+B,GAAGsN,QAAQwjE,KAAK1wD,EAAOniB,KAAKuyE,gBACjCvyE,KAAK+B,GAAGsN,QAAgB,OACrB,CACGiB,IAAKtQ,KAAKiF,OAAOy7B,YAAY9/B,IAEhC,CACGyD,IAAK8d,EACL7S,QAAS,CAAEI,UAASmH,YAExBlC,OAAOxM,IACNiqE,EAAWjqE,GACX0O,EAAO1O,EAAI,GACZ,GAER,CAMAhD,cAAcgqB,GAqBX,OApBAA,EAAOA,GAAQ,CAAC,EAoBT,IAAI1f,SAAQ,CAACC,EAASmH,KAC1B,IAAIsL,EAAQniB,KAAK+B,GAAGogB,QACpBniB,KAAK+B,GAAGsN,QAAQwjE,KAAK1wD,EAAOniB,KAAKwyE,iBACjCxyE,KAAK+B,GAAGsN,QAAQwG,IACb,CACGvF,IAAKtQ,KAAKiF,OAAOu7B,UACjB1qB,OAAQqZ,GAGX,CACG9qB,IAAK8d,EACL7S,QAAS,CAAEI,UAASmH,YAQtBlC,OAAOxM,IACDA,GAAOA,EAAIwO,OAEJ,mBADAxO,EAAIwO,KAEN3W,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,oEACHs7B,UAAWzd,IAKdnvB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,sEACHs7B,UAAWzd,KAKvBtY,EAAO1O,EAAI,GACZ,GAEX,CAOA2qE,SAASC,GAEF/yE,KAAK4/B,SACNmzC,EAAGtuE,OAAO,YAAazE,KAAK4/B,QAC5BmzC,EAAGtuE,OAAO,eAAgB,KAQ1BsuE,EAAG3jD,MAAQ2jD,EAAG3jD,OAAS,CAAC,EACpB2jD,EAAG3jD,MAAM0/C,oBACViE,EAAG9D,YAAY8D,EAAG3jD,MAAM0/C,oBAE3BiE,EAAG3jD,MAAM0/C,mBAAqBiE,EAAGzjD,YAC9B,iBACA,CAACyD,EAAOlB,KACL,IAAI1C,EAAO,CACRa,MAAOhwB,KAAKy/B,OACZ9xB,KAAM3N,KAAK0/B,MACX1M,MAAOnB,EACP2B,KAAMT,GA2BT,OAxBIggD,EAAG1tE,cAAc0tE,EAAG1tE,aAAa,CAAEzD,KAAM,SAE7C5B,KAAKqwB,QAAQlB,GAAMza,MAAM7K,IAiBtBkpE,EAAGt7D,MAAM5N,GAELkpE,EAAGprE,cAAcorE,EAAGprE,cAAc,KAGlC,CAAK,IAIlBorE,EAAGruE,WAIN,IAAIyqB,EAAO,CAAC,EACRnvB,KAAKy/B,SAAQtQ,EAAKa,MAAQhwB,KAAKy/B,QAC/Bz/B,KAAK0/B,QAAOvQ,EAAKxhB,KAAO3N,KAAK0/B,OACd,MAAf1/B,KAAK4/B,SAAgBzQ,EAAK6D,MAAQhzB,KAAK4/B,QACzB,MAAd5/B,KAAK2/B,QAAexQ,EAAKqE,KAAOxzB,KAAK2/B,OAErCozC,EAAG1tE,cAAc0tE,EAAG1tE,aAAa,CAAEzD,KAAM,SAE7C5B,KAAKqwB,QAAQlB,GACTza,MAAM7K,IAgBJkpE,EAAGt7D,MAAM5N,GAELkpE,EAAGprE,cAAcorE,EAAGprE,cAAc,IAExCgN,OAAOxM,IACLK,QAAQ+G,MAAM,QAASpH,EAAI,GAEpC,CAgBA6qE,KAAK7wE,GACF,OAAO,IAAIsN,SAAQ,CAACC,EAASmH,KAC1B,IAAIsL,EAAQniB,KAAK+B,GAAGogB,QACpBniB,KAAK+B,GAAGsN,QAAQwjE,KAAK1wD,EAAOniB,KAAKyyE,cACjCzyE,KAAK+B,GAAGsN,QAAQwG,IACb,CACGvF,IAAKtQ,KAAKiF,OAAOw/B,aACjB3uB,OAAQ3T,GAGX,CACGkC,IAAK8d,EACL7S,QAAS,CAAEI,UAASmH,YAExBlC,OAAOxM,IACFA,GAAOA,EAAIwO,MACZ3W,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,mCACTnN,YAGN0U,EAAO1O,EAAI,GACZ,GAER,CAQA6qB,MAAMA,GAEH,OADAhzB,KAAK4/B,OAAS5M,EACPhzB,IACV,CAQAwzB,KAAKA,GAEF,OADAxzB,KAAK2/B,MAAQnM,EACNxzB,IACV,CAMAizE,OAAOryE,EAAI+E,GAIR,IAAK,IAAItB,KAHTrE,KAAKogC,wBAAwBz6B,GAGbA,EACM,MAAfA,EAAOtB,WAAqBsB,EAAOtB,GAG1C,OAAO,IAAIoL,SAAQ,CAACC,EAASmH,KAC1B,IAAIsL,EAAQniB,KAAK+B,GAAGogB,QACpBniB,KAAK+B,GAAGsN,QAAQwjE,KAAK1wD,EAAOniB,KAAK0yE,gBACjC1yE,KAAK+B,GAAGsN,QAAQgH,IACb,CACG/F,IAAKtQ,KAAKiF,OAAOy7B,YAAY9/B,GAC7BkV,OAAQnQ,GAEX,CAAEtB,IAAK8d,EAAO7S,QAAS,CAAEI,UAASmH,YAgBjClC,OAAOxM,IACLiqE,EAAWjqE,GACX0O,EAAO1O,EAAI,GACZ,GAEX,CAMA+qE,aAAY,OAAEC,EAAM,OAAExtE,IACnB,OAAO,IAAI8J,SAAQ,CAACC,EAASmH,KAC1B,IAAIsL,EAAQniB,KAAK+B,GAAGogB,QACpBniB,KAAK+B,GAAGsN,QAAQwjE,KAAK1wD,GAAO,CAAC7S,EAASnH,KAC/BA,EACD0O,EAAO1O,GAIVuH,GAAQ,EAAK,IAGhB1P,KAAK+B,GAAGsN,QAAQgH,IACb,CACG/F,IAAKtQ,KAAKiF,OAAOu/B,eACjB1uB,OAAQ,CACLq9D,SACAxtE,WAGN,CAAEtB,IAAK8d,EAAO7S,QAAS,CAAC,IAKvBqF,MAAMkC,EAAO,GAEvB,oBC/iBH,MAAMmrB,EAAU,EAAQ,OAExBviC,EAAOC,QAAU,cAA2BsiC,EASzC4wC,YAAYjtE,GACT,IAAI4J,EAAQ,IAAIjH,MACb,kEAEH,OAAOmH,QAAQoH,OAAOtH,EACzB,CAMAk9D,OAAO9mE,GACJ,IAAI4J,EAAQ,IAAIjH,MACb,6DAEH,OAAOmH,QAAQoH,OAAOtH,EACzB,CAQA+G,OAAO1V,GACJ,IAAI2O,EAAQ,IAAIjH,MACb,6DAEH,OAAOmH,QAAQoH,OAAOtH,EACzB,CAMA0jE,OAAOryE,EAAI+E,GACR,IAAI4J,EAAQ,IAAIjH,MACb,6DAEH,OAAOmH,QAAQoH,OAAOtH,EACzB,CAMA2jE,aAAY,OAAEC,EAAM,OAAExtE,IACnB,IAAI4J,EAAQ,IAAIjH,MACb,kEAEH,OAAOmH,QAAQoH,OAAOtH,EACzB,oBCnEH,MAAM0yB,EAAe,EAAQ,OACvBmxC,EAAkC,EAAQ,OAEhD,IAAIrzE,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAmBhDrW,EAAOC,QAAU,cAAuBuiC,EACrCtiC,YAAYujB,EAAYnhB,GACrBjC,MAAMojB,EAAYnhB,GAElB/B,KAAK4kC,eAAiB,IAAIwuC,EACvBlwD,EACAljB,KACA+B,GAIH/B,KAAK+G,SAAS9C,SAAS+C,IACpBA,EAAE5E,GAAG,sBAAuBwD,IAEzB,IAAI+b,EAAM3hB,KAAK+B,GAAG2iB,eAAe9e,EAAMhF,IACvC,GAAK+gB,EAAL,CAEA,IAAIoY,EAAW/5B,KAAK+B,GAAGmE,SAASyb,EAAK3hB,MAGjConC,EAAY,GAChBpnC,KAAK+G,SAAS9C,SAAS+C,IAChBA,EAAEpG,KAAOgF,EAAMhF,GAInBwmC,EAAU9iC,KAAK0C,GAHZogC,EAAU9iC,KAAKy1B,EAGD,IAGpB/5B,KAAK8iC,QAAUsE,CAdC,CAcQ,GACzB,IAQLpnC,KAAK2f,wBAA0B,CAAC,EAMhC3f,KAAKqzE,wBAA0B,CAAC/jE,EAASnH,EAAKuP,KAE3C,IAAImI,EAAU7f,KAAK2f,0BAA0BrQ,EAAQO,MACjD1H,EACD0X,GAAShJ,OAAO1O,GAGnB0X,GAASnQ,QAAQgI,EAAS,EAE7B1X,KAAK+B,GAAGsN,QAAQjN,GAAG,iBAAkBpC,KAAKqzE,wBAC7C,CASA1I,kBACG,IAAIG,EAAS9qE,KAAK+B,GAAGkW,WAAWjY,KAAKY,IAerC,OAZIZ,KAAK2f,0BAEN3f,KAAK+B,GAAGsN,QAAQqnB,eACb,iBACA12B,KAAKqzE,yBAIRvI,EAAOnrD,wBAA0B3f,KAAK2f,wBACtC3f,KAAK2f,wBAA0B,MAG3BmrD,CACV,CASA7kE,WAAWid,GAoBRpjB,MAAMmG,WAAWid,GAEbljB,KAAK4kC,gBAAgB5kC,KAAK4kC,eAAe0uC,QAAQpwD,EACxD,CAIA3d,UACG,IAAIgC,EAAYvH,KAAK+B,GAAGgc,WAAWxW,YAwBnC,OAfgB,GALbvH,KAAK+B,GAAGykB,SAASL,GAEXA,EAAEvlB,IAAMZ,KAAKY,IACbulB,EAAEhf,KAAKkR,eAAiBrY,KAAKmH,KAAKkR,gBAErClS,QAEHoB,EAAUkW,SACP,OACA1d,EAAE,oDAAqD,CAACC,KAAKmH,QAW5DI,CACV,CASAipB,YAAY3mB,GACT,IAAItC,EAAYvH,KAAK+B,GAAGgc,WAAWxW,YAMnC,OALAvH,KAAK+G,SAAS9C,SAAS+C,IAEhB6C,EAAK2zB,eAAex2B,EAAEF,aAAaE,EAAEwpB,YAAY3mB,EAAMtC,EAAU,IAGjEA,CACV,CAmCApC,gBAuFG,IASG,QA/B0B,MAC1B,IAAI6mB,EAAa,GAIjB,OAHAhsB,KAAK+B,GAAGgqB,eAAe9nB,SAASgoB,IAC7BD,EAAW1nB,KAAK2nB,EAAIo/C,aAAarrE,MAAM,IAEnCyP,QAAQ8R,IAAIyK,EAAW,EAmBxBJ,QAhBmB,KAClB,IAAInc,SAASoc,IACjB7rB,KAAK+B,GAAGqmB,SACJC,GAAMA,EAAE7B,SAASL,GAAMA,EAAEvlB,IAAMZ,KAAKY,KAAIuF,OAAS,IACnDlC,SAASokB,IAGRA,EAAEwgB,UAAW,CAAI,IAGpBhd,GAAM,IASH0nD,GAIFvzE,KAAK4I,WACN,OAAO6G,QAAQC,gBAOZ1P,KAAKiyE,cAKX,IAAIuB,EAAa,GAIjB,GAAiB,UAAbxzE,KAAK4B,KAAkB,CACxB,IAAIkC,EAAY9D,KAAK+G,SACrB/G,KAAK8iC,QAAU,GAGfh/B,EAAUG,SAAS+C,IAChBwsE,EAAWlvE,KAAK0C,EAAE8N,UAAU,GAElC,OACMrF,QAAQ8R,IAAIiyD,SAEZ1zE,MAAMgV,UACZ9U,KAAKwP,KAAK,YAKb,CAJE,MAAOrH,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,gDAEf,CAmDH,CAWAnK,aACG,IAAIsuE,GAAQ,EAGPzzE,KAAKY,KACPZ,KAAKoB,MAAQpB,KAAKoB,OAASpB,KAAKmH,KAChCssE,GAAQ,GAGX,IAKG,aAJM3zE,MAAM8H,OACR6rE,SACKzzE,KAAKkI,gBAEPlI,IAOV,CANE,MAAOmI,GAKN,MAJAnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kBACT0I,IAAKhY,KAAK8F,UAEPqC,CACT,CACH,CAaArC,QACG,IAAIgI,EAAShO,MAAMgG,QAInB,OAFAgI,EAAOg5B,qBAAuB9mC,KAAK4kC,eAAe9+B,QAE3CgI,CACV,CAMA5F,gBACG,OAAO,IAAIuH,SAAQ,CAACC,EAASmH,KAC1B,IAAIhH,EAAO7P,KAAK+B,GAAG8N,OACnB7P,KAAK2f,wBAAwB9P,GAAQ,CAAEH,UAASmH,UAChD,IAAId,EAAc,CACf1R,IAAK,iBACLiL,QAAS,CAAEO,OAAMjP,GAAIZ,KAAKY,KAE7BZ,KAAK+B,GAAGsN,QAAQgB,KACb,CACGC,IAAK,8BAA8BtQ,KAAKY,MAE3CmV,EACF,GAEP,CAEAk8D,cACG,OAAO,IAAIxiE,SAAQ,CAACC,EAASmH,KAC1B,IAAIhH,EAAO7P,KAAK+B,GAAG8N,OACnB7P,KAAK2f,wBAAwB9P,GAAQ,CAAEH,UAASmH,UAChD,IAAId,EAAc,CACf1R,IAAK,iBACLiL,QAAS,CAAEO,OAAMjP,GAAIZ,KAAKY,KAE7BZ,KAAK+B,GAAGsN,QAAgB,OACrB,CACGiB,IAAK,8BAA8BtQ,KAAKY,MAE3CmV,EACF,GAEP,CAgBA29D,aAAa5sE,EAAY6sE,GAEtB,IADA,IAAIx3C,EAAU,KACL5oB,EAAI,EAAGA,EAAIvT,KAAK8iC,QAAQ38B,OAAQoN,IACtC,GAAIvT,KAAK8iC,QAAQvvB,GAAGzM,YAAcA,EAAY,CAC3Cq1B,EAAUn8B,KAAK8iC,QAAQvvB,GAAG3S,GAC1B,KAEH,CASH,IAAIumC,EAAgBnnC,KAAK+B,GAAGqgB,cAAc+Z,GAI1C,OAHAgL,EAAgBA,GAAiB,CAAC,GACpBnmC,MAAQ2yE,EAEf3zE,KAAK+B,GAAGqgB,cAAc+Z,EAASgL,EAEzC,CAIAysC,cACGC,EACAnQ,EACAK,EACAC,EACA8P,GAEA/P,EAAiBA,GAAkB,GACnCC,EAAeA,GAAgB,GAE/B,IAAIltD,EAAU,GA6Ed,OAzEA9W,KAAK+G,SAAS9C,SAAS+C,IACpB,IAAI+sE,EAAS/sE,EAAEgtE,aAAa,CACzBH,kBAAmBA,EACnBzrB,SAAUsb,IAGTA,IACDqQ,EAAOE,gBAAkBjtE,EAAEZ,SAAS6tE,iBAGvCF,EAAO7jD,MAAQlpB,EAAEkpB,YAAS7E,EAC1B0oD,EAAO53C,QAAUn1B,EAAEpG,GAIK,GAApBoG,EAAEZ,SAASpF,QACZ+yE,EAAO/yE,MAAQgG,EAAEZ,SAASpF,OAI7B,IAAImmC,EAAgBnnC,KAAK+B,GAAGqgB,cAAcpb,EAAEpG,IACxCumC,GAAiBA,EAAcnmC,SAC3B+yE,EAAO/yE,OAASmmC,EAAcnmC,MAAQ+yE,EAAO/yE,SAE/C+yE,EAAO/yE,MAAQmmC,EAAcnmC,OAI9B+yE,EAAO/yE,QAET+yE,EAAOG,QAAS,GAIfnQ,EAAe12D,QAAQrG,EAAEpG,KAAO,EACpB,aAAToG,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAC3B0vE,EAAOI,OAAS,CAAEC,QAAS,cAAexuE,MAAOoB,GAEjD+sE,EAAOI,OAAS,CAAEC,QAAS,cAIxBpQ,EAAa32D,QAAQrG,EAAEpG,KAAO,IACpCmzE,EAAOI,OAAS,CAAEC,QAAS,gBAE9Bt9D,EAAQxS,KAAKyvE,EAAO,IA4BhBj9D,CACV,CAMAu9D,eAAexqE,EAAMjK,EAAK00E,EAAWnB,EAAQzP,GAC1C,IAAK75D,IAASA,EAAKqkB,WAAY,OAG/B,IAAInnB,EAAS,GAMb,GALAutE,EAAUC,YAAYztE,IACnB,IAAIlB,EAAQ5F,KAAK+G,QAAQC,GAAMA,EAAEF,YAAcA,IAAY,GACvDlB,GAAOmB,EAAOzC,KAAKsB,EAAM,IAGlB,MAAVutE,EACDA,EAAOlvE,SAASrD,IACb,IAAIwe,EAAMvV,EAAKsjB,QAAQvsB,GACnBwe,GACDrY,EAAO9C,SAAS+C,IACb,IAAIzE,EAAO+xE,EAAUE,YAAY,CAC9Bp1D,IAAKA,EAAIxe,GACT6zE,OAAQztE,EAAEF,aAEbE,EAAE0tE,cAAct1D,EAAKxf,EAAK2C,EAAM,CAC7B6lD,SAAUsb,GACX,GAER,QAEC,CACJ,IAAI9iE,EAAKiJ,EAAKqkB,aACd,KAAOttB,GAAI,CACR,IAAIwe,EAAMvV,EAAKsjB,QAAQvsB,GACnBwe,GACDrY,EAAO9C,SAAS+C,IACb,IAAIzE,EAAO+xE,EAAUE,YAAY,CAC9Bp1D,IAAKA,EAAIxe,GACT6zE,OAAQztE,EAAEF,aAEbE,EAAE0tE,cAAct1D,EAAKxf,EAAK2C,EAAM,CAC7B6lD,SAAUsb,GACX,IAGR9iE,EAAKiJ,EAAKwkB,UAAUztB,EACvB,CACH,CACH,CAGA6kC,YAAYhX,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAIqQ,EAAW9+B,KAAKqgC,qBACpBrgC,KAAK++B,UAAUtQ,EAASA,EAASqQ,GAEjC,IAAI4G,EAAY1lC,KAAKmiC,aAAe,GAGpC,IAAKuD,GAAa1lC,KAAK+G,SAASZ,OAAS,EAAG,CACzC,IAAIw/B,EAAe3lC,KAAK+G,QAAQC,GAAMA,EAAE4+B,oBAAmB,GACzCF,EAAdC,EAA0B,IAAIA,EAAa/kC,MAEhC,GAAGZ,KAAK+B,GAAGsgB,OAAOoM,EAAQ7tB,IAAM,OAAS,KAClD6tB,EAAQ7tB,IAEjB,CAIA,IAAImlC,EAASL,EAAUM,MAAM,cAc7B,GAZID,GAAUA,EAAO9hC,SAClB8hC,EAAO9hC,SAASgiC,IACb,IAAIC,EAAiBD,EAAM/yB,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErDtN,EAAQ5F,KAAK+N,UAAUm4B,GACd,MAATtgC,IAEJ8/B,EAAYA,EAAUxyB,QAAQ+yB,EAAOrgC,EAAM4a,OAAOiO,IAAY,IAAG,KAKlEiX,EAAUG,OAAQ,CACpB,IAAIzD,EAAgBpiC,KAAKoiC,eAAiB,CAAC,EAExCsD,EADCtD,GAAiBA,EAAcC,iBACpBtiC,EAAEqiC,EAAc0D,aAAe,cAG/B,GAAG9lC,KAAK+B,GAAGsgB,OAAOoM,EAAQ7tB,IAAM,OAAS,KAClD6tB,EAAQ7tB,IAGjB,CAEA,OAAO8kC,CACV,CAEAuiC,cACG,OAAOjoE,KAAK4kC,eAAeE,gBAC9B,CAEAsnC,cAEG,IAAIuI,EAAc70E,MAAMssE,cASxB,OARApsE,KAAK+G,SAAS9C,SAAS+C,IACpB2tE,EAAcA,EAAY3sD,OAAOhhB,EAAEqlE,WAAW,IAGjDrsE,KAAKkjC,UAAUj/B,SAASsP,IACrBohE,EAAcA,EAAY3sD,OAAOzU,EAAE84D,WAAW,IAG1CsI,EAAY7rE,QAAQ8rE,GAAMA,GACpC,CAEA5I,eACGlsE,MAAMksE,eAEN,IAAIloE,EAAY9D,KAAK+G,SAEG,GAApBjD,EAAUqC,QACXnG,KAAKksE,gBAAgB,kBAGvBlsE,KAAKs+B,kBAAoB,IAAIr6B,SAASrD,IACpCZ,KAAKksE,gBAAgB,sCAAsCtrE,KAAM,KAGnEZ,KAAKijC,eAAiB,IAAIh/B,SAASrD,IACjCZ,KAAKksE,gBAAgB,sCAAsCtrE,KAAM,IAGpEkD,EAAUG,SAAS+C,IAChBA,EAAEglE,cAAc,IAGnBhsE,KAAKkjC,UAAUj/B,SAASsP,IACrBA,EAAEy4D,cAAc,GAEtB,CAEAE,gBAAgBjtD,EAAKpV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,UAAUtR,KAAKoB,WAAW6d,IACxCjf,KAAKssE,UAAUhoE,KAAK,CAAEgN,UAASzH,QAElC,CAEAgrE,OAAOxmE,GAIJ,OAHA7F,QAAQ+G,MACL,qFAEIvP,KAAK+B,GAAGsgB,OAAOhU,EACzB,oBCvwBH,MAAMujB,EAAW,EAAQ,OAOzBnyB,EAAOC,QAAU,cAA+BkyB,qBCPhD,MAAMA,EAAW,EAAQ,OASzBnyB,EAAOC,QAAU,cAA6BkyB,qBCM9C,MAAMkjD,EAAoB,EAAQ,OAElC,IAAIz2D,EAAY,KACC,oBAANvG,GACRA,GAAGC,OAAO3V,GAAG,mBAAmB,SAAU6c,GACnCZ,EACDA,EAAU7O,KAAK,kBAAmB,CAC/B++B,QAAStvB,EAAIsvB,QACb1kC,KAAMoV,EAAIpV,QAGbrB,QAAQ+G,MACL,sEAEH/G,QAAQ+G,MAAM,iCAEpB,IAEA/G,QAAQ+G,MAAM,qDAMjB9P,EAAOC,QAAU,cAA4Bo1E,EAC1Cn1E,YAAYujB,EAAYnhB,GACrBjC,MAAMojB,EAAYnhB,GAEbsc,IACFA,EAAYtc,GAGf/B,KAAK+B,GAAGK,GAAG,mBAAoByH,IACxB7J,KAAKY,IAAMiJ,EAAK0kC,SAASvuC,KAAKiG,WAAW4D,EAAKA,KAAK,IAW1D7J,KAAK+0E,cAAc/0E,KAAKgwB,MAC3B,CAmEA4W,aAAaO,GACVrnC,MAAM8mC,aAAaO,GAEnBnnC,KAAK8iC,QAAQ7+B,SAAS+wE,IAGnBA,EAAWpvE,MAAMkB,WAAa,GAAGkuE,EAAW9kD,SAAS8kD,EAAWpvE,MAAMkB,YAAY,GAExF,CAYA4sE,aAAa5sE,EAAY6sE,EAAUsB,GAChC,IAAIrvE,EAAQ5F,KAAK+G,QAAQC,GAAMA,EAAEF,YAAcA,IAAY,GAC3D,OAAIlB,GACDA,EAAMQ,SAASpF,MAAQ2yE,EAEhB3zE,KAAK4H,QAEL6H,QAAQC,SAErB,CAQAkkE,cACGC,EACAnQ,EACAK,EACAC,EACA8P,GAEA,IAAIh9D,EAAUhX,MAAM8zE,cACjBC,EACAnQ,EACAK,EACAC,EACA8P,GAyDH,OAtDAh9D,EAAQ7S,SAAS2iB,IAEd,IAAI3hB,EAASjF,KAAKsnC,cAAc1gB,EAAEsJ,OAClC,IAAKjrB,EAAQ,OAEb,IAAIW,EAAQX,EAAO8I,UAAU6Y,EAAEuV,SAC/B,IAAKv2B,EAAO,OAGZ,IAAIsqB,EAAQ,GA0BZ,GAxBGA,EADC/iB,MAAMC,QAAQpN,KAAK2mC,SACZ/gC,EAAMX,OAAOkC,KAEbyf,EAAEsJ,MAKbtJ,EAAEhmB,GAAK,GAAGsvB,KAAStqB,EAAMkB,aAGrB9G,KAAKoG,UAAYpG,KAAKoG,SAAS4gC,WAChCpgB,EAAEmtD,OAAS,GAAGnuE,EAAMxE,OAAS,KAE7BwlB,EAAEmtD,OAAS,GAAGnuE,EAAMX,OAAO7D,OAAS,MAAMwE,EAAMxE,OAAS,KAIxDwE,EAAMQ,UAAYR,EAAMQ,SAASC,WAClCugB,EAAEmtD,OAAS,iCAAiCnuE,EAAM01C,uBAC/C10B,EAAEmtD,UAKJ/zE,KAAKulB,QAAS,CACf,IAAI2vD,EAAiBtuD,EAAE0+C,SAEvB1+C,EAAE0+C,SAAW,CAACl3D,EAAMq+B,IACbr+B,EAAKwY,EAAEhmB,IAEL6rC,EAAOlhC,KAAK6C,EAAMq+B,IACjByoC,EACIA,EAAe9mE,EAAMq+B,EAAQr+B,EAAKwY,EAAEhmB,KACpCwN,EAAKwY,EAAEhmB,KAEN,EAElB,CAEAgmB,EAAEstD,QAAS,EACXttD,EAAEyiD,SAAW,GAAG,IAGZvyD,CACV,CAWAi+D,cAAc3kD,GACNA,IAIDA,EAAKnG,MACLmG,EAAK/O,OAAS,IAAIpd,SAAS2L,IACzB5P,KAAK+0E,cAAcnlE,EAAE,KAMf5P,KAAK+N,UAAUqiB,EAAK/rB,MACN,eAAZ+rB,EAAK/rB,KAChBrE,KAAKksE,gBACF,iDACA,CACG97C,SAMJpwB,KAAKm1E,kBACPn1E,KAAKm1E,gBAAkBn1E,KAAK+B,GAAGgzB,iBAC5B,GAAG/0B,KAAKY,sBAKTZ,KAAKm1E,gBAAgBC,oBAAoBhlD,IAC3CpwB,KAAKksE,gBAAgB,kCAAmC,CACrD97C,UAGT,CAEA47C,eACGlsE,MAAMksE,eAENhsE,KAAK+0E,cAAc/0E,KAAKgwB,OAGxBhwB,KAAKomC,gBAAgBniC,SAAS+C,IAC3BhH,KAAKksE,gBACF,2CACGllE,EAAEk1B,8BACiBnoB,KAAKC,UAAUhN,KACrC,CACGqgC,UAAWrgC,GAEhB,IAGJhH,KAAKqmC,gBAAgBpiC,SAAS+C,IAC3BhH,KAAKksE,gBACF,yBAAyBllE,EAAEwgC,+BACxBxgC,EAAEm1B,6BACiBpoB,KAAKC,UAAUhN,EAAEqgC,aACvC,CACGpiC,OAAQ+B,EAAEwgC,MACVH,UAAWrgC,EAAEqgC,WAElB,IAGJrnC,KAAKsmC,aAAariC,SAAS+C,IACxBhH,KAAKksE,gBACF,SAASllE,EAAEpB,MAAMhF,kCAAkCmT,KAAKC,UACrDhN,EAAEqgC,2CAEL,CACGzhC,MAAOoB,EAAEpB,MAAME,QACfuhC,UAAWrgC,EAAEqgC,WAElB,IAGJrnC,KAAKumC,kBAAkBtiC,SAAS+C,IAC7BhH,KAAKksE,gBACF,SACGllE,EAAEqgC,UAAUlL,uCACiBpoB,KAAKC,UAClChN,EAAEqgC,6BAEL,CACGA,UAAWrgC,EAAEqgC,WAElB,IAGJrnC,KAAKwmC,eAAeviC,SAAS+C,IAC1BhH,KAAKksE,gBAAgBllE,EAAEsK,QAAStK,EAAE6C,KAAK,GAE7C,CAEAqiE,gBAAgBjtD,EAAKpV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,SAAStR,KAAKoB,WAAW6d,IACvCjf,KAAKssE,UAAUhoE,KAAK,CAAEgN,UAASzH,QAClC,CAEAgrE,OAAOxmE,GAIJ,OAHA7F,QAAQ+G,MACL,qFAEIvP,KAAK+B,GAAGsgB,OAAOhU,EACzB,oBChWH,MAAMgnE,EAAgB,EAAQ,OAI9B51E,EAAOC,QAAU,cAAwB21E,EACtC11E,YAAYujB,EAAYnhB,GACrBjC,MAAMojB,EAAYnhB,GAElB/B,KAAKs1E,eAAiB,GAMtBt1E,KAAK+B,GAAGK,GAAG,uBAAwByH,IAC5B7J,KAAKY,IAAMiJ,EAAKqO,UAAUlY,KAAKiG,WAAW4D,EAAKA,KAAK,GAE9D,CAWAiL,UAEG,IAAIygE,EAAcv1E,KAAKkJ,WACnB2nE,EAAa,GAKjB,OAJA0E,EAAYtxE,SAASoG,IAClBwmE,EAAWvsE,KAAK+F,EAAEyK,UAAU,IAGxBrF,QAAQ8R,IAAIsvD,GAAYn8D,MAAK,IAE1B,IAAIjF,SAAQ,CAACC,EAASmH,KAC1B7W,KAAK+U,eACDD,UACAJ,MAAK,KAEHhF,GAAS,IAEXgF,MAAK,KAIHlM,QAAQ+G,MACL,kGAEH,IAAIimE,EAAkBx1E,KAAK+B,GAAGgqB,eAAeyB,MAAM5f,GACzCA,EAAE6Z,WAAWznB,QAEnBw1E,EAAgBrvE,OAAS,GAC1BqvE,EAAgBvxE,SAAS2J,IACtBA,EAAE29D,cAAcvrE,KAAK,GAE3B,IAEF2U,OAAOxM,IACL0O,EAAO1O,EAAI,GACZ,KAGd,CAWAP,OAUG,IAAIw1D,EAAW,GAKf,OAJep9D,KAAKkJ,WACXjF,SAASq7B,IACf89B,EAAS94D,KAAKg7B,EAAE13B,OAAO,IAEnB6H,QAAQ8R,IAAI67C,GAAU1oD,MAAK,IAExB1U,KAAK+U,eACRnN,OACA8M,MAAM7K,IAIC7J,KAAKY,KACPZ,KAAKY,GAAKiJ,EAAKjJ,IAMlB,IAAI60E,EAAO,CAAC,EACZ,IAAIC,EAAO11E,KAAKkpC,UAChB70B,OAAOC,KAAKtU,KAAKkpC,WAAWjlC,SAASsQ,IAClCkhE,EAAKz1E,KAAKkpC,UAAU30B,GAAG3T,IAAMZ,KAAKkpC,UAAU30B,EAAE,IAEjDvU,KAAKkpC,UAAYusC,EAIjB,IAAIE,GAAW,EAOf,GANAthE,OAAOC,KAAKmhE,GAAMxxE,SAASsQ,IACnBmhE,EAAKnhE,KACPohE,GAAW,EACd,IAGCA,EACD,OAAO31E,KAAK4H,MACf,KAGZ,CAEArC,UACG,IAAIgC,EAAYvH,KAAK+B,GAAGgc,WAAWxW,YAcnC,OARgB,GAFbvH,KAAK+B,GAAGylB,WAAWrB,GACTA,EAAEhf,KAAKkR,eAAiBrY,KAAKmH,KAAKkR,gBACzClS,QAEHoB,EAAUkW,SACP,OA1IJ,KAAI3H,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GA2IpC/V,CAAE,qDAAsD,CAACC,KAAKmH,QAI7DI,CACV,CAaAquE,6BAA6Bt6C,GAC1B,IAAIwQ,EAAO9rC,KAAK+B,GAAGs5B,oCAAoCC,EAASt7B,MAIhE,OAHI8rC,GACD9rC,KAAK2qC,WAAWmB,GAEZA,CACV,CAQA+pC,aAAaC,GACV91E,KAAK+1E,mBAAmBD,GACxB91E,KAAKs1E,eAAehxE,KAAKwxE,EAC5B,CAOAC,mBAAmBD,GAChB91E,KAAKs1E,eAAiBt1E,KAAKs1E,eAAexsE,QAAQ8D,GAAMA,EAAEhM,IAAMk1E,EAAMl1E,IACzE,CAQAwrE,cAEG,IAAIuI,EAAc,GAAG3sD,OAAOhoB,KAAKssE,WAYjC,GAXAtsE,KAAKkJ,WAAWjF,SAASoG,IACtBA,EAAE2hE,eACF2I,EAAcA,EAAY3sD,OAAO3d,EAAEgiE,WAAW,IAGnB,GAA1BrsE,KAAKkJ,WAAW/C,QACjBwuE,EAAYrwE,KAAK,CAAEgN,QAAS,4BAA6BzH,KAAM,CAAC,KAK9D7J,KAAKg2E,WACP,GAAI98D,OAAO+8D,UAERj2E,KAAKg2E,WAAa,SAAUE,GACzB,OAAO,IAAIh9D,OAAO+8D,WAAYE,gBAC3BD,EACA,WAEN,MACI,SAC2B,IAAxBh9D,OAAOk9D,gBACd,IAAIl9D,OAAOk9D,cAAc,oBASzB,MAAM,IAAI9tE,MAAM,uBAPhBtI,KAAKg2E,WAAa,SAAUE,GACzB,IAAIG,EAAS,IAAIn9D,OAAOk9D,cAAc,oBAGtC,OAFAC,EAAOlxE,MAAQ,QACfkxE,EAAOC,QAAQJ,GACRG,CACV,CAGH,CAIH,IAAI1sC,EAAM3pC,KAAKg2E,WAAWh2E,KAAKgpC,eA0B/B,MAzBsB,CACnB,mBACA,aACA,kBAEW/kC,SAAS2I,IACpB,IAAI2oE,EAAc5rC,EAAI4sC,qBAAqB3pE,GAC3C,IAAK,IAAIM,EAAI,EAAGA,EAAIqoE,EAAYpvE,OAAQ+G,IAE3BqoE,EAAYroE,GACVlN,KAAK6qC,oBAAoB0qC,EAAYroE,GAAGtM,KAEjDZ,KAAK61E,aAAaN,EAAYroE,GAEpC,IAIClN,KAAKs1E,eAAenvE,QACrBwuE,EAAYrwE,KAAK,CACdgN,QAAS,iCACTzH,KAAM,CAAC,IAIN8qE,CACV,oBCnQH,MAAM6B,EAAa,EAAQ,KAI3B/2E,EAAOC,QAAU,cAAqB82E,EACnC72E,YAAYujB,EAAYnhB,GACrBjC,MAAMojB,EAAYnhB,EAMrB,CAWA+S,UAGG,OAAO,IAAIrF,SAAQ,CAACC,EAASmH,KAC1B7W,KAAK+U,eACDD,UACAJ,MAAK,KACHhF,GAAS,IAEXiF,OAAOxM,IACL0O,EAAO1O,EAAI,GACZ,GAwCX,CAWAP,OAEG,OAAO5H,KAAK+U,eACRnN,OACA8M,MAAM7K,IAIC7J,KAAKY,KACPZ,KAAKY,GAAKiJ,EAAKjJ,IAEXZ,OAEhB,CAEAuF,UAEG,OAAO,CAgBV,CAQA6mE,cA+DA,oBC7LH,MAAMqK,EAAoB,EAAQ,OAElCh3E,EAAOC,QAAU,cAA4B+2E,eCF7C,IAAI12E,EAAI,KAGRN,EAAOC,QAAU,MACdC,YAAYM,GAGJF,IACFA,EAAIE,EAGAA,EAAMA,QACPF,EAAIE,EAAMA,OAGnB,CAOAy2E,mBACG,MAAO,CACJ,CAAE91E,GAAI,IAAK+B,MAAO5C,EAAE,cACpB,CAAEa,GAAI,KAAM+B,MAAO5C,EAAE,+CACrB,CAAEa,GAAI,IAAK+B,MAAO5C,EAAE,kBACpB,CAAEa,GAAI,IAAK+B,MAAO5C,EAAE,cAE1B,CASA42E,aAAaC,GACV,IAAKA,IAAaA,EAASC,OAASD,EAASC,KAAKj1E,KAAM,OAAO,EAG/D,IAAIk1E,EAAgBF,EAASC,KAAKj1E,KAAKyW,cACvC,MACoB,YAAjBy+D,GACiB,4BAAjBA,CAMN,CAcAC,YAAYH,EAAUI,GACnB,OAAKh3E,KAAK22E,aAAaC,GAEhB,IAAInnE,SAAQ,CAACC,EAASmH,KAE1B,IAAIogE,EAAS,IAAI/9D,OAAOg+D,WACxBD,EAAOE,OAAU9sE,IACd,IAAIyD,EAAS,IAGEmpE,EAAOnpE,OAClB4a,MAAM,cACN5f,QAAQsW,GAAQA,GAAOA,EAAIjZ,OAAS,KAG3B,IAAIlC,SAASmb,IACvB,IAAIg4D,EAAW,GAMZA,EALgB,KAAfJ,GAED53D,EAAMA,EAAIlM,QAAQ,MAAO,QAGV8yB,MAAM,gCAEV5mB,EAAIsJ,MAAMsuD,GAGxBlpE,EAAOxJ,KAAK8yE,EAASjpE,KAAKkpE,GAASr3E,KAAK+/C,SAASs3B,KAAO,IAG3D3nE,EAAQ5B,EAAO,EAElBmpE,EAAOK,WAAWV,EAASC,KAAK,IA/BMpnE,QAAQoH,QAiCpD,CAcA0gE,iBAAiBC,EAAUC,GAOxB,IANA,IAAI5tE,EAMK0J,EAAI,EAAGA,GAJD,GAIiBA,IAAK,CAClC,IAAImkE,EAAOF,EAASjkE,GACpB,IAAKmkE,EAAM,MAIX,GAAY,OAFZ7tE,EAAO6tE,EAAKD,KAEQ5tE,EAAK1D,OAAS,EAAG,KACxC,CAEA,OAAY,MAAR0D,GAAwB,IAARA,EACV,SAEC,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,WAARA,GACQ,aAARA,EAEO,UACEg5C,MAAMh5C,GAEP4W,KAAKhJ,MAAM5N,GACZ,OAGHA,EAAK1D,OAAS,IAAY,WAClB,SANL,QAQb,CAMA45C,SAAS43B,GACN,OAAKA,EAEEA,EAAI9xC,OAAO3yB,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAFjC,EAGpB,oBC/JH,MAAM0kE,EAAoB,EAAQ,OAElC,IAAI73E,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAkBhD,SAAS+hE,EAAY1oD,EAAMpoB,EAAS,IACjC,GAAKooB,EAAL,CACA,GAAIA,EAAK9qB,IAAK,CAWX,MAAMuB,EAAQmB,EAAO+B,QAAQ9B,GAAMA,EAAEpG,IAAMuuB,EAAK9qB,MAAK,GACrD8qB,EAAKvpB,MAAQA,GAAOhF,GAEpBuuB,EAAKyd,UAAY,CACdhrC,KAAMutB,EAAKiB,KACXtnB,OAAQqmB,EAAKxsB,OAGZwK,MAAMC,QAAQ+hB,EAAKxsB,OAAQwsB,EAAKshB,SAAWthB,EAAKxsB,MAC/CwsB,EAAKshB,UAAYthB,EAAKxsB,OAAS,IAAI+lB,MAAM,KAE5B,QAAd9iB,GAAOvB,KAA+B,YAAduB,GAAOvB,MAChC8qB,EAAKyd,UAAU9jC,OAASqmB,EAAKyd,UAAU9jC,OAClC/G,GAAGsf,MAAMhB,OAAO8O,EAAKyd,UAAU9jC,QAC/B,KAELqmB,EAAKshB,SAAWthB,EAAKshB,SAAStiC,KAAKmF,GAAMvR,GAAGsf,MAAMhB,OAAO/M,aAGrD6b,EAAK9qB,WACL8qB,EAAKiB,YACLjB,EAAKxsB,KACf,CAEIwsB,EAAK9N,OAAS8N,EAAK9N,MAAMlb,SACzBgpB,EAAK9N,OAAS,IAAIpd,SAAS2L,IACzBioE,EAAYjoE,EAAG7I,EAAO,GAtCX,CAyCpB,CAiBA,SAAS+wE,EAAY3oD,EAAMpoB,EAAS,IACjC,GAAKooB,EAAL,CACA,GAAIA,EAAKvpB,MAAO,CACb,IAAIA,EAAQmB,EAAO+B,QAAQ9B,GAAMA,EAAEpG,IAAMuuB,EAAKvpB,QAAO,GAErDupB,EAAK9qB,IAAMuB,GAAOhF,IAAMuuB,EAAKvpB,MAC7BupB,EAAKyd,UAAYzd,EAAKyd,WAAa,CAAC,EACpCzd,EAAKiB,KAAOjB,EAAKyd,UAAUhrC,KAE3B,IAAI+D,EACDwpB,EAAKshB,SAAStiC,KAAKmF,GAAOA,aAAamN,KAAOnN,EAAEqQ,cAAgBrQ,KAChE,GAGC6b,EAAKyd,UAAU9jC,SACZqmB,EAAKyd,UAAU9jC,kBAAkB2X,KAC9B9a,EAAO0H,QAAQ8hB,EAAKyd,UAAU9jC,OAAO6a,eAAiB,GACvDhe,EAAOrB,KAAK6qB,EAAKyd,UAAU9jC,QAEtBnD,EAAO0H,QAAQ8hB,EAAKyd,UAAU9jC,QAAU,GAChDnD,EAAOrB,KAAK6qB,EAAKyd,UAAU9jC,SAGjCqmB,EAAKxsB,MAAQgD,EACTwI,KAAKmF,IAEC1N,GAAuB,QAAbA,EAAMvB,KAA8B,YAAbuB,EAAMvB,IAGpCiP,EAFG1N,EAAM03C,YAAY,IAAI78B,KAAKnN,MAIvChF,KAAK,YAEF6gB,EAAKvpB,aACLupB,EAAKvtB,YACLutB,EAAKshB,gBACLthB,EAAKyd,SACf,CAEIzd,EAAK9N,OAAS8N,EAAK9N,MAAMlb,SACzBgpB,EAAK9N,OAAS,IAAIpd,SAAS2L,IACzBkoE,EAAYloE,EAAG7I,EAAO,GAxCX,CA2CpB,CAEAtH,EAAOC,QAAU,cAA4Bk4E,EAC1Cj4E,YAAYE,EAAQkC,EAAII,EAAU,CAAC,GAGhCrC,MAFAD,EAASA,GAAU,mBAELkC,GAEd/B,KAAK+3E,SAAW51E,GAAW,CAAC,EAE5BnC,KAAKg4E,eAAgB,EAKrBh4E,KAAKi4E,WAAY,EAKHj4E,KAAKwS,OAAS,CACzBi6B,QAAS1qC,EAAG85B,MAAQ,CAAC,GAAGrpB,OACxBrS,UAAW,CACR+3E,IAAKn4E,EAAE,OACPo4E,GAAIp4E,EAAE,MAENq4E,WAAYr4E,EAAE,eACdu1C,QAASv1C,EAAE,YACXy1C,WAAYz1C,EAAE,gBACdm1C,aAAcn1C,EAAE,kBAChBq1C,gBAAiBr1C,EAAE,sBAEnBs4E,6BAA8Bt4E,EAAE,kBAChCu4E,6BAA8Bv4E,EAAE,kBAEhC00C,WAAY10C,EAAE,gBACd40C,cAAe50C,EAAE,oBAEjB61C,YAAa71C,EAAE,iBACf+1C,eAAgB/1C,EAAE,aAElB80C,iBAAkB90C,EAAE,sBACpBg1C,oBAAqBh1C,EAAE,0BAEvByyC,kBAAmBzyC,EAAE,YACrB2yC,qBAAsB3yC,EAAE,mBACxB6yC,YAAa7yC,EAAE,MACf+yC,eAAgB/yC,EAAE,UAClBizC,QAASjzC,EAAE,YACXmzC,WAAYnzC,EAAE,gBAEdixC,gBAAiBjxC,EAAE,aACnBmxC,eAAgBnxC,EAAE,YAClBqxC,oBAAqBrxC,EAAE,mBACvBuxC,mBAAoBvxC,EAAE,kBACtByxC,uBAAwBzxC,EAAE,0BAC1B2xC,sBAAuB3xC,EAAE,yBACzB6xC,2BAA4B7xC,EAAE,gCAC9B+xC,0BAA2B/xC,EAAE,+BAC7BiyC,oBAAqBjyC,EAAE,iBACvBmyC,oBAAqBnyC,EAAE,iBAEvBqzC,eAAgBrzC,EAAE,KAClBszC,kBAAmBtzC,EAAE,KACrBuzC,kBAAmBvzC,EAAE,KACrBwzC,kBAAmBxzC,EAAE,KACrByzC,yBAA0BzzC,EAAE,KAC5B0zC,yBAA0B1zC,EAAE,KAE5B4zC,mBAAoB5zC,EAAE,UACtB6zC,sBAAuB7zC,EAAE,kBAEzBw4E,iBAAkBx4E,EAAE,cACpBy4E,oBAAqBz4E,EAAE,kBAEvBi0C,uBAAwBj0C,EAAE,mBAC1Bm0C,0BAA2Bn0C,EAAE,uBAC7Bq0C,6BAA8Br0C,EAAE,yBAChCu0C,gCAAiCv0C,EAAE,iCAEnC04E,qBAAsB14E,EAAE,iBACxBk2C,mBAAoBl2C,EAAE,wBACtBo2C,+BAAgCp2C,EAAE,4BAClCs2C,wBAAyBt2C,EAAE,oBAC3Bw2C,2BAA4Bx2C,EAAE,0BAhEpC,IAqEIG,EAAOF,KAAKE,IAAM,CACnBw4E,MAAO14E,KAAKI,OAAO,GAAGP,WACtB84E,aAAc34E,KAAKI,OAAO,GAAGP,kBAC7B+H,KAAM5H,KAAKI,OAAO,GAAGP,WAIxBG,KAAK8S,QAAQlC,SAAW5Q,KAAK+B,GAAG+Q,QAAQlC,WAExC5Q,KAAKqM,UAAUusE,uBAAyB,GAGxC54E,KAAKS,GAAK,CACPoB,KAAM,CACH,CACGnB,KAAM,SACNkB,KAAM,QACND,WAAY3B,KAAK+3E,SAASp2E,aAAc,EACxCE,KAAM,CACH,CACGjB,GAAIV,EAAIy4E,aACRj4E,KAAM,QACNmJ,KAAM,IAAM,GAEZ9C,OAAQ,GACR8hC,UAAU,EACV9nC,OAAQf,KAAK+3E,SAASh3E,UAI/B,CACGH,GAAIV,EAAI0H,KACRlH,KAAM,SACNQ,IAAK,gBACLyB,MAAO5C,EAAE,QACT84E,OAAQ74E,KAAK+3E,SAASe,eAAgB,EACtCv3E,MAAO,KACAvB,KAAK+4E,SAAS/4E,KAAK+4E,QAAQp0E,OAC/B3E,KAAKwP,KAAK,OAAQxP,KAAKiM,WAAW,IAKjD,CAGA3I,KAAKnB,GACF,GAAInC,KAAKg4E,cAAe,OAExBl4E,MAAMwD,KAAKnB,GAEX,MAAMqK,EAAK7I,GAAG3D,KAAKE,IAAIy4E,cAEvB,GAAInsE,EAAI,CACL,IAAKxM,KAAKi4E,UAAW,CAClBj4E,KAAKg5E,iBAAkB,EACvBxsE,EAAGysE,WAAWC,SAAS,SAAU5lE,IAC9B,GAAItT,KAAKg5E,gBAAiB,OAAO,EAEjCh5E,KAAKwP,KAAK,UAAWxP,KAAKiM,WAAW,IAExCjM,KAAKg5E,iBAAkB,EAMvB,IAAIG,EAAQn5E,KAAK4sC,UACjB5sC,KAAK4sC,UAAYusC,EACjBn5E,KAAKi4E,WAAY,CACpB,CACAj4E,KAAKg4E,eAAgB,CACxB,CACH,CAYAzyE,QAAQkpB,EAASme,EAAY5sC,KAAK4sC,WAC/B,IAAIwsC,EAAS,KAAM,EAEfC,EAAS11E,GAAG3D,KAAKE,IAAIy4E,cACzB,OAAIU,GACDD,EAASC,EAAOC,oBACTF,EAAO3qD,IAEP3uB,MAAMyF,QAAQkpB,EAASme,EAEpC,CAeAwoC,oBAAoBjmD,GACjB,IAAKA,EAAM,OAAO,EAElB,IAAIwnB,GAAa,EAGjB,GAAIxnB,EAAKlF,MACLkF,EAAK9N,OAAS,IAAIpd,SAAS2L,IACzB+mC,EAAaA,GAAc32C,KAAKo1E,oBAAoBxlE,EAAE,SAYzD,GARKuf,EAAK9qB,KAAmB,IAAZ8qB,EAAK9qB,MACnBsyC,GAAa,GAGXxnB,EAAKiB,MAAqB,IAAbjB,EAAKiB,OACpBumB,GAAa,GAGZA,EACD,OAAQxnB,EAAKiB,MACV,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eAGF,MAEH,QAEQjB,EAAKxsB,OAAuB,IAAdwsB,EAAKxsB,QACrBg0C,GAAa,GAO5B,OAAOA,CACV,CAEA9xC,SAASuB,GACNtG,MAAM+E,SAASuB,GACfpG,KAAK4sC,UAAYxmC,EAEjB,MAAMoG,EAAK7I,GAAG3D,KAAKE,IAAIy4E,cACvB,GAAInsE,EAAI,CACL,IAAKpG,EAMF,YAJAoG,EAAG/H,OAAO,QAAS,CAChBwlB,KAAM,MACN5I,MAAO,KAKb,IAAIk4D,EAAav5E,KAAK+B,GAAG2D,UAAUU,GAmBnCyxE,EAAY0B,EAAYv5E,KAAK8sC,SAE7B9sC,KAAKg5E,iBAAkB,EACvBxsE,EAAG/H,OAAO,QAAS80E,GACnBv5E,KAAKg5E,iBAAkB,CAC1B,CACH,CAEA/sE,WACG,GAAItI,GAAG3D,KAAKE,IAAIy4E,cAAe,CAC5B,IAAIvyE,EAAWpG,KAAK+B,GAAG2D,UACpB/B,GAAG3D,KAAKE,IAAIy4E,cAAcM,WAAWt2E,OAAS,CAAC,GAOlDm1E,EAAY1xE,EAAUpG,KAAK8sC,SAC3B9sC,KAAK4sC,UAAYxmC,CACpB,CAEA,OAAOtG,MAAMmM,UAChB,CAEA+oB,WAAWjuB,EAAS,GAAI9B,EAAS,MAC9BnF,MAAMk1B,WAAWjuB,EAAQ9B,GACzBjF,KAAKovC,QACR,CAEAoqC,cACG,MAAO,aACV,CAEApqC,SACGpvC,KAAKy5E,qBAEL,IAAIjtE,EAAK7I,GAAG3D,KAAKE,IAAIy4E,cACrB,GAAInsE,EAAI,CAEL,KAAOA,EAAGvK,OAAO8E,OAAOZ,OAAS,GAC9BqG,EAAGvK,OAAO8E,OAAO4pC,OAGnB3wC,KAAKuvC,cAAgB,IAAItrC,SAAS+C,IAChCwF,EAAGvK,OAAO8E,OAAOzC,KAAK0C,EAAE,IAEvBwF,EAAGvK,OAAO8E,OAAOZ,OAClBqG,EAAG9E,UAEH1H,KAAK6E,SAAS,IACd2H,EAAGpH,UAET,CACH,CAIAq0E,qBACG,MAAMC,EAAM/1E,GAAG3D,KAAKE,IAAIy4E,cACnBe,IAGLA,EAAIC,KAAKC,QAAQ,YAAa,UAAUh9B,UAAUi9B,aAAe,CAC9Dj0E,EACAhE,EACA4e,EACAivB,EACAsK,KAEA,IAAI+/B,EAAS95E,KAAK+5E,QAAQn0E,GAEtBnF,EAAK,CACNG,GAAIm5C,EAAM93C,OAAOrB,GACjBF,KAAM,SACNs5E,QAAS,SACTvqC,WAAYA,EACZ7pC,MAAOA,EACPq0E,KAAMr4E,EACN0jE,SAAU,SAAUn/C,GACjB,IAAIwxD,EAAMxxD,EAAEvgB,GACRs0E,EACD15D,IAAmB,QAAR5e,EAAiB6B,MAAM02E,KAAKC,cAAgB,MAE1D,OADIF,IAAQvC,EAAMuC,EAAOvC,IAClBA,CACV,EACAmC,OAAQA,EACRO,OAAQ,GAYX,OATa52E,MAAMhD,GAAGA,EAAIs5C,EASb,EAEnB,CAEAggC,QAAQO,GACL,IAAIxsE,EAGJ,GAAuB,eAAnBwsE,EACD,MAAO,GACHtyD,OAAOhoB,KAAKu6E,aAAa,gBACzBvyD,OAAOhoB,KAAKw6E,sBAAsB,gBAClCxyD,OAAOhoB,KAAKy6E,cAAc,gBAC1BzyD,OAAOhoB,KAAK06E,eAAe,cAAe,SAGjD,IAAI90E,GAAS5F,KAAK8sC,SAAW,IAAIhkC,QAC7B9B,GAAMA,EAAEpG,IAAM05E,IAChB,GAEF,OAAQ10E,GAAOvB,KACZ,IAAK,UACFyJ,EAAS9N,KAAK26E,eAAe/0E,GAC7B,MACH,IAAK,gBACFkI,EAAS,GACLka,OAAOhoB,KAAKu6E,aAAa30E,IACzBoiB,OAAOhoB,KAAK46E,YAAYh1E,IACxBoiB,OAAOhoB,KAAKw6E,sBAAsB50E,IAClCoiB,OAAOhoB,KAAK06E,eAAe90E,IAC3BoiB,OAAOhoB,KAAK66E,eAChB,MACH,IAAK,OACL,IAAK,WACF/sE,EAAS,CAAC,aAAc,mBACxB,MACH,IAAK,OACFA,EAAS9N,KAAK86E,YAAYl1E,GAC1B,MACH,IAAK,OACFkI,EAAS,GACLka,OAAOhoB,KAAK66E,eACZ7yD,OAAOhoB,KAAK46E,YAAYh1E,IAC5B,MAIH,IAAK,SACL,IAAK,WACL,IAAK,QACFkI,EAAS9N,KAAK66E,cAKpB,MAAME,EAAW,GAAGn1E,GAAOQ,UAAUa,YAAYrB,GAAOQ,UAAUc,cA2BlE,OAzBGtB,GAAOQ,UAAUgB,aAEJ,YAAZ2zE,GAEe,WAAZA,GAAyBn1E,GAAOQ,UAAUM,UAE9CoH,GAAUA,GAAU,IAAIka,OAAOhoB,KAAKg7E,YAAYp1E,IAC1B,iBAAdA,GAAOvB,IACfyJ,GAAUA,GAAU,IAChBka,OAAOhoB,KAAKg7E,YAAYp1E,IACxBoiB,OAAOhoB,KAAKi7E,kBAAkBr1E,IAC9BoiB,OAAOhoB,KAAK06E,eAAe90E,IAIzB00E,EAAgBjtE,QAAQ,SAAW,IACzCS,EAAS9N,KAAK06E,eAAe,KAAMJ,IAGlCt6E,KAAKqM,UAAUikC,eAChBxiC,GAAUA,GAAU,IAAIka,OAAOhoB,KAAKk7E,kBAAkBt1E,KAGzDkI,GAAUA,GAAU,IAAIka,OAAOhoB,KAAKy6E,cAAc70E,IAE3CkI,CACV,CAEA+sE,cACG,MAAO,CACJ,CACGzoC,MAAO,OACPzwC,YAAY,EACZjB,KAAM,WACN4kE,SAAU,IAGnB,CAEAqV,eAAe/0E,GACZ,MAAO,CACJ,CACGwsC,MAAO,UACP1xC,KAAM,YAGf,CAEAs6E,YAAYp1E,GACT,MAAO,CACJ,CACGwsC,MAAO,OACP1xC,KAAM,OACN0B,GAAI,CACD+4E,cAAe,YAKTn7E,KAAKo7E,WAAU,SAAUxtE,GACtB,OAAQA,EAAEnC,eACb,GAAG,WAAazL,MACX0N,MAAM2tE,MAAMC,OAAS,GAChC,IAIZ,CAEAf,aAAa30E,GACV,IAAIzD,EAAU,GAEVo5E,EACDv7E,KAAK6sC,cAAc/jC,QAAQ9B,GAAMA,EAAEpG,IAAMgF,EAAMhF,KAAIuF,OAAS,EAsB/D,MAnBa,eAATP,GAA0B5F,KAAKgvC,QAChC7sC,EAAUnC,KAAKooB,SAASC,GAAMA,EAAEqgB,gBAAgB1oC,KAAKgvC,WAG/CusC,IACNp5E,EAAUnC,KAAKooB,SACXC,IACGroB,KAAKgvC,QAAUhvC,KAAKgvC,QAAQpuC,GAAK,KAAOynB,EAAEznB,IAC3CynB,EAAEqgB,gBAAgB9iC,EAAMgB,mBAIjCzE,GAAS8B,SAASokB,IACflmB,EAAQmC,KAAK,CACV1D,GAAIynB,EAAEznB,GACN+B,MAAO0lB,EAAEjnB,OACV,IAGE,CACJ,CACGgxC,MAAO,QACP1xC,KAAM,QACNyB,QAASA,GAAW,IAG7B,CAEA24E,YAAYl1E,GACT,MAAO,CACJ,CACGwsC,MAAO,OACP1xC,KAAM,QACNyB,QAASyD,GAAOQ,UAAUjE,SAASgM,KAAI,SAAUjB,GAC9C,MAAO,CACJtM,GAAIsM,EAAEtM,GACN+B,MAAOuK,EAAEmB,KAEf,KAGT,CAEAusE,YAAYh1E,GACT,MAAO,CACJ,CACGwsC,MAAO,OACP1xC,KAAM,QACNyB,QAASnC,KAAK+B,GAAG+Q,QAAQjC,WAAW1C,KAAKqtE,IAC/B,CACJ56E,GAAI46E,EAAE5qE,SACNjO,MAAO64E,EAAE5qE,cAKxB,CAEA4pE,sBAAsB50E,GACnB,IAAI61E,EAOJ,OALGA,EADU,eAAT71E,GAA0B5F,KAAKgvC,QACjBhvC,KAAKgvC,QAAQpuC,GAEbgF,GAAOQ,UAAUO,WAG5B,CACJ,CACGyrC,MAAO,iBACP1xC,KAAM,QACNyB,QAASs5E,EACJz7E,KAAK+B,GAAGmkB,iBACJmH,GAAOA,GAAIjB,YAAYxrB,IAAM66E,IAC/BttE,KAAKkf,IACG,CACJzsB,GAAIysB,EAAGzsB,GACP+B,MAAO0qB,EAAGjsB,UAGhB,IAGd,CAEA65E,kBAAkBr1E,GACf,MAAO,CACJ,CACGwsC,MAAO,aACP1xC,KAAM,QACNg7E,YAAa17E,KAAKwS,OAAOrS,UAAUk4E,6BACnCl2E,QAASnC,KAAKooB,SACVC,GAAsB,MAAhBroB,KAAKgvC,SAAmB3mB,EAAEznB,IAAMZ,KAAKgvC,QAAQpuC,KACrDuN,KAAKka,IACG,CACJznB,GAAIynB,EAAEznB,GACN+B,MAAO0lB,EAAEjnB,WAKxB,CAEA85E,kBAAkBt1E,GACf,MAAO,CACJ,CACGwsC,MAAO,aACP1xC,KAAM,SACNyB,QAASnC,KAAKqM,UAAUusE,wBAA0B,IAG3D,CAEA8B,eAAe90E,EAAO+1E,EAAkB,MACrC,MAAMzsC,GAAiBlvC,KAAKmvC,gBAAkB,IAC1CrmC,QAAQ8yE,IACN,IAAKA,EAAQ,OAAO,EAEpB,IAAI9tE,GAAS,EACb,GACQ,gBADAlI,EAEFkI,EACG9N,KAAKgvC,QAAQpuC,KAAOg7E,EAAO32E,QAAQrE,KAAOg7E,EAAOh2E,WAKpD,OAAQA,EAAMvB,KACX,IAAK,UACFyJ,EAAS,CAAC,WAAW2iC,SAASmrC,EAAOh2E,OAAOvB,KAE5C,MAEH,IAAK,gBAKF,GAJAyJ,EACGlI,EAAMQ,SAASO,cACdi1E,EAAOh2E,OAAOX,OAAOrE,IAAMg7E,EAAO32E,OAAOrE,KAExCgF,EAAMQ,SAASgB,WAAY,CAC7B0G,EAASA,IAAW8tE,EAAOh2E,MAE3B,KACH,CAEAkI,EACGA,IACClI,EAAMQ,SAASiB,YACbzB,EAAMQ,SAASkB,eAAiBs0E,EAAOh2E,OAAOhF,GAEpD,MAEH,IAAK,OACL,IAAK,WACFkN,EAAS,CAAC,OAAQ,YAAY2iC,SAC3BmrC,EAAOh2E,OAAOvB,KAGjB,MAEH,IAAK,YACL,IAAK,UACL,IAAK,SACFyJ,EAAS,CAAC,YAAa,UAAW,UAAU2iC,SACzCmrC,EAAOh2E,OAAOvB,KAGjB,MAEH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACL,IAAK,OACFyJ,EAAS,CACN,SACA,WACA,QACA,YACA,QACD2iC,SAASmrC,EAAOh2E,OAAOvB,KAEzB,MAEH,IAAK,OACFyJ,EAAS,CAAC,QAAQ2iC,SAASmrC,EAAOh2E,OAAOvB,KAEzC,MAEH,QACG,GAAIu3E,EAAOv3E,IAAK,CAEb,MAAMqsC,EAAiBkrC,EAAOv3E,IAAIqkB,MAAM,KAAKioB,MAE7C7iC,EACG4iC,IAAmB9qC,EAAMhF,IACzB8vC,IAAmB9qC,EAAMvB,KACzBqsC,IAAmBirC,GACnBC,EAAOv3E,MAAQs3E,CACrB,EAQZ,OAAO7tE,CAAM,IAEfK,KAAK9D,IACI,CACJzJ,GAAIyJ,EAAEhG,IACN1B,MAAO5C,EAAE,eAAgB,CAACsK,EAAEjJ,YAIrC,OAAK8tC,EAEE,CACJ,CACGkD,MAAO,UACP1xC,KAAM,SACNyB,QAAS,CACN,CACGvB,GAAI,QACJ+B,MAAO3C,KAAKwS,OAAOrS,UAAUs4E,yBAE7BvpC,KAXe,EAe9B,CAEAurC,cAAc70E,GACX,OAAKA,IAEiB5F,KAAKw2C,gBAAkB,CAAC,GAChB5wC,EAAMhF,IAAMgF,IAAU,CAAC,GACtCD,QAAU,GAJN,EAKtB,CAEAk2E,SAAS15E,GACN,MAAMyqC,EAAYv4B,OAAO6pC,OAAO,CAAC,EAAGl+C,KAAK4sC,WAEzC,GAAK5sC,KAAK+4E,QA6BP/4E,KAAK+4E,QAAQn0E,QAAQzC,OA7BL,CAChB,IAAI1B,EAAK,CACNG,GAAIZ,KAAKE,IAAIw4E,MACbh4E,KAAM,QACNK,OAAQ,IACRC,MAAO,IACPS,KAAMzB,KAAKS,IAGTkD,GAAG3D,KAAKE,IAAIw4E,OAiBd/0E,GAAG3D,KAAKE,IAAIw4E,OAAO9zE,QAAQzC,IAhB3BnC,KAAK+4E,QAAUt1E,MAAMhD,GAAGA,GACxBT,KAAKsD,KAAKtD,KAAKqM,WACXrM,KAAK8sC,SACN9sC,KAAKg1B,WAAWh1B,KAAK8sC,QAAS9sC,KAAKgvC,SAOlCpC,GACD5sC,KAAK6E,SAAS+nC,GAGjB5sC,KAAK+4E,QAAQn0E,QAAQzC,GAI3B,CAGH,CAWA25E,gBAAgBpxE,EAASvI,EAAU,CAAC,GACjCnC,KAAKw2C,eAAiBx2C,KAAKw2C,gBAAkB,CAAC,EAC9Cx2C,KAAKw2C,eAAe9rC,GAAWvI,CAClC,oBC95BH,MAAM45E,EAAgB,EAAQ,OAE9B,IAAIh8E,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,cAAwBq8E,EACtCp8E,YAAYC,EAAKC,EAAQkC,GACtBjC,MAAMF,EAAKC,EAAQkC,GAEnByG,QAAQ+G,MAAM,2CAGd,IAAIrP,EAAOF,KAAKE,IAAM,CACnBC,UAAWH,KAAKI,OAAO,GAAGP,eAC1Bm8E,WAAYh8E,KAAKI,OAAO,GAAGP,oBAC3Bo8E,aAAcj8E,KAAKI,OAAO,GAAGP,4BAE7BoqB,KAAMjqB,KAAKI,OAAO,GAAGP,oBACrB+F,MAAO5F,KAAKI,OAAO,GAAGP,qBACtBuwB,KAAMpwB,KAAKI,OAAO,GAAGP,oBACrBq8E,WAAYl8E,KAAKI,OAAO,GAAGP,0BAE3Bs8E,WAAYn8E,KAAKI,OAAO,GAAGP,0BAC3Bu8E,gBAAiBp8E,KAAKI,OAAO,GAAGP,+BAChCw8E,qBAAsBr8E,KAAKI,OACxB,GAAGP,oCAENy8E,qBAAsBt8E,KAAKI,OACxB,GAAGP,oCAEN08E,WAAYv8E,KAAKI,OAAO,GAAGP,+BAE3B28E,eAAgBx8E,KAAKI,OAAO,GAAGP,8BAE/B48E,YAAaz8E,KAAKI,OAAO,GAAGP,2BAE5B68E,WAAY18E,KAAKI,OAAO,GAAGP,2BAM9B,IAAI88E,EAGJ38E,KAAK48E,kBAAoB,CACtB,CACGj6E,MAAO5C,EAAE,kBACTa,GAAI,kBAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,uBAIVZ,KAAK68E,kBAAoB,GACzB78E,KAAK44E,uBAAyB,GAE9B,IAAIp3E,EAASxB,KAAKwB,QAAU,CAAC,EAM7BA,EAAOwJ,aAAe,KACXhL,KAAK8sC,SAAW,IAAI3+B,KAAKnH,IAC9B,IAAI5F,EAAQ4F,EAAE5F,MAOd,OAJIpB,KAAKqM,UAAUmjC,gBAAkBxoC,EAAE/B,SACpC7D,EAAQ4F,EAAE/B,OAAO7D,MAAQ,IAAM4F,EAAE5F,OAG7B,CACJR,GAAIoG,EAAEpG,GACN+B,MAAOvB,EACP8uB,MAAOlpB,EAAEkpB,YAAS7E,EACpB,IAIP7pB,EAAOs7E,YAAc,KAClB,IAAIzyB,EAAWrqD,KACX+2C,EAAkB/2C,KAAK+2C,iBAAmB,CAAC,EAE/C,MAAO,CACJn2C,GAAI,IAAM6C,MAAMyH,MAChB6xE,SAAS,EACT57E,KAAM,CACH,CAEGT,KAAM,QACNE,GAAIV,EAAI+pB,KACRjpB,MAAO,GACP2B,MAAOo0C,EAAgB9sB,MAAQ,MAC/B9nB,QAAS,CACN,CACGQ,MAAO5C,EAAE,OACTa,GAAI,OAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,OAGVwB,GAAI,CACDC,SAAU,SAAU26E,EAAQC,GACzBz7E,EAAO07E,uBAAuBF,EACjC,IAGN,CAEGt8E,KAAM,QACNE,GAAIV,EAAI0F,MACRu3E,QAAS,CACN/6E,GAAI,CACDg7E,aAAc,WACXp9E,KAAKyE,OAAO,QAAS,KACrBzE,KAAKa,QACR,GAEHgJ,KAAMrI,EAAOwJ,gBAEhB5I,GAAI,CACDC,SAAU,SAAU8I,GACjB,IAAIkyE,EAAYr9E,KAAKyL,gBACrBjK,EAAO87E,YAAYnyE,EAAUkyE,EAChC,IAIN,CACGz8E,GAAIV,EAAIkwB,KACRpvB,MAAO,IACPyB,MAAO,CACJ,CAAC,EAED,CACG2vC,MAAO,QACP1xC,KAAM,QACNiC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,oBACTa,GAAI,oBAEP,CACG+B,MAAO5C,EAAE,sBACTa,GAAI,sBAEP,CACG+B,MAAO5C,EAAE,0BACTa,GAAI,2BAERonB,OAAOqiC,EAASwyB,mBAClBz6E,GAAI,CACDC,SAAU,SAAUuqC,EAAW2wC,GAC5B,IACIF,EADgBr9E,KAAKyL,gBACKA,gBAC9BjK,EAAOg8E,aAAa5wC,EAAWywC,GAC/B77E,EAAOa,UACV,IAKN,CACG+vC,MAAO,OACP1xC,KAAM,QACNiC,MAAO,OACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,aACTa,GAAI,QAEP,CACG+B,MAAO5C,EAAE,YACTa,GAAI,WAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,iBAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,oBAEP,CACG+B,MAAO5C,EAAE,0BACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,yBACTa,GAAI,mBAEP,CACG+B,MAAO5C,EAAE,gCACTa,GAAI,yBAEP,CACG+B,MAAO5C,EAAE,+BACTa,GAAI,4BAEP,CACG+B,MAAO5C,EAAE,iBACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,iBACTa,GAAI,cAGNonB,OAAOqiC,EAASuyB,mBAChB50D,OAAOqiC,EAASwyB,mBACpBz6E,GAAI,CACDC,SAAU,SAAUuqC,GACjB,IACIywC,EADgBr9E,KAAKyL,gBACKA,gBAC9BjK,EAAOg8E,aAAa5wC,EAAWywC,GAC/B77E,EAAOa,UACV,IAIN,CACG+vC,MAAO,SACP1xC,KAAM,QACNiC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,KACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,QAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,WAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,iBAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,qBAGNonB,OAAOqiC,EAASuyB,mBAChB50D,OAAOqiC,EAASwyB,mBACpBz6E,GAAI,CACDC,SAAU,SAAUuqC,GACjB,IACIywC,EADgBr9E,KAAKyL,gBACKA,gBAC9BjK,EAAOg8E,aAAa5wC,EAAWywC,GAC/B77E,EAAOa,UACV,IAIN,CACG+vC,MAAO,OACP1xC,KAAM,QACNiC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,oBACTa,GAAI,qBAGNonB,OAAOqiC,EAASuyB,mBAChB50D,OAAOqiC,EAASwyB,mBACpBz6E,GAAI,CACDC,SAAU,SAAUuqC,EAAW2wC,GAC5B,IACIF,EADgBr9E,KAAKyL,gBACKA,gBAC9BjK,EAAOg8E,aAAa5wC,EAAWywC,GAC/B77E,EAAOa,UACV,IAIN,CACG+vC,MAAO,UACP1xC,KAAM,QACNiC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,cAGNonB,OAAOqiC,EAASuyB,mBAChB50D,OAAOqiC,EAASwyB,mBACpBz6E,GAAI,CACDC,SAAU,SAAUuqC,GACjB,IACIywC,EADgBr9E,KAAKyL,gBACKA,gBAC9BjK,EAAOg8E,aAAa5wC,EAAWywC,GAC/B77E,EAAOa,UACV,IAIN,CACG+vC,MAAO,OACP1xC,KAAM,QACNiC,MAAO,kBACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,mBACTa,GAAI,mBAEP,CACG+B,MAAO5C,EAAE,uBACTa,GAAI,uBAEP,CACG+B,MAAO5C,EAAE,yBACTa,GAAI,wBAEP,CACG+B,MAAO5C,EAAE,iCACTa,GAAI,4BAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,cAGNonB,OAAOqiC,EAASuyB,mBAChB50D,OAAOqiC,EAASwyB,mBACpBz6E,GAAI,CACDC,SAAU,SAAUuqC,GACjB,IACIywC,EADgBr9E,KAAKyL,gBACKA,gBAC9BjK,EAAOg8E,aAAa5wC,EAAWywC,GAC/B77E,EAAOa,UACV,IAIN,CACG+vC,MAAO,SACP1xC,KAAM,QACNiC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,cAGNonB,OAAOqiC,EAASuyB,mBAChB50D,OAAOqiC,EAASwyB,mBACpBz6E,GAAI,CACDC,SAAU,SAAUuqC,GACjB,IACIywC,EADgBr9E,KAAKyL,gBACKA,gBAC9BjK,EAAOg8E,aAAa5wC,EAAWywC,GAC/B77E,EAAOa,UACV,IAIN,CACG+vC,MAAO,QACP1xC,KAAM,QACNiC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,cAGNonB,OAAOqiC,EAASuyB,mBAChB50D,OAAOqiC,EAASwyB,mBACpBz6E,GAAI,CACDC,SAAU,SAAUuqC,GACjB,IACIywC,EADgBr9E,KAAKyL,gBACKA,gBAC9BjK,EAAOg8E,aAAa5wC,EAAWywC,GAC/B77E,EAAOa,UACV,MAMZ,CACGzB,GAAIV,EAAIg8E,WACRa,SAAS,EACTt6E,MAAO,CACJ,CACG2vC,MAAO,SAIV,CACGxxC,GAAIV,EAAIi8E,WAER/pC,MAAO,QACP1xC,KAAM,QACNyB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CACGzB,GAAIV,EAAIk8E,gBACRhqC,MAAO,aACPvwC,KAAM,CACH,CACGjB,GAAIV,EAAIm8E,qBACR37E,KAAM,QACNyB,QAAS,GACTu5E,YAAa37E,EAAE,kBACfqC,GAAI,CACDC,SAAU,SAAUM,GACjB,IACI06E,EADgBr9E,KAAKyL,gBAErBA,gBACAA,gBACJjK,EAAOi8E,wBACJ96E,EACA06E,GAGH77E,EAAOa,UACV,IAGN,CACGzB,GAAIV,EAAIo8E,qBACR57E,KAAM,QACNyB,QAAS,GACTu5E,YAAa37E,EAAE,kBACfqC,GAAI,CACDC,SAAUb,EAAOa,aAO7B,CACGzB,GAAIV,EAAIq8E,WACRnqC,MAAO,aACP1xC,KAAM,QACNyB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CACGzB,GAAIV,EAAIs8E,eACRpqC,MAAO,iBACP1xC,KAAM,aACNyB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CAEG+vC,MAAO,OACPxxC,GAAIV,EAAIw8E,WACRh8E,KAAM,aACN0B,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACG+vC,MAAO,SACP1xC,KAAM,OACNg9E,SAAUj6E,MAAM4d,MAAMs8D,SACtBv7E,GAAI,CACDw7E,gBAAiB,WACV59E,KAAK09E,YAAYl8E,EAAOa,UAC/B,IAIN,CACG+vC,MAAO,OACPxxC,GAAIV,EAAIu8E,YACR/7E,KAAM,QACNyB,QAAS,GACTC,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACG+vC,MAAO,UACP1xC,KAAM,WACN0B,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACG+vC,MAAO,OACP1xC,KAAM,QACNyB,QAASnC,KAAK+B,GAAG+Q,QAAQjC,WAAW1C,KAAKqtE,IAC/B,CACJ56E,GAAI46E,EAAE5qE,SACNjO,MAAO64E,EAAE5qE,aAGfxO,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACG+vC,MAAO,SACP1xC,KAAM,OACN0B,GAAI,CACDw7E,gBAAiB,WACdp8E,EAAOa,UACV,IAIN,CACG+vC,MAAO,QACP1xC,KAAM,OACN0B,GAAI,CACDw7E,gBAAiB,WACdp8E,EAAOa,UACV,MAKZ,CACG3B,KAAM,SACNQ,IAAK,gBACLqK,KAAM,aACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,IAEIs8E,EAFY79E,KAAK89E,cAEK/xE,MAAM/L,KAAKyL,iBAErCjK,EAAOy6E,aAAa4B,EAAY,EACnC,GAEH,CACGn9E,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,IAAI87E,EAAYr9E,KAAKyL,gBAErBjK,EAAOu8E,gBAAgBV,EAC1B,IAGR,EAGJ77E,EAAOw8E,eAAiB,KACd,CACJt9E,KAAM,SACNE,GAAIV,EAAI+7E,aACR/6E,IAAK,gBACLU,KAAM,OACNR,MAAOrB,EAAE,gBACTwB,MAAO,KACJC,EAAOy6E,cAAc,IAK9Bz6E,EAAOy6E,aAAe,CAAClwE,EAAOrB,KAC3B,IAAI+xD,EACAh8D,EAAKe,EAAOs7E,cAEZmB,EAAYt6E,GAAGzD,EAAI87E,YAUvB,OATIiC,IACDxhB,EAASwhB,EAAUhzE,QAAQxK,EAAIsL,GAE/BvK,EAAO08E,qBAGHxzE,GAASlJ,EAAO87E,YAAY5yE,EAAS/G,GAAG84D,IAAS,IAGjDA,CAAM,EAGhBj7D,EAAOu8E,gBAAkB,SAAUV,GAChB15E,GAAGzD,EAAI87E,YAEbxwE,WAAW6xE,GAErB77E,EAAO08E,qBAEP18E,EAAOa,UACV,EAEAb,EAAO08E,mBAAqB,WACpBv6E,GAAGzD,EAAI87E,cAGRr4E,GAAGzD,EAAI87E,YAAYlxE,gBAAgB3E,OAAS,GAC7CxC,GAAGzD,EAAI87E,YAAYr3E,OACnBhB,GAAGzD,EAAI+7E,cAAcr3E,SAIrBjB,GAAGzD,EAAI87E,YAAYp3E,OACnBjB,GAAGzD,EAAI+7E,cAAct3E,QAE3B,EAEAnD,EAAO07E,uBAAyB,CAAChnE,EAAKioE,KAEnCn+E,KAAK+2C,gBAAgB9sB,KAAO/T,EAGXvS,GAAGzD,EAAI87E,YAAYlxE,gBACzB7G,SAASqP,IACbA,EAAE3P,IAAM2P,EAAE3P,GAAGzD,EAAI+pB,OAAO3W,EAAE3P,GAAGzD,EAAI+pB,MAAMplB,SAASqR,EAAI,IAGtDioE,GAAc38E,EAAOa,UAAU,EAGvCb,EAAO87E,YAAc,CAACnyE,EAAUkyE,EAAWc,KACxC,IAAKn+E,KAAK8sC,QAAS,OAEnB,IAAIlnC,EAAQ5F,KAAK8sC,QAAQhkC,QAAQ9B,GAAMA,EAAEpG,IAAMuK,IAAU,GACzD,IAAKvF,EAAO,OAGZ+2E,EAAY/2E,EAAMvB,IACF,eAAZuB,EAAMhF,GAAqB+7E,EAAY,QAErB,YAAbA,GAAwC,YAAbA,EACjCA,EAAY,SACO,WAAb/2E,EAAMvB,MAAkBs4E,EAAY,UAC7C,IAAIpB,EACDv7E,KAAK6sC,aAAa/jC,QAAQ9B,GAChBA,EAAEpG,IAAMgF,EAAMhF,KACrBuF,OAAS,EACXo1E,IAEDoB,EAAY,SAEfU,EAAU15E,GAAGzD,EAAIkwB,MAAMguD,UAAUzB,GACjCU,EAAU15E,GAAGzD,EAAIg8E,YAAYkC,UAAUzB,GAEvC,IAAIx6E,EAAU,GACVk8E,EAAU,GA6Bd,GA1BgB,eAAZz4E,EAAMhF,IAAuBZ,KAAKgvC,QACnCqvC,EAAUr+E,KAAKooB,SAASC,GAAMA,EAAEqgB,gBAAgB1oC,KAAKgvC,WAG/CusC,IACN8C,EAAUr+E,KAAKooB,SAASC,IAEjBroB,KAAKgvC,QAAUhvC,KAAKgvC,QAAQpuC,GAAK,KAAOynB,EAAEznB,IAC3CynB,EAAEqgB,gBAAgB9iC,EAAMgB,mBAKjCy3E,EAAQp6E,SAASokB,IACdlmB,EAAQmC,KAAK,CACV1D,GAAIynB,EAAEznB,GACN+B,MAAO0lB,EAAEjnB,OACV,IAELi8E,EACI15E,GAAGzD,EAAIg8E,YACPv4E,GAAGzD,EAAIi8E,YACP13E,OAAO,UAAWtC,GACtBk7E,EAAU15E,GAAGzD,EAAIg8E,YAAYv4E,GAAGzD,EAAIi8E,YAAYz3E,UAG/B,QAAbkB,EAAMvB,IAAe,CACtB,IAAIo4E,EAAc72E,EAAMQ,SAASjE,QAAQgM,KAAI,SAAUjB,GACpD,MAAO,CACJtM,GAAIsM,EAAEtM,GACN+B,MAAOuK,EAAEmB,KAEf,IAEAgvE,EACI15E,GAAGzD,EAAIg8E,YACPv4E,GAAGzD,EAAIu8E,aACPh4E,OAAO,UAAWg4E,GACtBY,EAAU15E,GAAGzD,EAAIg8E,YAAYv4E,GAAGzD,EAAIu8E,aAAa/3E,SACpD,KAEsB,QAAbkB,EAAMvB,MACZg5E,EACI15E,GAAGzD,EAAIg8E,YACPv4E,GAAGzD,EAAIw8E,YACPj4E,OAAO,SAAUmB,EAAM43C,aAC3B6/B,EAAU15E,GAAGzD,EAAIg8E,YAAYv4E,GAAGzD,EAAIw8E,YAAYh4E,WAGnD,IACG45E,EAAajB,EAAU15E,GAAGzD,EAAIkwB,MAAMmuD,cACpCC,EAAgBnB,EACZ15E,GAAGzD,EAAIkwB,MACPgrD,UAAU,CAAEx6E,GAAI09E,IACvB,GAAIE,GAAiBA,EAAcC,QAAS,CACzC,IAAIC,GAAcF,EAAcC,UAAUx8E,OAAO4H,MAAQ,IAAI,GACzD60E,GACDF,EAAc35E,SAAS65E,EAAW99E,GAWxC,CAEKu9E,GAAc38E,EAAOa,UAAU,EAGvCb,EAAOg8E,aAAe,CAACptD,EAAMitD,EAAWj1E,GAAS,KAC9C,OAAQgoB,GACL,IAAK,WACL,IAAK,eACL,IAAK,SACL,IAAK,YAEe,SAAbusD,GACDU,EAAU15E,GAAGzD,EAAIg8E,YAAYkC,UAAU,UAI1C,MAEH,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eAEFf,EAAU15E,GAAGzD,EAAIg8E,YAAYkC,UAAU,SACvC58E,EAAOa,WACP,MAEH,IAAK,YACL,IAAK,YAEFg7E,EAAU15E,GAAGzD,EAAIg8E,YAAYkC,UAAU,UACvC,MAEH,IAAK,iBACL,IAAK,qBAEF,IAAIj8E,EAAU,GAGdnC,KAAKooB,SACDC,GAAsB,MAAhBroB,KAAKgvC,SAAmB3mB,EAAEznB,IAAMZ,KAAKgvC,QAAQpuC,KACrDqD,SAASokB,IACRlmB,EAAQmC,KAAK,CACV1D,GAAIynB,EAAEznB,GACN+B,MAAO0lB,EAAEjnB,OACV,IAGLi8E,EACI15E,GAAGzD,EAAIg8E,YACPv4E,GAAGzD,EAAIm8E,sBACP53E,OAAO,UAAWtC,GACtBk7E,EACI15E,GAAGzD,EAAIg8E,YACPv4E,GAAGzD,EAAIm8E,sBACP33E,UAGJ24E,EAAU15E,GAAGzD,EAAIg8E,YAAYkC,UAAU,cACvC,MAEH,IAAK,gBACL,IAAK,oBACFf,EACI15E,GAAGzD,EAAIg8E,YACPv4E,GAAGzD,EAAIq8E,YACP93E,OAAO,UAAWzE,KAAK44E,wBAC3ByE,EAAU15E,GAAGzD,EAAIg8E,YAAYv4E,GAAGzD,EAAIq8E,YAAY73E,UAGhD24E,EAAU15E,GAAGzD,EAAIg8E,YAAYkC,UAAU,cACvC,MAEH,IAAK,qBACL,IAAK,yBAA0B,CAC5B,IAKI3C,EALAkD,EAAY,GAMbxzE,EAAWkyE,EAAU15E,GAAGzD,EAAI0F,OAAOqG,WACtC,GAAgB,eAAZd,GAA6BnL,KAAKgvC,QACnCysC,EAAez7E,KAAKgvC,QAAQpuC,OACxB,CACJ,IAAIgF,EAAQ5F,KAAK8sC,QAAQhkC,QAAQ9B,GAAMA,EAAEpG,IAAMuK,IAAU,GACrDvF,IAAO61E,EAAe71E,EAAMQ,SAASO,WAC5C,CAEI3G,KAAK4+E,cAAgBnD,GACtBz7E,KAAK4+E,aACD14D,iBACGmH,GACEA,EAAGjB,YAAciB,EAAGjB,WAAWxrB,IAAM66E,IAE1Cx3E,SAASopB,IACPsxD,EAAUr6E,KAAK,CACZ1D,GAAIysB,EAAGzsB,GACP+B,MAAO0qB,EAAGjsB,OACX,IAIXi8E,EACI15E,GAAGzD,EAAIg8E,YACPv4E,GAAGzD,EAAIs8E,gBACP/3E,OAAO,UAAWk6E,GACtBtB,EAAU15E,GAAGzD,EAAIg8E,YAAYv4E,GAAGzD,EAAIs8E,gBAAgB93E,UAGpD24E,EAAU15E,GAAGzD,EAAIg8E,YAAYkC,UAAU,kBACvC,KACH,CAEA,QAEGf,EAAU15E,GAAGzD,EAAIg8E,YAAYkC,UAAUzB,GAEnCv0E,GAAQ5G,EAAOa,WAGzB,EAGHb,EAAOi8E,wBAA0B,CAAC96E,EAAO06E,KAEtC,IAAIl7E,EAAU,GAEV08E,EAAQ7+E,KAAKooB,SAASC,GAChBA,EAAEznB,IAAM+B,IACf,GACCk8E,IACDA,EAAM93E,QAAQC,IACHA,EAAEq8B,eACVp/B,SAASokB,IACTlmB,EAAQmC,KAAK,CACV1D,GAAIynB,EAAEznB,GACN+B,MAAO0lB,EAAEpjB,OAAO7D,MAAQ,IAAMinB,EAAEjnB,OACjC,IAGLi8E,EACI15E,GAAGzD,EAAIg8E,YACPv4E,GAAGzD,EAAIo8E,sBACP73E,OAAO,UAAWtC,GACtBk7E,EAAU15E,GAAGzD,EAAIg8E,YAAYv4E,GAAGzD,EAAIo8E,sBAAsB53E,UAC7D,EAKHlD,EAAOa,SAAW,KACVrC,KAAKg5E,kBAEPx3E,EAAOyK,WAEPzD,QAAQC,KAAK,oDACbjH,EAAOgC,UAAUnB,WACjBrC,KAAKwP,KAAK,YAGN,GAGVhO,EAAOgM,cAAgB,KACpBxN,KAAKg5E,iBAAkB,CAAI,EAG9Bx3E,EAAOiM,gBAAkB,KACtBzN,KAAKg5E,iBAAkB,CAAK,EAkB/Bx3E,EAAOyK,SAAW,KACf,IAAI8qC,EAAkB,CACnB9sB,KAAM,MACN5I,MAAO,IAGV,IAAI48D,EAAYt6E,GAAGzD,EAAI87E,YAyEvB,OAxEIiC,GACDA,EAAUnzE,gBAAgB7G,SAAQ,CAACo5E,EAAWtxE,KAC9B,GAATA,IACDgrC,EAAgB9sB,KAAOozD,EAAU15E,GAAGzD,EAAI+pB,MAAMhe,YAGjD,IAAI6yE,EAAazB,EAAU15E,GAAGzD,EAAI0F,OAClC,GAAKk5E,EAAL,CAGA,IAAIp0E,EAAUo0E,EAAW7yE,WACzB,GAAKvB,EAAL,CAGA,IAAIwlB,EACA6uD,EAAc1B,EACd15E,GAAGzD,EAAI0F,OACPo5E,WACA/8E,OAAOR,KAAKoI,KAAKf,QAAQ44C,GAAQA,EAAI9gD,IAAM8J,IAAS,GACpDq0E,IAAa7uD,EAAQ6uD,EAAY7uD,YAAS7E,GAG9C,IAAI+E,EAAO,KACRkuD,EAAajB,EAAU15E,GAAGzD,EAAIkwB,MAAMmuD,cACpCC,EAAgBnB,EACZ15E,GAAGzD,EAAIkwB,MACPgrD,UAAU,CAAEx6E,GAAI09E,IACnBE,GAAiBA,EAAcvyE,WAChCmkB,EAAOouD,EAAcvyE,YAGxB,IAAItJ,EAAQ,KACTs8E,EAAc5B,EAAU15E,GAAGzD,EAAIg8E,YAAYqC,cAC3CW,EAAsB7B,EAClB15E,GAAGzD,EAAIg8E,YACPd,UAAU,CAAEx6E,GAAIq+E,IACvB,GAAIC,GAAuBA,EAAoBjzE,SAC5CtJ,EAAQu8E,EAAoBjzE,gBACxB,GACJizE,GACAA,EAAoBp0E,gBACrB,CACC,IAAIrF,EAAO,GACXy5E,EAAoBp0E,gBAAgB7G,SAASq3B,IAC1C71B,EAAKnB,KAAKX,GAAG23B,GAASrvB,WAAW,IAEpCtJ,EAAQ8C,EAAK6I,KAAK,IACrB,CAGA,GAAI3L,aAAiB8d,KAAM,CACxB,IAAI0+D,EAAYn/E,KAAK8sC,QAAQhkC,QACzB9B,GAAMA,EAAEpG,IAAM8J,IAChB,GAEC/H,EADCw8E,EACOA,EAAU7hC,YAAY36C,GAEtBA,EAAMghB,aAEpB,CAEAozB,EAAgB11B,MAAM/c,KAAK,CACxB4rB,MAAOA,QAAS7E,EAChBhnB,IAAKqG,EACL0lB,KAAMA,EACNztB,MAAOA,GAtDU,CAJG,CA2DrB,IAIR3C,KAAK+2C,gBAAkBA,EAEhB/2C,KAAK+2C,eAAe,EAI9B/2C,KAAKS,GAAK,CACPG,GAAIV,EAAIC,UACR0B,KAAM,CACH,CACGnB,KAAM,OACNE,GAAIV,EAAI87E,WACRnD,QAAQ,EACR3vE,SAAU,IAEb1H,EAAOw8E,kBAGhB,CAGA16E,KAAKnB,EAAU,CAAC,GAIb,IAAK,IAAIoB,KAHTzD,MAAMwD,KAAKnB,GAGGnC,KAAKwB,OAAOgC,UACvBxD,KAAKwB,OAAOgC,UAAUD,GAAKpB,EAAQoB,IAAMvD,KAAKwB,OAAOgC,UAAUD,GAG9DpB,EAAQqtC,iBACTxvC,KAAKqM,UAAUmjC,eAAiBrtC,EAAQqtC,gBAEvCrtC,EAAQmuC,eACTtwC,KAAK68E,kBAAoB,CACtB,CACGl6E,MAAO5C,EAAE,iBACTa,GAAI,iBAEP,CACG+B,MAAO5C,EAAE,aACTa,GAAI,sBAGVZ,KAAK44E,uBAAyBz2E,EAAQi9E,aAE5C,CAEAv6E,SAASuB,GACNA,EAAWA,GAAY,CAAC,EAExBtG,MAAM+E,SAASuB,GAEf,IAAIlG,EAAMF,KAAKE,IACXm/E,EAAQr/E,KAAKwB,OAGjB69E,EAAM7xE,gBAEN,IAAIupC,EAAkB/2C,KAAK+B,GAAG2D,UAAUU,GACxC2wC,EAAgB11B,MAAQ01B,EAAgB11B,OAAS,GAGjD,IAAI48D,EAAYt6E,GAAGzD,EAAI87E,YACnBiC,GAAWx6E,MAAMhD,GAAG,GAAIw9E,GAGQ,GAAhClnC,EAAgB11B,MAAMlb,QACvBk5E,EAAMnB,qBAGTnnC,EAAgB11B,MAAMpd,SAAS+C,IAC5B,IAAIy1D,EAAS4iB,EAAMpD,eAChBoB,EAAY15E,GAAG84D,GAElB,GAAiB,MAAb4gB,EAAJ,CAEA,IAAIz3E,EAAQ5F,KAAK8sC,QAAQhkC,QAAQw2E,GAAQA,EAAI1+E,IAAMoG,EAAE3C,MAAK,GAG1Dg5E,EAAU15E,GAAGzD,EAAI+pB,MAAMxlB,OAAO,QAASsyC,EAAgB9sB,MACvDozD,EAAU15E,GAAGzD,EAAI+pB,MAAMvlB,UAGvB24E,EAAU15E,GAAGzD,EAAI0F,OAAOnB,OAAO,QAASuC,EAAE3C,KAC1Cg5E,EAAU15E,GAAGzD,EAAI0F,OAAOlB,UACxB26E,EAAM/B,YAAYt2E,EAAE3C,IAAKg5E,GAAW,GAGpC,IAAIiB,EAAajB,EAAU15E,GAAGzD,EAAIkwB,MAAMmuD,cACrCC,EAAgBnB,EACZ15E,GAAGzD,EAAIkwB,MACPgrD,UAAU,CAAEx6E,GAAI09E,IACnBE,GAAiBA,EAAc35E,WAChC25E,EAAc/5E,OAAO,QAASuC,EAAEopB,MAChCouD,EAAc95E,WAIjB24E,EAAUkC,aACVF,EAAM7B,aAAax2E,EAAEopB,KAAMitD,GAC3BA,EAAUmC,eAIV,IAAIP,EAAc5B,EAAU15E,GAAGzD,EAAIg8E,YAAYqC,cAC5CW,EAAsB7B,EAClB15E,GAAGzD,EAAIg8E,YACPd,UAAU,CAAEx6E,GAAIq+E,IACvB,GAAIC,GAAuBA,EAAoBr6E,SAGzCe,GACa,QAAbA,EAAMvB,KACN2C,EAAErE,QACS,QAAVqE,EAAEopB,MACU,WAAVppB,EAAEopB,MACQ,iBAAVppB,EAAEopB,MACQ,oBAAVppB,EAAEopB,MAEL8uD,EAAoBz6E,OAAO,QAAS,IAAIgc,KAAKzZ,EAAErE,QAE/Cu8E,EAAoBz6E,OAAO,QAASuC,EAAErE,OAGzCu8E,EAAoBx6E,eAChB,GACJw6E,GACAA,EAAoBp0E,gBACrB,CACC,IAAIrF,GAAQuB,EAAErE,OAAS,IAAI+lB,MAAM,KAC7B3c,EAAQ,EACZmzE,EAAoBp0E,gBAAgB7G,SAASq3B,IAC1C33B,GAAG23B,GAASikD,aACZ57E,GAAG23B,GAASz2B,SAASY,EAAKsG,IACb,GAATA,GACDszE,EAAM5B,wBAAwBh4E,EAAKsG,GAAQsxE,GAE9C15E,GAAG23B,GAASkkD,eAEZzzE,GAAO,GAEb,CAEInG,GAAsB,QAAbA,EAAMvB,MAChBg5E,EAAUkC,aACVF,EAAM7B,aAAax2E,EAAEopB,KAAMitD,GAC3BA,EAAUkC,aAxEgB,CAyE7B,IAIHF,EAAM5xE,iBACT,CASAkpC,aAOG,OANK32C,KAAKy/E,sBACPz/E,KAAKy/E,oBAAsBz/E,KAAK+B,GAAGgzB,iBAChC,GAAG/0B,KAAKE,IAAIC,yBAIXH,KAAKy/E,oBAAoBrK,oBAAoBp1E,KAAKiM,WAC5D,iEC/vCH,MAAMyzE,EAAa,EAAQ,OAE3B,IAAI3/E,EAAI,KAER,MAAM4/E,UAAmB,IACtBhgF,YAAYE,EAAQkC,GACjBjC,MAAMD,EAAQ,CACXqK,KAAM,GAAGrK,mBACT+/E,OAAQ,GAAG//E,qBACX+F,MAAO,GAAG/F,sBAGbG,KAAKH,OAASA,EAEdG,KAAKgvC,QAAU,KAIfhvC,KAAK6/E,gBAAkB,KAKvB7/E,KAAK+B,GAAKA,EAELhC,IACFA,EAAI,IAAI+V,IACE9V,KAAK+B,GAAGsP,aAAajQ,SAAS0U,GAG9C,CAOAgqE,SACG,MAAMC,EAAO//E,KAEb,MAAO,CACJ6B,KAAM,CACH,CACGnB,KAAM,SACNq8E,SAAS,EACT57E,KAAM,CACH,CAEGT,KAAM,QACNM,MAAO,GACPI,MAAOrB,EAAE,QAEZ,CAEGW,KAAM,QACNE,GAAIZ,KAAKE,IAAI0F,MACbzD,QAASnC,KAAKgL,cAAa,GAC3B5I,GAAI,CACDC,SAAU8C,eAAgBgG,GACvB,MAAM60E,EAAYhgF,KAAKyL,sBAEjBs0E,EAAKzC,YAAYnyE,EAAU60E,EACpC,IAGN,CAEGt/E,KAAM,QACNM,MAAO,GACPI,MAAOrB,EAAE,OAEZ,CACGW,KAAM,YACNiC,MAAO,SACP5B,OAAQ,GACRk/E,SAAU,IACV99E,QAAS,CACN,CAAEvB,GAAI,SAAU+B,MAAO5C,EAAE,WACzB,CAAEa,GAAI,UAAW+B,MAAO5C,EAAE,aAE7B84E,OAC4B,MAAzB74E,KAAKkgF,mBACJlgF,KAAKkgF,iBAAiB/5E,OAC1B/D,GAAI,CACDC,SAAU,SAAU6T,GACjB,MAAM8pE,EAAYhgF,KAAKyL,gBAEvBs0E,EAAKI,0BACFH,EACO,WAAP9pE,EAEN,IAIN,CAAC,EAED,CACG2iE,QAAQ,GAEX,CAEGn4E,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNN,WAAW,EAEXC,MAAO,WACJ,MAAM87E,EAAYr9E,KAAKyL,gBAAgBA,gBAEvCs0E,EAAKK,WAAW/C,EACnB,MAMlB,CAOA58E,KAEG,MAAO,CACJoB,KAAM,CACH,CACGnB,KAAM,OACNE,GAAIZ,KAAKE,IAAIgK,KACb2uE,QAAQ,EACRl3E,YAAY,EACZuH,SAAU,IAEb,CACGxI,KAAM,SACNE,GAAIZ,KAAKE,IAAI0/E,OACbr0E,KAAM,aACN3J,KAAM,aACNR,MAAOrB,EAAE,qBACTwB,MAAO,KACJvB,KAAKqgF,SAAS,IAK7B,CAEA/8E,KAAKvB,GACF,MAAMu+E,EAAQ38E,GAAG3D,KAAKE,IAAIgK,MAG1B,OAFIo2E,GAAOv+E,EAAG4Y,MAAMjX,OAAO48E,EAAOv+E,EAAG4Y,MAAM/W,aAEpC6L,QAAQC,SAClB,CAUA2wE,QAAQt0E,GACL,MAAMu0E,EAAQ38E,GAAG3D,KAAKE,IAAIgK,MAG1B,GAFqBlK,KAAKgL,cAAa,GAEtB7E,OAAS,EAAG,OAE7B,MAAM1F,EAAKT,KAAK8/E,SACVrjB,EAAS6jB,EAAMr1E,QAAQxK,EAAIsL,GAIjC,OAFA/L,KAAKugF,aAEE9jB,CACV,CAaAzxD,aAAaW,GACV,IAAIxJ,GAAWnC,KAAKgvC,QAAQjoC,UAAY,IAAIoH,KAAKnH,IACvC,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,UAsBf,OAlBIuK,GACahI,GAAG3D,KAAKE,IAAIgK,MAEpBY,gBAAgB7G,SAASo5E,IAE5B,IAAKA,IAAcA,EAAU15E,GAAI,OAEjC,MAAMm7E,EAAazB,EAAU15E,GAAG3D,KAAKE,IAAI0F,OAEzC,IAAKk5E,EAAY,OAEjB,MAAMp0E,EAAUo0E,EAAW7yE,WAEtBvB,IAELvI,EAAUA,EAAQ2G,QAAQ44C,GAAQA,EAAI9gD,IAAM8J,IAAQ,IAGnDvI,CACV,CAgBA8J,WACG,MAAM6B,EAAS,GACTwyE,EAAQ38E,GAAG3D,KAAKE,IAAIgK,MAkE1B,OAhEIo2E,GACDA,EAAMx1E,gBAAgB7G,SAASu8E,IAC5B,MAAMR,EAAYQ,EAAe11E,gBAAgB,GAGjD,IAAKk1E,IAAcA,EAAUr8E,GAAI,OAEjC,MAAMm7E,EAAakB,EAAUr8E,GAAG3D,KAAKE,IAAI0F,OAEzC,IAAKk5E,EAAY,OAEjB,MAAMp0E,EAAUo0E,EAAW7yE,WAE3B,IAAKvB,EAAS,OAEd,IAAI+1E,EAAmBT,EAAUl1E,gBAAgB,GACjD21E,EAAmBzgF,KAAK0gF,kBAAkBD,GAE1C,MAAME,EAAoBX,EAAUl1E,gBAAgB,GAEpD,IAAK21E,IAAqBE,EAAmB,OAE7C,MAAMt5C,EAAYrnC,KAAKgvC,QAAQjhC,UAAUrD,GACnCwL,EAAM,CACTxL,QAASA,GAIZ,GAAI+1E,GAAoBA,EAAiBG,YACtC,GACqB,kBAAlBv5C,EAAUhjC,KACQ,SAAlBgjC,EAAUhjC,IAEV6R,EAAIvT,MAAQ0kC,EAAUp7B,SAASw0E,QAC7B,GACgB,SAAlBp5C,EAAUhjC,KACQ,aAAlBgjC,EAAUhjC,IAKV,GAAmC,IAFhCo8E,EAAiB31E,gBAAgB,IAAM21E,GAErBx0E,WAClBiK,EAAIvT,MAAQ,sBACV,CACF,MAAM+5E,EACH+D,EAAiB31E,gBAAgB,IAAM21E,EAE1CvqE,EAAIvT,MAAQ0kC,EAAUp7B,SAASywE,EAClC,MAGExmE,EAAIvT,MAAQ0kC,EAAUp7B,SAASw0E,QAG9BE,GAAqBA,EAAkBC,cAC7C1qE,EAAI2qE,gBAAiB,EACrB3qE,EAAIvT,MAAQg+E,EAAkB10E,YAIjC6B,EAAOxJ,KAAK4R,EAAI,IAIfpI,CACV,CAOA9I,WAAWC,GACRjF,KAAKgvC,QAAU/pC,EAEfjF,KAAK+7B,SAAW/7B,KAAK+B,GAAG83B,eAAe,CAAC,GACxC75B,KAAK6/E,gBAAkB,IAAIH,EACxB,CACGt5E,SAAU,CACPuvD,WAAW,EACX7zD,WAAY,IAGlB9B,KAAK+7B,UAER/7B,KAAK6/E,gBAAgB76E,WAAWC,GAEhCjF,KAAK6E,SAAS,KACjB,CASAu7E,WAAW/C,GACM15E,GAAG3D,KAAKE,IAAIgK,MAEpBsB,WAAW6xE,GACjBr9E,KAAKugF,YACR,CAYAp7E,kBAAkBgG,EAAU60E,GACzB,MAAMp6E,EAAQ5F,KAAKgvC,QAAQjhC,UAAU5C,GAErC,IAAKvF,EASF,YARA5F,KAAK+B,GAAGqG,OAAOuuB,QACZ,IAAIruB,MAAM,+BAA+B6C,MACzC,CACGmE,QAAS,kDACT6sB,QAAShxB,IAOlB,MAKG21E,EALoBl7E,EAAM47D,gBACOhD,YAC9Bx+D,KAAK+7B,SACL/7B,KAAK6/E,iBAE6B1/E,UAClCH,KAAK+B,GAAG85B,KACR77B,KAAKH,QAELgM,EAAam0E,EAAUl1E,gBAE7B,IAAIi2E,EAC+B,mBAAzBD,EAAmBrgF,GACrBqgF,EAAmBrgF,KACnBqgF,EAAmBrgF,GAyB3B,OAtBAu/E,EAAUx0E,WAAWK,EAAW,IAE5B7L,KAAKkgF,kBAAkB/5E,OACxB65E,EAAU/0E,QACP,CACGvK,KAAM,aACNyB,QAASnC,KAAKkgF,iBACdrH,QAAQ,GAEX,GAGHmH,EAAU/0E,QACP,CACG4tE,QAAQ,GAEX,SAGA74E,KAAKghF,OAGHp7E,EAAMvB,KACX,IAAK,gBACL,IAAK,OACF08E,EAAYA,EAAUl/E,KAAK,GAAGA,KAAK,GACnCk/E,EAAU5D,QAAQ17E,KAAKoI,YACbjE,EAAMq7E,cAAc9yE,KAAK9D,IACtB,CACJzJ,GAAIgF,EAAMytB,iBAAiBhpB,GAC3B1H,MAAO0H,EAAEgE,UAET,GAES,SAAdzI,EAAMvB,KACP08E,EAAU5D,QAAQ17E,KAAKoI,KAAK0pB,QAAQ,CACjC3yB,GAAI,kBACJ+B,MAAO,oBAKb,MAEH,IAAK,OACL,IAAK,WACFo+E,EAAY,CACTrgF,KAAM,SACNmB,KAAM,CACH,CACGnB,KAAM,WACNoB,WAAY,EACZo/E,WAAYnhF,EAAE,qBACdqC,GAAI,CACDC,SAAU,SAAU26E,GACjB,MAAMmE,EAASnhF,KAAKyL,gBAEpB,IAAK01E,EAAQ,OAEb,MAAMzE,EAAayE,EAAOr2E,gBAAgB,GAErC4xE,IAELM,EAASN,EAAW/3E,OAAS+3E,EAAW93E,OAC3C,IAGNm8E,IAQZf,EAAUx0E,WAAWK,EAAW,IAChCm0E,EAAU/0E,QAAQ81E,EAAW,GAE7BD,EAAmBx9E,OAGfsC,EAAM8uE,eACP9uE,EAAM8uE,cAAc,CAAC,EAAG10E,KAAK+B,GAAG85B,KAAMhwB,EAAW,GAAG6B,OAEvD1N,KAAKmgF,0BACFH,EAC6B,YAA7Bn0E,EAAW,GAAGI,YAEjBtI,GAAGq8E,GAAW9L,SACd8L,EAAUlC,cAAc5J,SAExBl0E,KAAKohF,OACR,CAcAv8E,SAASuB,GACN,MAAMk6E,EAAQ38E,GAAG3D,KAAKE,IAAIgK,MAErBo2E,IAGL78E,MAAMhD,GAAG,GAAI6/E,IAEbl6E,EAAWA,GAAY,IACVD,OAAS,IAEtBC,EAASnC,SAAQkB,MAAOiJ,IACrB,MACM4xE,EADiBr8E,GAAG3D,KAAKqgF,WACEv1E,gBAAgB,GACxBk1E,EAAU5E,UAChC,CAAE16E,KAAM,aACR,QAGcmE,SAASuJ,EAAKyyE,eAAiB,UAAY,UAE5D,MAAMQ,EAASrB,EAAUr8E,GAAG3D,KAAKE,IAAI0F,OAErCy7E,EAAO58E,OAAO,QAAS2J,EAAK1D,SAC5B22E,EAAO38E,gBAED1E,KAAKs9E,YAAYlvE,EAAK1D,QAASs1E,GAErC,MAAM34C,EAAYrnC,KAAKgvC,QAAQjhC,UAAUK,EAAK1D,SAE9C,IAAK28B,EAAW,OAGhB,GAAIj5B,EAAKyyE,eAKN,YAJ0Bb,EAAUl1E,gBAAgB,GAElCjG,WAAWuJ,EAAKzL,OAMrC,IAAI89E,EAAmBT,EAAUl1E,gBAAgB,GACjD21E,EAAmBzgF,KAAK0gF,kBAAkBD,GAC1C,MAAMhyD,EAAU,CAAC,EAEjBA,EAAQ4Y,EAAUvgC,YAAcsH,EAAKzL,OAAOA,OAASyL,EAAKzL,MAC1D0kC,EAAUxiC,SAAS47E,EAAkBhyD,GAIhB,QAAjB4Y,EAAUhjC,KAAkC,YAAjBgjC,EAAUhjC,KACL,mBAAjCoqB,EAAQ4Y,EAAUvgC,aACc,YAAhC25E,EAAiBx+E,OAAOvB,MAExB+/E,EAAiB57E,UAAS,EAC7B,IAGH7E,KAAKugF,cACR,CAMAA,aACG,MAAMD,EAAQ38E,GAAG3D,KAAKE,IAAIgK,MAE1B,GAAIo2E,EAAO,CACR,MAAMz0E,EAAay0E,EAAMx1E,gBAErBe,GAAcA,EAAW1F,OAAQm6E,EAAM17E,OACtC07E,EAAM37E,OACX27E,EAAMpM,QACT,CACH,CAEAoN,mBAAmBn/E,GAChBnC,KAAKkgF,iBAAmB/9E,CAC3B,CAEAg+E,0BAA0BH,EAAWuB,GAClC,MAAMC,EAAgBxB,EAAUl1E,gBAAgB,GAC1C22E,EAAiBzB,EAAUl1E,gBAAgB,GAE7Cy2E,GACDC,EAAc78E,OACd88E,EAAe78E,SAEf48E,EAAc58E,OACd68E,EAAe98E,OAErB,CAEAQ,aACGxB,GAAG3D,KAAKE,IAAI0/E,QAAQx6E,UAEpB,MAAMk7E,EAAQ38E,GAAG3D,KAAKE,IAAIgK,MAErBo2E,IAEAA,EAAMj7E,oBAAoBrF,KAAKsD,KAAKtD,KAAK+B,IAE9Cu+E,EAAMj7E,aAAa,CAAEzD,KAAM,SAC9B,CAEAw/E,QACGz9E,GAAG3D,KAAKE,IAAI0/E,QAAQl4E,SACpB/D,GAAG3D,KAAKE,IAAIgK,MAAMvC,cACrB,CAEA+4E,kBAAkBgB,GACf,OAAKA,GAAOz1E,UAAYy1E,GAAO52E,cAEzB42E,EACI52E,gBACAhC,QAAQ64E,GAAcA,EAAU11E,WAAU,IAAMy1E,EAGhDA,CAEb,EAGH,2BCjmBA,MAAME,EAAc,EAAQ,OAEtB7hF,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAElDrW,EAAOC,QAAU,cAAsBkiF,EACpCjiF,YAAYgG,EAAQV,EAAQy1C,GACzB56C,MAAM6F,EAAQV,EAAQy1C,GAEtB16C,KAAK+B,GAAGK,GAAG,0BAA2Buf,IAC/BA,EAAI/gB,IAAMZ,KAAKY,IAChBZ,KAAKwP,KAAK,qBAAsBxP,KACnC,GA0BN,CASAorB,oBAAoBhlB,GACjB,MAAM4R,EAAM,CACT5W,MAAOgF,EAAShF,MAChB0F,WAAYV,EAASU,WACrBV,SAAUA,GAMb,cAHOA,EAAShF,aACTgF,EAASU,WAETkR,CACV,CAEA6pE,cAAc3hF,EAAKkG,GACJpG,KAAKiF,OAAOF,YAAYnF,IAApC,MACMkiF,EAAS9hF,KAAK+B,GAAGgzB,iBACpB,GAAG/0B,KAAKY,6BAEX+C,GAAGzD,EAAI6hF,eAAe92E,QAAQ,CAC3BvK,KAAM,OACNQ,IAAK,mBACLC,KAAM,CACH,CACGU,KAAM,CACH,CACGnB,KAAM,OACNyG,KAAM,iBACNrF,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCS,MACGyD,GAAYA,EAASgnE,eAChBhnE,EAASgnE,eACT,GACRhsE,MAAOrB,EAAE,oBAEZ+hF,EAAOrhF,KAGb,CACGC,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,MAAM87E,EAAYr9E,KAAKyL,gBACvB9H,GAAGzD,EAAI6hF,eAAev2E,WAAW6xE,EACpC,MAIT15E,GAAGm+E,EAAO5hF,IAAI0H,MAAMjD,OAEpBm9E,EAAO9sD,WAAWh1B,KAAKiF,OAAO8B,UAC1BX,GAAYA,EAASib,OAAOygE,EAAOj9E,SAASuB,EAASib,MAC5D,CASA9b,UACG,MAAMgC,EAAYvH,KAAK+B,GAAGgc,WAAWxW,YAoBrC,OAXgB,GALbvH,KAAKiF,OAAO8B,QAAQC,GAEdA,EAAEpG,IAAMZ,KAAKY,IACboG,EAAEF,WAAWuR,eAAiBrY,KAAK8G,WAAWuR,gBAEjDlS,QAEHoB,EAAUkW,SACP,aACA1d,EACG,oEACA,CAACC,KAAK8G,cAKRS,CACV,CAiBApC,gBAEQnF,KAAKY,WAKJZ,KAAKiyE,oBAKLnyE,MAAMgV,gBAEN9U,KAAKiF,OAAOs+B,YAAYvjC,MACjC,CAWAmF,aACG,IAAIsuE,GAAQ,EASZ,GAPKzzE,KAAKY,KACP6yE,GAAQ,IAMNA,GAASzzE,KAAKoG,SAAS21C,UAAY/7C,KAAKoG,SAASomC,QAAS,CAC5D,MAAMxkC,EAAQhI,KAAKiF,OAAO+C,QAGpB8F,QAAe9F,EAAMqoB,QAAQ,CAChCL,MAAO,CACJ/F,KAAM,MACN5I,MAAO,CACJ,CACGhd,IAAKrE,KAAKY,GACVwvB,KAAM,eAMZu5B,EAAQ,GAGd77C,EAAOjE,KAAK5F,SAAS+sB,IACbA,EAAEhxB,KAAK8G,cAAakqB,EAAEhxB,KAAK8G,YAAc9G,KAAKoG,SAASomC,SAE5Dmd,EAAMrlD,KAAK0D,EAAMirE,OAAOjiD,EAAEpwB,GAAIowB,GAAG,UAG9BvhB,QAAQ8R,IAAIooC,EACrB,CAgBA,SAZM7pD,MAAM8H,aAKN5H,KAAKiF,OAAOg/B,SAASjkC,OAOtBA,KAAKqjC,aAAc,CACrB,MAAM2+C,EAAYvO,EAAQzzE,KAAKkI,gBAAkBlI,KAAKiiF,sBAChDD,CACT,CAEA,OAAOhiF,IACV,CAMAkI,gBACG,OAAOlI,KAAK+B,GAAGsN,QAAQgB,KAAK,CACzBC,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,CAEAqhF,gBACG,OAAOjiF,KAAK+B,GAAGsN,QAAQgH,IAAI,CACxB/F,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,CAEAqxE,cACG,OAAOjyE,KAAK+B,GAAGsN,QAAgB,OAAE,CAC9BiB,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,CAmBAozE,aAAa7xE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAAS,CACZrB,GAAIZ,KAAK8G,WACTitE,OAAQ/zE,KAAKoB,OAShB,OANIe,EAAQ0xE,mBAAqB7zE,KAAKoG,SAASC,WAC5CpE,EAAO8xE,OAAS,iCAAiC/zE,KAAKs7C,uBACnDr5C,EAAO8xE,UAIN9xE,CACV,CAiBAyyE,cAAct1D,EAAKxf,EAAK2C,EAAMJ,GAAU,CAYxC+/E,WAAW9iE,EAAKxf,EAAK2C,GAClB,OAAO,CACV,CAYA0J,SAASmC,EAAMqgB,GACZ,OAAOrgB,EAAKnC,UACf,CAWApH,SAASuJ,EAAMqgB,EAAS2W,GACrB,IAAKh3B,EAAM,OAEX,IAAI8H,EAQDA,EALY,MAAXuY,GAA+C,MAA5BA,EAAQzuB,KAAK8G,aACjB,MAAhBs+B,EAGQ3W,GAAuC,MAA5BA,EAAQzuB,KAAK8G,YAC1B2nB,EAAQzuB,KAAK8G,YAEb2nB,EAJA2W,EAOTh3B,EAAKvJ,SAASqR,EACjB,CAWAsrD,cAAc2gB,GAIX,MAAO,CAEJ11C,OAAQ,KACE,CACJpoC,IAAK89E,IAWX3jB,YAAa,CAACz5D,EAAakQ,KACxBlQ,EAAcA,GAAe/E,KAAK+B,GAAGg6B,SAQrC,MAAMp2B,EAAS3F,KAAKwhE,gBAAgB/0B,SAapC,OAZA9mC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCT,EAAOS,SAAS8R,SAAWlY,KAAKiF,OAAOrE,GACvC+E,EAAOS,SAASsE,QAAU1K,KAAKY,GAEJmE,EAAYykB,QACpC7jB,EACAZ,EACAkQ,EAKsB,EAGlC,CAKAspD,kBACG,MAAO,CACJ9xB,OAAQ,KACE,CACJlhC,KAAM,WAMZizD,YAAa,CAACz5D,EAAakQ,KACxBlQ,EAAcA,GAAe/E,KAAK+B,GAAGg6B,SAGrC,MAAMp2B,EAAS3F,KAAKu+D,kBAAkB9xB,SAWtC,OAVA9mC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCT,EAAOS,SAAS8R,SAAWlY,KAAKiF,OAAOrE,GACvC+E,EAAOS,SAASsE,QAAU1K,KAAKY,GAEJmE,EAAYykB,QACpC7jB,EACAZ,EACAkQ,EAGsB,EAGlC,CAOA3I,cACG,OAAO+H,OAAO6pC,OAAO,CAAC,EAAGl+C,KAAKoG,SACjC,CAYA8lE,gBAAgBjtD,EAAKpV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,GAAGtR,KAAK0J,cAAc1J,KAAKoB,WAAW6d,IACpDjf,KAAKssE,UAAUhoE,KAAK,CAAEgN,UAASzH,QAClC,oBCheH,MAAMu4E,EAAuB,EAAQ,OAErC3iF,EAAOC,QAAU,cAA+B0iF,EAS7C78E,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAyuE,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOqjE,SAAY72C,GAEXA,EAAQ4zD,OAGH,GAFAriF,KAAKwgB,OAAOiO,GAMlBxsB,CACV,CAWAu/D,gBACG,OAAO1hE,MAAM0hE,cAAc,gBAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,oBChEH,MAAMC,EAAqB,EAAQ,OAEnC9iF,EAAOC,QAAU,cAA6B6iF,EAC3C5iF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAyuE,aAAa7xE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAyBlC,OAvBAF,EAAOqD,OAAS,WAChBrD,EAAOf,IAAM,SACbe,EAAOqjE,SAAW,CAAClmD,EAAKqtB,EAAQ9pC,EAAOV,IAEhCmd,EAAIijE,OAAejjE,EAAIpf,KAAK8G,YAG5B3E,EAAQimD,SAEN,mCACA3b,EAAO+1C,SAASpjE,EAAKqtB,EAAQ9pC,EAAOV,GACpC,SAMCU,EACM,sDACE,gDAIXV,CACV,CAWAu/D,gBACG,OAAO1hE,MAAM0hE,cAAc,WAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,mBAIJi+E,CACV,oBC9EH,MAAMxoC,EAAuB,EAAQ,OAErCr6C,EAAOC,QAAU,cAA+Bo6C,EAC7Cn6C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAyuE,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAUlC,OARAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOqjE,SAAY72C,GACZA,EAAQ4zD,OAAe5zD,EAAQzuB,KAAK8G,YAEjC9G,KAAKwgB,OAAOiO,GAGfxsB,CACV,CAWAu/D,gBACG,OAAO1hE,MAAM0hE,cAAc,gBAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,oBC7DH,MAAMG,EAAqB,EAAQ,OAEnChjF,EAAOC,QAAU,cAA6B+iF,EAC3C9iF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAyuE,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOqjE,SAAY72C,GAEXA,EAAQ4zD,OAGH,GAFAriF,KAAKwgB,OAAOiO,GAMlBxsB,CACV,CAWAu/D,gBACG,OAAO1hE,MAAM0hE,cAAc,gBAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,CAEAtW,eACGlsE,MAAMksE,gBAELhsE,KAAKoG,SAASo0C,eAAe9xB,MAAM,MAAQ,IAAIzkB,SAASrD,IAC1CZ,KAAKiF,OAAO8I,UAAUnN,IAE/BZ,KAAKksE,gBAAgB,mBAAmBtrE,gBAAkB,CACvDu7B,QAASv7B,EACT45C,eAAgBx6C,KAAKoG,SAASo0C,gBAEpC,GAEN,oBC9EH,MAAMkoC,EAAqB,EAAQ,OAInCjjF,EAAOC,QAAU,cAA6BgjF,EAC3C/iF,YAAYgG,EAAQV,EAAQy1C,GACzB56C,MAAM6F,EAAQV,EAAQy1C,EACzB,CAWAv1C,gBAEG,IAAKnF,KAAKY,GAAI,OAAO6O,QAAQC,UAsB7B,SALM5P,MAAMgV,WAIO9U,KAAK4G,eACP,OAAO6I,QAAQC,UAEhC,MAAM84B,EAAYxoC,KAAKysB,UACvB,OAAK+b,EAGEA,EAAU1zB,UAHMrF,QAAQC,SAIlC,CAeAorC,mBAAmB17B,GAChB,IAAI27B,EAAe,GAEnB,MAAMlxC,EAAO/J,MAAMg7C,mBAAmB17B,GAChCupB,EAAe3oC,KAAK4G,eAwB1B,OAtBIiD,GAAQ8+B,IAELx7B,MAAMC,QAAQvD,GACfkxC,EAAelxC,EAAKsE,KAAI,SAAU6iB,GAO/B,OALIA,IACDA,EAAE3iB,KAAO2iB,EAAE3iB,MAAQs6B,EAAalD,YAAYzU,GAC5CA,EAAEruB,MAAQquB,EAAE3iB,MAGR2iB,CACV,IACQnnB,EAAKjJ,IAAMiJ,EAAKgG,MACxBkrC,EAAelxC,EACfkxC,EAAa1sC,KACV0sC,EAAa1sC,MAAQs6B,EAAalD,YAAYsV,GACjDA,EAAap4C,MAAQo4C,EAAa1sC,MACX,iBAARxE,IACfkxC,EAAe,CAAE1sC,KAAMxE,KAItBkxC,CACV,CAEAi5B,aAAa7xE,GACVA,EAAUA,GAAW,CAAC,EACtB,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAC5ByD,EAAQ5F,KACF4F,EAAM7D,GAAG85B,KAEE,MAAnB15B,EAAQm0B,UACTn0B,EAAQm0B,QAAU,CAAC,GAGtB,IAAIqsD,EAAwC,QAA1B3iF,KAAKoG,SAASa,SA4DhC,OA1DAhF,EAAOqD,OAASq9E,EAAc,cAAgB,QAC9C1gF,EAAO2gF,WAAcjgF,GACX3C,KAAK4iF,WAAWjgF,GAE1BV,EAAO4gF,UAAalgF,GACV3C,KAAK6iF,UAAUlgF,GAEzBV,EAAOqjE,SAAYlmD,IAChB,IAAI27B,EAAen1C,EAAMk1C,mBAAmB17B,GACxCzZ,EAAS,GAEb,GADAA,EAAOrB,KAAK,gCAETy2C,GACA5tC,MAAMC,QAAQ2tC,IACdA,EAAa50C,OAEb40C,EAAa92C,SAASiS,IACnBvQ,EAAOrB,KACJ,6CAA6C4R,EAAIvT,uCAAoCuT,EAAItV,iGAC3F,IAEAm6C,EAAa50C,OAAS,GACvBR,EAAOrB,KACJ,8CAA8Cy2C,EAAa50C,qBAG7D,KAAI40C,EAAap4C,MASrB,MAAO,GATqB,CAC5B,IAAIuC,EAAQ,GACR/C,EAAQimD,WACTljD,EAAQ,0GAEXS,EAAOrB,KACJ,uCAAuCY,wBAA4B61C,EAAap4C,qBAEtF,CAEA,CAEA,OADAgD,EAAOrB,KAAK,UACLqB,EAAO2I,KAAK,GAAG,EAGzBrM,EAAOk7E,QAAU,CACd/6E,GAAI,CACDg7E,aAAc,WACXx3E,EAAMk9E,YAAY9iF,KACrB,GAIH8I,OAAQ,EAAGnG,SAASsT,KAChBtT,GAAS,IAAI0V,cAAco4B,UAAUx6B,GAAU,IAAIoC,gBAGtDsqE,IACD1gF,EAAOk7E,QAAQz8E,KAAO,eACtBuB,EAAOk7E,QAAQ4F,QAAS,GAGpB9gF,CACV,CAEA6gF,YAAYE,GAGT,MAAMC,EAAQD,EAASvE,UACU,OAA7Bz+E,KAAKoG,SAASc,cACV+7E,GAAOz1D,KAAK,CAAC,IAAM,IAAIrnB,SAI/B,CAAC,SAAU,UAAUlC,SAASI,IACvBrE,KAAK,OAAOqE,aAEhBrE,KAAK,OAAOqE,WAAerE,KAAK+B,GAAGK,GAChC,qBAAqBiC,KACpBiW,IACMta,KAAK4G,eAAehG,IAAM0Z,EAAIpC,UAAU+qE,EAAMjoE,UAAU,IAEjE,IAGJhb,KAAKkjF,sBAAsBF,EAAU,KAAMhjF,MAC9C,CAcAkiF,WAAW9iE,EAAc7c,GAGzB,CAWAi/D,gBACG,OAAO1hE,MAAM0hE,cAAc,UAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,kBAIJi+E,CACV,CAQArB,WAAWkC,EAAaC,EAAMz1E,EAAMrI,GACjC,MAAM+9E,EAAY/9E,EAClB,OAAO,IAAImK,SAAQ,CAACC,EAASmH,KAC1B,IAAIysE,GAAe,EAInB,MAAMC,EAAWphF,IAEdA,EAAUA,EAAQ2G,QAAQsF,IACvB,GAAIA,EAAKC,KAAKgK,cAAco4B,SAAS2yC,EAAK/qE,eACvC,OAAO,CACV,IAGEirE,EAMFtjF,KAAKwP,KAAK,cAAerN,IALzBmhF,GAAe,EACf5zE,EAAQvN,GAKX,EAKG6tB,EAAQhwB,KAAK+B,GAAG2D,UAAUy9E,GAAe,CAAC,GAUhD,GATAx1E,EAAOA,GAAQ,GAEVqiB,EAAM/F,OAAM+F,EAAM/F,KAAO,OAEzB+F,EAAM3O,QAAO2O,EAAM3O,MAAQ,IAEhC+hE,EAAOA,GAAQ,IAGVpjF,KAAKoG,SAASO,WAAY,MAAO,GAKtC,MAAM68E,EAAYxjF,KAAK4G,eAGvB,GAAiB,MAAb48E,EAAmB,MAAM,IAAIl7E,MAAM,oBAEvC,MAAMm7E,EAAYzjF,KAAKysB,UAGvB,GAAiB,MAAbg3D,EAAmB,MAAM,IAAIn7E,MAAM,oBAGvC,MAAMo7E,EAAcF,EAAUx7E,QAID,QAA1BhI,KAAKoG,SAASa,UACe,OAA7BjH,KAAKoG,SAASc,aACoB,GAAlC5B,GAAQrD,QAAQ0hF,eAEhB3zD,EAAM3O,MAAM/c,KAAK,CACdD,IAAKo/E,EAAU7iF,GACfwvB,KAAM,YAMiB,OAA1BpwB,KAAKoG,SAASa,UACe,OAA7BjH,KAAKoG,SAASc,aACoB,GAAlC5B,GAAQrD,QAAQ0hF,iBAGc,GAA1B3jF,KAAKoG,SAASM,SAIfspB,EAAM3O,MAAM/c,KAAK,CACdD,IAAKo/E,EAAU7iF,GACfwvB,KAAM,qBAKTJ,EAAM3O,MAAM/c,KAAK,CACdD,IAAKo/E,EAAU7iF,GACfwvB,KAAM,aAOf,MAAMwzD,EAAY5jF,KAAK6jF,aAAa7zD,GAEpCvgB,QAAQC,UACJgF,MAAKvP,UAII,IAQTuP,MAAKvP,MAAO2+E,IACV,GAAIA,EAGD,OADA9jF,KAAK+3E,SAAW+L,EACTP,EAAQvjF,KAAK+3E,UAGvB,IASIgM,EAAW,WACZ,OAAO,IAAIt0E,SAAQ,CAACC,EAASmH,KAE1BnH,EAAQ,CAAE7F,KAAM,IAAK,GAE3B,EAKA,GACkC,OAA/B7J,MAAMoG,UAAUc,cACflH,MAAMgkF,kBAAoBX,GAAWphF,QAAQU,OAC/C,CACC,IAAIgD,EAAS,GAGkB,cAA3B09E,GAAWphF,QAAQvB,MACU,SAA3B2iF,GAAWphF,QAAQvB,OACtBV,MAAMgkF,iBAGEX,GAAWphF,QAAQU,QAExBgD,EADCwH,MAAMC,QAAQi2E,EAAUphF,OAAOU,OACvB0gF,GAAWphF,QAAQU,MAAM2L,OAEzB+0E,GAAWphF,QAAQU,OAL/BgD,EAAS3F,MAAMgkF,iBAQlB,IAAIC,EAAY,CAAC,EACbC,EAAW,GAEfD,EAAUh6D,KAAO,KACjBg6D,EAAU5iE,MAAQ,GAElB1b,EAAO+iB,MAAM,KAAKzkB,SAASqP,IACxB2wE,EAAU5iE,MAAM/c,KAAK,CAClBD,IAAK,OACL+rB,KAAM,SACNztB,MAAO2Q,GACR,IAELywE,EAAW,WACR,OAAOL,EAAYrzD,QAAQ,CACxBL,MAAOi0D,EACPt2E,KAAMu2E,EACNj7E,UAAU,GAEhB,CACH,CACA,IACG,MAAMq4B,QAAgB7xB,QAAQ8R,IAAI,CA3D3BmiE,EAAYrzD,QAAQ,CACxBL,MAAOA,EACPriB,KAAMA,EACN1E,UAAU,IAwDiC86E,MAIxCj2E,EAASwzB,EAAQ,GAAGz3B,KAAKme,OAAOsZ,EAAQ,GAAGz3B,MAejD,OAZA7J,KAAK+3E,SAAWjqE,EAAOjE,MAAQiE,GAAU,IAGxC9N,KAAK+3E,UAAY,IAAI9zE,SAASy9C,IAC5BA,EAAIrzC,KAAOm1E,EAAU/9C,YAAYic,GACjCA,EAAI/+C,MAAQ++C,EAAIrzC,IAAI,IAIY,OAA/BrO,MAAMoG,UAAUc,aACjBlH,KAAK+B,GAAG+X,QAAQC,IAAI6pE,EAAW5jF,KAAK+3E,UAEhCwL,EAAQvjF,KAAK+3E,SAWvB,CAVE,MAAO5vE,GASN,MARAnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,sEACH1J,MAAO5F,KAAK8F,QACZkqB,UAGHszD,GAAe,EACTn7E,CACT,IACD,GAEX,CAEA07E,aAAa7zD,GACV,MAAO,GAAGhwB,KAAKY,MAAMmT,KAAKC,UAAUgc,IACvC,CAEA7qB,mBAAmB6qB,GAChB,MAAM4zD,EAAY5jF,KAAK6jF,aAAa7zD,SAC9BhwB,KAAK+B,GAAG+X,QAAQC,IAAI6pE,EAAW,KACxC,CAEAhB,WAAWjgF,GACR,IAAKA,EAAO,MAAO,GACnB,IAAI8C,EAAO,GACX,GAAI0H,MAAMC,QAAQzK,GACfA,EAAMsB,SAASiS,IACZ,GAAkB,iBAAPA,EACRzQ,EAAKnB,KAAK4R,EAAItV,QACV,CACJ,IAAIujF,EAAUnkF,KAAKokF,eAAeluE,GAClCzQ,EAAKnB,KAAK6/E,EAAQvjF,GACrB,UAGH,GAAoB,iBAAT+B,EACR8C,EAAKnB,KAAK3B,EAAM/B,QACZ,CACJ,IAAIujF,EAAUnkF,KAAKokF,eAAezhF,GAC9BwhF,GAAWA,EAAQvjF,IACpB6E,EAAKnB,KAAK6/E,EAAQvjF,GAExB,CAEH,OAAO6E,EAAK6I,MACf,CAEAu0E,UAAUlgF,GAEP,GAD4C,QAA1B3C,KAAKoG,SAASa,SACf,CACd,GAAKtE,EAEE,CACJ,IAAI0hF,EAAa,GAKjB,OAJW1hF,EAAM+lB,MAAM,KAClBzkB,SAASiS,IACXmuE,EAAW//E,KAAKtE,KAAKokF,eAAeluE,GAAK,IAErCmuE,CACV,CARG,MAAO,EASb,CAEG,OADWrkF,KAAKokF,eAAezhF,EAGrC,CAEAugF,sBAAsB59E,EAAQnD,EAASyD,EAAOsE,GAC3C,MAAMm5E,EAAY/9E,EAGgB,OAA/BtF,MAAMoG,UAAUc,aAChBm8E,EAAUp3E,aACTrG,EAAMo+E,mBAEPp+E,EAAMo+E,iBAAmBX,EAAUp3E,YAMtC,MAAMq4E,EAAiBniF,GAASm0B,QAC3BjiB,OAAO6pC,OAAO,CAAC,EAAG/7C,EAAQm0B,SAC1B,CAAErM,KAAM,MAAO5I,MAAO,IAE3B,GAAIlf,GAASoiF,sBAAuB,CACjC,MAAMC,EAA6B,CAAC/0C,EAAY9pC,EAAQ8+E,EAAQ,KAC7D,MAAMC,EAAgB/+E,EAAOmD,QAAQuB,GAAMA,GAAGo6E,QAAUA,IAExD,MAAO,IACDh1C,EAAWpuB,MAAMlT,KAAK9D,IACtB,GAAIA,EAAE4f,KACH,MAAO,CACJA,KAAM5f,EAAE4f,KACR5I,MAAOmjE,EAA2Bn6E,EAAG1E,EAAQ8+E,EAAQ,IAG3D,MAAM9hF,EAAQ+hF,EAAc57E,QACxB67E,GAAOA,EAAGtgF,MAAQgG,EAAEhG,KAAOsgF,EAAGhiF,QAAU0H,EAAE1H,QAC5C,GAEF,IAAKA,EAAO,OAAO0H,EAEnB,MAAMu6E,EAAejiF,GAAOkiF,aAAa5iF,OAAOrB,GAC3C+C,GAAGhB,EAAMkiF,YAAY5iF,OAAOrB,IAC5B,KAEL,IAAKgkF,EACF,MAAMt8E,MACH,mDAGN,MAAMw8E,EAAcniF,GAAOkiF,YACtBD,EAAa34E,YAAc,GAC3B,GAEL,IAAI+wE,EAAS,GAoBb,OAlBI8H,IAOK9H,EANFr6E,EAAMoiF,cAEJn/E,EAAMX,OACF8I,UAAUpL,EAAMkiF,YAAY5iF,OAAO+iF,aACnCZ,eAAeU,GAEVl/E,EAAMX,OACX8I,UAAUpL,EAAMkiF,YAAY5iF,OAAO+iF,aACnCZ,eAAeU,GAAaniF,EAAMoiF,cAKhCD,GAIR,CACJzgF,IAAKgG,EAAEhG,IACP+rB,KAAM,SACNztB,MAAOq6E,EACT,IAEN,EAGJsH,EAAejjE,MAAQmjE,EACpBF,EACAniF,EAAQoiF,sBAEd,CAEA,MAAMU,EAAqBp7E,IACpBw5E,EAAU6B,YACXllF,KAAK02B,eAAe,cAAeuuD,GAGtCjlF,KAAKmlF,gBAAgB9B,EAAWx5E,EAAMjE,EAAOsE,GAAM,EAAK,EAS3D,OALAlK,KAAK02B,eAAe,cAAeuuD,GAAmBpS,KACnD,cACAoS,GAGI,IAAIx1E,SAAQ,CAACC,EAASmH,KAC1B7W,KAAKihF,WACFqD,EACA,GACAniF,GAASwL,MAAQ,GACjB01E,GACD3uE,MAAM7K,IACL7J,KAAKmlF,gBAAgB9B,EAAWx5E,EAAMjE,EAAOsE,GAAM,GACnDwF,EAAQ7F,EAAK,GACd,GAER,CAEAs7E,gBAAgB9B,EAAWx5E,EAAMjE,EAAOsE,EAAMk7E,GAC1B,MAAb/B,GAAqBA,EAAU6B,cAEnC7B,EAAU9D,aACV8D,EAAU5E,UAAUzjE,WACpBqoE,EAAU5E,UAAUh6E,OAAO,OAAQoF,GAC/Bu7E,GACDplF,KAAKqlF,sBAAsBhC,EAAWz9E,EAAOsE,GAE5Cm5E,EAAUp3E,UAAYo3E,EAAUp3E,YACjCo3E,EAAUx+E,SAASw+E,EAAUp3E,YAIhCo3E,EAAU7D,eACb,CAEA6F,sBAAsBhC,EAAWz9E,EAAOsE,GACrC,IAAIm5E,GAAW6B,aAGX7B,GAAW5E,QAAS,CACrB,IAAK4E,EAAUrE,SAAU,OACzB,IAAItG,EAAQ2K,EAAUrE,WACtB,IAAKtG,EAAO,OACZ2K,EAAU5E,UAAU50E,KAAKy7E,MAAMC,IAC5B,GAAKA,EAAL,CACA,IAAIhjF,EAAOm2E,EAAMhrE,MAAM6jE,cACpB,gBAAkBgU,EAAO3kF,GAAK,MAE5B2B,GACLA,EAAKijF,aACF,UACA,GAAG5/E,EAAMvB,eAAekhF,EAAO3kF,MAAMgF,EAAMhF,MAAMsJ,GAAMtJ,KAPvC,CAQlB,GAEP,CACH,CAEAwjF,eAAeluE,GACZ,IAAI9H,EACAjM,EAAUnC,KAAK+3E,UAAY,GAC/B,GAAI51E,EAAQgE,OAAS,EAAG,CACrB,IAAK,IAAIoN,EAAI,EAAGA,EAAIpR,EAAQgE,OAAQoN,IAAK,CACtC,GACGvT,KAAKqH,YACLlF,EAAQoR,GAAGvT,KAAKqH,WAAWpC,OAAOyqB,OAASxZ,EAC5C,CACC9H,EAAOjM,EAAQoR,GACf,KACH,CAAO,GACJvT,KAAKsH,aACLnF,EAAQoR,GAAGvT,KAAKsH,YAAYrC,OAAOyqB,OAASxZ,EAC7C,CACC9H,EAAOjM,EAAQoR,GACf,KACH,CACG,GACGpR,EAAQoR,GAAG3S,IAAMsV,GACjB/T,EAAQoR,GAAG5Q,OAASuT,GACpB/T,EAAQoR,GAAGvT,KAAKqH,YAAYP,YAAc,KAAOoP,GACjD/T,EAAQoR,GAAGvT,KAAKsH,aAAaR,YAAc,KAAOoP,EACnD,CACC9H,EAAOjM,EAAQoR,GACf,KACH,CAEN,CACA,OAAOnF,CACV,CACG,MAAO,EAEb,CAEAnC,SAASmC,GAEN,GAD4C,QAA1BpO,KAAKoG,SAASa,SACf,CACd,IAAIxB,EAAO,GAOX,OANI2I,EAAKnC,YACImC,EAAKnC,WAAWyc,MAAM,KAC5BzkB,SAASmqB,IACV3oB,EAAKnB,KAAK8J,EAAKqwE,UAAUtxD,QAAQiB,GAAQ,IAGxC3oB,CACV,CACG,OAAI2I,EAAKnC,WACCmC,EAAKqwE,UAAUtxD,QAAQ/e,EAAKnC,YAE5B,EAGhB,CAEApH,SAASuJ,EAAMqgB,GACZ,IAAKrgB,EAAM,OAGX,IAAI8H,EAAMlW,KAAK86C,mBAAmBrsB,GAGlC,GAAIrgB,EAAKqwE,SAAqC,GAA1BrwE,EAAKqwE,UAAU5sD,QAAc,CACf,QAA3B7xB,KAAKoG,SAASa,UAAuBkG,MAAMC,QAAQ8I,KACpDA,EAAM,CAACA,IAGV,MAAM+sE,EAAQ70E,EAAKqwE,UAEnBwE,EAAMx+E,OAAO,OAAQyR,GACrB+sE,EAAMv+E,SACT,CAEA0J,EAAKvJ,SACFsI,MAAMC,QAAQ8I,GACTA,EAAI/H,KAAK9D,GAAMA,EAAEzJ,IAAMyJ,EAAEwF,MAAQxF,IAAGiE,KAAK,KACzC4H,EAAItV,IAAMsV,EAAIrG,MAAQqG,EAEjC,CAWAuvE,yBAAyBr3D,GACtB,IAAI2sB,EAAe,GAEflxC,EAAOukB,EACPua,EAAe3oC,KAAK4G,eAsBxB,OApBIiD,GAAQ8+B,IAELx7B,MAAMC,QAAQvD,GACfkxC,EAAelxC,EAAKsE,KAAI,SAAU6iB,GAO/B,OALIA,IACDA,EAAE3iB,KAAO2iB,EAAE3iB,MAAQs6B,EAAalD,YAAYzU,GAC5CA,EAAEruB,MAAQquB,EAAE3iB,MAGR2iB,CACV,KACQnnB,EAAKjJ,IAAMiJ,EAAKgG,SACxBkrC,EAAelxC,GACFwE,KACV0sC,EAAa1sC,MAAQs6B,EAAalD,YAAYsV,GACjDA,EAAap4C,MAAQo4C,EAAa1sC,OAIjC0sC,CACV,CAEAixB,eACGlsE,MAAMksE,eAEUhsE,KAAKysB,WAElBzsB,KAAKksE,gBACF,kCAAkClsE,KAAKoG,SAAS6B,cAChD,CACGA,WAAYjI,KAAKoG,SAAS6B,aAKrBjI,KAAK4G,gBAEhB5G,KAAKksE,gBACF,mCAAmClsE,KAAKoG,SAASO,cACjD,CACGA,WAAY3G,KAAKoG,SAASO,YAItC,oBCzxBH,MAAMk3C,EAAkB,EAAQ,OAEhCp+C,EAAOC,QAAU,cAA0Bm+C,EACxCl+C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAyuE,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAuClC,OAlCAF,EAAOqD,OAAS,OAGhBrD,EAAOmmD,UAAW,EAOlBnmD,EAAOqjE,SAAYlmD,GACZA,EAAIijE,OAAejjE,EAAIpf,KAAK8G,YAEzB9G,KAAKwgB,OAAOpB,GAGtBnd,EAAOue,OAAUwQ,IACd,MAAMvC,EAAU,CAAC,EAGjB,OAFAA,EAAQzuB,KAAK8G,YAAckqB,EAEpBhxB,KAAKwgB,OAAOiO,EAAQ,EAG9BxsB,EAAO2gF,WAAc5xD,GAGT,IAALA,GAAgB,MAALA,EACL,GAIHhxB,KAAK+B,GAAGsf,MAAMhB,OAAO2Q,GAGxB/uB,CACV,CAWAu/D,gBAGG,MAAMkkB,EAAuB5lF,MAAM0hE,cAAc,cASjD,OANAkkB,EAAqBj5C,OAAS,KACpB,CACJpoC,IAAK,eAIJqhF,CACV,CAEAnnB,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,CAEA3kC,aAAazB,EAAYwB,GACtB,OAAOj6C,MAAMgd,KAAKq+B,UAAU5C,EAArBz4C,CAAiCi6C,EAC3C,CAGAl9B,OAAOiO,GACJ,IAAKvV,OAAOysE,YAAa,OAAO7lF,MAAM0gB,OAAOiO,GAC7C,MAAMuC,EAAIhxB,KAAKg7C,UAAUvsB,GAEzB,GAAS,IAALuC,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMusB,EAAUv9C,KAAK+B,GAAGsf,MAAMhB,OAAO2Q,GAOrC,OALmBhxB,KAAKoG,SAAS81C,YAKf,EACRz4C,MAAM02E,KAAKyL,kBAAkBroC,GAE7B95C,MAAM02E,KAAKC,cAAc78B,EAEtC,oBC/HH,MAAMsoC,EAAsB,EAAQ,MAEpCpmF,EAAOC,QAAU,cAA8BmmF,EAC5ClmF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAmBA+uE,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAyClC,OAtCgC,GAA5BnC,KAAKoG,SAAS81C,WACfj6C,EAAOqD,OAAS,OAEhBrD,EAAOqD,OAAS,WAInBrD,EAAOmmD,UAAW,EAOlBnmD,EAAOqjE,SAAYlmD,GACZA,EAAIijE,OAAejjE,EAAIpf,KAAK8G,YAEzB9G,KAAKwgB,OAAOpB,GAGtBnd,EAAOue,OAAUwQ,IACd,MAAMvC,EAAU,CAAC,EAGjB,OAFAA,EAAQzuB,KAAK8G,YAAckqB,EAEpBhxB,KAAKwgB,OAAOiO,EAAQ,EAG9BxsB,EAAO2gF,WAAc5xD,GAGT,IAALA,GAAgB,MAALA,EACL,GAIHhxB,KAAK+B,GAAGsf,MAAMhB,OAAO2Q,GAGxB/uB,CACV,CAWAu/D,gBAGG,MAAMkkB,EAAuB5lF,MAAM0hE,cAAc,cASjD,OANAkkB,EAAqBj5C,OAAS,KACpB,CACJpoC,IAAK,eAIJqhF,CACV,CAEAnnB,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,CAGA9hE,OAAOiO,GACJ,IAAKvV,OAAOysE,YAAa,OAAO7lF,MAAM0gB,OAAOiO,GAC7C,MAAMuC,EAAIhxB,KAAKg7C,UAAUvsB,GAEzB,GAAS,IAALuC,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMusB,EAAUv9C,KAAK+B,GAAGsf,MAAMhB,OAAO2Q,GAE/BkrB,EAAal8C,KAAKoG,SAAS81C,WAG3B4pC,EAAYriF,MAAMgd,KAAKq+B,UAAU9+C,KAAK4+C,iBAE5C,OAAI1C,GAAc,EACR,GAAGz4C,MAAM02E,KAAKyL,kBAAkBroC,MAAYuoC,EAChDvoC,KAGI,GAAG95C,MAAM02E,KAAKC,cAAc78B,MAAYuoC,EAAUvoC,IAE/D,oBC/HH,MAAMwoC,EAAmB,EAAQ,MAEjCtmF,EAAOC,QAAU,cAA2BqmF,EAsBzC/R,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAIlC,OAFAF,EAAOqD,OAAS,OAETrD,CACV,CAWAu/D,gBAGG,MAAMkkB,EAAuB5lF,MAAM0hE,gBAYnC,OATAkkB,EAAqBj5C,OAAS,KACpB,CACJpoC,IAAK,UACL+B,SAAU,CACPxE,KAAM,YAKR8jF,CACV,CAEAnnB,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,oBCrEH,MAAM0D,EAAkB,EAAQ,OAE1BjmF,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAElDrW,EAAOC,QAAU,cAA0BsmF,EACxCrmF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAMAJ,gBACG,OAAO,IAAIsK,SAAQ,CAACC,EAASmH,KAErB7W,KAAKY,GAMV6C,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,eACTuR,QAASvR,EAAE,mDAAoD,CAC5DC,KAAKoB,QAERyQ,SAAU1M,MAAO2I,IAGd9N,KAAKoG,SAAS+4C,mBAAqBrxC,EAAS,EAAI,EAEhD,UACS9N,KAAK4H,OAGXnE,MAAM0N,MAAM,CACTC,MAAO,aACP/C,KAAM,8DAIHvO,MAAMgV,UAEZpF,GAGH,CAFE,MAAOvH,GACN0O,EAAO1O,EACV,KA9BHuH,GAgCD,GAER,CAOAskE,aAAa7xE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAElCF,EAAOqD,QAAS,EAEhB,MAAM8iD,EAAWjmD,EAAQimD,SAmBzB,OAhBAnmD,EAAOqjE,SAAYttD,GACZA,EAAIqqE,OAAeriF,KAAKg7C,UAAUhjC,GAEtB,CACb,wDACA,0CACA,+BACAhY,KAAKimF,aAAajuE,EAAKowC,GACvB,SACA,SACA,UACD95C,KAAK,IAKHrM,CACV,CAUAyyE,cAAct1D,EAAKxf,EAAK2C,EAAMJ,GAE3B,IAAKI,EACF,OAEHJ,EAAUA,GAAW,CAAC,EAEtB,IAAI+jF,EAAY,GACZC,EAAc,EAEdnmF,KAAKoG,SAASm5C,eAAiBv/C,KAAKoG,SAASi5C,WAC9C6mC,EAAYlmF,KAAKoG,SAASi5C,SAAS32B,MAAM,MAGxC1oB,KAAKoG,SAASk5C,eAAiBt/C,KAAKoG,SAASg5C,WAC9C+mC,EAAcnmF,KAAKoG,SAASg5C,UAM/B,MAAMgnC,EAAkB7jF,EAAKgvE,cAAc,mBAC3C,GAAI6U,EAAiB,CAClBA,EAAgBj5C,UAAY,GAM5B,MAAMk5C,EAAiB5iF,MAAMhD,GAAG,CAC7BC,KAAM,WACN4lF,UAAWF,EAEX9gB,SAAUtlE,KAAKimF,aAAa7mE,EAAKjd,EAAQimD,UAEzCzmD,YAAY,EACZX,MAAO,IACPD,OAAQ,KAQX,GANA0C,MAAMC,OAAO2iF,EAAgB5iF,MAAMG,cAM9BzB,EAAQimD,SAAU,CACpB,MAAMm+B,EAAUH,EAAgB7U,cAAc,iBAG9C,YAFIgV,IAASA,EAAQlL,MAAMzJ,QAAU,QAGxC,CAEA,MAAMthE,EAAMtQ,KAAKwmF,WAAU,GAErBC,EAAWhjF,MAAMhD,GAAG,CACvBC,KAAM,WACNgmF,SAAS,EACTC,OAAQr2E,EACRs2E,UAAW,OACXC,UAAU,EACVzkF,GAAI,CAED0kF,gBAAiB,SAAU14E,GACxB7L,EAAKwkF,UAAUhsE,OAAO,iBACtBxY,EAAKwkF,UAAUhsE,OAAO,sBAGtB,MAAMisE,EAAkBd,EACxB,GAAIc,GAAsC,IAAnBA,EAAuB,CAC3C,MAAMplF,EAAOwM,EAAKxM,KAAKyW,cACvB,IAAsC,GAAlC2uE,EAAgB35E,QAAQzL,GAMzB,OALA6B,MAAM6N,QACHvR,EAAE,iCAAkC,CACjCinF,EAAgB14E,KAAK,UAGpB,CAEb,CAIA,GAAI63E,EAAc,EAAG,CAClB,MAAMc,EAAgC,IAAdd,EACxB,GAAI/3E,EAAK84E,KAAOD,EAIb,OAHAxjF,MAAM6N,QACHvR,EAAE,6BAA8B,CAAComF,MAE7B,CAEb,CAGAE,EAAehhF,aAAa,CACzBzD,KAAM,OACNmwE,MAAO,KAEb,EAGAoV,aAAchiF,MAAOiJ,EAAMsJ,KACxB2uE,EAAe1+E,eAGf,MAAMhC,EAAS,CAAC,EAMhB,GALAA,EAAO3F,KAAK8G,YAAc,CAAC,EAC3BnB,EAAO3F,KAAK8G,YAAY+I,KAAO6H,EAAS7N,KAAKgG,KAC7ClK,EAAO3F,KAAK8G,YAAY04C,SAAWpxC,EAAKjH,KAGpCiY,EAAIxe,GACL,UACSZ,KAAKiF,OAAO+C,QAAQirE,OAAO7zD,EAAIxe,GAAI+E,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAM+uB,YACtB3tB,GAAGpB,GAAM+uB,WAAWlS,EAAIxe,GAAI+E,EAWlC,CAVE,MAAOwC,GACN5F,EAAKwkF,UAAU3lE,IAAI,iBACnB7e,EAAKwkF,UAAU3lE,IAAI,sBAEnBphB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,wDACH8P,IAAKA,EACLzZ,OAAQA,GAEd,CAIH3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAAO,EAIlCyhF,kBAAmB,CAACh5E,EAAMsJ,KACvB1X,KAAK+B,GAAGqG,OAAOC,UAAU,IAAIC,MAAM,sBAAuB,CACvDgJ,QAAS,qBACToG,aAEH2uE,EAAe1+E,cAAc,KAItC8+E,EAASY,YAAYhB,EAAe34E,OAGpCnL,EAAK+kF,QAAoB,WAAIb,EAASxkF,OAAOrB,GAG7C2B,EAAK4W,iBAAiB,SAAU9O,IACzBA,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,iBAAmB,IAC/CrN,KAAKunF,YAAa,EACrB,GAEN,CACH,CAUArF,WAAW9iE,EAAKxf,EAAK2C,GAClB,GAAuB,GAAnBvC,KAAKunF,kBAECvnF,KAAKunF,WAGZ9jF,MAAMmO,QAAQ,CACXR,MAAO,GACPE,QAASvR,EAAE,8CACX8R,SAAU1M,MAAO2I,IAEd,KADsBA,EACH,CAEhB,MAAMnI,EAAS,CAAC,EAGhB,GAFAA,EAAO3F,KAAK8G,YAAc,GAEtBsY,EAAIxe,GACL,UACSZ,KAAKiF,OAAO+C,QAAQirE,OAAO7zD,EAAIxe,GAAI+E,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAM+uB,YACtB3tB,GAAGpB,GAAM+uB,WAAWlS,EAAIxe,GAAI+E,EAUlC,CATE,MAAOwC,GACN5F,EAAKwkF,UAAU3lE,IAAI,iBACnB7e,EAAKwkF,UAAU3lE,IAAI,sBAEnBphB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4BACT8N,IAAKA,EACLzZ,OAAQA,GAEd,MAIA3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAE9B,SAGF,CACJ,MAAM8oB,EAAUzuB,KAAKg7C,UAAU57B,GAC/B,IAAKqP,IAAYA,EAAQ5e,KAAM,CAC5B,MAAM23E,EAAajlF,EAAK+kF,QAAoB,WACzCb,EAAW9iF,GAAG6jF,GAEbf,GAAYA,EAASgB,YACtBhB,EAASgB,WAAW,CAAEC,MAAOtoE,EAAIxe,IACvC,CACH,CAEA,OAAO,CACV,CAWA4gE,gBACG,OAAO1hE,MAAM0hE,cAAc,cAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,iBAIJi+E,CACV,CAIA2D,aAAajuE,EAAKowC,GACf,IAAIu/B,EAAc,GACdC,EAAc,gBACdC,EAAU,GAEVllF,EAAQ,GACRwE,EAAO,GAEX,MAAMsnB,EAAUzuB,KAAKg7C,UAAUhjC,GAyB/B,OAxBIyW,IACD9rB,EAAQ8rB,EAAQ5e,KAChB1I,EAAOsnB,EAAQ+wB,UAGd78C,GAASwE,IACVwgF,EAAc,gBACdC,EAAc,GACdC,EAAU,SAAWllF,GAGX,CACV,mPAAmPglF,kHAChPv/B,EAAW,QAAQroD,EAAE,iCAAmC,WAE3D,oHAAoH8nF,MACjH1gF,GAAQ,SAERihD,EACK,aAAaw/B,qGACb,YAETt5E,KAAK,GAGV,CAEArC,SAASmC,EAAMqgB,GACZ,MAAMooD,EAAOzoE,EAAKV,MAAM6jE,cAAc,yBAChCuW,EAAWjR,EAAKtF,cAAc,KAEpC,MAAO,CACJ1hE,KAAMgnE,EAAKkR,aAAa,aACxBvoC,SAAUsoC,EAAS36C,UAEzB,CAEAtoC,SAASuJ,EAAMqgB,GACZ,IAAKrgB,EAAM,OAEX,MAAMm4E,EAAUn4E,EAAKV,MACrB,IAAK64E,EAAS,OAEd,IAAIrwE,EAAM,KACNuY,IACDvY,EAAMlW,KAAKg7C,UAAUvsB,IAQxB,MAAMu5D,EAAWzB,EAAQhV,cAAc,yBACnCyW,IAAUA,EAAS3M,MAAMzJ,QAAU17D,GAAOA,EAAIrG,KAAO,OAAS,SAElE,MAAMgnE,EAAO0P,EAAQhV,cAAc,yBACnC,GAAIsF,EAAM,CACP,MAAMoR,EAAiBpR,EAAKtF,cAAc,oBACtC0W,IACDA,EAAe5M,MAAMzJ,QAAU17D,GAAOA,EAAIrG,KAAO,QAAU,QAE9DgnE,EAAKwE,MAAMzJ,QAAU17D,GAAOA,EAAIrG,KAAO,QAAU,OAC7CqG,GAAOA,EAAIrG,KAAMgnE,EAAK2O,aAAa,YAAatvE,EAAIrG,MACnDgnE,EAAKqR,gBAAgB,aAE1B,MAAMJ,EAAWjR,EAAKtF,cAAc,KAC9BsW,EAAU,UAAY3xE,EAAMA,EAAIrG,KAAO,IAC7Ci4E,EAASK,KAAON,EAChBC,EAAS36C,UAAYj3B,EAAMA,EAAIspC,SAAW,EAC7C,CACH,CAYAgnC,UAAU4B,GAAU,GACjB,MAAO,gBAAgBpoF,KAAKiF,OAAOrE,MAAMZ,KAAKY,MAAMwnF,EAAU,IAAM,KACvE,CAQAC,QAAQznF,GACL,MAAO,SAASA,GACnB,oBC3cH,MAAM0nF,EAAqB,EAAQ,OAEnC7oF,EAAOC,QAAU,cAA6B4oF,EAsB3CtU,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAUlC,OARAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOqjE,SAAY72C,GACZA,EAAQ4zD,OAAe5zD,EAAQzuB,KAAK8G,YAEjC9G,KAAKwgB,OAAOiO,GAGfxsB,CACV,CAWAu/D,gBAEG,OAAO1hE,MAAM0hE,cAAc,gBAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,oBC9DH,MAAMiG,EAAmB,EAAQ,OAE3BxoF,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAElDrW,EAAOC,QAAU,cAA2B6oF,EACzC5oF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAUAE,gBACG,OAAO,IAAIsK,SAAQ,CAACC,EAASmH,KAEtB7W,KAAKY,GAEN6C,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,gBACTuR,QAASvR,EAAE,oDAAqD,CAC7DC,KAAKoB,QAERyQ,SAAU1M,MAAO2I,IAGd9N,KAAKoG,SAAS+4C,mBAAqBrxC,EAAS,EAAI,EAEhD,UACS9N,KAAK4H,OAGXnE,MAAM0N,MAAM,CACTC,MAAO,aACP/C,KAAM,sFAGHvO,MAAMgV,UAEZpF,GAGH,CAFE,MAAOvH,GACN0O,EAAO1O,EACV,KAINuH,GACH,GAEN,CAMA84E,kBAAkBxwE,EAAKywE,GAIpB,OAAIA,EACM,GAAGzoF,KAAK8G,WAAWoM,QAAQ,KAAM,QAAQu1E,UAEzC,GAAGzoF,KAAK8G,WAAWoM,QAAQ,KAAM,QAAQ8E,EAAIpX,UAE1D,CAGAozE,aAAa7xE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAC5ByD,EAAQ5F,KAEdiC,EAAOqD,QAAS,EAGhB,IAAIojF,EAAkB,OAClBznC,EAAc,OACdjgD,EAAQ,OACR2nF,EAAiB,OACrB,GAAI/iF,EAAMQ,SAAS06C,SAAU,CAC1B7+C,EAAOjB,MAAQ4E,EAAMQ,SAAS26C,YAAc,IAC5C,MAAM6nC,EACHhjF,EAAMQ,SAAS46C,WAAap7C,EAAMQ,SAAS66C,YACtCr7C,EAAMQ,SAAS66C,YAAc,GAC7B,GACRynC,EAAkB,GAAGE,MACrB5nF,EAAQ,GAAG4E,EAAMQ,SAAS26C,YAAc,QACxCE,EACGr7C,EAAMQ,SAAS46C,WAAap7C,EAAMQ,SAAS66C,YACtCr7C,EAAMQ,SAAS66C,YACf,GACRA,EAAc,GAAGA,MACjB0nC,EACG/iF,EAAMQ,SAAS46C,WAAap7C,EAAMQ,SAAS66C,YACtCr7C,EAAMQ,SAAS66C,YACf,GACR0nC,EAAiB,GAAGA,KACvB,MAAWxmF,EAAQnB,QAChBiB,EAAOjB,MAAQmB,EAAQnB,OAAS,IAChCA,EAAQ,GAAGmB,EAAQnB,OAAS,QAC5BigD,EAAc9+C,EAAQnB,MACtBigD,EAAc,GAAGA,MACjB0nC,EAAiBxmF,EAAQnB,MACzB2nF,EAAiB,GAAGA,OAGpB/iF,EAAMQ,SAAS46C,WACfp7C,EAAMQ,SAAS66C,aACe,OAA9Br7C,EAAMQ,SAAS66C,cAEfh/C,EAAOlB,OAAS6E,EAAMQ,SAAS66C,aAAe,EAC9CynC,EAAkB/iE,SAAS1jB,EAAOlB,QAAU,GAC5C2nF,EAAkB,GAAGA,MACrBznC,EAAct7B,SAAS1jB,EAAOlB,QAC9BkgD,EAAc,GAAGA,MACjB0nC,EAAiBhjE,SAAS1jB,EAAOlB,QACjC4nF,EAAiB,GAAGA,OAGvB,MAAMvgC,EAAWjmD,EAAQimD,SA4BzB,OAxBAnmD,EAAOqjE,SAAYttD,GACZA,EAAIqqE,OAAerqE,EAAIhY,KAAK8G,YAMjB,CACZ,+DAL0B9F,cAAkB0nF,MAM5C,yDAJ0B1nF,cAAkBigD,MAK5C,+BACAjhD,KAAK6oF,cAAc7wE,EAAK,CACrBowC,SAAUA,EACVrnD,OAAQ4nF,EACR3nF,MAAOA,IAEV,SACA,SACA,UACDsN,KAAK,IAKHrM,CACV,CAcAyyE,cAAct1D,EAAKxf,EAAK2C,EAAMJ,GAE3B,IAAKI,EACF,OAGHJ,EAAUA,GAAW,CAAC,EAKtB,MAAMikF,EAAkB7jF,EAAKgvE,cAAc,oBAC3C,GAAI6U,EAAiB,CAClBA,EAAgBj5C,UAAY,GAG5B,IAAI27C,EAAY,EACZ9oF,KAAKoG,SAAS46C,YACf8nC,EAAYnjE,SAAS3lB,KAAKoG,SAAS66C,cAAgB6nC,GAGtD,IAAIC,EAAW,EACX/oF,KAAKoG,SAAS06C,WACfioC,EAAWpjE,SAAS3lB,KAAKoG,SAAS26C,aAAegoC,GAGhD5mF,EAAQpB,SAAQ+nF,EAAY3mF,EAAQpB,QAEpCoB,EAAQnB,QAAO+nF,EAAW5mF,EAAQnB,OAMtC,MAAMqlF,EAAiB5iF,MAAMhD,GAAG,CAC7BC,KAAM,WACNQ,IAAK,kBAELolF,UAAWF,EAEX9gB,SAAUtlE,KAAK6oF,cAAczpE,EAAK,CAC/BgpC,SAAUjmD,EAAQimD,SAClBrnD,OAAQ+nF,EAAYA,EAAY,KAAO,EACvC9nF,MAAO+nF,EAAWA,EAAW,KAAO,IAGvCpnF,YAAY,EACZZ,OAAQ+nF,EACR9nF,MAAO+nF,IAQV,GANAtlF,MAAMC,OAAO2iF,EAAgB5iF,MAAMG,cAM9BzB,EAAQimD,SAAU,CACpB,MAAMm+B,EAAUH,EAAgB7U,cAAc,iBAE9C,YADIgV,IAASA,EAAQlL,MAAMzJ,QAAU,QAExC,CAEA,MAAMthE,EAAMtQ,KAAKwmF,YAEXC,EAAWhjF,MAAMhD,GAAG,CACvBC,KAAM,WAENgmF,SAAS,EACTC,OAAQr2E,EACRs2E,UAAW,OACXC,UAAU,EAOVzkF,GAAI,CAED0kF,gBAAiB,SAAU14E,GACxB7L,EAAKwkF,UAAUhsE,OAAO,iBACtBxY,EAAKwkF,UAAUhsE,OAAO,sBAGtB,MAAMisE,EAAkB,CACrB,MACA,OACA,MACA,MACA,MACA,QAEGplF,EAAOwM,EAAKxM,KAAKyW,cACvB,IAAsC,GAAlC2uE,EAAgB35E,QAAQzL,GAMzB,OALA6B,MAAM6N,QACHvR,EAAE,kCAAmC,CAClCinF,EAAgB14E,KAAK,UAGpB,EAIV+3E,EAAehhF,aAAa,CACzBzD,KAAM,OACNmwE,MAAO,KAEb,EAGAoV,aAAchiF,MAAOiJ,EAAMsJ,KACxB2uE,EAAe1+E,eACf3H,KAAKgpF,UAAUtxE,EAAS7N,KAAKgG,KAAMtN,GAInC,MAAMoD,EAAS,CAAC,EAIhB,GAHAA,EAAO3F,KAAK8G,YAAc4Q,EAAS7N,KAAKgG,KAGpCuP,EAAIxe,GACL,IAIG,SAHMZ,KAAKiF,OAAO+C,QAAQirE,OAAO7zD,EAAIxe,GAAI+E,GAItChC,GAAGpB,IACHoB,GAAGpB,GAAM4qB,SACTxpB,GAAGpB,GAAM4qB,QAAQ/N,EAAIxe,IAErB+C,GAAGpB,GAAM+uB,WAAWlS,EAAIxe,GAAI+E,OACxB,CAEJ,MAAMsjF,EACHh8C,SAASskC,cAAc,iBACtB5tE,GAAGslF,IAActlF,GAAGslF,GAAW97D,QAAQ/N,EAAIxe,KAC5C+C,GAAGslF,GAAW33D,WAAWlS,EAAIxe,GAAI+E,EACvC,CAYH,CAXE,MAAOwC,GACN5F,EAAKwkF,UAAU3lE,IAAI,iBACnB7e,EAAKwkF,UAAU3lE,IAAI,sBAEnBphB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,wEACH1J,MAAO5F,KACPof,MACAzZ,UAEN,CAIH3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAAO,EAIlCyhF,kBAAmB,CAACh5E,EAAMsJ,KACvB1X,KAAK+B,GAAGqG,OAAOC,UAAU,IAAIC,MAAM,yBAA0B,CAC1DgH,QAAS,+CACT1J,MAAO5F,KACP0X,aAEH2uE,EAAe1+E,cAAc,KAItC8+E,EAASY,YAAYhB,EAAe34E,OAGpCnL,EAAK+kF,QAAoB,WAAIb,EAASxkF,OAAOrB,GAIvB,cAAlB2B,EAAKkqD,WACNlqD,EAAK4W,iBAAiB,SAAU9O,IACzBA,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,iBAAmB,IAC/CrN,KAAKkpF,aAAc,EACtB,GAGT,CACH,CAUAhH,WAAW9iE,EAAKxf,EAAK2C,EAAM3B,EAAI21B,GAC5B,GACIA,GAAOA,EAAIizB,OAAOiD,UAAUp/C,QAAQ,iBAAmB,GACxDrN,KAAKkpF,mBAEElpF,KAAKkpF,YACP9pE,EAAI+pE,qBACN/pE,EAAI+pE,mBAAqB,IAE5B/pE,EAAI+pE,mBAAmBnpF,KAAK8G,aAAc,EAG1CrD,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,+CACT8R,SAAU1M,MAAO2I,IAEd,KADsBA,EACH,CAEhB,MAAMnI,EAAS,CAAC,EAChBA,EAAO3F,KAAK8G,YAAc,GAE1B,UACS9G,KAAKiF,OAAO+C,QAAQirE,OAAO7zD,EAAIxe,GAAI+E,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAM+uB,YACtB3tB,GAAGpB,GAAM+uB,WAAWlS,EAAIxe,GAAI+E,GAG/B3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAY3B,CAXE,MAAOwC,GACN5F,EAAKwkF,UAAU3lE,IAAI,iBACnB7e,EAAKwkF,UAAU3lE,IAAI,sBAEnBphB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,uDACH1J,MAAO5F,KACPof,IAAKA,EACLzZ,OAAQA,GAEd,CACH,SAGF,CACJ,MAAM6hF,EAAajlF,EAAK+kF,QAAoB,WACzCb,EAAW9iF,GAAG6jF,GAEbf,GAAYA,EAASgB,YACtBhB,EAASgB,WAAW,CAAEC,MAAOtoE,EAAIxe,IACvC,CAEA,OAAO,CACV,CAWA4gE,gBACG,OAAO1hE,MAAM0hE,cAAc,cAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,gBAIJi+E,CACV,CAEAuG,cAAc7wE,EAAK7V,IAChBA,EAAUA,GAAW,CAAC,GACdpB,OAASoB,EAAQpB,QAAU,OACnCoB,EAAQnB,MAAQmB,EAAQnB,OAAS,OAGjC,IAAI2mF,EAAc,GACdyB,EAAe,gBACf7vB,EAAW,GAEX52D,EAAQ,GACR0mF,GAAuB,EACvBrxE,EAAIhY,KAAK8G,cACVnE,EAAQqV,EAAIhY,KAAK8G,aAEhBkR,EAAImxE,oBACDnxE,EAAImxE,mBAAmBnpF,KAAK8G,cAC7BuiF,EAAuBrxE,EAAImxE,mBAAmBnpF,KAAK8G,aAIrDnE,GACDglF,EAAc,gBACdyB,EAAe,GACf7vB,EAAW,yBAAyBv5D,KAAKw5D,SAAS72D,SAE9C3C,KAAKoG,SAAS86C,kBAAoBmoC,IACnC1B,EAAc,gBACdyB,EAAe,GACf7vB,EAAW,yBAAyBv5D,KAAKw5D,SACtCx5D,KAAKoG,SAAS+6C,uBAKvB,IAAImoC,EAAO,CACR,6CAA6C3B,6DACIyB,WAAsBjnF,EAAQnB,iBAAiBmB,EAAQpB,WAAWw4D,qBACpHjrD,KAAK,IAeP,OAbAg7E,EAAOA,EAAKp2E,QACT,SACA/Q,EAAQimD,SACH,QAAQroD,EAAE,uCACV,IAERupF,EAAOA,EAAKp2E,QACT,WACA/Q,EAAQimD,SACH,aAAaghC,qGACb,IAGDE,CACV,CAEAN,UAAUn5E,EAAMtN,GACb,MAAM6jF,EAAkB7jF,EAAKgvE,cAAc,oBAC3C,GAAI6U,EAAiB,CAClBA,EAAgB7U,cAAc,0BAA0B8J,MAAMzJ,QAC3D,OACH,MAAM3Y,EAAQmtB,EAAgB7U,cAAc,2BAC5CtY,EAAMoiB,MAAMzJ,QAAU,GACtB3Y,EAAMoiB,MAAMkO,gBAAkB,QAAQvpF,KAAKw5D,SAAS3pD,OACpDopD,EAAMusB,aAAa,aAAc31E,EACpC,CACH,CAEA5D,SAASmC,EAAMqgB,GAEZ,OADcrgB,EAAKV,MAAM6jE,cAAc,2BAC1BwW,aAAa,aAC7B,CAEAljF,SAASuJ,EAAMqgB,GACZ,IAAKrgB,EAAM,OAEX,MAAMm4E,EAAUn4E,EAAKV,MACrB,IAAK64E,EAAS,OAEd,IAAIrwE,EAAM,KACNuY,IACDvY,EAAMlW,KAAKg7C,UAAUvsB,IAQxB,MAAM+6D,EAAYjD,EAAQhV,cAAc,0BACpCiY,IAAWA,EAAUnO,MAAMzJ,QAAU17D,EAAM,OAAS,IAExD,MAAM+iD,EAAQstB,EAAQhV,cAAc,2BACpC,GAAItY,EAAO,CACR,MAAMwwB,EAAkBxwB,EAAMsY,cAAc,oBACxCkY,IACDA,EAAgBpO,MAAMzJ,QAAU17D,EAAM,QAAU,QAEnD+iD,EAAMoiB,MAAMzJ,QAAU17D,EAAM,QAAU,OAElCA,GACD+iD,EAAMoiB,MAAMkO,gBAAkB,QAAQvpF,KAAKw5D,SAAStjD,OACpD+iD,EAAMusB,aAAa,aAActvE,IAEjC+iD,EAAMivB,gBAAgB,aAE5B,CACH,CAaAwB,SAASj7D,GACN,OAAO,IAAIhf,SAAQ,CAACC,EAASmH,KAC1B,IAAK4X,EAAQzuB,KAAK8G,YAAa,OAAO4I,EAAQ,MAE9C,MAAMi6E,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIG,QAAU,SAAU3hF,GACrB0O,EAAO1O,EACV,EACAwhF,EAAIxS,OAAS,WACV,MAAM4S,EAAS98C,SAASC,cAAc,UACtC68C,EAAO/oF,MAAQ2oF,EAAI3oF,MACnB+oF,EAAOhpF,OAAS4oF,EAAI5oF,OACRgpF,EAAOC,WAAW,MAC1BC,UAAUN,EAAK,EAAG,GACtB,MACMO,EAAY,CACfrgF,KAFakgF,EAAOI,YAGpBnpF,MAAO2oF,EAAI3oF,MACXD,OAAQ4oF,EAAI5oF,QAEf2O,EAAQw6E,EACX,EAEAP,EAAIS,IAAMpqF,KAAKw5D,SAAS/qC,EAAQzuB,KAAK8G,YAAY,GAEvD,CASA0yD,SAAS54D,GACN,MAAO,SAASA,GACnB,CAYA4lF,UAAU4B,GAAU,GACjB,MAAO,gBAAgBpoF,KAAKiF,OAAOrE,MAAMZ,KAAKY,MAAMwnF,EAAU,IAAM,KACvE,oBCnmBH,MAAMiC,EAAkB,EAAQ,OAEhC5qF,EAAOC,QAAU,cAA0B2qF,EAUxCrW,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAUlC,OAPAF,EAAOqD,OAAS,OAChBrD,EAAOf,IAAM,WAIbe,EAAOqjE,SAAW,IAAM,GAEjBrjE,CACV,CAWAu/D,gBAEG,MAAMkkB,EAAuB5lF,MAAM0hE,gBAYnC,OATAkkB,EAAqBj5C,OAAS,KACpB,CACJpoC,IAAK,OACL+B,SAAU,CACPxE,KAAM,YAKR8jF,CACV,CAEAnnB,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,CAEAz9E,SAASuJ,EAAMqgB,GACZ3uB,MAAM+E,SAASuJ,EAAMqgB,EAAS,IAC9BrgB,EAAKnM,OAAOU,MAAQ8rB,EAAQzuB,KAAK8G,WACpC,oBCnEH,MAAMwjF,EAAkB,EAAQ,OAIhC7qF,EAAOC,QAAU,cAA0B4qF,EACxC3qF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAGjB,CAMA2C,OACG,OAAO9H,MAAM8H,OAAO8M,MAAK,KAEtB,GAAI1U,KAAKyhD,iBAAiBt7C,OAAQ,CAC/B,MAAM6B,EAAQhI,KAAKiF,OAAO+C,QAE1B,GAAgC,GAA5BhI,KAAKoG,SAASk7C,WAGf,OAAO,IAAI7xC,SAAQ,CAACC,EAASmH,KAC1B,IAAI0zE,EAAU,EACVC,EAAU,EAEdxiF,EACIqoB,QAAQ,CAAC,GACT3b,MAAMzK,KACJA,EAAOA,EAAKJ,MAAQI,GAGfhG,SAASmK,IACX,GAAIjB,MAAMC,QAAQgB,EAAKpO,KAAK8G,aAAc,CAEvC,IAAI2jF,EAAkBr8E,EACnBpO,KAAK8G,YACNgC,QAAQyK,IAEoC,GAAxCvT,KAAKyhD,iBAAiBp0C,QAAQkG,EAAE3S,MAItC,GACG6pF,EAAgBtkF,QAChBiI,EAAKpO,KAAK8G,YAAYX,OACvB,CACCqkF,IAG8B,GAA1BC,EAAgBtkF,SACjBskF,EAAkB,IAErB,MAAM9nF,EAAQ,CAAC,EACfA,EAAM3C,KAAK8G,YAAc2jF,EACzBziF,EAAMirE,OAAO7kE,EAAKxN,GAAI+B,GAAO+R,MAAK,KAG/B61E,IACIA,GAAWC,GACZ96E,GACH,GAEN,CACH,KAEY,GAAX86E,GACD96E,GACH,IAEFiF,MAAMkC,EAAO,IAEhB,CAEJ,MAAMmZ,EAAQ,CAAC,EAEf,OADAA,EAAMhwB,KAAK8G,YAAc9G,KAAKyhD,iBACvB,IAAIhyC,SAAQ,CAACC,EAASmH,KAC1B,IAAI0zE,EAAU,EAEdviF,EACIqoB,QAAQL,GACRtb,MAAMzK,IAEJA,EAAOA,EAAKJ,MAAQI,EAMpB,MAAMtH,EAAQ,CAAC,EACfA,EAAM3C,KAAK8G,YAAc,GAEzBmD,EAAKhG,SAASmK,IACXpG,EAAMirE,OAAO7kE,EAAKxN,GAAI+B,GAAO+R,MAAK,KAC/B61E,IACIA,GAAWtgF,EAAK9D,QACjBuJ,GACH,GACD,IAEc,GAAfzF,EAAK9D,QACNuJ,GACH,IAEFiF,MAAMkC,EAAO,GAEvB,CACH,IAEN,CAEAtR,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAyuE,aAAa7xE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GA4FlC,OA3FcnC,KACI+B,GAAG85B,KAIjB15B,EAAQimD,UArIR,KAAItyC,KAAW/T,GAAGsP,aAAajQ,SAAS0U,EAAO,EAuIY/V,CACzD,eAGYoC,EAAQimD,UAAapoD,KAAKoG,SAAS21C,SAErD95C,EAAO2gF,WAAcjgF,GACX3C,KAAK4iF,WAAWjgF,GAE1BV,EAAO4gF,UAAalgF,GACV3C,KAAK6iF,UAAUlgF,GAGzBV,EAAOqjE,SAAY72C,IAChB,IAAIssB,EAAetsB,EAAQzuB,KAAK8G,YAChC,GAAoB,MAAhBi0C,EAAsB,MAAO,GAC7B/6C,KAAKoG,SAASk7C,aACfvG,EAiRZ,SAA6Bn1C,EAAO6oB,EAAU,CAAC,GAC5C,IAAI3gB,EAAS,GAiBb,OAhBiC,MAA7B2gB,EAAQ7oB,EAAMkB,cACfgH,EAAS2gB,EAAQ7oB,EAAMkB,YAEF,iBAAVgH,IAAoBA,EAASiG,KAAK0D,MAAM3J,IAG/ClI,EAAMQ,WACP0H,GAAUlI,EAAMQ,SAASjE,SAAW,IAAI2G,QAAQ44C,IAEzC5zC,GAAU,IAAIhF,QAAQwK,IAAOouC,EAAI9gD,IAAM8gD,KAASpuC,EAAE1S,IAAM0S,KACrDnN,OAAS,MAMlB2H,CACV,CApS2B48E,CAAoB1qF,KAAMyuB,IAE5C,IAAI9oB,EAAS,GACbA,EAAOrB,KAAK,gCACZ,IAAIqmF,EAAiB,GACjBC,EAAY,GAChB,GACG7vC,GACA5tC,MAAMC,QAAQ2tC,IACdA,EAAa50C,OAEb40C,EAAa92C,SAASiS,IACflW,KAAKoG,SAASm7C,WAAarrC,EAAI0rC,MAChC+oC,EAAiB,iBACjBC,EAAY,eAAe10E,EAAI0rC,QAE9B1rC,EAAI7H,MACL1I,EAAOrB,KACJ,eAAesmF,oCAA4CD,YAAyBz0E,EAAI7H,sCAAmC6H,EAAItV,iGAErI,IAECm6C,EAAa50C,OAAS,GACvBR,EAAOrB,KACJ,8CAA8Cy2C,EAAa50C,qBAG7D,KAAI40C,EAoBR,MAAO,GApBe,CACtB,IAAI8vC,EAAc9vC,EAIlB,GAH2B,iBAAhBA,IACR8vC,EAAc7qF,KAAKokF,eAAerpC,KAEhC8vC,EAAa,MAAO,GAKzB,GAJI7qF,KAAKoG,SAASm7C,WAAaspC,EAAYjpC,MACxC+oC,EAAiB,iBACjBC,EAAY,eAAeC,EAAYjpC,QAEtCipC,EAAYx8E,KAAM,CACnB,IAAInJ,EAAQ,GACR/C,EAAQimD,WAAapoD,KAAKoG,SAAS21C,WACpC72C,EAAQ,0GAEXS,EAAOrB,KACJ,eAAesmF,oCAA4CD,MAAmBzlF,wBAA4B2lF,EAAYx8E,oBAE5H,CACH,CAEA,CAEA,OADA1I,EAAOrB,KAAK,UACLqB,EAAO2I,KAAK,GAAG,EAEzBrM,EAAOqD,OAAStF,KAAKoG,SAASk7C,WAAa,cAAgB,QAC3Dr/C,EAAOk7E,QAAU,CACd4F,QAAQ,EACRl5E,KAAM7J,KAAKoG,SAASjE,QAAQgM,KAAI,SAAUuzC,GACvC,MAAO,CACJ9gD,GAAI8gD,EAAI9gD,GACR+B,MAAO++C,EAAIrzC,KACXuzC,IAAKF,EAAIE,IAEf,KAEC5hD,KAAKoG,SAASk7C,aACfr/C,EAAOk7E,QAAQz8E,KAAO,gBAGlBuB,CACV,CAUAyyE,cAAct1D,EAAKxf,EAAK2C,EAAMJ,GAE3B,GAAKI,IAILJ,EAAUA,GAAW,CAAC,EAEjBI,EAAKgvE,eAAV,CAEA,IAAIuZ,EAAcvoF,EAAKgvE,cACpB,4CAECuZ,GACDA,EAAY3xE,iBAAiB,SAAU9O,IACpCA,EAAE0gF,kBACF,IAAIplF,EAAS,CAAC,EACdA,EAAO3F,KAAK8G,YAAc,GAC1B9G,KAAKiF,OACD+C,QACAirE,OAAO7zD,EAAIxe,GAAI+E,GACf+O,MAAK,KAEH/Q,GAAGpB,IAAO+uB,aAAalS,EAAIxe,GAAI+E,EAAO,IAExCgP,OAAOxM,IACL5F,EAAKwkF,UAAU3lE,IAAI,iBACnB7e,EAAKwkF,UAAU3lE,IAAI,sBAEnBphB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4BACT8N,IAAKA,EACLzZ,OAAQ,GACRC,MAAO5F,KAAK8F,SACb,GACH,GA3BoB,CA8BlC,CAuBA07D,gBAGG,MAAMkkB,EAAuB5lF,MAAM0hE,gBAkBnC,OAfAkkB,EAAqBj5C,OAAS,KACpB,CACJpoC,IAAKrE,KAAKoG,SAASk7C,WAAa,iBAAmB,eACnDl7C,SAAU,CACPjE,QAASnC,KAAKoG,SAASjE,QAAQgM,KAAI,SAAUuzC,GAC1C,MAAO,CACJ9gD,GAAI8gD,EAAI9gD,GACR+B,MAAO++C,EAAIrzC,KACXuzC,IAAKF,EAAIE,IAEf,OAKF8jC,CACV,CAEAnnB,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,KAAKrE,KAAKoG,SAASk7C,WAAa,gBAI/BghC,CACV,CAEAM,WAAWjgF,GACR,IAAKA,EAAO,MAAO,GACnB,IAAI8C,EAAO,GACX,GAAI0H,MAAMC,QAAQzK,GACfA,EAAMsB,SAASiS,IACZ,GAAkB,iBAAPA,EACRzQ,EAAKnB,KAAK4R,EAAItV,QACV,CACJ,IAAIujF,EAAUnkF,KAAKokF,eAAeluE,GAClCzQ,EAAKnB,KAAK6/E,EAAQvjF,GACrB,UAGH,GAAoB,iBAAT+B,EACR8C,EAAKnB,KAAK3B,EAAM/B,QACZ,CACJ,IAAIujF,EAAUnkF,KAAKokF,eAAezhF,GAC9BwhF,GAAWA,EAAQvjF,IACpB6E,EAAKnB,KAAK6/E,EAAQvjF,GAExB,CAEH,OAAO6E,EAAK6I,MACf,CAEAu0E,UAAUlgF,GACP,GAAI3C,KAAKoG,SAASk7C,WAAY,CAC3B,IAAI+iC,EAAa,GAKjB,OAJW1hF,EAAM+lB,MAAM,KAClBzkB,SAASiS,IACXmuE,EAAW//E,KAAKtE,KAAKokF,eAAeluE,GAAK,IAErCmuE,CACV,CACG,OAAO1hF,CAEb,CAEAyhF,eAAeluE,GACZ,IAAI9H,EACAjM,EAAUnC,KAAKmC,UACnB,OAAIA,EAAQgE,OAAS,GAClBhE,EAAQ8B,SAASshF,IACd,GAAIA,EAAO3kF,IAAMsV,EAEd,OADA9H,EAAOm3E,GACA,CACV,IAEIn3E,GAEA,EAEb,CAEAnC,SAASmC,EAAMqgB,GACZ,OAAOzuB,KAAK6iF,UAAUz0E,EAAKnC,WAC9B,CAEA++E,mBAAmBplF,EAAO6oB,EAAU,CAAC,GAClC,IAAI3gB,EAAS,GAwBb,OAvBgC,MAA5B2gB,EAAQzuB,KAAK8G,YACdgH,EAAS2gB,EAAQzuB,KAAK8G,YACd2nB,IACJthB,MAAMC,QAAQqhB,GACf3gB,EAAS2gB,EAET3gB,EAAOxJ,KAAKmqB,IAGd3gB,EAAO3H,SACa,iBAAV2H,IAAoBA,EAASiG,KAAK0D,MAAM3J,IAG/C9N,KAAKoG,WACN0H,GAAU9N,KAAKoG,SAASjE,SAAW,IAAI2G,QAAQ44C,IAExC5zC,GAAU,IAAIhF,QAAQwK,IAAOouC,EAAI9gD,IAAM8gD,KAASpuC,EAAE1S,IAAM0S,KACrDnN,OAAS,MAMlB2H,CACV,CAEAjJ,SAASuJ,EAAMqgB,GACPrgB,IAEDpO,KAAKoG,SAASk7C,YAGfxhD,MAAM+E,SAASuJ,EAAMqgB,GAE3B,oBCvaH,MAAMw8D,EAAsB,EAAQ,OAEpCxrF,EAAOC,QAAU,cAA8BurF,EAC5CtrF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAUjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAyuE,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAQlC,OANAF,EAAOqD,OAAS,OAEhBrD,EAAOqjE,SAAW,CAACttD,EAAKy0B,EAAQ9pC,EAAO28E,EAAK4L,KACjCvoF,GAAS,IAAIiS,WAAW1B,QAAQ,OAAQ,QAG5CjR,CACV,CAWAu/D,gBAGG,MAAMkkB,EAAuB5lF,MAAM0hE,gBAYnC,OATAkkB,EAAqBj5C,OAAS,KACpB,CACJpoC,IAAK,UACL+B,SAAU,CACPxE,KAAM,cAKR8jF,CACV,CAEAnnB,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,CAYAz9E,SAASuJ,EAAMqgB,GACZ3uB,MAAM+E,SAASuJ,EAAMqgB,EAAS,GACjC,oBChGH,MAAM08D,EAAoB,EAAQ,OAElC,IAAIC,GAAc,EAKlB3rF,EAAOC,QAAU,cAA4ByrF,EAC1CxrF,YAAYgG,EAAQV,GACZmmF,IAEF3nF,MAAM4nF,QAAQrqE,OAASvd,MAAMC,OAC1B,CAEA,EACAD,MAAM4nF,QAAQh9E,MAEjB+8E,GAAc,GAEjBtrF,MAAM6F,EAAQV,EACjB,CAgBA+uE,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAWlC,OATAF,EAAOqD,OAAS,SAEhBrD,EAAOue,OAAUwQ,IACd,MAAMvC,EAAU,CAAC,EAGjB,OAFAA,EAAQzuB,KAAK8G,YAAckqB,EAEpBhxB,KAAKwgB,OAAOiO,EAAQ,EAGvBxsB,CACV,CAWAu/D,gBACG,OAAO1hE,MAAM0hE,cAAc,YAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,oBCnEH,MAAMrrC,EAAU,EAAQ,OAElBq0C,EAAkB,CACrBC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,cAAc,EACdhQ,YAAa,GACbmL,UAAU,GAGP8E,EAA6B,CAChCtnF,IAAK,eAGR5E,EAAOC,QAAU,cAAiCu3C,EAC/Ct3C,YAAYgG,EAAQV,EAAQy1C,EAAgBixC,GACzC7rF,MAAM6F,EAAQV,EAAQy1C,EACzB,CAGAtvB,kBACG,MAAO,CACJ/mB,IAAK,cACLkH,KAAM,OACNpH,SAAU,GACVs5B,YAAa,GAEnB,CAEAmuD,kBAAkBrF,EAASngF,EAAUxG,EAAKwf,GACvC,GAAe,MAAXmnE,EAAiB,OAErB,MAAMsF,EAAUzlF,EAAS0lF,QAAU,GACnCvF,EAAQf,aAAa,UAAWqG,GAGhCzlF,EAAWA,GAAY,CAAC,EACxB,IAAK,MAAMutB,KAAM23D,EACO,OAAjBllF,EAASutB,GACVvtB,EAASutB,GAAM,KAEfvtB,EAASutB,GAAMvtB,EAASutB,IAAO23D,EAAgB33D,GAgCrD,GA3BGvtB,EAASygF,UACTzgF,EAAS2lF,OACT3lF,EAASyD,MACTzD,EAASyD,KAAK1D,QAEdC,EAASyD,KAAK5F,SAAQ,SAAU+sB,GAC7B5qB,EAAS2lF,MAAM59E,KAAI,SAAUoF,GACtBA,EAAE3S,IAAMowB,EAAEpwB,KAAIowB,EAAE4wB,IAAMruC,EAAEquC,IAC/B,GACH,IACAx7C,EAAe,KAAIpG,KAAKgsF,YACrB5lF,EAAe,KACfA,EAASygF,WAEgB,MAApBzgF,EAAe,MAAiC,IAApBA,EAAe,KACnDA,EAAe,KAAIpG,KAAKgsF,YAAY,GAAI5lF,EAASygF,UAEjDzgF,EAAe,KAAIpG,KAAKgsF,YACrB5lF,EAAe,KACfA,EAASygF,UAKfzgF,EAAgB,MAAIpG,KAAKY,GAGE,MAAvB2lF,EAAQ0F,YAIT,YAFA1F,EAAQ0F,YAAYC,WAAW9lF,GAQlC,IAAI+lF,EAuFJ,GA1FA/lF,EAASk1B,QAAUirD,EAIfngF,EAASygF,UACNzgF,EAASgmF,QACVhmF,EAASimF,UAAY,CAClBC,qBAAsB,SAAUnqF,GAC7B,MAAO,mDACJA,EAAQoqF,YAAc,eAAiB,8JAGpCpqF,EAAQ0N,wBAAwBzJ,EAASR,oHAGtCQ,EAASomF,eACJpmF,EAASomF,eAAerqF,GACxB,uBAErBiE,EAASqmF,cAA+B,GAAftqF,EAAQkM,yBAEjBlM,EAAQw3D,UACH,8GACA,2BAGjB,GAGHvzD,EAASimF,UAAY,CAClBC,qBAAsB,SAAUnqF,GAC7B,MAAO,mDACJA,EAAQoqF,YAAc,eAAiB,iDAEzBpqF,EAAQy/C,mDACnBz/C,EAAQ0N,wBAAwBzJ,EAASR,oCAEtCQ,EAAS8vD,SACJ,qFACA,+BAGL9vD,EAASomF,eACJpmF,EAASomF,eAAerqF,GACxB,+BAELiE,EAASqmF,cAA+B,GAAftqF,EAAQkM,iCAEjClM,EAAQw3D,UACH,yFACA,2BAGjB,GAGNwyB,EAAmB,IAAIO,YAAYC,OAAOC,SAASxmF,GAEnDmgF,EAAQ0F,YAAcE,EACtBnsF,KAAK6sF,oBAAoBtG,EAAS3mF,EAAKwf,KAEvChZ,EAASimF,UAAY,CAClBS,mBAAoB,SAAU3qF,GAC3B,MAAO,gEACJA,EAAQ0N,wBACSzJ,EAASR,0BAEpBQ,EAAS8vD,SACJ,kFACA,4BAGL9vD,EAASomF,eACJpmF,EAASomF,eAAerqF,GACxB,4BAELiE,EAASqmF,cAA+B,GAAftqF,EAAQkM,8BAEjClM,EAAQw3D,UACH,sFACA,yBAGjB,GAGHwyB,EAAmB,IAAIO,YAAYC,OAAOI,OAAO3mF,GACjDmgF,EAAQ0F,YAAcE,GAGrB/lF,EAAS8vD,SAAU,CACpB,MAAM82B,EAAsB,KACzB,MAAM3iC,EAAWrqD,KACXitF,EAAYhgD,SAAS0kC,iBACxB,oFAEH,IAAK,IAAIp+D,EAAI,EAAGA,EAAI05E,EAAU9mF,OAAQoN,IAAK,CACxC,MAAM25E,EAAQD,EAAU15E,GACpB25E,IAAUA,EAAMC,kBACjBD,EAAM/zE,iBACH,SACA,SAAU9O,GACPA,EAAE0gF,kBACF1gF,EAAE+iF,iBAEF,MAAMC,EAAYrtF,KAAKstF,cACvB,IAAKD,EAAW,OAEhB,MAAMr+D,EAAQq+D,EAAUtF,aAAa,gBACrC,IAAK/4D,EAAO,OAEZ,MAAMtkB,EAAU2iF,EAAUtF,aAAa,iBACvC,IAAKr9E,EAAS,OAEd,MAAM6iF,EAAYljC,EAASplD,OAAO8I,UAAUrD,GACvC6iF,GAELA,EAAU/9E,KAAK,WAAYwf,EAC9B,IACA,GAEHk+D,EAAMC,iBAAkB,EAE9B,GAGHt4E,YAAW,KACRm4E,IAEAzG,EAAQptE,iBAAiB,UAAU,KAChC6zE,GAAqB,GACtB,GACF,IACN,CAGA,GAAI5mF,EAASqlF,SAAU,CACpB,MAAM+B,EAAajH,EAAQkH,uBAAuB,qBAClD,IAAK,IAAIl6E,EAAI,EAAGA,EAAIi6E,EAAWrnF,OAAQoN,IAAK,CACzC,MAAMm6E,EAAWF,EAAWj6E,GACxBm6E,GACDA,EAASC,WAAWC,YAAYF,EAEtC,CACH,CAGA1tF,KAAK6tF,oBAAsBznF,CAC9B,CAEA0nF,eAAevH,GACZ,OAAIA,GAAWA,EAAQ0F,YAChBjsF,KAAK6tF,qBAAuB7tF,KAAK6tF,oBAAoBhH,SAE/CN,EAAQ0F,YAAY13D,WAAa,GAGjCgyD,EAAQ0F,YAAY13D,WAAa,KAGvCv0B,KAAK6tF,qBAAuB7tF,KAAK6tF,oBAAoBhH,SAC/C,GACE,IAElB,CAEAkH,eAAexH,EAAS18E,GAChB08E,GAAYA,EAAQ0F,cAEzBpiF,EAAO7J,KAAKgsF,YAAYniF,EAAM08E,EAAQ0F,YAAY9pF,QAAQ0kF,UAGtD15E,MAAMC,QAAQvD,IAASA,EAAK,IAC5BA,GAAQA,EAAKjJ,GAGd2lF,EAAQ0F,YAAY+B,QAAQnkF,GAC1B08E,EAAQ0F,YAAY/mF,QAC5B,CAEA+oF,mBAAmB1H,GACZA,GAAWA,EAAQ0F,cACpB1F,EAAQ0F,YAAYn3E,iBAEbyxE,EAAQ0F,YAErB,CAEAD,YAAYniF,EAAMg9E,GAAW,GAC1B,IAAKh9E,GAAQg9E,EACV,MAAO,GACH,GAAIA,GAAYh9E,GAAQsD,MAAMC,QAAQvD,IAAwB,GAAfA,EAAK1D,OACxD,MAAO,GACH,IAAK0gF,GAAYh9E,GAAQsD,MAAMC,QAAQvD,IAAwB,GAAfA,EAAK1D,OACzD,OAAO,KACH,IAAK0D,IAASg9E,EAClB,OAAO,KAGV,GAAmB,iBAARh9E,GAAoBA,EAAK1D,OAAS,EAC1C,IACG0D,EAAOkK,KAAK0D,MAAM5N,EAIrB,CAHE,MAAOQ,GAENR,EAAO,CAAEjJ,GAAIiJ,EAAMwE,KAAMxE,EAC5B,CAyBH,OArBKg9E,GAAY15E,MAAMC,QAAQvD,GAC5BA,EAAOA,EAAK,GACJg9E,IAAa15E,MAAMC,QAAQvD,KACnCA,EAAO,CAACA,IAIPg9E,EACDh9E,EAAK5F,SAAS+sB,KACNA,EAAEpwB,IAAMowB,EAAEnhB,OACZmhB,EAAEpwB,GAAKowB,EAAEnhB,KACZ,KAGEhG,EAAKjJ,IAAMiJ,EAAKgG,OAAMhG,EAAKjJ,GAAKiJ,EAAKgG,MAGjC,MAARhG,GAAgBg9E,IACjBh9E,EAAO,IAGHA,CACV,CAEAgjF,oBAAoBtG,GACjB,GAAKA,EAAQ2H,cACO3H,EAAQ2H,aACR3H,EAAQ+G,cAAcY,aACV,EAAG,CAChC,IAAIr8D,EAAQ,EACRlsB,EAAS,GAKb,GAJI4gF,GAAWA,EAAQ0F,cACpBtmF,EAAS4gF,EAAQ0F,YAAYhgF,YAAc,IAE9C4lB,EAAQlsB,EAAOQ,OACX0rB,EAAQ,EAAG,CACZ,MAAMs8D,EAAQ5H,EAAQhV,cACnB,iCAEH,GAAa,MAAT4c,EACDA,EAAMhhD,UAAYtb,MACd,CACJ,MAAMu8D,EAASnhD,SAASC,cAAc,KACtCkhD,EAAOjG,KAAO,sBAMd,MAAM5lF,EAAO0qC,SAASC,cAAc,QAC9BmhD,EAAWphD,SAASqhD,eAAez8D,GACzCtvB,EAAKwkF,UAAU3lE,IAAI,cAAe,oBAClC7e,EAAKgsF,YAAYF,GACjBD,EAAOG,YAAYhsF,GACnBgkF,EAAQgI,YAAYH,EACvB,CACH,CACH,CACH,oBCnWH,MAAMI,EAAoB,EAAQ,OAElC/uF,EAAOC,QAAU,cAA4B8uF,EAkB1Cxa,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAclC,OAZAF,EAAOqD,OAAS,OAChBrD,EAAOf,IAAM,WAEbe,EAAOqjE,SAAW,CAACttD,EAAKy0B,EAAQ9pC,IAExBqV,EAAIqqE,OAGC,IAFC1/E,GAAS,IAAIiS,WAAW1B,QAAQ,OAAQ,QAM/CjR,CACV,CAQAmjC,aAAaz/B,GAELA,EAAO3F,KAAK8G,aAEV9G,KAAKoG,SAASomC,UACXxsC,KAAKoG,SAASomC,QAAQn/B,QAAQ,WAAa,EAC5C1H,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAG8N,OAElClK,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAASomC,QAIpD,CAUAhc,YAAY3mB,EAAMtC,GAGf,GAFAzH,MAAM0wB,YAAY3mB,EAAMtC,GAEpBsC,GAAQA,EAAK7J,KAAK8G,YAAa,CAChC,MAAM2nF,EAAazuF,KAAKL,YAAYyE,WAAW29C,gBAE/C,GAAIl4C,EAAK7J,KAAK8G,YAAYX,OAASsoF,EAAY,CAC5C,MAAM1uF,EAAIC,KAAK+B,GAAG9B,QAClBsH,EAAUkW,SACPzd,KAAK8G,WACL/G,EAAE,2CAA4C,CAAC0uF,IAErD,CACH,CACH,CAOItqD,qBACD,OAA4C,GAArCnkC,KAAKoG,SAAS47C,mBACxB,CAWAwf,gBAGG,MAAMkkB,EAAuB5lF,MAAM0hE,gBAYnC,OATAkkB,EAAqBj5C,OAAS,KACpB,CACJpoC,IAAK,UACL+B,SAAU,CACPxE,KAAM,YAKR8jF,CACV,CAEAnnB,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,CAYAz9E,SAASuJ,EAAMqgB,GACZ3uB,MAAM+E,SAASuJ,EAAMqgB,EAAS,GACjC,oBC9IH,MAAMigE,EAAyB,EAAQ,OAEvCjvF,EAAOC,QAAU,cAAiCgvF,EAsB/C1a,aAAa7xE,GACV,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOqjE,SAAY72C,GAEXA,EAAQ4zD,OAGH,GAFAriF,KAAKwgB,OAAOiO,GAMlBxsB,CACV,CAUAyyE,gBAA8C,CAW9ClT,gBAEG,OAAO,IACV,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,oBC3EH,MAAMqM,EAAkB,EAAQ,OAE1B5uF,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAElDrW,EAAOC,QAAU,cAA0BivF,EAqBxCnG,kBAAkBxwE,GACf,MAAO,GAAGhY,KAAK8G,WAAWoM,QAAQ,KAAM,QAAQ8E,EAAIpX,SACvD,CAGAozE,aAAa7xE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMk0E,aAAa7xE,GAC5ByD,EAAQ5F,KAEd,IAAI4uF,EAAY,GACZC,EAAc,GACd1sF,EAAQ2sF,SACTF,EAAY,cACZC,EACG,8CACA9uF,EAAE,gBACF,WAGN,MAAMiB,EAAQmB,EAAQnB,MA8EtB,OA5EAiB,EAAOqjE,SAAYttD,IAChB,GAAIA,EAAIqqE,OAAQ,OAAOrqE,EAAIpS,EAAMkB,YAEjC,MAAMioF,EAAW,GACjB,IAAIC,EAAgBhvF,KAAK+B,GAAG2D,UAAUE,EAAMQ,SAASjE,SACrD6sF,EAAgB,IAAIvrF,MAAM8rE,eAAe,CACtC1lE,KAAMmlF,IAGT,IAAIrpF,EAASqS,EACgB,MAAzBA,EAAIpS,EAAMkB,cACXnB,EAASqS,EAAIpS,EAAMkB,aAGtBkoF,EAAcnlF,KAAKy7E,MAAK,SAAUttE,GAC/B,QAC4B,IAAlBrS,EAAO0H,UACa,GAA3B1H,EAAO0H,QAAQ2K,EAAIpX,IACpB,CACC,IAAI0oF,EAAO,GAEP2F,EAASj3E,EAAIpX,GACjB,KAAOZ,KAAKkvF,YAAYD,IACrBD,EAAcnlF,KAAKy7E,MAAK,SAAU6J,GAC3BH,EAAcnlF,KAAKqlF,YAAYD,IAAWE,EAAIvuF,KAC/C0oF,EAAO6F,EAAI9gF,KAAO,KAAOi7E,EAE/B,IACA2F,EAASjvF,KAAKkvF,YAAYD,GAG7B3F,GAAQtxE,EAAI3J,KACZ0gF,EAASzqF,KAAKglF,EACjB,CACH,IAGA,IAAI8F,EAAW,GAkBf,OAjBAA,GAAY,iCACW,GAAnBL,EAAS5oF,OACVipF,GAAYP,EAEZE,EAAS9qF,SAAQ,SAAUmK,GACxBghF,GACG,0GAGAhhF,EACA,SACN,IAEHghF,GAAY,SAIRpuF,EAEE,4BACAA,EACA,+BACA4tF,EACA,KACAQ,EACA,SAIA,+BACAR,EACA,KACAQ,EACA,QAEN,EAGIntF,CACV,CAUAyyE,cAAct1D,EAAKxf,EAAK2C,EAAMJ,GAE3B,IAAKI,EACF,OAKH,MAAMqD,EAAQ5F,KAEd,IAJAmC,EAAUA,GAAW,CAAC,GAIV2sF,OAAQ,CACjB,IAAK1vE,GAAqB,GAAdA,EAAIjZ,OAKb,YAJA5D,EAAK4qC,UACF,uFACAptC,EAAE,gBACF,iBAIN,MAAMgvF,EAAW,GACjB5sF,EAAUnC,KAAK+B,GAAG2D,UAAUE,EAAMQ,SAASjE,SAC3CA,EAAU,IAAIsB,MAAM8rE,eAAe,CAChC1lE,KAAM1H,IAGT,IAAIwD,EAASyZ,EACgB,MAAzBA,EAAIxZ,EAAMkB,cACXnB,EAASyZ,EAAIxZ,EAAMkB,aAGtB3E,EAAQ0H,KAAKy7E,MAAK,SAAUttE,GACzB,QAC4B,IAAlBrS,EAAO0H,UACa,GAA3B1H,EAAO0H,QAAQ2K,EAAIpX,IACpB,CACC,IAAI0oF,EAAO,GAEP2F,EAASj3E,EAAIpX,GACjB,KAAOZ,KAAKkvF,YAAYD,IACrB9sF,EAAQ0H,KAAKy7E,MAAK,SAAU6J,GACrBhtF,EAAQ0H,KAAKqlF,YAAYD,IAAWE,EAAIvuF,KACzC0oF,EAAO6F,EAAI9gF,KAAO,KAAOi7E,EAE/B,IACA2F,EAASjvF,KAAKkvF,YAAYD,GAG7B3F,GAAQtxE,EAAI3J,KACZ0gF,EAASzqF,KAAKglF,EACjB,CACH,IAEA,MAAM+F,EAAQ,UACd,IAAID,EAAW,GACfA,GAAY,4CACZL,EAAS9qF,SAAQ,SAAUmK,GACxBghF,GACG,qFACAC,EACA,iBACAjhF,EACA,SACN,IACAghF,GAAY,SAEZ7sF,EAAK4qC,UAAYiiD,CACpB,CAEAxpF,EAAM0pF,SAAS/sF,EAAM3C,EAAKwf,EAC7B,CAUA8iE,WAAW9iE,EAAKxf,EAAK2C,EAAMpC,GACxB,MAAMN,EAASD,EAAIQ,OAAOJ,KAAKwoF,kBAAkBppE,IAC3CmwE,EAAU,GAAG1vF,UACb2vF,EAAS,GAAG3vF,SACZa,EAAOiD,GAAGpB,GACVqD,EAAQ5F,KACRyvF,EAAkBtvF,EACxB,IAAIwF,EAAS,CAAC,EACV+pF,GAAc,EAclB,SAASC,EAAa/pF,EAAOH,GAC1BE,EAbH,SAAmBC,EAAOwZ,GACvB,IAAIzZ,EAAS,CAAC,EAQd,YANmB,IAATC,QACoB,IAApBA,EAAMkB,iBACmB,IAAzBsY,EAAIxZ,EAAMkB,cAEjBnB,EAASyZ,EAAIxZ,EAAMkB,aAEfnB,CACV,CAGYiqF,CAAUhqF,EAAOH,GAE1B,MAAMoqF,EAAQlsF,GAAG6rF,GACjBK,EAAMtQ,aAEN,MAAMp9E,EAAUyD,EAAM7D,GAAG2D,UAAUE,EAAMQ,SAASjE,SAClD0tF,EAAM70E,WACN60E,EAAMp4E,MAAMtV,GACZ0tF,EAAMnrF,UACNmrF,EAAMC,aACND,EAAME,UAEQ,MAAVpqF,GAAkBA,EAAOQ,QAC1BR,EAAO1B,SAAQ,SAAUrD,GAClBivF,EAAMviE,OAAO1sB,KACdivF,EAAMG,UAAUpvF,GACJivF,EAAMrb,YAAY5zE,GAC1BmmF,UAAU3lE,IAAI,YAExB,IAEHyuE,EAAMrQ,cACT,CAuGA,OArGI77E,GAAG4rF,IACJ5rF,GAAG4rF,GAAS3qF,OACZ+qF,EAAa3vF,KAAMof,IAEnB3b,MACIhD,GAAG,CACDG,GAAI2uF,EACJ7uF,KAAM,QACNM,MAAO,IACPD,OAAQ,IACRqB,GAAI,CACDoI,OAAQ,KACc,GAAfklF,GAAqBC,EAAa3vF,KAAMof,GAE5CswE,GAAc,CAAK,GAGzBjuF,KAAM,CACHb,GAAI4uF,EACJ9uF,KAAM,OACNQ,IAAK,eACLokE,SAAU,SAAUttD,EAAKy0B,GACtB,MACG,UACAA,EAAO+1C,SAASxqE,EAAKy0B,GACrB,SACAz0B,EAAI3J,KACJ,UAEN,EACAjM,GAAI,CACD6tF,YAAa9qF,eAAgBvE,EAAI+B,EAAOkuB,GACrC,MAAMq/D,EAAMlwF,KAAKw0E,YAAY5zE,GACvBuvF,EAAOnwF,KAQb,GAPa,GAAT2C,EACDutF,EAAInJ,UAAU3lE,IAAI,YAElB8uE,EAAInJ,UAAUhsE,OAAO,YAIpB/a,KAAKkvF,YAAYtuF,GAAK,CACvBuvF,EAAK5Q,aAEL,IAAI0P,EAASruF,EACb,KAAOZ,KAAKkvF,YAAYD,IACrBA,EAASjvF,KAAKkvF,YAAYD,GACtBA,GAAUruF,GAAIuvF,EAAKC,YAAYnB,GAGtCjvF,KAAK6J,KAAKwmF,YAAYpB,GAAQ,SAAU7gF,GACjCA,EAAKxN,IAAMA,GAAIuvF,EAAKC,YAAYhiF,EAAKxN,GAC5C,IAEAuvF,EAAK3Q,cACR,MACG2Q,EAAK5Q,aACLv/E,KAAK6J,KAAKwmF,YAAYzvF,GAAI,SAAUoX,GAC7BA,EAAIpX,IAAMA,GAAIuvF,EAAKC,YAAYp4E,EAAIpX,GAC1C,IACAuvF,EAAK3Q,eAER,MAAM75E,EAAS,CAAC,EAGhB,GAFAA,EAAOC,EAAMkB,YAAcnD,GAAG6rF,GAAQc,aAElClxE,EAAIxe,GAAI,CAE8B,GAAnC+E,EAAOC,EAAMkB,YAAYX,SAC1BR,EAAOC,EAAMkB,YAAc,IAE9B,UACSlB,EAAMX,OAAO+C,QAAQirE,OAAO7zD,EAAIxe,GAAI+E,GAGtCjF,GAAQA,EAAK4wB,YACd5wB,EAAK4wB,WAAWlS,EAAIxe,GAAI+E,EAW9B,CATE,MAAOwC,GACN5F,EAAKwkF,UAAU3lE,IAAI,iBACnB7e,EAAKwkF,UAAU3lE,IAAI,sBAEnBphB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4BACT8N,IAAKA,EACLzZ,OAAQA,GAEd,CACH,KAAO,CACJ,MAAM8oB,EAAU,CAAC,EACjBA,EAAQ7oB,EAAMkB,YAAcnD,GAAG6rF,GAAQc,aAEvC1qF,EAAMf,SAASlB,GAAG8rF,EAAgBhvF,GAAGG,IAAK6tB,EAC7C,CACH,MAIR7pB,KAAKrC,EAAM,CACT2K,GAAI,KAGN,CACV,CAEAoiF,SAAS/I,EAASnnE,GACf,MAAMxZ,EAAQ5F,KAId,IAHAumF,EAAUA,EAAQhV,cAAc,sBACJgf,aACRhK,EAAQ+G,cAAcY,aACV,EAAG,CAChC,IAAIr8D,EAAQ,EAKZ,GAHGA,EADCzS,EAAIxZ,EAAMkB,aAAesY,EAAIxZ,EAAMkB,YAAYX,OACxCiZ,EAAIxZ,EAAMkB,YAAYX,OACpB,EAET0rB,EAAQ,EAAG,CACZ,MAAMs8D,EAAQ5H,EAAQhV,cACnB,iCAEH,GAAa,MAAT4c,EACDA,EAAMhhD,UAAYtb,MACd,CACJ,MAAMu8D,EAASnhD,SAASC,cAAc,KACtCkhD,EAAOjG,KAAO,sBACdiG,EAAOj1E,iBAAiB,SAAS,SAAU0X,GAIxCA,EAAMk6D,iBACT,IACA,MAAMxoF,EAAO0qC,SAASC,cAAc,QAC9BmhD,EAAWphD,SAASqhD,eAAez8D,GACzCtvB,EAAKwkF,UAAU3lE,IAAI,cAAe,oBAClC7e,EAAKgsF,YAAYF,GACjBD,EAAOG,YAAYhsF,GACnBgkF,EAAQgI,YAAYH,EACvB,CACH,CACH,CACH,CAWA5sB,gBACG,OAAO1hE,MAAM0hE,cAAc,WAC9B,CAEAjD,kBACG,MAAM+jB,EAAyBxiF,MAAMy+D,kBAQrC,OANA+jB,EAAuB71C,OAAS,KACtB,CACJpoC,IAAK,eAIJi+E,CACV,CAEAr2E,SAASmC,EAAMqgB,GACZ,IAAI9oB,EAAS,CAAC,EAEd,OADAA,EAASyI,EAAKwhF,YACPjqF,CACV,CAEAd,SAASuJ,EAAMqgB,GACZ,IAAKrgB,EAAM,OAAO,EAElB,MAAM8H,EAAMuY,EAAQzuB,KAAK8G,aAAe,GAExCsH,EAAKoiF,UAAUt6E,GAEf,MAAMg6E,EAAM9hF,EAAKV,MAAM6jE,cAAc,qBAErC,IAAK2e,EAAK,OAAO,EAGjBlwF,KAAK00E,cAAcx+D,EAAKlW,KAAKJ,IAAKswF,EAAK,CACpC9nC,UAAU,EACV0mC,QAAQ,IAGXj6E,YAAW,WACR,IAAI9T,EAAS,GACTmvF,EAAIK,aAAe,KACpBxvF,EAASmvF,EAAIK,cAEhBniF,EAAKnM,OAAOlB,OAASA,EAAS,EAC9BqN,EAAKvN,QACR,GAAG,IACN,oBC1cH,MAAM6hF,EAAqB,EAAQ,OAC7B+N,EAAkB,EAAQ,OAEhChxF,EAAOC,QAAU,cAA0B+wF,EACxC9wF,YAAYgG,EAAQV,EAAQy1C,GACzB56C,MAAM6F,EAAQV,EAAQy1C,EACzB,CAMAv1C,aAEG,GAAe,MAAXnF,KAAKY,GAAY,CAClB,MAAM8vF,EAAW1wF,KAAK+B,GAAG24B,aACnBi2D,EAAWF,EAAgBrsF,WAEjCpE,KAAKoG,SAASO,WAAa+pF,EAAS9vF,GACpCZ,KAAKoG,SAASgB,WAAa,EAEvBpH,KAAKoG,SAASk7C,YACfthD,KAAKoG,SAASkB,YAAcqpF,EAASxoC,kBACrCnoD,KAAKoG,SAASa,SAAW,OACzBjH,KAAKoG,SAASc,YAAc,OAC5BlH,KAAKoG,SAASM,SAAW,IAEzB1G,KAAKoG,SAASiB,WAAaspF,EAASxoC,kBACpCnoD,KAAKoG,SAASa,SAAW,MACzBjH,KAAKoG,SAASc,YAAc,OAC5BlH,KAAKoG,SAASM,SAAW,GAQ5B,MAAMlB,EAAUkrF,EAASxqF,SAAS,CAC/B7B,IAAKq+E,EAAmBt+E,WAAWC,IACnCyC,WAAY,GAAG9G,KAAKiF,OAAOkC,QAAQnH,KAAKoB,QACxCA,MAAOpB,KAAKiF,OAAO7D,MACnBgF,SAAU,CACPC,SAAUrG,KAAKoG,SAASC,SACxBM,WAAY3G,KAAKiF,OAAOrE,GACxBqG,SAAUjH,KAAKoG,SAASc,YACxBA,YAAalH,KAAKoG,SAASa,SAC3BG,WAAYpH,KAAKoG,SAASgB,WAC1BC,WAAYrH,KAAKoG,SAASiB,WAC1BC,YAAatH,KAAKoG,SAASkB,YAC3BZ,SAAU,KAgBhB,IAAIqZ,QAAe/f,KAAK+U,eAAenN,OACvC5H,KAAKY,GAAKmf,EAAOnf,GAEjB4E,EAAQY,SAAS6B,WAAajI,KAAKY,GACnC,IAAIgwF,QAAmBprF,EAAQuP,eAAenN,OAgB9C,OAfApC,EAAQ5E,GAAKgwF,EAAWhwF,GAExBZ,KAAKoG,SAAS6B,WAAazC,EAAQ5E,SAC7BZ,KAAK+U,eAAenN,aAGpB5H,KAAKiF,OAAOg/B,SAASjkC,YAErB0wF,EAASzsD,SAASz+B,SAGlBxF,KAAKkI,sBAEL1C,EAAQ0C,gBAEPlI,IACV,CACG,OAAOF,MAAM8H,MAEnB,CAIAosE,aAAa7xE,GAGV,OADAA,EAAUnC,KAAK6wF,kBAAkB1uF,GAC1BrC,MAAMk0E,aAAa7xE,EAC7B,CAiBA0uF,kBAAkB1uF,GAkBf,OAjBAA,EAAUA,GAAW,CAAC,GACdimD,SACqB,MAA1BpoD,KAAKoG,SAASgiD,UAAmBpoD,KAAKoG,SAASgiD,SAElDjmD,EAAQsqF,cAC2B,MAAhCzsF,KAAKoG,SAASmiD,iBACRvoD,KAAKoG,SAASmiD,eAGvBpmD,EAAQqqF,eAAkB9qC,GAClB1hD,KAAKoG,SAASkiD,mBAEf5G,EAAI3wC,SACE,mBAAmB2wC,EAAI3wC,4GACrB,oDAJkC,GAO1C5O,CACV,CAQAijC,aAAaz/B,GACN3F,KAAKoG,SAASiiD,gBACXroD,KAAKoG,SAASk7C,WACf37C,EAAO3F,KAAK8G,YAAc,CACvB,CACGlG,GAAIZ,KAAK+B,GAAG+Q,QAAQlC,WACpBvC,KAAMrO,KAAK+B,GAAG+Q,QAAQlC,aAI5BjL,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAG+Q,QAAQlC,WAGnD,CAEA3E,SAASmC,GACN,IAAI8H,EAAMpW,MAAMmM,SAASmC,GAczB,OAZI8H,IACiB,iBAAPA,EACRA,EAAMA,EAAIhD,QAAQ,mBAAoBlT,KAAK+B,GAAG+Q,QAAQlC,YAChDzD,MAAMC,QAAQ8I,KACpBA,EAAMA,EAAI/H,KAAKmF,IACXA,EAAE1C,UAAY0C,EAAEzD,MAAQyD,EAAE1S,IAAM0S,IAAIJ,QAClC,mBACAlT,KAAK+B,GAAG+Q,QAAQlC,gBAKrBsF,CACV,CAEArR,SAASuJ,EAAMqgB,GACZ,IAAIvY,EAAMuY,EAAQzuB,KAAK8G,YAEZ,mBAAPoP,IAA0BA,EAAMlW,KAAK+B,GAAG+Q,QAAQlC,YAEpD6d,EAAQzuB,KAAK8G,YAAcoP,EAE3BpW,MAAM+E,SAASuJ,EAAMqgB,EACxB,CAEAqqC,WACG,OAAO94D,KAAK+B,GAAG+Q,QAAQjC,WAAW1C,KAAKqtE,IACpC,MAAM1tE,EAAS,CACZlN,GAAI46E,EAAE5qE,SACNqoD,MAAOuiB,EAAEzqE,UASZ,OANI/Q,KAAKoG,SAASk7C,WACfxzC,EAAOO,KAAOmtE,EAAE5qE,SAEhB9C,EAAOnL,MAAQ64E,EAAE5qE,SAGb9C,CAAM,GAEnB,oBClMH,IAAIgjF,EAAoB,EAAQ,OAEhCrxF,EAAOC,QAAU,cAA4BoxF,EAS1CC,6BAA6BnwF,GAC1B,IAAIowF,EAAgBhxF,KAAK0nB,QAAQmjB,oBAAoBjqC,GACjDowF,IAGIhxF,KAAK6oD,SAAWmoC,EAAcnoC,SACf,CACd,UACA,UACA,OACA,aACA,WAEQ5kD,SAAS+d,IACjB,IAAIivE,EAAOjxF,KAAKgiB,GAChBhiB,KAAKgiB,GAAKgvE,EAAchvE,GACxBgvE,EAAchvE,GAAKivE,CAAI,GAInC,CAOAv1D,YAAYJ,GACTt7B,KAAKupC,UAAYjO,EAAQ16B,IAAMZ,KAAKupC,UAIhCjO,EAAQ41D,UAAY51D,EAAQ41D,SAAS/qF,OAAS,EAC3Cm1B,EAAQrmB,QAAiC,oBAAvBqmB,EAAQrmB,OAAOrT,MAClC5B,KAAK+wF,6BAA6Bz1D,EAAQrmB,OAAOrU,IAKjD06B,EAAQrmB,QACRqmB,EAAQrmB,OAAOi8E,UACf51D,EAAQrmB,OAAOi8E,SAAS/qF,OAAS,GAEjCm1B,EAAQrmB,OAAOi8E,SAASjtF,SAASktF,IAC9B,GAAkB,aAAdA,EAAMvvF,MAGJuvF,EAAM7mD,eAAe8mD,OACrBD,EAAM7mD,eAAe8mD,MAAMjrF,OAAS,GAGvBgrF,EAAM7mD,eAAe8mD,MAAM5jE,MAAMhZ,GACpCA,EAAE5T,IAAMZ,KAAKupC,YAEX,CACTvpC,KAAK+wF,6BAA6Bz1D,EAAQrmB,OAAOrU,IAGjD,IAAIywF,EAAWrxF,KAAK0nB,QAAQmjB,oBACzBsmD,EAAMvwF,IAELywF,GACDA,EAASC,QAAQtxF,KAEvB,CAEN,IAKTA,KAAKqC,SAASi5B,EACjB,CAQAj5B,SAASkvF,GAuCHA,EAAWjnD,eAAenjC,MACQ,IAAlCoqF,EAAWjnD,eAAenjC,OAE1BnH,KAAKoB,MAAQmwF,EAAWjnD,eAAenjC,KAI7C,oBCxIH,IAAIqqF,EAA2B,EAAQ,OAIvC/xF,EAAOC,QAAU,cAAmC8xF,EAcjD91D,YAAYJ,GACTt7B,KAAKupC,UAAYjO,EAAQ16B,IAAMZ,KAAKupC,UACpCvpC,KAAKqC,SAASi5B,EACjB,CAQAj5B,SAASkvF,GA6CN,GANGA,EAAWjnD,eAAenjC,MACQ,IAAlCoqF,EAAWjnD,eAAenjC,OAE1BnH,KAAKoB,MAAQmwF,EAAWjnD,eAAenjC,MAGtCoqF,EAAWL,SAAU,CACtB,IAAItoC,EAAU,GACd2oC,EAAWL,SAASjtF,SAASV,IACZ,aAAVA,EAAE3B,MACHgnD,EAAQtkD,KAAKf,EAAE3C,GAClB,IAEHZ,KAAK4oD,QAAUA,CAClB,CACH,CAQA6oC,oBACG,MAAO,CACJ,CACG7wF,GAAIZ,KAAKupC,UACT5nB,IAAK,CACFxa,KAAMnH,KAAKmH,OAIvB,oBC3GH,MAAMuqF,EAAuB,EAAQ,OAErCjyF,EAAOC,QAAU,cAA+BgyF,EAY7C58E,UASG,OAAOhV,MAAMgV,UAAUJ,MAAK,IAClB1U,KAAK0nB,QAAQojB,cAAc9qC,OAExC,CAEAuF,UA4BG,OAAO,CACV,CAMAosF,SAASj4D,EAAMvf,GACPuf,EAMDA,EAAK03D,OAAS13D,EAAK03D,MAAMjrF,OAAS,EACnCgU,EAAG,KAAMuf,EAAK03D,MAAM,IACE,oBAAd13D,EAAKuwB,MAEb9vC,EAAG,KAAMuf,IAGTA,EAAOA,EAAKhM,QACZ1tB,KAAK2xF,SAASj4D,EAAMvf,IAbpBA,EAAG,KAAM,KAef,CAEAm3E,QAAQM,GACL5xF,KAAKmqD,cAAgBynC,EAAKroD,SAC7B,CAOA7N,YAAYJ,GACTt7B,KAAKupC,UAAYjO,EAAQ16B,IAAMZ,KAAKupC,UACpCvpC,KAAKqC,SAASi5B,EACjB,CAQAj5B,SAASkvF,GA8CHA,EAAWjnD,eAAenjC,MACQ,IAAlCoqF,EAAWjnD,eAAenjC,OAE1BnH,KAAKoB,MAAQmwF,EAAWjnD,eAAenjC,MAI1C,IAAI0qF,EAAUN,EAAWjnD,eACzBtqC,KAAK2xF,SAASE,GAAS,CAAC1pF,EAAK6P,KACtBA,EACDhY,KAAKmqD,cAAgBnyC,EAAIpX,GAItB2wF,EAAWt8E,QACe,oBAA1Bs8E,EAAWt8E,OAAOrT,KAElB5B,KAAKmqD,cAAgBonC,EAAWt8E,OAAOrU,GAEvCZ,KAAKmqD,cAAgB,IAE3B,GAEN,CAQAsnC,oBACG,MAAMplB,EAAWrsE,KAAKqsE,WACtB,MAAO,CACJ,CACGzrE,GAAIZ,KAAKupC,UACT5nB,IAAK,CACFxa,KAAMnH,KAAKmH,MAEdsB,KAAM4jE,EAASlmE,OAASkmE,EAAW,MAG5C,CAQAylB,eAAelxF,GACZ,IAAIH,EAAK,CACNG,GAAIA,EACJF,KAAM,QACNU,MAAO,iDAGVqC,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,MACV,CAQAmtF,gBAAgBnxF,GAAK,CAOrBoxF,SAASpxF,GACN,GAAI+C,GAAG/C,GACJ,OAAO+C,GAAG/C,GAAIqL,UAEpB,CAUAgmF,SAASd,EAAOe,GAEblyF,KAAK0nB,QAAQojB,cAAc9qC,MAG3BA,KAAK0nB,QAAQijB,WAAWwmD,GAGxBA,EAAMW,eAAeI,GAErBlyF,KAAKwP,KAAK,WAAY2hF,EACzB,CASAnlB,eACGlsE,MAAMksE,eACNhsE,KAAK+oC,iBAIA/oC,KAAKyqD,aACuBzqD,KAAK0nB,QAAQuiB,oBACxCjqC,KAAKupC,WAEkBpjC,OAAS,GAChCnG,KAAKizD,eAAe,0CAG7B,CAMAA,eAAeh0C,EAAKpV,EAAO,CAAC,GACzB,IAAIyH,EAAU,GAAGtR,KAAKoE,SAASC,OAC5BrE,KAAKoB,MAAQpB,KAAKoB,MAAQpB,KAAKmH,UAC5B8X,IACNjf,KAAKssE,UAAUhoE,KAAK,CAAEgN,UAASzH,QAClC,oBC1RH,MAAMsoF,EAAmB,EAAQ,OAEjC1yF,EAAOC,QAAU,cAA2ByyF,qBCF5C,MAAMC,EAAgC,EAAQ,OAI9C3yF,EAAOC,QAAU,cAAwC,EAatD+xF,oBAEG,IAAIY,EAAavyF,MAAM2xF,oBAuBvB,OAX4BzxF,KAAK0nB,QAAQuiB,oBACtCjqC,KAAKupC,WAEctlC,SAASynC,IAC5B2mD,EAAW/tF,KAAK,CACb1D,GAAI8qC,EAAK9qC,GACT+gB,IAAK,CACFxa,KAAMnH,KAAKyvC,WAAW/D,EAAK9qC,KAAKQ,OAAS,KAE7C,IAEEixF,CACV,CAEArmB,eACGlsE,MAAMksE,eAGN,MAAMsmB,EAAwBtyF,KAAK0nB,QAAQuiB,oBACxCjqC,KAAKupC,WAEJ+oD,EAAsBnsF,OAAS,GAChCnG,KAAKizD,eAAe,6CAKvB,IAAIs/B,EAAiB,EACrBD,EAAsBruF,SAASV,IACmC,IAA1DvD,KAAKyvC,WAAWlsC,EAAE3C,KAAKikF,YAAYxjE,OAAOlb,QAAU,IACtDosF,GACH,IAGCA,EAAiB,GAClBvyF,KAAKizD,eACF,qDAGT,oBCpEH,MAAMu/B,EAAyB,EAAQ,OAEvC/yF,EAAOC,QAAU,cAAiC8yF,EAK/CxmB,eACGlsE,MAAMksE,eAIDhsE,KAAK8sD,SACP9sD,KAAKizD,eAAe,wBAGlBjzD,KAAKsR,SACPtR,KAAKizD,eAAe,wBAGvBjzD,KAAKyyF,cAAc,MACnBzyF,KAAKyyF,cAAc,QACnBzyF,KAAK0yF,eAAe,MACH,KAAb1yF,KAAKkqC,OACSlqC,KAAK2qD,UAEjB3qD,KAAKizD,eACF,4DAITjzD,KAAK2yF,kBAAkB,KAAM,WAC7B3yF,KAAK2yF,kBAAkB,OAAQ,YAClC,CAQAF,cAAcpuF,GACM,IAAbrE,KAAKqE,IACNrE,KAAKizD,eAAe,oBAAoB5uD,cAE9C,CAUAquF,eAAeruF,GACZ,GAAkB,MAAdrE,KAAKqE,GAAc,CAIpB,IAAIwmD,EAAY7qD,KAAK0nB,QAAQujB,mBAAmBjrC,MAC5C4yF,GAAoB,EACxB/nC,EAAU5mD,SAASq7B,IACLA,EAAEqrB,WAEVioC,GAAoB,EACvB,IAEEA,GAAyC,GAApB/nC,EAAU1kD,QACjCnG,KAAKizD,eACF,8CAA8C5uD,YAGvD,CACH,CAWAsuF,kBAAkBtuF,EAAKwuF,GACH,KAAb7yF,KAAKqE,IACFrE,KAAK6yF,KACF7yF,KAAK6yF,GAAQjtE,SACkB,GAA5B5lB,KAAK6yF,GAAQhtE,KAAK1f,QACnBnG,KAAKizD,eAAe,oBAAoB5uD,oBAG1CrE,KAAK6yF,GAAQ/pC,YACqB,GAA/B9oD,KAAK6yF,GAAQ9pC,QAAQ5iD,QACtBnG,KAAKizD,eACF,oBAAoB5uD,uBAUtC,oBC5GH,MAAMyuF,EAA2B,EAAQ,OAEzCrzF,EAAOC,QAAU,cAAmCozF,qBCFpD,MAAMC,EAAgC,EAAQ,MAE9C,IAAIhzF,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,cAAwC,EAOtDszF,YAAYpyF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACTqyF,kBAAmB,GAAGryF,sBACtBsyF,YAAa,GAAGtyF,gBAChBuyF,kBAAmB,GAAGvyF,sBACtBwyF,0BAA2B,GAAGxyF,8BAC9ByyF,SAAU,GAAGzyF,aACb0yF,eAAgB,GAAG1yF,mBACnB2yF,UAAW,GAAG3yF,cACd4yF,cAAe,GAAG5yF,kBAClB6yF,sBAAuB,GAAG7yF,0BAC1B8yF,SAAU,GAAG9yF,aACb+yF,uBAAwB,GAAG/yF,2BAC3BgzF,eAAgB,GAAGhzF,mBACnBizF,UAAW,GAAGjzF,cACdkzF,eAAgB,GAAGlzF,mBAEzB,CAQAkxF,eAAelxF,GACZ,IAAIV,EAAMF,KAAKgzF,YAAYpyF,GAEvBmzF,EAAgB,CAAC,CAAEnzF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAK0nB,QAAQ8jB,kBAAkBxrC,OACjC,IAAIiE,SAASmb,IAChC20E,EAAczvF,KAAK,CAAE1D,GAAIwe,EAAI/a,IAAK1B,MAAOyc,EAAIhe,OAAQ,IAGxD,IAAI4yF,EAAah0F,KAAK+B,GAAGykB,UAAUrY,KAAKgY,IAC9B,CAAEvlB,GAAIulB,EAAEvlB,GAAI+B,MAAOwjB,EAAE/kB,OAAS+kB,EAAEhf,KAAMlC,OAAQkhB,MAExD6tE,EAAWzgE,QAAQ,CAChB3yB,GAAI,EACJ+B,MAAO5C,EAAE,sBAOZ,IAAIk0F,EAAa,CACdrzF,GAAI,EACJ+B,MAAO5C,EAAE,mBAIZ,SAASm0F,EAAc1sD,GAGpB,IAAIzgC,EAAS,CAACktF,GACd,GAAIzsD,EAAO,CACR,IAAIptB,EAAQ45E,EAAWxmE,MAAMrH,GAAMA,EAAEvlB,IAAM4mC,IACvCptB,GAASA,EAAMnV,QAChBmV,EAAMnV,OAAO8B,SAAS9C,SAAS+C,IAC5BD,EAAOzC,KAAK,CAAE1D,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG5D,CACA,OAAOD,CACV,CAEA,SAASotF,EAAaC,EAAcC,EAAajvD,GAG9CgvD,EAAanwF,SAASqwF,IACnB,IAAIC,EAAS5wF,GAAG2wF,GACZC,IACDA,EAAO9vF,OAAO,UAAW4vF,GAMzBE,EAAO7vF,UACP6vF,EAAO3vF,OACV,GAEN,CAEA,IAAI4vF,EAAcN,EAAcl0F,KAAKkzF,aAGjCuB,EAAoB,CACrBv0F,EAAIizF,kBACJjzF,EAAIkzF,2BAKHsB,EAAWR,EAAcl0F,KAAKqzF,UAG9BsB,EAAiB,CAClBz0F,EAAIozF,eACJpzF,EAAIqzF,UACJrzF,EAAIszF,eAKP,SAASoB,EAAoBC,GAC1B,IAAIlvF,EAAS,CAAC,CAAE/E,GAAI,EAAG+B,MAAO5C,EAAE,+BAMhC,OALI80F,GAAeA,EAAY1yF,SAC5B0yF,EAAY1yF,UAAU8B,SAASkiB,IAC5BxgB,EAAOrB,KAAK,CAAE1D,GAAIulB,EAAEvlB,GAAI+B,MAAOwjB,EAAE9X,MAAO,IAGvC1I,CACV,CAaA,SAASmvF,EAAiB9X,GAEvB,IAbiCr3E,EAC7BovF,EAYAC,EAAYrxF,GAAGzD,EAAImzF,UAAUpnF,WAC7BgpF,EAAUjB,EAAWxmE,MAAMrH,GAAMA,EAAEvlB,IAAMo0F,IAC7C,GAAIC,GAAWA,EAAQhwF,OAAQ,CAC5B,IAAI4vF,EAAcI,EAAQhwF,OAAO8I,UAAUivE,GACvC6X,GAAeA,EAAY1yF,UAjBDwD,EAmB3BuvF,EAAsBN,EAAoBC,IAlB5CE,EAAcpxF,GAAGzD,EAAIuzF,0BAGtBsB,EAAYtwF,OAAO,UAAWkB,GAC9BovF,EAAYrwF,UAEZqwF,EAAYnwF,QAgBf,CACH,CAEA,IAAIswF,EAAsBN,IAItBO,EAAWjB,EAAcl0F,KAAK0zF,UAG9B0B,EAAiB,CAClBl1F,EAAIyzF,uBACJzzF,EAAI0zF,eACJ1zF,EAAI2zF,UACJ3zF,EAAI4zF,gBAKHrzF,EAAK,CACNG,GAAIA,EACJF,KAAM,OACNwI,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAI+yF,kBACRvyF,KAAM,SACNU,MAAOrB,EAAE,uBACT4C,MAAO3C,KAAKizF,kBACZ9rF,KAAM,oBACNhF,QAAS4xF,GAEZ,CACGnzF,GAAIV,EAAIgzF,YACRxyF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKkzF,YACZ/rF,KAAM,cACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAS26E,EAAQC,GACVD,GAAUC,IAEXuX,EAAcN,EAAclX,GAE5BmX,EAAaM,EAAmBD,GAEtC,IAGN,CACG5zF,GAAIV,EAAIizF,kBACRzyF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKmzF,kBACZhsF,KAAM,oBACNhF,QAASqyF,EACT3b,QAAQ,GAEX,CACGj4E,GAAIV,EAAIkzF,0BACR1yF,KAAM,SACNU,MAAOrB,EAAE,0BACT4C,MAAO3C,KAAKozF,0BACZjsF,KAAM,4BACNhF,QAASqyF,EACT3b,QAAQ,GAEX,CACGj4E,GAAIV,EAAImzF,SACR3yF,KAAM,SACNU,MAAOrB,EAAE,wBACT4C,MAAO3C,KAAKqzF,SACZlsF,KAAM,WACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAS26E,EAAQC,GACVD,GAAUC,IAEXyX,EAAWR,EAAclX,GAEzBmX,EAAaQ,EAAgBD,GAEnC,IAGN,CACG9zF,GAAIV,EAAIozF,eACR5yF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKszF,eACZnsF,KAAM,iBACNhF,QAASuyF,EACT7b,QAAQ,GAEX,CACGj4E,GAAIV,EAAIqzF,UACR7yF,KAAM,SACNU,MAAOrB,EAAE,UACT4C,MAAO3C,KAAKuzF,UACZpsF,KAAM,YACNhF,QAASuyF,EACT7b,QAAQ,GAEX,CACGj4E,GAAIV,EAAIszF,cACR9yF,KAAM,SACNU,MAAOrB,EAAE,cACT4C,MAAO3C,KAAKwzF,cACZrsF,KAAM,gBACNhF,QAASuyF,EACT7b,QAAQ,EACRz2E,GAAI,CACDC,SAAS26E,EAAQC,GACVD,GAAUC,GACX6X,EAAiB9X,EAEvB,IAGN,CACGp8E,GAAIV,EAAIuzF,sBACR/yF,KAAM,SACNU,MAAOrB,EAAE,wBACT4C,MAAO3C,KAAKyzF,sBACZtsF,KAAM,wBACNhF,QAAS+yF,EACTrc,QAAQ,GAEX,CACGj4E,GAAIV,EAAIwzF,SACRhzF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK0zF,SACZvsF,KAAM,WACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAS26E,EAAQC,GACVD,GAAUC,IAEXkY,EAAWjB,EAAclX,GAEzBmX,EAAaiB,EAAgBD,GAEnC,IAGN,CACGv0F,GAAIV,EAAIyzF,uBACRjzF,KAAM,SACNU,MAAOrB,EAAE,UACT4C,MAAO3C,KAAK2zF,uBACZxsF,KAAM,yBACNhF,QAASgzF,EACTtc,QAAQ,GAEX,CACGj4E,GAAIV,EAAI0zF,eACRlzF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAK4zF,eACZzsF,KAAM,iBACNhF,QAASgzF,EACTtc,QAAQ,GAEX,CACGj4E,GAAIV,EAAI2zF,UACRnzF,KAAM,SACNU,MAAOrB,EAAE,UACT4C,MAAO3C,KAAK6zF,UACZ1sF,KAAM,YACNhF,QAASgzF,EACTtc,QAAQ,GAEX,CACGj4E,GAAIV,EAAI4zF,eACRpzF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAK8zF,eACZ3sF,KAAM,iBACNhF,QAASgzF,EACTtc,QAAQ,KAKjBp1E,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAIZZ,KAAKkzF,aAAmC,GAApBlzF,KAAKkzF,aAC1BiB,EAAaM,EAAmBD,GAG/Bx0F,KAAKqzF,UAA6B,GAAjBrzF,KAAKqzF,UACvBc,EAAaQ,EAAgBD,GAG5B10F,KAAKwzF,eACNsB,EAAiB90F,KAAKwzF,eAGrBxzF,KAAK0zF,UAA6B,GAAjB1zF,KAAK0zF,UACvBS,EAAaiB,EAAgBD,GAGhCxxF,GAAG/C,GAAIgE,MACV,CAQAmtF,gBAAgBnxF,GACb,IAAIV,EAAMF,KAAKgzF,YAAYpyF,GAC3BZ,KAAKmH,KAAOnH,KAAKgyF,SAAS9xF,EAAIiH,MAE9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B5M,KAAK4M,GAAK5M,KAAKgyF,SAAS9xF,EAAI0M,GAAG,GAErC,oBC3XH,MAAMyoF,EAAwB,EAAQ,OAEtC,IAAIt1F,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,cAAgC21F,EAK9CrC,YAAYpyF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACT00F,eAAgB,GAAG10F,mBACnB20F,SAAU,GAAG30F,aACb40F,SAAU,GAAG50F,aACb60F,UAAW,GAAG70F,cACd80F,aAAc,GAAG90F,iBACjB+0F,YAAa,GAAG/0F,gBAChBg1F,cAAe,GAAGh1F,kBAClBi1F,cAAe,GAAGj1F,kBAClBk1F,gBAAiB,GAAGl1F,oBACpBm1F,eAAgB,GAAGn1F,mBACnBo1F,eAAgB,GAAGp1F,mBACnBq1F,UAAW,GAAGr1F,cACds1F,aAAc,GAAGt1F,gBACjBu1F,cAAe,GAAGv1F,kBAClBw1F,aAAc,GAAGx1F,iBACjBy1F,cAAe,GAAGz1F,kBAClB01F,gBAAiB,GAAG11F,oBACpB21F,oBAAqB,GAAG31F,wBACxB41F,eAAgB,GAAG51F,mBACnB61F,eAAgB,GAAG71F,mBAEzB,CAQAkxF,eAAelxF,GACZ,IAAIV,EAAMF,KAAKgzF,YAAYpyF,GAEvBmzF,EAAgB,CAAC,CAAEnzF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAK0nB,QAAQ8jB,kBAAkBxrC,OACjC,IAAIiE,SAASmb,IAChC20E,EAAczvF,KAAK,CAAE1D,GAAIwe,EAAI/a,IAAK1B,MAAOyc,EAAIhe,OAAQ,IAGxD,IAAI4yF,EAAah0F,KAAK+B,GAAGykB,UAAUrY,KAAKgY,IAC9B,CAAEvlB,GAAIulB,EAAEvlB,GAAI+B,MAAOwjB,EAAE/kB,OAAS+kB,EAAEhf,KAAMlC,OAAQkhB,MAExD6tE,EAAWzgE,QAAQ,CAChB3yB,GAAI,EACJ+B,MAAO5C,EAAE,sBAGZ,IAAI22F,EAAmBlvD,IACpB,IAAIzgC,EAAS,CACV,CACGnG,GAAI,EACJ+B,MAAO5C,EAAE,oBAIf,GAAIynC,EAAO,CACR,IAAIptB,EAAQ45E,EAAWxmE,MAAMrH,GAAMA,EAAEvlB,IAAM4mC,IACvCptB,GAASA,EAAMnV,QAChBmV,EAAMnV,OAAO8B,SAAS9C,SAAS+C,IAC5BD,EAAOzC,KAAK,CAAE1D,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG5D,CACA,OAAOD,CAAM,EAGZ4vF,EAAyBC,IAC1B,IAAI9oF,EAAS,GACT+oF,EAAW72F,KAAK+B,GAAGkW,WAAWjY,KAAKu1F,UACvC,IAAKsB,EAAU,OAAO/oF,EAEtB,IAAIgpF,EAAgBD,EAAS9oF,UAAU6oF,GACvC,OACIE,GACAA,EAAc1wF,UACd0wF,EAAc1wF,SAASjE,SAI3B2L,GAAUgpF,EAAc1wF,SAASjE,SAAW,IAAIgM,KAAKuzC,IAC3C,CACJ9gD,GAAI8gD,EAAI9gD,GACR+B,MAAO++C,EAAIrzC,SAIVP,GATGA,CASG,EAgDZipF,EAAiB,CAAC7+E,EAAUxN,KAC7B,IAAIoD,EAAS,GACT7I,EAASjF,KAAK+B,GAAGkW,WAAWC,GAChC,IAAKjT,EAAQ,OAAO6I,EAEpB,IAAIgpF,EAAgB7xF,EAAO8I,UAAUrD,GACrC,OACIosF,GACAA,EAAc1wF,UACd0wF,EAAc1wF,SAASjE,SAI3B2L,GAAUgpF,EAAc1wF,SAASjE,SAAW,IAAIgM,KAAKuzC,IAC3C,CACJ9gD,GAAI8gD,EAAI9gD,GACR+B,MAAO++C,EAAIrzC,SAIVP,GATGA,CASG,EAGZkpF,EAAWN,EAAgB12F,KAAKu1F,UAChC0B,EAAWP,EAAgB12F,KAAKw1F,UAChC0B,EAAYR,EAAgB12F,KAAKy1F,WACjC0B,EAAiBR,EAAsB32F,KAAK41F,eAC5CwB,EAAiBL,EAAe/2F,KAAKy1F,UAAWz1F,KAAKo2F,cAEzD,IAAI31F,EAAK,CACNG,GAAIA,EACJF,KAAM,OACN22F,eAAgB,CACbv1F,WAAY,KAEfoH,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAIo1F,eACR50F,KAAM,SACNU,MAAOrB,EAAE,+BACT4C,MAAO3C,KAAKs1F,eACZnuF,KAAM,iBACNhF,QAAS4xF,GAEZ,CACGnzF,GAAIV,EAAIq1F,SACR70F,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAKu1F,SACZpuF,KAAM,WACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAS26E,EAAQC,GACVD,GAAUC,IAEX+Z,EAAWN,EAAgB1Z,GA3GxB,CAACga,IACnB,CAAC92F,EAAIw1F,aAAcx1F,EAAIy1F,YAAaz1F,EAAI01F,eAAe3xF,SACnDqzF,IACE3zF,GAAG2zF,GAAa7yF,OAAO,UAAWuyF,GAClCrzF,GAAG2zF,GAAa5yF,SAAS,GAE9B,EAuGc6yF,CAAeP,GAErB,IAGN,CACGp2F,GAAIV,EAAIs1F,SACR90F,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAKw1F,SACZruF,KAAM,WACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAS26E,EAAQC,GACVD,GAAUC,IAEXga,EAAWP,EAAgB1Z,GA/GxB,CAACia,IACnB,CACG/2F,EAAI61F,eACJ71F,EAAI81F,eACJ91F,EAAI+1F,UACJ/1F,EAAIg2F,aACJh2F,EAAIi2F,eACLlyF,SAASqzF,IACR3zF,GAAG2zF,GAAa7yF,OAAO,UAAWwyF,GAClCtzF,GAAG2zF,GAAa5yF,SAAS,GAC1B,EAuGa8yF,CAAeP,GAErB,IAGN,CACGr2F,GAAIV,EAAIu1F,UACR/0F,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKy1F,UACZtuF,KAAM,YACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAS26E,EAAQC,GACVD,GAAUC,IACXia,EAAYR,EAAgB1Z,GAnHxB,CAACka,IACpBvzF,GAAGzD,EAAIk2F,cAAc3xF,OAAO,UAAWyyF,GACvCvzF,GAAGzD,EAAIk2F,cAAc1xF,SAAS,EAkHf+yF,CAAgBP,GAEtB,IAGN,CACGt2F,GAAIV,EAAIw1F,aACRh1F,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAK01F,aACZvuF,KAAM,eACNhF,QAAS60F,GAEZ,CACGp2F,GAAIV,EAAIy1F,YACRj1F,KAAM,SACNU,MAAOrB,EAAE,cACT4C,MAAO3C,KAAK21F,YACZxuF,KAAM,cACNhF,QAAS60F,GAEZ,CACGp2F,GAAIV,EAAI01F,cACRl1F,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAK41F,cACZzuF,KAAM,gBACNhF,QAAS60F,EACT50F,GAAI,CACDC,SAAS26E,EAAQC,GAnKF,IAACya,EAoKT1a,GAAUC,IACXka,EAAiBR,EAAsB3Z,GArK7B0a,EAsKWP,EArKpCxzF,GAAGzD,EAAI21F,eAAepxF,OAAO,UAAWizF,GACxC/zF,GAAGzD,EAAI21F,eAAenxF,UAsKb,IAGN,CACG9D,GAAIV,EAAI21F,cACRn1F,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAK61F,cACZ1uF,KAAM,gBACNhF,QAASg1F,GAEZ,CACGv2F,GAAIV,EAAI41F,gBACRp1F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAK81F,gBACZ3uF,KAAM,kBACNhF,QAAS80F,GAEZ,CACGr2F,GAAIV,EAAI61F,eACRr1F,KAAM,SACNU,MAAOrB,EAAE,oBACT4C,MAAO3C,KAAK+1F,eACZ5uF,KAAM,iBACNhF,QAAS80F,GAEZ,CACGr2F,GAAIV,EAAI81F,eACRt1F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKg2F,eACZ7uF,KAAM,iBACNhF,QAAS80F,GAEZ,CACGr2F,GAAIV,EAAI+1F,UACRv1F,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAKi2F,UACZ9uF,KAAM,YACNhF,QAAS80F,GAEZ,CACGr2F,GAAIV,EAAIg2F,aACRx1F,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKk2F,aACZ/uF,KAAM,eACNhF,QAAS80F,GAEZ,CACGr2F,GAAIV,EAAIi2F,cACRz1F,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKm2F,cACZhvF,KAAM,gBACNhF,QAAS80F,GAEZ,CACGr2F,GAAIV,EAAIk2F,aACR11F,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKo2F,aACZjvF,KAAM,eACNhF,QAAS+0F,EACT90F,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KACZD,GAAUC,IACXma,EAAiBL,EACd/2F,KAAKy1F,WAAa9xF,GAAGzD,EAAIu1F,WAAWxpF,WACpC+wE,GAxNM,CAACoa,IACzB,CACGl3F,EAAIm2F,cACJn2F,EAAIo2F,gBACJp2F,EAAIq2F,oBACJr2F,EAAIs2F,eACJt2F,EAAIu2F,gBACLxyF,SAASqzF,IACR3zF,GAAG2zF,GAAa7yF,OAAO,UAAW2yF,GAClCzzF,GAAG2zF,GAAa5yF,SAAS,GAC1B,EAgNaizF,CAAqBP,GACxB,IAIT,CACGx2F,GAAIV,EAAIm2F,cACR31F,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKq2F,cACZlvF,KAAM,gBACNhF,QAASi1F,GAEZ,CACGx2F,GAAIV,EAAIo2F,gBACR51F,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKs2F,gBACZnvF,KAAM,kBACNhF,QAASi1F,GAEZ,CACGx2F,GAAIV,EAAIq2F,oBACR71F,KAAM,SACNU,MAAOrB,EAAE,sBACT4C,MAAO3C,KAAKu2F,oBACZpvF,KAAM,sBACNhF,QAASi1F,GAEZ,CACGx2F,GAAIV,EAAIs2F,eACR91F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKw2F,eACZrvF,KAAM,iBACNhF,QAASi1F,GAEZ,CACGx2F,GAAIV,EAAIu2F,eACR/1F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKy2F,eACZtvF,KAAM,iBACNhF,QAASi1F,KAKlB3zF,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,MACV,CAQAmtF,gBAAgBnxF,GACb,IAAIV,EAAMF,KAAKgzF,YAAYpyF,GAC3BZ,KAAKmH,KAAOnH,KAAKgyF,SAAS9xF,EAAIiH,MAI9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B5M,KAAK4M,GAAK5M,KAAKgyF,SAAS9xF,EAAI0M,GAAG,GAErC,oBClaH,MAAMgrF,EAA4B,EAAQ,OAE1C,IAAI73F,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,cAAoCk4F,EAIlD5E,YAAYpyF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACTi3F,mBAAoB,GAAGj3F,uBACvBk3F,aAAc,GAAGl3F,iBACjBm3F,cAAe,GAAGn3F,kBAClB40F,SAAU,GAAG50F,aACbo3F,cAAe,GAAGp3F,kBAClBq3F,kBAAmB,GAAGr3F,sBACtBs3F,eAAgB,GAAGt3F,mBACnBu3F,iBAAkB,GAAGv3F,qBACrBw3F,eAAgB,GAAGx3F,mBACnBy3F,kBAAmB,GAAGz3F,sBACtB03F,kBAAmB,GAAG13F,sBACtB23F,kBAAmB,GAAG33F,sBACtB43F,gBAAiB,GAAG53F,oBACpB63F,oBAAqB,GAAG73F,wBACxB83F,sBAAuB,GAAG93F,0BAC1B+3F,UAAW,GAAG/3F,cACdg4F,eAAgB,GAAGh4F,mBACnBw1F,aAAc,GAAGx1F,iBACjBi4F,mBAAoB,GAAGj4F,uBACvBk4F,oBAAqB,GAAGl4F,wBACxBm4F,mBAAoB,GAAGn4F,uBAE7B,CAQAkxF,eAAelxF,GACZ,IAAIV,EAAMF,KAAKgzF,YAAYpyF,GAEvBmzF,EAAgB,CAAC,CAAEnzF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAK0nB,QAAQ8jB,kBAAkBxrC,OACjC,IAAIiE,SAASmb,IAChC20E,EAAczvF,KAAK,CAAE1D,GAAIwe,EAAI/a,IAAK1B,MAAOyc,EAAIhe,OAAQ,IAGxD,IAAI4yF,EAAah0F,KAAK+B,GAAGykB,UAAUrY,KAAKgY,IAC9B,CAAEvlB,GAAIulB,EAAEvlB,GAAI+B,MAAOwjB,EAAE/kB,OAAS+kB,EAAEhf,KAAMlC,OAAQkhB,MAExD6tE,EAAWzgE,QAAQ,CAChB3yB,GAAI,EACJ+B,MAAO5C,EAAE,sBAGZ,IAAI22F,EAAkB,CAAClvD,EAAO99B,KAC3B,IAAI3C,EAAS,CACV,CACGnG,GAAI,EACJ+B,MAAO5C,EAAE,oBAIf,GAAIynC,EAAO,CACR,IAAIptB,EAAQ45E,EAAWxmE,MAAMrH,GAAMA,EAAEvlB,IAAM4mC,IACvCptB,GAASA,EAAMnV,QAChBmV,EAAMnV,OACF8B,QAAQC,GAAMA,EAAE3C,KAAOqF,IACvBzF,SAAS+C,IACPD,EAAOzC,KAAK,CAAE1D,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG/D,CACA,OAAOD,CAAM,EAGZgwF,EAAiB,CAAC7+E,EAAUxN,KAC7B,IAAIoD,EAAS,GACT7I,EAASjF,KAAK+B,GAAGkW,WAAWC,GAChC,IAAKjT,EAAQ,OAAO6I,EAEpB,IAAIgpF,EAAgB7xF,EAAO8I,UAAUrD,GACrC,OACIosF,GACAA,EAAc1wF,UACd0wF,EAAc1wF,SAASjE,SAI3B2L,GAAUgpF,EAAc1wF,SAASjE,SAAW,IAAIgM,KAAKuzC,IAC3C,CACJ9gD,GAAI8gD,EAAI9gD,GACR+B,MAAO++C,EAAIrzC,SAIVP,GATGA,CASG,EA8DZkrF,EAAmBtC,EAAgB12F,KAAK83F,aAAc,QACtDmB,EAAqBvC,EAAgB12F,KAAK83F,aAAc,QACxDoB,EAAsBnC,EACvB/2F,KAAK83F,aACL93F,KAAKq4F,mBAEJc,EAAoBzC,EAAgB12F,KAAK+3F,cAAe,QACxDqB,EAAiB1C,EAAgB12F,KAAKw1F,SAAU,UAChD6D,EAAa3C,EAAgB12F,KAAKw1F,SAAU,iBAC5C8D,EAAkB5C,EAAgB12F,KAAKg4F,cAAe,UACtDuB,EAAgB7C,EAAgB12F,KAAKg4F,cAAe,QACpDZ,EAAiBL,EAClB/2F,KAAKg4F,cACLh4F,KAAKo2F,cAGR,IAAI31F,EAAK,CACNG,GAAIA,EACJF,KAAM,OACN22F,eAAgB,CACbv1F,WAAY,KAEfoH,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAI23F,mBACRn3F,KAAM,SACNU,MAAOrB,EAAE,oCACT4C,MAAO3C,KAAK63F,mBACZ1wF,KAAM,qBACNhF,QAAS4xF,GAEZ,CACGnzF,GAAIV,EAAI43F,aACRp3F,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK83F,aACZ3wF,KAAM,eACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KApFD,IAACuc,EAqFZxc,GAAUC,IACX+b,EAAmBtC,EAAgB1Z,EAAQ,QAtF9Bwc,EAuFWR,EAtFvC,CAAC94F,EAAIi4F,iBAAkBj4F,EAAIk4F,gBAAgBn0F,SAASqzF,IACjD3zF,GAAG2zF,GAAa7yF,OAAO,UAAW+0F,GAClC71F,GAAG2zF,GAAa5yF,SAAS,IAsFb60F,EAAgB7C,EAAgB1Z,EAAQ,QAlF1B,CAACic,IAC9Bt1F,GAAGzD,EAAIm4F,mBAAmB5zF,OAAO,UAAWw0F,GAC5Ct1F,GAAGzD,EAAIm4F,mBAAmB3zF,SAAS,EAiFpB+0F,CAA0BF,GAC7B,IAIT,CACG34F,GAAIV,EAAI63F,cACRr3F,KAAM,SACNU,MAAOrB,EAAE,mBACT4C,MAAO3C,KAAK+3F,cACZ5wF,KAAM,gBACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KAtFD,IAACyc,EAuFZ1c,GAAUC,IACXkc,EAAoBzC,EAAgB1Z,EAAQ,QAxF/B0c,EAyFWP,EAxFvC,CAACj5F,EAAIq4F,kBAAmBr4F,EAAIs4F,iBAAiBv0F,SAASqzF,IACnD3zF,GAAG2zF,GAAa7yF,OAAO,UAAWi1F,GAClC/1F,GAAG2zF,GAAa5yF,SAAS,IAuFhB,IAIT,CACG9D,GAAIV,EAAIs1F,SACR90F,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKw1F,SACZruF,KAAM,WACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KAtFH,IAAC0c,EATDC,EAgGT5c,GAAUC,IACXmc,EAAiB1C,EAAgB1Z,EAAQ,UAjG/B4c,EAkGWR,EAjGpC,CAACl5F,EAAIu4F,oBAAqBv4F,EAAIw4F,uBAAuBz0F,SACjDqzF,IACE3zF,GAAG2zF,GAAa7yF,OAAO,UAAWm1F,GAClCj2F,GAAG2zF,GAAa5yF,SAAS,IAgGhB20F,EAAa3C,EAAgB1Z,EAAQ,iBA3F1B2c,EA4FWN,EA3FrC11F,GAAGzD,EAAIy4F,WAAWl0F,OAAO,UAAWk1F,GACpCh2F,GAAGzD,EAAIy4F,WAAWj0F,UA2FN,IAIT,CACG9D,GAAIV,EAAI83F,cACRt3F,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKg4F,cACZ7wF,KAAM,gBACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KA1JT,IAACia,EA2JJla,GAAUC,IACXsc,EAAgB7C,EAAgB1Z,EAAQ,QA5JnCka,EA6JWqC,EA5J/B51F,GAAGzD,EAAIk2F,cAAc3xF,OAAO,UAAWyyF,GACvCvzF,GAAGzD,EAAIk2F,cAAc1xF,UA6JN40F,EAAkB5C,EAAgB1Z,EAAQ,UApKhC,CAACsc,IAC1B31F,GAAGzD,EAAI04F,gBAAgBn0F,OAAO,UAAW60F,GACzC31F,GAAGzD,EAAI04F,gBAAgBl0F,SAAS,EAmKjBm1F,CAAsBP,GACzB,IAIT,CACG14F,GAAIV,EAAI+3F,kBACRv3F,KAAM,OACNU,MAAOrB,EAAE,sBACT4C,MAAO3C,KAAKi4F,kBACZ9wF,KAAM,qBAET,CACGvG,GAAIV,EAAIg4F,eACRx3F,KAAM,OACNU,MAAOrB,EAAE,mBACT4C,MAAO3C,KAAKk4F,eACZ/wF,KAAM,kBAET,CACGvG,GAAIV,EAAIi4F,iBACRz3F,KAAM,SACNU,MAAOrB,EAAE,oBACT4C,MAAO3C,KAAKm4F,iBACZhxF,KAAM,mBACNhF,QAAS62F,GAEZ,CACGp4F,GAAIV,EAAIk4F,eACR13F,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKo4F,eACZjxF,KAAM,iBACNhF,QAAS62F,GAEZ,CACGp4F,GAAIV,EAAIm4F,kBACR33F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAKq4F,kBACZlxF,KAAM,oBACNhF,QAAS82F,EACT72F,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KACZD,GAAUC,IACXic,EAAsBnC,EACnB/2F,KAAK83F,cAAgBn0F,GAAGzD,EAAI43F,cAAc7rF,WAC1C+wE,GAnLW,CAACkc,IAC9Bv1F,GAAGzD,EAAIo4F,mBAAmB7zF,OAAO,UAAWy0F,GAC5Cv1F,GAAGzD,EAAIo4F,mBAAmB5zF,SAAS,EAmLpBo1F,CAA0BZ,GAC7B,IAIT,CACGt4F,GAAIV,EAAIo4F,kBACR53F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAKs4F,kBACZnxF,KAAM,oBACNhF,QAAS+2F,GAEZ,CACGt4F,GAAIV,EAAIq4F,kBACR73F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAKu4F,kBACZpxF,KAAM,oBACNhF,QAASg3F,GAEZ,CACGv4F,GAAIV,EAAIs4F,gBACR93F,KAAM,SACNU,MAAOrB,EAAE,mBACT4C,MAAO3C,KAAKw4F,gBACZrxF,KAAM,kBACNhF,QAASg3F,GAEZ,CACGv4F,GAAIV,EAAIu4F,oBACR/3F,KAAM,SACNU,MAAOrB,EAAE,uBACT4C,MAAO3C,KAAKy4F,oBACZtxF,KAAM,sBACNhF,QAASi3F,GAEZ,CACGx4F,GAAIV,EAAIw4F,sBACRh4F,KAAM,SACNU,MAAOrB,EAAE,yBACT4C,MAAO3C,KAAK04F,sBACZvxF,KAAM,wBACNhF,QAASi3F,GAEZ,CACGx4F,GAAIV,EAAIy4F,UACRj4F,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAK24F,UACZxxF,KAAM,YACNhF,QAASk3F,GAEZ,CACGz4F,GAAIV,EAAI04F,eACRl4F,KAAM,SACNU,MAAOrB,EAAE,yBACT4C,MAAO3C,KAAK44F,eACZzxF,KAAM,iBACNhF,QAASm3F,GAEZ,CACG14F,GAAIV,EAAIk2F,aACR11F,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKo2F,aACZjvF,KAAM,eACNhF,QAASo3F,EACTn3F,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KACZD,GAAUC,IACXma,EAAiBL,EACd/2F,KAAKg4F,eACFr0F,GAAGzD,EAAI83F,eAAe/rF,WACzB+wE,GAtRM,CAACoa,IACzB,CACGl3F,EAAI24F,mBACJ34F,EAAI44F,oBACJ54F,EAAI64F,oBACL90F,SAASqzF,IACR3zF,GAAG2zF,GAAa7yF,OAAO,UAAW2yF,GAClCzzF,GAAG2zF,GAAa5yF,SAAS,GAC1B,EAgRaizF,CAAqBP,GACxB,IAIT,CACGx2F,GAAIV,EAAI24F,mBACRn4F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAK64F,mBACZ1xF,KAAM,qBACNhF,QAASi1F,GAEZ,CACGx2F,GAAIV,EAAI44F,oBACRp4F,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK84F,oBACZ3xF,KAAM,sBACNhF,QAASi1F,GAEZ,CACGx2F,GAAIV,EAAI64F,mBACRr4F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAK+4F,mBACZ5xF,KAAM,qBACNhF,QAASi1F,KAKlB3zF,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,MACV,CAQAmtF,gBAAgBnxF,GACb,IAAIV,EAAMF,KAAKgzF,YAAYpyF,GAC3BZ,KAAKmH,KAAOnH,KAAKgyF,SAAS9xF,EAAIiH,MAI9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B5M,KAAK4M,GAAK5M,KAAKgyF,SAAS9xF,EAAI0M,GAAG,GAErC,oBC5bH,MAAMmtF,EAA0B,EAAQ,OAExC,IAAIh6F,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,cAAkCq6F,EAKhD/G,YAAYpyF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACTqyF,kBAAmB,GAAGryF,sBACtBsyF,YAAa,GAAGtyF,gBAChBo5F,cAAe,GAAGp5F,kBAClByyF,SAAU,GAAGzyF,aACbq5F,gBAAiB,GAAGr5F,oBAEpBs5F,sBAAuB,GAAGt5F,0BAC1Bu5F,eAAgB,GAAGv5F,mBACnBw5F,UAAW,GAAGx5F,cACdy5F,sBAAuB,GAAGz5F,0BAC1B05F,mBAAoB,GAAG15F,uBACvB25F,eAAgB,GAAG35F,mBACnB45F,UAAW,GAAG55F,cAEd65F,YAAa,GAAG75F,gBAEtB,CAQAkxF,eAAelxF,GACZ,IAAIV,EAAMF,KAAKgzF,YAAYpyF,GAEvBmzF,EAAgB,CAAC,CAAEnzF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAK0nB,QAAQ8jB,kBAAkBxrC,OACjC,IAAIiE,SAASmb,IAChC20E,EAAczvF,KAAK,CAAE1D,GAAIwe,EAAI/a,IAAK1B,MAAOyc,EAAIhe,OAAQ,IAGxD,IAAI4yF,EAAah0F,KAAK+B,GAAGykB,UAAUrY,KAAKgY,IAC9B,CAAEvlB,GAAIulB,EAAEvlB,GAAI+B,MAAOwjB,EAAE/kB,OAAS+kB,EAAEhf,KAAMlC,OAAQkhB,MAGxD6tE,EAAWzgE,QAAQ,CAChB3yB,GAAI,EACJ+B,MAAO5C,EAAE,sBAGZ,IAAI26F,EAA0BxiF,IAC3B,IAAIjT,EAASjF,KAAK+B,GAAGkW,WAAWC,GAChC,IAAKjT,EAAQ,MAAO,GAEpB,IAAI9C,EAAU8C,EACV8B,QAAQC,GAAMA,EAAEq8B,eAChBl1B,KAAKnH,IACI,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,UASlB,OALAe,EAAQoxB,QAAQ,CACb3yB,GAAI,EACJ+B,MAAO5C,EAAE,oBAGLoC,CAAO,EAGbgyF,EAAe,CAACC,EAAcC,KAC/BD,EAAanwF,SAASqwF,IACnB,IAAIC,EAAS5wF,GAAG2wF,GACZC,IACDA,EAAO9vF,OAAO,UAAW4vF,GACzBE,EAAO7vF,UACP6vF,EAAO3vF,OACV,GACD,EA0BD+1F,EAAqB,KACtB,IAAIC,EAAej3F,GAAGzD,EAAIu6F,aAC1B,IAAKG,EAAc,OAGnBn3F,MAAMhD,GAAG,GAAIm6F,GAEb,IAAIC,EAAQ76F,KAAK+B,GAAGkW,WAAWjY,KAAKqzF,UACpC,IAAKwH,EAAO,OAEZ,IAAIC,EAAe96F,KAAK+B,GAAGkW,WAAWjY,KAAKi6F,iBACtCa,IAGLA,EAAa/zF,SAAS9C,SAAS+C,IAC5B,IAAI0tF,EAAW,GAGZA,EADC1tF,EAAEq8B,aACQw3D,EAAM9zF,QAAQg0F,GAEnBA,EAAI13D,cACJ03D,EAAI30F,UACJY,EAAEZ,UACF20F,EAAI30F,SAASO,YAAcK,EAAEZ,SAASO,YACtCo0F,EAAI30F,SAASa,UAAYD,EAAEZ,SAASa,UACpC8zF,EAAI30F,SAASc,aAAeF,EAAEZ,SAASc,aACvC6zF,EAAI30F,SAASgB,YAAcJ,EAAEZ,SAASgB,aAIjCyzF,EAAM9zF,QAAQg0F,GAAQA,EAAI12F,KAAO2C,EAAE3C,MAGjDqwF,EAAWA,EAASvmF,KAAK4sF,IACf,CACJn6F,GAAIm6F,EAAIn6F,GACR+B,MAAOo4F,EAAI35F,UAIjBw5F,EAAa3vF,QAAQ,CAClBvK,KAAM,SACNyG,KAAMH,EAAEpG,GACRQ,MAAO4F,EAAE5F,MACTe,QAASuyF,GACV,IAGLkG,EAAapK,UAAUxwF,KAAKy6F,aAAe,CAAC,GAAE,EAG7CO,EAAiBN,EAAuB16F,KAAKkzF,aAC7C+H,EAAmBP,EAAuB16F,KAAKg6F,eAC/CkB,EAAcR,EAAuB16F,KAAKqzF,UAC1C8H,EAAqBT,EAAuB16F,KAAKi6F,iBAEjDx5F,EAAK,CACNG,GAAIA,EACJF,KAAM,OACN22F,eAAgB,CACbv1F,WAAY,KAEfoH,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAI+yF,kBACRvyF,KAAM,SACNU,MAAOrB,EAAE,uBACT4C,MAAO3C,KAAKizF,kBACZ9rF,KAAM,oBACNhF,QAAS4xF,GAEZ,CACGnzF,GAAIV,EAAIgzF,YACRxyF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKkzF,YACZ/rF,KAAM,cACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAW26E,IACRh9E,KAAKkzF,YAAclW,EA9GT,CAAC9kE,IACvB,IAAI/V,EAAUu4F,EAAuBxiF,GACrCi8E,EAAa,CAACj0F,EAAIg6F,uBAAwB/3F,EAAQ,EA6GtCi5F,CAAmBpe,EAAO,IAInC,CACGp8E,GAAIV,EAAIg6F,sBACRx5F,KAAM,SACNU,MAAOrB,EAAE,yBACT4C,MAAO3C,KAAKk6F,sBACZ/yF,KAAM,wBACNhF,QAAS64F,GAEZ,CACGp6F,GAAIV,EAAI85F,cACRt5F,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAKg6F,cACZ7yF,KAAM,gBACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAW26E,IACRh9E,KAAKg6F,cAAgBhd,EA/Hd,CAAC9kE,IACpB,IAAI/V,EAAUu4F,EAAuBxiF,GACrCi8E,EACG,CAACj0F,EAAIq6F,eAAgBr6F,EAAIo6F,mBAAoBp6F,EAAIs6F,WACjDr4F,EACF,EA2HWk5F,CAAgBre,EAAO,IAIhC,CACGp8E,GAAIV,EAAIo6F,mBACR55F,KAAM,SACNU,MAAOrB,EAAE,sBACT4C,MAAO3C,KAAKs6F,mBACZnzF,KAAM,qBACNhF,QAAS84F,GAEZ,CACGr6F,GAAIV,EAAIq6F,eACR75F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKu6F,eACZpzF,KAAM,iBACNhF,QAAS84F,GAEZ,CACGr6F,GAAIV,EAAIs6F,UACR95F,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAKw6F,UACZrzF,KAAM,YACNhF,QAAS84F,GAEZ,CACGr6F,GAAIV,EAAImzF,SACR3yF,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAKqzF,SACZlsF,KAAM,WACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAW26E,IACRh9E,KAAKqzF,SAAWrW,EA7JT,CAAC9kE,IACpB,IAAI/V,EAAUu4F,EAAuBxiF,GACrCi8E,EAAa,CAACj0F,EAAIi6F,eAAgBj6F,EAAIk6F,WAAYj4F,EAAQ,EA4J9Cm5F,CAAgBte,GAChB2d,GAAoB,IAI7B,CACG/5F,GAAIV,EAAIi6F,eACRz5F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKm6F,eACZhzF,KAAM,iBACNhF,QAAS+4F,GAEZ,CACGt6F,GAAIV,EAAIk6F,UACR15F,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAKo6F,UACZjzF,KAAM,YACNhF,QAAS+4F,GAEZ,CACGt6F,GAAIV,EAAI+5F,gBACRv5F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAKi6F,gBACZ9yF,KAAM,kBACNhF,QAAS6xF,EACT5xF,GAAI,CACDC,SAAW26E,IACRh9E,KAAKi6F,gBAAkBjd,EAvLT,CAAC9kE,IAC3B,IAAI/V,EAAUu4F,EAAuBxiF,GACrCi8E,EAAa,CAACj0F,EAAIm6F,uBAAwBl4F,EAAQ,EAsLtCo5F,CAAuBve,GACvB2d,GAAoB,IAI7B,CACG/5F,GAAIV,EAAIm6F,sBACR35F,KAAM,SACNU,MAAOrB,EAAE,oBACT4C,MAAO3C,KAAKq6F,sBACZlzF,KAAM,wBACNhF,QAASg5F,GAEZ,CACGz6F,KAAM,WACNU,MAAO,kBACPK,KAAM,CACHb,GAAIV,EAAIu6F,YACR/5F,KAAM,OACNiB,YAAY,EACZuH,SAAU,OAMtBzF,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,OAEP+1F,GACH,CAQA5I,gBAAgBnxF,GACb,IAAIV,EAAMF,KAAKgzF,YAAYpyF,GAC3BZ,KAAKmH,KAAOnH,KAAKgyF,SAAS9xF,EAAIiH,MAI9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAE1B5M,KAAK4M,GADE,gBAANA,EACSjJ,GAAGzD,EAAIu6F,aAAa7K,YAEpB5vF,KAAKgyF,SAAS9xF,EAAI0M,GAC/B,GAEN,oBCpVH,MAAM4uF,EAAoB,EAAQ,OAIlC/7F,EAAOC,QAAU,cAA4B87F,EAK1CxvB,eAOG,GANAlsE,MAAMksE,eAEDhsE,KAAKy7F,aACPz7F,KAAKizD,eAAe,yBAGnBjzD,KAAKy7F,YAAa,CACnB,MAAM5jE,EAAO,CAAC,GACb73B,KAAK0nB,QAAQ8jB,kBAAkBxrC,OAAS,IAAIiE,SAASmK,IACnDypB,EAAK,IAAIzpB,EAAKhN,UAAYgN,CAAI,IAGjC,IAAIstF,EAAM,IAAIp5E,OAAO,UAAW,MAClBtiB,KAAKy7F,YAAYz1D,MAAM01D,IAAQ,IACrCz3F,SAASmW,IACTyd,EAAKzd,IACPpa,KAAKizD,eACF,oCAAoC74C,KAE1C,GAEN,CACH,oBC9BH,MAAMuhF,EAA8C,EAAQ,OAE5Dl8F,EAAOC,QAAU,cAAsD,EAGpEssE,eACGlsE,MAAMksE,eAEDhsE,KAAKiQ,OACPjQ,KAAKizD,eAAe,iCAYG,IATLjzD,KAAK0nB,QAAQ8jB,kBAAkBxrC,OAAS,IACzD8I,QAAQsF,GAA4B,SAAnBA,EAAKxI,OAAOvB,MAC7B8J,KAAKC,IACI,CACJxN,GAAIwN,EAAK/J,IACT1B,MAAOyL,EAAKhN,UAIL+E,QACbnG,KAAKizD,eAAe,gDAE1B,oBC1BH,MAAM2oC,EAAuB,EAAQ,OAErCn8F,EAAOC,QAAU,cAA+Bk8F,EAC7C5vB,eACGlsE,MAAMksE,eAEDhsE,KAAKk8B,UACPl8B,KAAKizD,eAAe,sBAGvB,MAAM4oC,EAAKxnF,OAAOC,KAAKtU,KAAKq0F,aAAe,CAAC,IAAM,GAClD,GAAiB,GAAbwH,EAAG11F,OACJnG,KAAKizD,eAAe,yBAChB,CACJ,IAAI6oC,GAAQ,EACZD,EAAG53F,SAAS+C,IAEsB,KAA5BhH,KAAKq0F,YAAYrtF,IAAI+S,KACS,MAA9B/Z,KAAKq0F,YAAYrtF,IAAIrE,QAErBm5F,GAAQ,EACX,IAEEA,GACF97F,KAAKizD,eAAe,oBAE1B,CACH,oBC3BH,MAAM8oC,EAAgC,EAAQ,OAExChuC,EAAc,EAAQ,OAE5BtuD,EAAOC,QAAU,cAAwC,EAGtDC,YAAYujB,EAAYwE,EAAS3lB,GAC9BjC,MAAMojB,EAAYwE,EAAS3lB,GAE3B/B,KAAKkjB,WAAaA,CACrB,CAEA6qC,cACG,OAAOA,CACV,CAEAse,WAEG,IAAI2vB,EAAa,GAUjB,OATIh8F,KAAKqsD,QACN2vC,EAAaA,EAAWh0E,OAAOhoB,KAAKqsD,MAAMggB,aAI7C2vB,EAAW/3F,SAAS2wE,IACbA,GAAGtjE,SAAStR,KAAKizD,eAAe2hB,EAAEtjE,QAAQ,IAEhCxR,MAAMusE,WACLvjE,QAAQ8rE,GAAMA,GACnC,CAEA5I,eACGlsE,MAAMksE,eACFhsE,KAAKqsD,MACNrsD,KAAKqsD,MAAM2f,eAEXhsE,KAAKizD,eAAe,yBAGlBjzD,KAAKmH,MACPnH,KAAKizD,eAAe,wBAAyB,CAC1C/vC,WAAYljB,KAAKkjB,aAIvB,IAAI+4E,GAAU,EACVviE,EAAO15B,KAAKqsD,MAChB,KAAO3yB,GACa,aAAbA,EAAKr1B,KAAmC,aAAbq1B,EAAKr1B,KACjC43F,GAAU,EACVviE,EAAO,MAEPA,EAAOA,EAAK7N,KAIbowE,GACFj8F,KAAKizD,eAAe,wCAE1B,oBC5DH,MAAMipC,EAAiB,EAAQ,OAI/Bz8F,EAAOC,QAAU,cAAyBw8F,EAwFvCzK,kBAAkB0K,GACf,IAAIC,EAAQt8F,MAAM2xF,oBAYlB,OAXA2K,EAAQA,GAAS,CAAC,CAAC,GACnBA,EAAM,GAAGz6E,IAAMy6E,EAAM,GAAGz6E,KAAO,CAAC,EAER,MAApB3hB,KAAK4uD,cACNwtC,EAAM,GAAGz6E,IAAMy6E,EAAM,GAAGz6E,KAAO,CAAC,EAChCy6E,EAAM,GAAGz6E,IAAI06E,oBAAsBF,EAC/BtmF,IAAI,UACJ42D,OAAO,yCACX2vB,EAAM,GAAGz6E,IAAI06E,oBAAoBC,cAAe,GAG5CF,CACV,CAQA/5F,SAASkvF,GACN,IAAI8K,EACD9K,EAAW8K,qBACX9K,EAAWjnD,eAAe+xD,qBAC1B,CAAC,EAEJ,OAAQA,EAAoBpyC,OACzB,IAAK,wCACFjqD,KAAKu8F,SAAWF,EAAoBC,aAC/B,aACA,WACL,MACH,IAAK,mCACFt8F,KAAKu8F,SAAW,UAGzB,CAQAznF,UAGG,OAAO9U,KAAK0nB,QAAQ5S,QAAQ+nC,KAAK78C,KACpC,CASA4H,OAGG,OAAO5H,KAAK0nB,QAAQ9f,KAAKi1C,KAAK78C,KACjC,CAcA41E,6BAA6Bt6C,GAC1B,IAAIwQ,EAAO9rC,KAAK+B,GAAGs5B,oCAAoCC,EAASt7B,MAMhE,OAHI8rC,GACD9rC,KAAK2qC,WAAWmB,GAEZA,CACV,CAEAkgC,eACGlsE,MAAMksE,gBAELhsE,KAAKyuD,oBAAsB,IAAIxqD,SAASmlC,IACtCppC,KAAKizD,eACF,gDAAgD7pB,KAChD,CAAE1hB,QAAS1nB,KAAKY,GAAIwoC,OACtB,GAEP,oBC5LH,MAAMozD,EAAwB,EAAQ,OAEtC/8F,EAAOC,QAAU,cAAgC88F,qBCFjD,MAAMC,EAAgC,EAAQ,OAE9Ch9F,EAAOC,QAAU,cAAwC,qBCAzD,MAAMg9F,EAAgC,EAAQ,OAE9Cj9F,EAAOC,QAAU,cAAwC,qBCFzD,MAAMi9F,EAAuB,EAAQ,OAIrCl9F,EAAOC,QAAU,cAA+Bi9F,qBCNhD,MAAMC,EAAgC,EAAQ,OAE9Cn9F,EAAOC,QAAU,cAAwC,qBCFzD,MAAMm9F,EAA4B,EAAQ,OAO1Cp9F,EAAOC,QAAU,cAAoCm9F,EAMlDj1F,OACG,OACG6H,QAAQC,UACJgF,MAAK,IAAM5U,MAAM8H,SAEjB8M,MAAM5G,GACG9N,KAAK+B,GAAGsN,QAAQgH,IAAI,CACxB/F,KAAMtQ,KAAK8wD,UAlBX,4BACD,4BAiB8C59C,QAC1C,OACAlT,KAAKY,OAKvB,oBClBH,MAAMk8F,EAAW,EAAQ,OACnBnd,EAAa,WAEb5/E,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GA2zBlDrW,EAAOC,QAzzBP,cAAmBo9F,EAChBn9F,YAAYujB,EAAYuuC,EAAsBC,EAAQ5lB,EAAM/pC,GACzDjC,MAAMojB,EAAYuuC,EAAsBC,EAAQ5lB,EAAM/pC,GAEtD/B,KAAKoC,GAAG,WAAW,CAACkP,EAASzH,KAC1B7J,KAAKssE,UAAUhoE,KAAK,CAAEgN,UAASzH,QAAO,GAE5C,CAoBAkzF,SAAS39E,EAAKxe,GAGXZ,KAAKyxD,qBAAqBxtD,SAASsuD,IAEhC,MAAMxC,EAAO/vD,KAAKg9F,KAAKp8F,GAEvBZ,KAAKE,IAAMF,KAAKi9F,MAAMltC,GACtB/vD,KAAK8V,OAAS9V,KAAK8V,QAAU,CAAC,EAE9B,IAAIonF,EAAe,KAEnB,OAAQ3qC,EAAK3wD,MACV,IAAK,eACF5B,KAAK8V,OAAOy8C,EAAKprD,MAAQxD,GAAG3D,KAAKE,IAAIi9F,cAAclxF,WAEnD,MAEH,IAAK,aACFjM,KAAK8V,OAAOy8C,EAAKprD,MAAQxD,GAAG3D,KAAKE,IAAIk9F,YAAYnxF,WAEjD,MAEH,IAAK,mBACL,IAAK,eAGF,GAFAixF,EAAev5F,GAAG3D,KAAKE,IAAI0sC,WAEvBswD,EAAc,CACf,MAAMtwD,EAAYswD,EAAajxF,WAE3B2gC,GAA2B,KAAdA,IACd5sC,KAAK8V,OAAOy8C,EAAKprD,MAAQ4M,KAAK0D,MAAMm1B,GAE1C,CAEA,MAEH,IAAK,YACF5sC,KAAK8V,OAAOy8C,EAAKprD,MAAQxD,GAAG3D,KAAKE,IAAIm9F,WAAWpxF,WAGtD,GAEN,CAQAgxF,MAAMltC,GACH,MAAO,CACJnjB,UAAW,GAAGmjB,cACdotC,aAAc,GAAGptC,iBACjBqtC,WAAY,GAAGrtC,YACf2oB,MAAO,GAAG3oB,UACVutC,OAAQ,GAAGvtC,WACXwtC,UAAW,GAAGxtC,cACdstC,UAAW,GAAGttC,cACdytC,OAAQ,GAAGztC,WAEjB,CAaA0tC,iBAAiBlrC,EAAM3xD,EAAIH,GAGxB,IAAKA,EAAGU,KAAM,CACX,IAAIV,EAAGoB,KAOA,MAAM,IAAIyG,MAAM,+CANpB,IAAK,IAAIiL,EAAI,EAAGA,EAAI9S,EAAGoB,KAAKsE,OAAQoN,IACjC,GAAI9S,EAAGoB,KAAK0R,GAAGpS,KAAM,CAClBnB,KAAKy9F,iBAAiBlrC,EAAM3xD,EAAIH,EAAGoB,KAAK0R,IAExC,KACH,CAGN,MACH,CAEA,MAAMmqF,EAAU19F,KAAK29F,UAAUprC,EAAM3xD,GAEjC88F,IAEwC,IAArC19F,KAAKyxD,qBAAqBtrD,QAC3B1F,EAAGU,KAAKwvC,MACRlwC,EAAGU,KAAKmD,KAAKo5F,IAKTj9F,EAAGU,KAAKgF,OAAS,EAClB1F,EAAGU,KAAKmD,KAAK,CACVzC,KAAM,CAAC67F,KAGRj9F,EAAGU,KAAK,GAAGU,KAAKyC,KAAKo5F,GAGnC,CAUAE,UAAUh9F,EAAIH,GACX,MAAMo9F,EAAQ79F,KAAK89F,UAAUl9F,GAIzBZ,KAAK6rB,MACN7rB,KAAK6rB,KAAKkyE,YAAYn9F,EAAIi9F,GAC1Bp9F,EAAGoB,KAAKyC,KAAKu5F,GACb79F,KAAK6rB,KAAK+xE,UAAUh9F,EAAIH,IAGtBA,EAAGoB,KAAKyC,KAAKu5F,EACrB,CAUAE,YAAYn9F,EAAIH,GACbT,KAAKyxD,qBAAqBxtD,SAASsuD,IAChCvyD,KAAKy9F,iBAAiBlrC,EAAM3xD,EAAIH,EAAG,GAEzC,CAQAu8F,KAAKp8F,GACF,OAAIZ,KAAK0xD,OAAe,GAAG1xD,KAAK0xD,OAAOsrC,KAAKp8F,MAAOZ,KAAKL,YAAY0E,MAE7D,GAAGzD,KAAMZ,KAAKL,YAAY0E,KACpC,CAqBAy5F,UAAUl9F,GACP,MAAMuB,EAAUnC,KAAKL,YAAYoyD,UAAU5jD,KAAKsc,IACtC,CAAE7pB,GAAI6pB,EAAGpmB,IAAK1B,MAAO8nB,EAAGrpB,UAGlCe,EAAQoxB,QAAQ,CAAE3yB,GAAI,EAAG+B,MAAO5C,EAAE,2BAElC,MAAMgwD,EAAO/vD,KAAKg9F,KAAKp8F,GACjBV,EAAMF,KAAKi9F,MAAMltC,GAiGvB,MA/Fc,CACX5uD,KAAM,CACH,CACGP,GAAIV,EAAIo9F,OACR58F,KAAM,SACNiC,MAAO3C,KAAK6rB,KAAO7rB,KAAK6rB,KAAKlsB,YAAY0E,IAAM,EAC/ClC,QAASA,EACTC,GAAI,CACDC,SAAU,CAAC27F,EAAUzgB,KAClB,MAAM0gB,EAAa,KAChB,MAAMX,EAAS35F,GAAGzD,EAAIo9F,QAEtBA,EAAO/d,aACP+d,EAAOz4F,SAAS04E,GAChB+f,EAAO9d,cAAc,EAGxB,GAAIwe,IAAazgB,EAAU,OAE3B,MAAM2gB,EAAQl+F,KAAKL,YAAYoyD,UAAUvkC,MACrC/C,GAAOA,EAAGpmB,MAAQ25F,IAGtB,IAAKE,EAGF,YAFAD,IAKH,MAAME,EAAUx6F,GAAGzD,EAAIo9F,QAAQ7xF,gBACzB2yF,EAAYD,EAAQ1yF,gBACpB4yF,EAAQ,KACX,GAAIH,EAAO,CACR,MAAMpsC,EAAS,IAAIosC,EAChB,CAAC,EACDl+F,KACAA,KAAK8rC,KACL9rC,KAAK+B,IAGR/B,KAAK6rB,KAAOimC,EAEZA,EAAOwsC,cAAc19F,EAAIu9F,GACzBrsC,EAAOysC,YAAY39F,EAAIw9F,EAC1B,GAKGI,EAAUJ,EAAUtzF,gBAEtB0zF,EAAQr4F,OAAS,EAAIq4F,EAAQnxF,QAAQ8wF,GACtC16F,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,aACTsO,KAAMtO,EACH,sDAEHwR,GAAIxR,EAAE,OACN4R,OAAQ5R,EAAE,MACV8R,SAAW/D,IACR,GAAIA,EAAQ,CAET,IAAI2wF,EAAKD,EAAQr4F,OAAS,EAE1B,KACGq4F,EAAQC,GAAIx8F,OAAOrB,KAAOu9F,EAAQl8F,OAAOrB,IAEzCw9F,EAAU5yF,WAAWgzF,EAAQC,IAC7BA,IAIH,MAAMC,EAAUP,EAAQrzF,gBAExB,IAAI6zF,EAAKD,EAAQv4F,OAEjB,KAAOw4F,EAAK,GACTR,EAAQ3yF,WAAWkzF,EAAQC,EAAK,IAChCA,IAGHN,GACH,MAAOJ,GAAY,IAGvBI,GAAO,IAIrB,CACGz9F,GAAIV,EAAIs9F,SAMpB,CAEAoB,yBAAyBh+F,GACtB,MAAMi+F,EAAUl7F,GAAG3D,KAAKE,IAAIo9F,QAE5B,IAAKuB,EAAS,OAEd,MAAMf,EAAY99F,KAAK89F,UAAUl9F,GAE3Bk+F,EACHhB,EAAU38F,KAAK2H,QAAQvF,GAAMA,EAAE3C,IAAMi+F,EAAQ58F,OAAOrB,KAAI,IACxDk9F,EAAU38F,KAAK,GAEd29F,GAAW/8F,GAAG4Y,MAAMla,GAAGq+F,EAAWD,EACzC,CAaAlB,UAAUprC,EAAM3xD,GACb,MAAMm+F,EAAWh9F,GAAG+M,OAAOkwF,aAE3B,IAAIjvC,EAAO/vD,KAAKg9F,KAAKp8F,GAErBZ,KAAKE,IAAMF,KAAKi9F,MAAMltC,GAEtB,IAAI2tC,EAAU,KACVv7F,EAAU,KACV2/E,EAAS,KACTzvB,EAAe,KACf4sC,EAAc,KACdC,EAAe,KACfC,EAAe,KACfC,EAAU,KACVvjB,EAAQ,KAGZ,OAAQtpB,EAAK3wD,MACV,IAAK,eAGE5B,KAAKiF,SACN9C,EAAUnC,KAAKiF,OAAO8B,SAASoH,KAAKnH,IAC1B,CAAEpG,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOmK,KAAM,SAASvE,EAAEuE,YAG1DpJ,EAAQoxB,QAAQ,CACb3yB,GAAI,MACJ+B,MAAO,UAML3C,KAAKm8B,SAAWh6B,EAAQgE,OAAS,IAEnCnG,KAAK8V,OAAOy8C,EAAKprD,MAAQhF,EAAQ,GAAGvB,GACpCZ,KAAKsyD,aAAaC,EAAM3xD,IAG3B88F,EAAU,CACP98F,GAAIZ,KAAKE,IAAIi9F,aACbz8F,KAAM,aACNU,MAAOrB,EAAE,SACT+B,WAAY,GACZa,MAAO3C,KAAKm8B,QACZh6B,QAASA,EACTC,GAAI,CACDC,SAAU,CAAC27F,EAAUzgB,KAEdygB,IAAah+F,KAAK8V,OAAOy8C,EAAKprD,QAC/BnH,KAAK8V,OAAOy8C,EAAKprD,MAAQ62F,EACzBh+F,KAAKsyD,aAAaC,EAAM3xD,GAC3B,IAKT,MAEH,IAAK,aAGFuB,EAAUnC,KAAK+B,GAAGykB,UAAUrY,KAAKgY,IACvB,CAAEvlB,GAAIulB,EAAEvlB,GAAI+B,MAAOwjB,EAAE/kB,WAG1BpB,KAAKk8B,UAAY/5B,EAAQgE,OAAS,IACpCnG,KAAKk8B,SAAW/5B,EAAQ,GAAGvB,GAC3BZ,KAAK8V,OAAOy8C,EAAKprD,MAAQnH,KAAKk8B,SAC9Bl8B,KAAKsyD,aAAaC,IAGrBmrC,EAAU,CACP98F,GAAIZ,KAAKE,IAAIk9F,WACb18F,KAAM,SACNU,MAAOrB,EAAE,eACT+B,WAAYi9F,EAAS78F,gBACrBS,MAAO3C,KAAKk8B,SACZ/5B,QAASA,EACTC,GAAI,CACDC,SAAW27F,IACRh+F,KAAK8V,OAAS9V,KAAK8V,QAAU,CAAC,EAE1BkoF,IAAah+F,KAAK8V,OAAOy8C,EAAKprD,QAC/BnH,KAAK8V,OAAOy8C,EAAKprD,MAAQ62F,EACzBh+F,KAAKsyD,aAAaC,GACrB,IAKT,MAEH,IAAK,mBA0BF,GAHAuvB,EAAS9hF,KAAK+B,GAAGgzB,iBAAiBn0B,GAClCyxD,EAAeryD,KAAKmyD,iCAEhBnyD,KAAKiF,OAAQ,CACd68E,EAAO9sD,WAAWh1B,KAAKiF,OAAO8B,SAAU/G,KAAKiF,QAM7C,MAAMo6F,EAAchrF,OAAOC,KAAK+9C,GAAclkD,KAC1CnH,GAAMqrD,EAAarrD,KAGvB86E,EAAO7yC,kBAAkBowD,EA0D5B,CAIAvd,EAAO1/E,GAAG,QAASwqC,IAIhB5sC,KAAK8V,OAAS9V,KAAK8V,QAAU,CAAC,EAC9B9V,KAAK8V,OAAOy8C,EAAKprD,MAAQylC,EAEzB,MAAM0yD,EAAY37F,GAAG3D,KAAKE,IAAIq9F,WAE9B+B,EAAU76F,OAAO,CACdrD,MAAO0gF,EAAOtI,gBAEjB8lB,EAAU56F,UAIV,MAAM66F,EAAc57F,GAAG3D,KAAKE,IAAI0sC,WAEhC2yD,EAAY96F,OAAO,CAChB9B,MAAOoR,KAAKC,UAAUhU,KAAK8V,OAAOy8C,EAAKprD,SAE1Co4F,EAAY76F,SAAS,IAIxBu6F,EAAc,GAEVj/F,KAAK8V,QAAU9V,KAAK8V,OAAOy8C,EAAKprD,QACjC26E,EAAOj9E,SAAS7E,KAAK8V,OAAOy8C,EAAKprD,OACjC83F,EAAclrF,KAAKC,UAAUhU,KAAK8V,OAAOy8C,EAAKprD,QAKjD+3F,EAAepd,EAAOtI,cAEtBkkB,EAAU,CACP77F,KAAM,CACH,CACGjB,GAAIZ,KAAKE,IAAIq9F,UACb78F,KAAM,SACNU,MAAO89F,EACP98F,GAAI,CACDgI,YAAa,KACV03E,EAAOjG,MAAMl4E,GAAG3D,KAAKE,IAAIq9F,WAAY,KAAM,CACxC5sE,IAAK,UACN,IAMX,CACG/vB,GAAIZ,KAAKE,IAAI0sC,UACblsC,KAAM,OACNiC,MAAOs8F,EACPpmB,QAAQ,KAKjB,MAEH,IAAK,eAMFsmB,EAAe,GACfC,EAAU,IAAIzf,EAAW5vB,EAAM/vD,KAAK+B,IAEhC/B,KAAKiF,QAAQm6F,EAAQp6F,WAAWhF,KAAKiF,QAGzCm6F,EAAQ9d,oBACJthF,KAAK8rC,KAAKpkB,QAAQ8jB,kBAAkBxrC,KAAK8rC,OAAS,IAAI39B,KACnDC,IACS,CACJxN,GAAIwN,EAAK/J,IACT1B,MAAOyL,EAAKhN,WAQpBpB,KAAK8V,QAAU9V,KAAK8V,OAAOy8C,EAAKprD,QACjCi4F,EAAQv6F,SAAS7E,KAAK8V,OAAOy8C,EAAKprD,OAClCg4F,EAAeprF,KAAKC,UAAUhU,KAAK8V,OAAOy8C,EAAKprD,QAGlD00E,EAAQ,KAEL,MAAMp7E,EAAK,CACRG,GAAIZ,KAAKE,IAAIw4E,MACbh4E,KAAM,QACNC,SAAU,SACV0oE,SAAU,IACVvoE,OAAO,EACPD,QAAQ,EACRY,KAAM,CACHI,KAAM,CACH,CACGd,OAAQ,GACRY,YAAY,EACZR,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNiC,MAAO,IACP3B,MAAO,GACPO,MAAO,KACJoC,GAAG3D,KAAKE,IAAIw4E,OAAO/zE,MAAM,KAKrCy6F,EAAQ3+F,KACR,CACGC,KAAM,SACNiC,MAAO5C,EAAE,QACTmB,IAAK,gBACLK,MAAO,KACJvB,KAAK8V,OAAS9V,KAAK8V,QAAU,CAAC,EAC9B9V,KAAK8V,OAAOy8C,EAAKprD,MAAQi4F,EAAQnzF,WACjC,MAAMuzF,EAAK77F,GAAG3D,KAAKE,IAAIq9F,WAEvBiC,EAAG/6F,OAAO,CACP0pF,MAAOnuF,KAAK8V,OAAOy8C,EAAKprD,MAAMhB,SAEjCq5F,EAAG96F,UAEH,MAAMyqB,EAAOxrB,GAAG3D,KAAKE,IAAI0sC,WAEzBzd,EAAK1qB,OAAO,CACT9B,MAAOoR,KAAKC,UAAUhU,KAAK8V,OAAOy8C,EAAKprD,SAE1CgoB,EAAKzqB,UAELf,GAAG3D,KAAKE,IAAIw4E,OAAO/zE,MAAM,MAQxC3E,KAAKy/F,SAAWh8F,MAAMhD,GAAGA,GACzBT,KAAKy/F,SAAS76F,OAIV5E,KAAK8V,QAAU9V,KAAK8V,OAAOy8C,EAAKprD,OACjCi4F,EAAQv6F,SAAS7E,KAAK8V,OAAOy8C,EAAKprD,MAAM,EAG9Cu2F,EAAU,CACP77F,KAAM,CAEH,CACGjB,GAAIZ,KAAKE,IAAIq9F,UACb78F,KAAM,SACNU,MAAOrB,EAAE,iBACTouF,MAAOnuF,KAAK8V,OAAOy8C,EAAKprD,OAAOhB,OAC/B/D,GAAI,CACDgI,YAAa,KACVyxE,GAAO,IAKhB,CACGj7E,GAAIZ,KAAKE,IAAI0sC,UACblsC,KAAM,OACNiC,MAAOw8F,EACPtmB,QAAQ,KAKjB,MAEH,IAAK,YACF6kB,EAAU,CACP98F,GAAIZ,KAAKE,IAAIm9F,UACb38F,KAAM,OACNU,MAAOrB,EAAE,YACT+B,WAAY,GACZa,MAAO3C,KAAK8V,OAAOy8C,EAAKprD,MACxBu0E,YAAa37E,EAAE,wBACfqC,GAAI,CACDC,SAAU,CAAC27F,EAAUzgB,KAEdygB,IAAah+F,KAAK8V,OAAOy8C,EAAKprD,QAC/BnH,KAAK8V,OAAOy8C,EAAKprD,MAAQ62F,EACzBh+F,KAAKsyD,aAAaC,EAAM3xD,GAC3B,IAQf,OAAO88F,CACV,CAYAa,YAAY39F,EAAI8+F,GACb,MAAM7B,EAAQ79F,KAAK89F,UAAUl9F,GAE7B8+F,EAAQz0F,QAAQ4yF,EACnB,CAWAS,cAAc19F,EAAI++F,GACf,MAAM7pF,EAAS,GAEf9V,KAAKyxD,qBAAqBxtD,SAASsuD,IAEhCz8C,EAAOxR,KAAKtE,KAAK29F,UAAUprC,EAAM3xD,GAAI,IAGxC,IAAIg/F,EAAW,KAIZA,EADC9pF,EAAO3P,OAAS,EACN,CACRtE,KAAMiU,GAEIA,EAAO66B,MAEnBivD,IACDD,EAAQn0F,WAAWm0F,EAAQ70F,gBAAgB,IAC3C60F,EAAQ10F,QAAQ20F,GAEtB,CAEAvzB,WACG,IAAIwzB,EAAa7/F,KAAKssE,WAAa,GAGnC,OAFItsE,KAAK6rB,OACNg0E,EAAaA,EAAW73E,OAAOhoB,KAAK6rB,KAAKwgD,YAAYvjE,QAAQ8rE,GAAMA,KAC/D50E,KAAK+B,GAAG2gB,KAAKm9E,EACvB,CAEA7zB,eACGhsE,KAAKssE,UAAY,GACbtsE,KAAK6rB,MAAM7rB,KAAK6rB,KAAKmgD,cAC5B,CAcA/Y,eAAe3hD,GAEZtR,KAAKssE,UAAYtsE,KAAKssE,WAAa,GACnCtsE,KAAKssE,UAAUhoE,KAAK,CAAEgN,QAAS,GAAGtR,KAAKqE,QAAQiN,KAClD,oBCzzBH,MAAMohD,EAAe,EAAQ,OAW7BjzD,EAAOC,QATP,cAAuBgzD,qBCDvB,MAAMC,EAAkB,EAAQ,OAC1BmtC,EAAiB,EAAQ,OAEzB/xC,EAAc,CAajBG,eAAgByE,EAAgBzE,eAShChuD,IAAMU,IACI,CACJm/F,KAAM,GAAGn/F,SACT08F,OAAQ,GAAG18F,gBACXuB,QAAS,GAAGvB,mBAkBlB+1B,QAAS,CAACqpE,EAAQl0D,EAAM/pC,KAId,CACJtB,GAAKG,IACFo/F,EAASA,GAAU,IAAIF,EAAe,CAAC,EAAGh0D,EAAM/pC,GAEhD,MACMtB,EAAK,CACRoB,KAAM,CACH,CACGjB,GAJGmtD,EAAY7tD,IAAIU,GAIXm/F,KACR5+F,KAAM,MAQf,OAHA6+F,EAAOjC,YAAYn9F,EAAIH,GACvBu/F,EAAOpC,UAAUh9F,EAAIH,GAEdA,CAAE,EAEZ6C,KAAO1C,IAAD,IAiBZ6W,MAAO,CAAC7W,EAAIkrC,EAAM/pC,KACf,MAAM7B,EAAM6tD,EAAY7tD,IAAIU,GACtBm/F,EAAOp8F,GAAGzD,EAAI6/F,MAEpB,IAAKA,EAGF,YAFAv3F,QAAQC,KAAK,oDAMhB,MAAM5G,EAAOk+F,EAAKt0F,gBAAgBX,gBAE5Bm1F,EAAe,CAACp+F,EAAMM,EAASuvD,KAClC,GAAoB,IAAhB7vD,EAAKsE,OAAc,OAAO,KAE9B,MAAMiZ,EAAMvd,EAAK4S,QAIXkT,EAAQvI,EAAItU,gBAElB,IAAIo1F,EAAWv4E,EAAMlT,QAErB,MAAQyrF,GAAUj0F,UAAUi0F,EAAWv4E,EAAMlT,QAE7C,MAAM9R,EAAQu9F,EAASj0F,WAGjB+lD,EAAK7vD,EAAQqrB,MAAMrH,GACfA,EAAE9hB,MAAQ1B,GAASwjB,EAAE9hB,MAAQy7F,EAAez7F,MAGtD,GAAI2tD,EAAI,CACL,IAAImuC,EAAS,KAEDA,EAARzuC,EAAiB,IAAIM,EAAG,CAAC,EAAGN,EAAQ5lB,EAAM/pC,GAChC,IAAIiwD,EAAG,CAAC,EAAGlmB,EAAM/pC,GAG/Bo+F,EAAOpD,SAAS39E,EAAKxe,IAIhBu/F,EAAOl7F,QAAUysD,IACnByuC,EAAOl7F,OAASysD,EAAOzsD,OACvBk7F,EAAOjkE,SAAWikE,EAAOl7F,QAAQrE,IAAM,MAG1C,MAAMw/F,EAAUH,EACbp+F,EACAs+F,EAAOxgG,YAAYoyD,UACnBouC,GAKH,OAFAA,EAAOt0E,KAAOu0E,EAEPD,CACV,CAEA,OAAO,IAAI,EAKd,OAFkBF,EAAap+F,EAAM8wD,EAAgBE,MAAO,KAE5C,GAItBpzD,EAAOC,QAAUquD,mBC1JjB,MAAMsyC,EAAqB,EAAQ,OAoEnC5gG,EAAOC,QAlEP,cAAyB2gG,EAkBtB/tC,aAAaC,GACQ,SAAdA,EAAKprD,OACNnH,KAAKk8B,SAAWl8B,KAAK8V,OAAOy8C,EAAKprD,MACjCnH,KAAKiF,OAASjF,KAAK6xD,aAAa7xD,KAAKk8B,UAKjCl8B,KAAK6rB,OAAM7rB,KAAK6rB,KAAK5mB,OAASjF,KAAKiF,QAE7C,CAgBA83F,SAAS39E,EAAKxe,GACXd,MAAMi9F,SAAS39E,EAAKxe,GAKhBZ,KAAK8V,OAAO3O,OACbnH,KAAKk8B,SAAWl8B,KAAK8V,OAAO3O,KAC5BnH,KAAKiF,OAASjF,KAAK6xD,aAAa7xD,KAAK8V,OAAO3O,MAElD,CAEA6kE,eACGlsE,MAAMksE,eACDhsE,KAAKiF,QACPjF,KAAKizD,eAAe,qBAAsB,CACvC/2B,SAAUl8B,KAAKk8B,UAGxB,oBC3EH,MAAMs3B,EAAmB,EAAQ,OAmBjC/zD,EAAOC,QAjBP,cAA2B8zD,EASxBlB,aAAaC,EAAM3xD,GAChBd,MAAMwyD,aAAaC,GAGD,YAAdA,EAAKprD,MAAoBnH,KAAK4+F,yBAAyBh+F,EAC9D,oBCRH,MAAMgzD,EAAkB,EAAQ,OAQhCn0D,EAAOC,QANP,cAA0Bk0D,EACvBtB,aAAaC,EAAM3xD,GAChBd,MAAMwyD,aAAaC,EACtB,kBCLH,MAAMsB,EAAoB,EAAQ,OAelCp0D,EAAOC,QAbP,cAA4Bm0D,qBCF5B,MAAME,EAAmB,EAAQ,OAWjCt0D,EAAOC,QATP,cAA2Bq0D,oBCiC3B,MAAMC,EAAmB,EAAQ,OAuFjCv0D,EAAOC,QArFP,cAA2Bs0D,EAgBxB1B,aAAaC,GACQ,YAAdA,EAAKprD,OAENnH,KAAKm8B,QAAUn8B,KAAK8V,OAAOy8C,EAAKprD,MAGhCnH,KAAK4F,MAAQ5F,KAAKiF,OAAO8I,UAAU/N,KAAKm8B,SAIpCn8B,KAAK4F,OAA4B,kBAAnB5F,KAAK4F,MAAMvB,MAC1BrE,KAAK2xD,UAAY3xD,KAAK4F,MAAMgB,eAC5B5G,KAAKi0D,YAAcj0D,KAAK2xD,UAAU/wD,GAK9BZ,KAAK6rB,OAAM7rB,KAAK6rB,KAAK5mB,OAASjF,KAAK2xD,YAGhD,CAoBAorC,SAAS39E,EAAKxe,GACXd,MAAMi9F,SAAS39E,EAAKxe,GAEpBZ,KAAKm8B,QAAUn8B,KAAK8V,OAAOqmB,QAI3Bn8B,KAAK+B,GAAGykB,SAASL,IACd,IAAKnmB,KAAK4F,MAAO,CAEd,MAAMA,EAAQugB,EAAEpY,UAAU/N,KAAKm8B,SAE3Bv2B,IAAO5F,KAAK4F,MAAQA,EAC3B,KAGC5F,KAAK4F,QACN5F,KAAKiF,OAASjF,KAAK4F,MAAMX,OAIrBjF,KAAK4F,OAA4B,kBAAnB5F,KAAK4F,MAAMvB,MAC1BrE,KAAK2xD,UAAY3xD,KAAK4F,MAAMgB,eAC5B5G,KAAKi0D,YAAcj0D,KAAK2xD,UAAU/wD,IAG3C,oBCvHH,MAAMszD,EAAkB,EAAQ,OA2ChCz0D,EAAOC,QAzCP,cAA0Bw0D,EAgBvB5B,aAAaC,GACQ,eAAdA,EAAKprD,OACNnH,KAAKm0D,UAAYn0D,KAAK8V,OAAOy8C,EAAKprD,MAExC,CAEA41F,SAAS39E,EAAKxe,GACXd,MAAMi9F,SAAS39E,EAAKxe,GAEpBZ,KAAKm0D,UAAYn0D,KAAK8V,OAAmB,WAEpC9V,KAAKo0D,aACPp0D,KAAK8rC,KAAKqiB,mBAAmBnuD,MAC7BA,KAAKo0D,YAAa,EAExB,CAEA4X,eACGlsE,MAAMksE,eACDhsE,KAAKm0D,WAAgC,KAAnBn0D,KAAKm0D,WACzBn0D,KAAKizD,eAAe,uCAE1B,oBChDH,MAAMqtC,EAAa,EAAQ,OACrBC,EAAkB,WAExB9gG,EAAOC,QAAU,cAAqB4gG,EAUnCngG,YACG,OAAO,IAAIogG,EAAgBvgG,KAC9B,CAQAw2D,cAAcwP,GAEX,IAAIw6B,EAAgB,CACjB,OACA,OACA,YACA,gBAEA,iBACA,eACA,gBACA,cACA,oBACA,aACA,aAEA,SACA,WACA,UACA,aACA,cACA,UACA,YACA,eACA,iBACA,WACA,gBAEA,MACA,MACA,OACA,OAEA,SACA,aACA,eAQH,OALoBxgG,KAAK+E,YAAYkjB,UACCnf,QAAQvF,IACM,GAA1Ci9F,EAAcnzF,QAAQ9J,EAAEkpC,SAASpoC,MAI9C,CAEAo8F,WAAWx5B,GACRjnE,KAAKwP,KAAK,aAAcy3D,EAC3B,CAEAmF,cAEG,IAAIuI,EAAc70E,MAAMssE,cASxB,OARApsE,KAAK2nB,QAAQ1jB,SAASqP,IACnBqhE,EAAcA,EAAY3sD,OAAO1U,EAAE84D,cAAc,KAGnDpsE,KAAK8lB,WAAa,IAAI7hB,SAAS+d,IAC7B2yD,EAAcA,EAAY3sD,OAAOhG,EAAEoqD,cAAc,IAG7CuI,EAAY7rE,QAAQ8rE,GAAMA,GACpC,CAEA5I,eACGlsE,MAAMksE,eAEN,IAAI9jD,EAAWloB,KAAK2nB,SAEnB3nB,KAAKw6D,gBAAkB,IAAIv2D,SAASrD,IAClCZ,KAAKksE,gBAAgB,2BAA2BtrE,KAAM,IAGzDsnB,EAASjkB,SAASqP,IACfA,EAAE04D,cAAc,IAIfhsE,KAAKoG,SAASsuD,aACN10D,KAAKkmB,iBAAmBlmB,KAAKqsB,gBAEnCrsB,KAAKksE,gBACF,iCAAiClsE,KAAKoG,SAASsuD,eAI3D,CAEAwX,gBAAgBjtD,EAAKpV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,GAAGtR,KAAKqE,OAAOrE,KAAKmH,UAAU8X,IAC5Cjf,KAAKssE,UAAUhoE,KAAK,CAAEgN,UAASzH,QAClC,mBClHH,MAAM62F,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3ClhG,EAAOC,QAAU,cAAgCghG,EAM9CvgG,YACG,OAAO,IAAIwgG,EAA2B3gG,KACzC,CAEAgsE,eACGlsE,MAAMksE,eAEGhsE,KAAKqsB,gBAEXrsB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,cAG5D,oBCtBH,MAAMksC,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3CphG,EAAOC,QAAU,cAAgCkhG,EAM9CzgG,YACG,OAAO,IAAI0gG,EAA2B7gG,KACzC,CAEAgsE,eACGlsE,MAAMksE,eAEGhsE,KAAKqsB,gBAEXrsB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,eAIpD10D,KAAKoG,SAAS4uD,mBAAmB7uD,QACnCnG,KAAKksE,gBAAgB,6CAE3B,8ECxBY,MAAM40B,UAAgCP,EAAA,EAClD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,kBAAkBkhG,EAASngG,KACrCyT,OAAO6pC,OACJ,CACG8iD,SAAU,IAEb9gG,IAINF,KAAKihG,kBAAoB,KACtBjhG,KAAKwK,QAAQ,EAGhBxK,KAAKkhG,kBAAoB,OAIzBlhG,KAAKmhG,kBAAoB,CAACC,EAAUC,KAIjC,MAAM1tE,EAAK3zB,KAAKqsB,eAEXsH,IAELA,EAAGzE,gBAAgBmyE,GACnB1tE,EAAG7C,aAAY,EAGlB9wB,KAAKshG,cAAgB,KAClBthG,KAAKghF,MAAM,EAGdhhF,KAAKuhG,eAAiB,KACnBvhG,KAAKohF,OAAO,CAElB,CAEA3gF,KACG,MAAMP,EAAMF,KAAKE,IAEX6gG,EAAW/gG,KAAKU,KAEtBV,KAAKwhG,SAAWT,EAAS5gD,aACzBngD,KAAKyhG,SAAWV,EAASW,eAAevhG,YAExC,MAAMq9F,EAAS,CAAC,EACVp3F,EAAWpG,KAAKoG,SAEC,IAAnBA,EAASpF,OACVqT,OAAO6pC,OAAOs/C,EAAQ,CACnBx8F,MAAO,IAGb,MAAM2gG,EAAM7hG,MAAMW,GAAG,CAClB,CACGkB,YAAY,EACZR,KAAM,CACHq8F,EACA,CACG77F,YAAY,EACZE,KAAM,CACH7B,KAAKwhG,SAAS/gG,KACd,CACGG,GAAIV,EAAI8gG,SACRtgG,KAAM,WACNS,KAAM,GACNH,MAAOoF,EAASpF,MAChBD,OAAQqF,EAASrF,OACjB6gG,WAAY,CACT7V,OAAQ3lF,EAASwvD,SACjBisC,SAAUz7F,EAASyvD,WACnBj0D,KAAMwE,EAAS0vD,gBAElB1zD,GAAI,CACDoI,OAAQ,KACL,MAAMs3F,EAAcn+F,GACjBzD,EAAI8gG,UACLe,iBAEF/hG,KAAKgiG,YAAYF,EAAY,MAM5CtE,MAOT,cAFOmE,EAAI//F,KAEJ+/F,CACV,CAGAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM4xB,EAAK3zB,KAAKqsB,eAEhB,IAAKsH,EAKF,YAJA5xB,EAAGqG,OAAOuuB,QAAQ,qBAAqBhD,IAAM,CAC1CriB,QAAS,sCAMf,MAAMrM,EAAS0uB,EAAGvH,WAElB,IAAKnnB,EAKF,YAJAlD,EAAGqG,OAAOC,UAAU,aAAasrB,IAAM,CACpCriB,QAAS,8BAMfqiB,EAAG+C,eAAe,WAAY12B,KAAKihG,mBACnCttE,EAAGvxB,GAAG,WAAYpC,KAAKihG,mBAEvBttE,EAAG+C,eAAe,SAAU12B,KAAKkhG,mBACjCvtE,EAAGvxB,GAAG,SAAUpC,KAAKkhG,mBAErBvtE,EAAG+C,eAAe,SAAU12B,KAAKkhG,mBACjCvtE,EAAGvxB,GAAG,SAAUpC,KAAKkhG,mBAErBvtE,EAAG+C,eAAe,SAAU12B,KAAKkhG,mBACjCvtE,EAAGvxB,GAAG,SAAUpC,KAAKkhG,mBAErBvtE,EAAG+C,eAAe,mBAAoB12B,KAAKshG,eAC3C3tE,EAAGvxB,GAAG,mBAAoBpC,KAAKshG,eAE/B3tE,EAAG+C,eAAe,kBAAmB12B,KAAKuhG,gBAC1C5tE,EAAGvxB,GAAG,kBAAmBpC,KAAKuhG,gBAE1BvhG,KAAKoG,SAAS2vD,iBACfpiC,EAAG+C,eAAe,eAAgB12B,KAAKihG,mBACvCttE,EAAGvxB,GAAG,eAAgBpC,KAAKihG,oBAG9B,MAAMF,EAAW/gG,KAAKU,KAGtBqgG,EAAS5gD,aAAan7C,WAAWC,GACjC87F,EAAS5gD,aAAa8hD,SAASjiG,MAE/BA,KAAKwhG,SAASl+F,KAAKtD,KAAK+B,IACxB/B,KAAKwhG,SAAS9qE,eAAe,cAAe12B,KAAKmhG,mBACjDnhG,KAAKwhG,SAASp/F,GAAG,cAAepC,KAAKmhG,mBAGrCnhG,KAAKyhG,SAASn+F,KAAK,CAChB5C,KAAMqgG,EACN10E,eAAgBsH,IAInB,MAAMuuE,EAAgBv+F,GAAG3D,KAAKE,IAAI8gG,WAAWtzF,MAEzCw0F,IACDA,EAAc1c,aACX,UACA,GAAGub,EAAS18F,OAAO08F,EAASngG,MAE/BshG,EACI3wB,cAAc,2BACb4wB,mBAAmB3c,aAClB,UACA,GAAGub,EAAS18F,uBAAuB08F,EAASngG,MAElDshG,EACI3wB,cAAc,2BACb4wB,mBAAmB3c,aAClB,UACA,GAAGub,EAAS18F,mBAAmB08F,EAASngG,MAGpD,CAWAwhG,UACG,MAAMzuE,EAAK3zB,KAAKqsB,eAEXsH,IAELA,EAAG+C,eAAe,WAAY12B,KAAKihG,mBAE/BjhG,KAAKkhG,oBACNvtE,EAAG+C,eAAe,SAAU12B,KAAKkhG,mBACjCvtE,EAAG+C,eAAe,SAAU12B,KAAKkhG,mBACjCvtE,EAAG+C,eAAe,SAAU12B,KAAKkhG,oBAGpCvtE,EAAG+C,eAAe,mBAAoB12B,KAAKshG,eAE3C3tE,EAAG+C,eAAe,kBAAmB12B,KAAKuhG,gBAEtCvhG,KAAKoG,SAAS2vD,gBACfpiC,EAAG+C,eAAe,eAAgB12B,KAAKihG,mBAE1CjhG,KAAKwhG,SAAS9qE,eAAe,cAAe12B,KAAKihG,mBACpD,CAEAoB,WAAWjjF,GACR,GAAIA,GAAKgrE,IAAK,CACX,MAAMhkF,EAAWpG,KAAKoG,SAEtB,MAAO,CACJ,4CACA,aAAagZ,EAAIgrE,qDACjBhkF,EAASuvD,UACJ,wCAAwCv2C,EAAIhe,OAAS,WACrD,GACL,uCACAgF,EAAS4vD,aAAe5vD,EAAS6vD,WAC5B,oBAAoB72C,EAAIxe,8DACxB,GACLwF,EAAS8vD,UAAY9vD,EAAS+vD,QACzB,oBAAoB/2C,EAAIxe,+DACxB,GACL,2EACA,kGACA,SACA,UACD0N,KAAK,GACV,CAEK,MAAO,EACf,CAEA0yE,OACG,MAAMshB,EAAY3+F,GAAG3D,KAAKE,IAAI8gG,UAE9BsB,GAAWl9F,UACXk9F,GAAWj9F,eAAe,CAAEzD,KAAM,QACrC,CAEAw/E,QACG,MAAMkhB,EAAY3+F,GAAG3D,KAAKE,IAAI8gG,UAE9BsB,GAAW56F,SACX46F,GAAW36F,gBACd,CAEAxC,kBAAkBo9F,GACf,MAAM5uE,EAAK3zB,KAAKqsB,eAEhB,GAAKsH,GAIF4uE,GAAmBviG,KAAKwiG,YAAc,GACtC7uE,EAAGc,WAAaz0B,KAAKyiG,UACtB,CAECziG,KAAKghF,OAEL,UACSrtD,EAAGd,SAAS7yB,KAAKyiG,WAAa,EAMvC,CALE,MAAOt6F,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,4EAET,CAEAtR,KAAKohF,OACR,CACH,CAEA52E,OAAO42F,EAAWphG,KAAKwhG,SAASkB,aAC7B,MAAMxiG,EAAMF,KAAKE,IACXyzB,EAAK3zB,KAAKqsB,eAEhB,IAAKsH,EAAI,OAET,MAAM3b,EAAM2b,EAAGvH,WAEf,IAAKpU,EAAK,OAEV,MAAMpS,EAAQ5F,KAAKU,KAAK+1D,WAExB,IAAK7wD,EAAO,OAEZ,GAAI+tB,EAAG/G,YAAc+G,EAAG1I,eAAeC,WAKpC,YAHAyI,EAAGd,WAMN,MAAMzsB,EAAWpG,KAAKoG,SAEtB,IAAIvE,EAAO8xB,EAAGY,QAAQ6sE,GAGtB,GAAIh7F,EAAS2vD,eAAgB,CAC1B,MAAM4sC,EAAShvE,EAAG1G,YAEd01E,IACD9gG,EAAOA,EAAKiH,QACR8G,IACGA,EAAEoI,EAAI0X,OAAS9f,EAAEhP,IAAMgP,MACvB+yF,EAAO3qF,EAAI0X,OAASizE,EAAO/hG,IAAM+hG,KAE9C,CAEA,MAAMC,EAAS,GAEf/gG,EAAKoC,SAAS2L,IACX,MAAMizF,EAAUjzF,EAAEhK,EAAMkB,YAExB,GAAI+7F,EAAS,CACV,MAAMC,EAAU,CACbliG,GAAIgP,EAAEhP,GACNwpF,IAAK,SAASyY,KAIbz8F,EAASuvD,YAAWmtC,EAAQ1hG,MAAQ4W,EAAIytB,YAAY71B,IAExDgzF,EAAOt+F,KAAK,CACTpD,IAAK,QACLS,YAAY,EACZ2jE,SAAU,IAAIxvD,IACJ9V,KAAKqiG,cAAcvsF,GAE7BjM,KAAMi5F,GAEZ,KAGH,MAAMC,EAAK/iG,KAAK+B,GAGZ6D,EAAMQ,SAAS+6C,iBAChByhD,EAAOrvE,QAAQ,CACZryB,IAAK,QACLokE,SAAU,IAAIxvD,IAAW9V,KAAKqiG,cAAcvsF,GAC5CjM,KAAM,CACHjJ,GAAImiG,EAAGlzF,OACPu6E,IAAK,SAASxkF,EAAMQ,SAAS+6C,kBAC7B//C,MAAOpB,KAAKoB,MAAM,oBAKvBwhG,EAAOz8F,OAAS,GACjBy8F,EAAOt+F,KAAK,CACTzC,KAAM,CACH,CACGnB,KAAM,QACNW,MAAO,SACPN,OAAQqF,EAASrF,OACjBK,MAAO,+PAEV,CACGV,KAAM,QACNW,MAAO,SACPD,MAAOpB,KAAKoB,MAAM,gBAM9BpB,KAAKyiG,UAAY5gG,EAAKsE,OAGtBnG,KAAKwiG,YAAcI,EAAOz8F,OAE1B,MAAMm8F,EAAY3+F,GAAGzD,EAAI8gG,UACnBgC,EAAUD,EAAGpoF,MAEnB,GAAI2nF,EAAW,CAEZU,EAAQviG,GAAGmiG,EAAQN,GAGnBU,EAAQt/F,OAAO4+F,EAAWU,EAAQp/F,aAGlC,MAAMsyD,EAAW9vD,EAAS8vD,SACpBF,EAAc5vD,EAAS4vD,YAG7BssC,EAAU50F,MAAMu1F,QAAW54F,IACxB,GAAIA,EAAEm/C,OAAOiD,UACV,GAAIpiD,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,qBAAuB,EAAG,CACtD21F,EAAQ1Z,KAAK1Z,UAAU0yB,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAIp0E,EAAQ3kB,EAAEm/C,OAAOu+B,aAAa,aAClC/nF,KAAKyhG,SAAShB,WAAWvqC,EAAUlnC,EACtC,MAAO,GACJ3kB,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,uBAAyB,EACrD,CACC21F,EAAQ1Z,KAAK1Z,UAAU0yB,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAIp0E,EAAQ3kB,EAAEm/C,OAAOu+B,aAAa,aAClC/nF,KAAKyhG,SAAShB,WAAWzqC,EAAahnC,EACzC,MACG3kB,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,2BAA6B,IAExDi1F,EAAU79F,OAAO,MAAO,cACxBu+F,EAAQG,WAAWppF,IAAI7Z,EAAI8gG,SAAU,CAClC//F,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLgI,SAAU,CACP,CAAC,EACD,CACGxI,KAAM,OACN6K,KAAM,cACNhK,MAAO,WACJyhG,EAAQ1Z,KAAK1Z,UACV0yB,EAAUY,UACV,cAEHF,EAAQG,WAAWC,MACtB,OAMlB,CAEN,CACH,CAEAC,gBAAgB31F,GACb1N,KAAKwhG,SAAS8B,UAAU51F,EAC3B,4BCjcH,MAAM61F,EAAqB,EAAQ,OAWpB,MAAMC,UAAuBD,EACzC5jG,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,EACtC,CAYAl/B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKmgD,aAAakV,aAAar1D,KAAKoG,SAAS0C,OAChD,CAOA3I,YACG,IAAIwzB,EAAK3zB,KAAKqsB,eAMd,OALIsH,IACD3zB,KAAKmgD,aAAan7C,WAAW2uB,EAAGvH,YAChCpsB,KAAKmgD,aAAakV,aAAar1D,KAAKoG,SAAS0C,SAGzC,IAAIg4F,EAAwB9gG,KACtC,CAEIH,aACD,MAAO,kBAAkBG,KAAKY,IACjC,CAEIu/C,mBAOD,OAN2B,MAAvBngD,KAAKyjG,iBACNzjG,KAAKyjG,eAAiB,IAAIC,EAAA,EACvB1jG,KAAK+B,GACL/B,KAAKH,SAGJG,KAAKyjG,cACf,CAEI/B,qBAID,OAH6B,MAAzB1hG,KAAK2jG,mBACN3jG,KAAK2jG,iBAAmB,IAAIC,EAAA,GAExB5jG,KAAK2jG,gBACf,CAEA33B,eACGlsE,MAAMksE,eAEMhsE,KAAKy2D,YAEdz2D,KAAKksE,gBACF,6BAA6BlsE,KAAKoG,SAASR,SAGpD,oBC9EH,MAAMi+F,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErCrkG,EAAOC,QAAU,cAA0BmkG,EAgBxC1jG,YACG,OAAO,IAAI2jG,EAAqB9jG,KACnC,CAEAiG,WAAWN,GACR7F,MAAMmG,WAAWN,GACjB3F,KAAK+jG,aACR,CAEAC,aAGG,OAFKhkG,KAAKikG,WAAUjkG,KAAKikG,SAAW,IAAIxgG,MAAM2rE,gBAEvCpvE,KAAKikG,QACf,CAEAF,cACG,MAAM12E,EAAKrtB,KAAKqsB,eAChB,GAAU,MAANgB,EAAY,OAAOrtB,KAAKkkG,QAE5B,MAAMC,EAAWnkG,KAAK+3D,aAChBqsC,EAAWpkG,KAAKg4D,aAChBqsC,EAAYrkG,KAAKi4D,cAEvB,IAAKksC,IAAaC,EAAU,OAAOpkG,KAAKkkG,QAGxC,MAAMI,EAAgBF,EAASt9F,WAE/B,IAAIy9F,EAAiB,GAEjBvkG,KAAKoG,SAASwxD,gBAAkBysC,IACjCE,EAAiBF,EAAUv9F,YAG9B,MAAM09F,EAAY,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGGC,EAAQp3E,EAAGkH,UAEjB,IAAI+M,EAAU,GACVojE,EAAU,CAAC,EACXC,EAAY,EACZC,EAAa,EACbC,EAAcJ,EAAMt+F,OAExBs+F,EAAMxgG,SAASmK,IACZ,MAAMomD,EAAW2vC,EAAS3jF,OAAOpS,IAASA,EAAKxN,GAE/C,IAAIo5C,EAAYP,WAAWrrC,EAAKk2F,IAAkB,GAC9CQ,EAAa,KAKjB,OAHI9kG,KAAKoG,SAASwxD,iBACfktC,EAAarrD,WAAWrrC,EAAKm2F,KAAoB,GAE5CH,EAAS//F,KAEd,IAAK,UACF21C,EAAYoqD,EAAS5jF,OAAOpS,GAE5B,MAGH,IAAK,YACF4rC,EAAYP,WACT2qD,EAASzkG,YAAY26C,YAClB8pD,EAASn/F,OACTm/F,EAASh+F,SAASuzC,QAClBvrC,EACAg2F,EAASh+F,SAASyzC,gBAU9B,GAAyB,MAArB6qD,EAAQlwC,GAAmB,CAC5B,IAAIpzD,EAAQozD,EAGZ,GAAI2vC,EAAS9gE,aAAc,CACxB,IAAI0hE,EAAeZ,EAASrpD,mBAAmB1sC,GAC3B,MAAhB22F,IAEE3jG,EADC+L,MAAMC,QAAQ23F,GACPA,EACJ52F,KAAK+H,GAAQA,EAAI7H,MAAQ,KACzBC,KAAK,MACCy2F,EAAa12F,KAEhC,CAEIrO,KAAKoG,SAASwxD,eACf8sC,EAAQlwC,GAAY,CACjBpzD,MAAOA,GAASgN,EAAKxN,GACrB+B,MAAO,EACPqiG,OAAQ,GAGXN,EAAQlwC,GAAY,CACjBpzD,MAAOA,GAASgN,EAAKxN,GACrB+B,MAAO,EAGhB,CAEA+hG,EAAQlwC,GAAU7xD,OAASq3C,EAC3B2qD,GAAa3qD,EAETh6C,KAAKoG,SAASwxD,iBACf8sC,EAAQlwC,GAAUwwC,QAAUF,EAC5BF,GAAcE,EACjB,IAGH,IAAI/4F,EAAQ,EAEZ,IAAK,MAAM1H,KAAOqgG,EAAS,CACxB,IAAIxuF,EAAMwuF,EAAQrgG,GAAK1B,MAEvB,KAAIuT,GAAO,GAAX,CASA,GANIlW,KAAKoG,SAASsxD,eACfxhD,EAAOA,EAAMyuF,EAAa,IAC1BzuF,EAAM3P,KAAKiyC,MAAY,IAANtiC,GAAa,IAC9BA,GAAY,MAGXlW,KAAKoG,SAASwxD,eAAgB,CAC/B,IAAIqtC,EAAOP,EAAQrgG,GAAK2gG,OAExB,GAAIC,GAAQ,EAAG,SAGXjlG,KAAKoG,SAASsxD,eACfutC,EAAQA,EAAOL,EAAc,IAC7BK,EAAO1+F,KAAKiyC,MAAa,IAAPysD,GAAc,IAChCA,GAAc,MAGjB3jE,EAAQh9B,KAAK,CACVlD,MAAOsjG,EAAQrgG,GAAKjD,MACpBuB,MAAOuT,EACP8uF,OAAQC,EACRC,MAAOV,EAAUz4F,EAAQy4F,EAAUr+F,QACnC0rB,MAAOgzE,GAEb,MACGvjE,EAAQh9B,KAAK,CACVlD,MAAOsjG,EAAQrgG,GAAKjD,MACpBuB,MAAOuT,EACPgvF,MAAOV,EAAUz4F,EAAQy4F,EAAUr+F,QACnC0rB,MAAOgzE,IAIb94F,GAAS,CArCa,CAsCzB,CAEA,MAAMm4F,EAAUlkG,KAAKgkG,aAErBE,EAAQlpF,WACRkpF,EAAQzsF,MAAM6pB,EACjB,CAEA0qC,eACGlsE,MAAMksE,eAEWhsE,KAAK+3D,cAEnB/3D,KAAKksE,gBACF,6BAA6BlsE,KAAKoG,SAASoxD,gBAIhCx3D,KAAKg4D,cAEnBh4D,KAAKksE,gBACF,6BAA6BlsE,KAAKoG,SAASmxD,gBAI/Bv3D,KAAKi4D,eAEpBj4D,KAAKksE,gBACF,8BAA8BlsE,KAAKoG,SAASqxD,gBAGrD,oBC3NH,MAAM0tC,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzC3lG,EAAOC,QAAU,cAA8BylG,EAU5ChlG,YACG,OAAO,IAAIilG,EAAyBplG,KACvC,oBCfH,MAAMqlG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExC7lG,EAAOC,QAAU,cAA6B2lG,EAU3CllG,YACG,OAAO,IAAImlG,EAAwBtlG,KACtC,oBCfH,MAAMs0D,EAAe,EAAQ,OACvBixC,EAAgC,EAAQ,MAE9C9lG,EAAOC,QAAU,cAAmC40D,EAMjDn0D,YACG,OAAO,IAAIolG,EAA8BvlG,KAC5C,CAEIqsB,qBACD,OAAOrsB,KAAKiV,OAAOoX,cACtB,oBCfH,MAAMm5E,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzChmG,EAAOC,QAAU,cAA8B8lG,EAU5CrlG,YACG,OAAO,IAAIslG,EAAyBzlG,KACvC,oBCfH,MAAM0lG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExClmG,EAAOC,QAAU,cAA6BgmG,EAU3CvlG,YACG,OAAO,IAAIwlG,EAAwB3lG,KACtC,mBCfH,MAAM4lG,EAAoB,EAAQ,OAC5BC,EAAyB,EAAQ,OAEvCpmG,EAAOC,QAAU,cAA4BkmG,EAU1CzlG,YACG,OAAO,IAAI0lG,EAAuB7lG,KACrC,CAEAgsE,eACGlsE,MAAMksE,eAEN,IAAIpmE,EAAQ5F,KAAKk5D,eACZtzD,GACF5F,KAAKksE,gBACF,4BAA4BlsE,KAAKoG,SAASqyD,eAIhD7yD,EAAQ5F,KAAKm5D,kBACRvzD,GACF5F,KAAKksE,gBACF,+BAA+BlsE,KAAKoG,SAASsyD,kBAInD9yD,EAAQ5F,KAAKo5D,eACRxzD,GACF5F,KAAKksE,gBACF,4BAA4BlsE,KAAKoG,SAASuyD,cAGnD,oBCxCH,MAAMmtC,EAAiC,EAAQ,OACzCC,EAAsC,EAAQ,OAEpDtmG,EAAOC,QAAU,cAAyC,EAQvDS,YACG,OAAO,IAAI4lG,EAAoC/lG,KAClD,CAEAmF,aACG,MAAM6gG,EAAShmG,KAAK2nB,QAAQ6F,MAAMla,GAAiB,OAAXA,EAAEnM,OACpC8+F,EAAWjmG,KAAK2nB,QAAQ6F,MAAMla,GAAiB,SAAXA,EAAEnM,OACtC++F,EAAc,GAEhBF,GAAQE,EAAY5hG,KAAK0hG,EAAOp+F,QAEhCq+F,GAAUC,EAAY5hG,KAAK2hG,EAASr+F,cAElC6H,QAAQ8R,IAAI2kF,SAEZpmG,MAAM8H,MACf,CAEAokE,eACGlsE,MAAMksE,eAEGhsE,KAAKqsB,gBAEXrsB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,eAKrD10D,KAAKoG,SAAS4jB,kBACkC,GAAjDhqB,KAAKoG,SAAS4jB,kBAAkB3I,OAAOlb,QAEvCnG,KAAKksE,gBAAgB,+BAE3B,iGC3CY,MAAMi6B,UAAyC5F,EAAA,EAC3D5gG,YAAYohG,EAAUqF,EAAQlmG,GAC3BJ,MACGihG,EACAqF,GAAU,2BAA2BrF,EAASngG,KAC9CyT,OAAO6pC,OACJ,CACGp1C,OAAQ,GACR0R,MAAO,IAEVta,IAINF,KAAK4F,MAAQ,IAChB,CAEAnF,KACG,MAAMP,EAAMF,KAAKE,IACXyhG,EAAM7hG,MAAMW,GAAG,CAClB,CACGmB,KAAM,QACND,YAAY,EACZR,KAAM,CACH,CACGT,KAAM,OACN6K,KAAM,eACNlK,MAAO,OACPwnC,UAAU,GAEb,CACGnoC,KAAM,QACNE,GAAIV,EAAI4I,OACRhH,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS+a,iBACxC6rB,UAAU,EACVzmC,GAAI,CACDC,SAAWzB,GAAOZ,KAAKqmG,mBAAmBzlG,KAGhD,CACGF,KAAM,OACNE,GAAIV,EAAIsa,MACRjP,KAAM,cACNlK,MAAO,OACPwnC,UAAU,EACVy9D,QAAStmG,KAAKoB,MAAM,uBACpBgB,GAAI,CACDgI,YAAa,IAAMpK,KAAKumG,2BASvC,cAFO5E,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM4xB,EAAK3zB,KAAKqsB,eAEhB,IAAKsH,EAAI,OAET,MAAM1uB,EAAS0uB,EAAGvH,WAElB,IAAKnnB,EAAQ,OAEb,MAAOW,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe9G,KAAKoG,SAASR,QAGzC,IAAKA,EASF,YARA5F,KAAK+B,GAAGqG,OAAOC,UACZ,sBAAsBrI,KAAKoG,SAASR,aAAaX,EAAOkC,OACxD,CACGmI,QAAS,0CACTzF,KAAM,CAAEzD,SAAUpG,KAAKoG,YAOhCpG,KAAK4F,MAAQA,EAEb,MAAM1F,EAAMF,KAAKE,IACXi9E,EAAU15E,MAAMhD,GAAG,CACtBC,KAAM,UACNoI,OAAQ,EAAGnG,SAASsT,IACjBtT,EAAM0V,cAAco4B,SAASx6B,EAAOoC,eACvCjW,GAAI,CACDoI,OAAQ,KACL5E,EAAMy/E,sBAAsB1hF,GAAGzD,EAAI4I,QAASlD,EAAO,CAAC,EAAE,KAI/DA,EAAMs9E,sBAAsB/F,EAAS,KAAMv3E,GAE3C,MAAM4gG,EAAU7iG,GAAGzD,EAAI4I,QAEvB09F,EAAQ/hG,OAAO,UAAW04E,GAC1BqpB,EAAQ/hG,OAAO,QAAS,GAAGzE,KAAKoB,MAAM,gBAAgBwE,EAAMxE,SAC5DolG,EAAQ9+F,SACR8+F,EAAQ9hG,SACX,CAEA6hG,qBACG,MAAMrmG,EAAMF,KAAKE,IACXmtB,EAAKrtB,KAAKqsB,eAEhBgB,EAAG6B,gBAAgB,CAAEjF,KAAM,MAAO5I,MAAO,KACzCgM,EAAGyD,aAGH,MAAM01E,EAAU7iG,GAAGzD,EAAI4I,QAEvB09F,EAAQjnB,aACRinB,EAAQ3hG,WACR2hG,EAAQhnB,eACR77E,GAAGzD,EAAIsa,OAAOpV,SACjB,CAEAihG,mBAAmBI,GAChB,MAAMC,EAAa,CAChBriG,IAAKrE,KAAK4F,MAAMhF,GAChBwvB,KAAM,SACNztB,MAAO8jG,GAEJp5E,EAAKrtB,KAAKqsB,eAEhBgB,EAAG6B,gBAAgB,CAAEjF,KAAM,MAAO5I,MAAO,CAACqlF,KAC1Cr5E,EAAGyD,aACHntB,GAAG3D,KAAKE,IAAIsa,OAAO9S,QACtB,ECvIY,MAAMi/F,UAAgC,KAMlDxmG,YACG,OAAO,IAAIgmG,EAAiCnmG,KAC/C,oBCXH,MAAM4mG,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzCpnG,EAAOC,QAAU,cAA8BknG,EAU5CzmG,YACG,OAAO,IAAI0mG,EAAyB7mG,KACvC,CAEAgsE,eACGlsE,MAAMksE,eAIiB,GAFRhsE,KAAK2nB,QAEPxhB,QACVnG,KAAKksE,gBAAgB,iBAO3B,4ICzBY,MAAM46B,UAAkCvG,EAAA,EACpD5gG,YAAYohG,EAAUqF,EAAQlmG,GAC3BJ,MACGihG,EACAqF,GAAU,oBAAoBrF,EAASngG,KACvCyT,OAAO6pC,OACJ,CACGp1C,OAAQ,GACR0R,MAAO,GACPusF,WAAY,GACZC,aAAc,GACdC,oBAAqB,IAExB/mG,IAINF,KAAKknG,oBAAsB,CAAC9F,EAAUC,KACnCrhG,KAAKmnG,mBAAmB/F,EAAUC,EAAY,EAGjDrhG,KAAK4F,MAAQ,KACb,MAAMm9F,EAAK/iG,KAAK+B,GAIhB/B,KAAKonG,mBAAqB,IAAI,IAC3B,+BAA+BpnG,KAAKoG,SAASsuD,cAEhD10D,KAAKonG,mBAAmB9jG,KAAKy/F,GAC7B/iG,KAAKonG,mBAAmBhlG,GAAG,WAAYilG,IACpCrnG,KAAKsnG,iBAAiBD,EAAY,IAGrCrnG,KAAKmgD,aAAe,IAAI,IACrBngD,KAAK+B,GACL,iCAAiC/B,KAAKoG,SAASsuD,cAElD10D,KAAKmgD,aAAa/5C,SAAW,CAC1B89D,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAEpBpkE,KAAKmgD,aAAa78C,KAAKy/F,GACvB/iG,KAAKoiG,UACLpiG,KAAKmgD,aAAa/9C,GAAG,cAAepC,KAAKknG,oBAC5C,CAEAK,aACG,MAAMC,EAASxnG,KAAKE,IAAIC,UACxB,MAAO,CACJ,CACGe,IAAK,UACLumG,UAAW,GACX5lG,KAAM,CACH,CAAC,EACD,CACGV,KAAM,CACH,CACGH,MAAO,IAEV,CACGN,KAAM,SACNkB,KAAM,OACN2J,KAAM,eACNvK,MAAO,GACPJ,GAAIZ,KAAKE,IAAI8mG,aACb9lG,IAAK,+BAA+BlB,KAAKoG,SAASsuD,aAClDnzD,MAAO,CAACX,EAAIiwB,KACT7wB,KAAK0nG,cAAc/jG,GAAG3D,KAAKE,IAAI8mG,cAAct5F,MAAM,EAEtDtL,GAAI,CACD+4E,cAAe,WACZn7E,KAAK2nG,eAAeniB,aACjB,UACA,GAAGgiB,kBAET,IAGN,CACG9mG,KAAM,SACNkB,KAAM,OACN2J,KAAM,aACNvK,MAAO,GACPJ,GAAIZ,KAAKE,IAAI6mG,WACb7lG,IAAK,6BAA6BlB,KAAKoG,SAASsuD,aAChDnzD,MAAO,CAACX,EAAIiwB,KACT7wB,KAAK4nG,SAASjkG,GAAG3D,KAAKE,IAAI6mG,YAAYr5F,MAAM,EAE/CtL,GAAI,CACD+4E,cAAe,WACZn7E,KAAK2nG,eAAeniB,aACjB,UACA,GAAGgiB,gBAET,IAGN,CACG5mG,GAAIZ,KAAKE,IAAI+mG,oBACbvmG,KAAM,SACNg7E,YAAa17E,KAAKoB,MAAM,YACxBF,IAAK,sBAAsBlB,KAAKoG,SAASsuD,aACzC1zD,MAAO,EACPkiB,WAAY,CACT,UAAW,GAAGljB,KAAKE,IAAIC,0BACvBksB,eAAgBrsB,KAAKoG,SAASsuD,YAEjCtyD,GAAI,CACDw7E,gBAAiB,KACd,MAAMv4D,EAAa1hB,GAChB3D,KAAKE,IAAI+mG,qBACVh7F,WAGSjM,KAAKqsB,eACbjmB,SAAS2jB,gBAAgB1E,WACzBA,EAEHrlB,KAAKmgD,aAAa0nD,mBAAmBxiF,EAAW,IAIzD,CACGrkB,MAAO,MAIhB,CAAC,IAIb,CAEA8mG,mBACG,MAAO,CACJ,CACG5mG,IAAK,UACLumG,UAAW,GACXtmG,KAAM,CACH,CACGH,MAAO,IAEV,CACGa,KAAM,CACH,CAAC,EACD,CACGnB,KAAM,YACN+B,MAAO,CACJ,CACGvB,IAAK,UACLR,KAAM,QACNE,GAAIZ,KAAKE,IAAI4I,OACbhH,WAAY,EACZimG,UAAU,EACVl/D,UAAU,EACVzmC,GAAI,CACDC,SAAWzB,GAAOZ,KAAKqmG,mBAAmBzlG,KAGhD,CACGF,KAAM,OACNE,GAAIZ,KAAKE,IAAIsa,MACbjP,KAAM,cACNy8F,MAAO,GACPC,IAAK,EACLjnG,MAAO,GACPD,OAAQ,GACR83E,QAAQ,EACRytB,QAAStmG,KAAKoB,MAAM,sBACpBgB,GAAI,CACDgI,YAAa,IACVzG,GAAG3D,KAAKE,IAAI4I,QAAQjE,eAKnC,CAAC,IAGP,CACG7D,MAAO,MAKtB,CAEAP,KACG,GAA8B,YAA1BT,KAAKoG,SAASo3D,UACf,IAAKx9D,MAAMoG,UAAUsuD,WAAY,MAAO,CAAE3zD,OAAQ,QAElD,IAAKf,MAAMoG,UAAUsuD,aAAe10D,MAAMoG,UAAUR,MACjD,MAAO,CAAE7E,OAAQ,GAGvB,MAAMN,EACuB,YAA1BT,KAAKoG,SAASo3D,SACTx9D,KAAKunG,aACLvnG,KAAK8nG,mBACPnG,EAAM7hG,MAAMW,GAAGA,GAIrB,cAFOkhG,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM4xB,EAAK3zB,KAAKqsB,eAEhB,IAAKsH,EAAI,OAET,MAAM1uB,EAAS0uB,EAAGvH,WAElB,GAAKnnB,EAEL,GAA8B,YAA1BjF,KAAKoG,SAASo3D,SACXx9D,KAAKoG,SAASs3D,UACf19D,KAAKonG,mBAAmBpiG,WAAWC,GAEnCjF,KAAKonG,mBAAmBh7F,YACrBunB,GAAIvtB,UAAU2jB,iBAAiBxd,aAGlC5I,GAAG3D,KAAKE,IAAI6mG,YAAYpiG,OAEvB3E,KAAKoG,SAASq3D,WACfz9D,KAAKmgD,aAAan7C,WAAWC,GAE7BtB,GAAG3D,KAAKE,IAAI8mG,cAAcriG,YAEzB,GAA8B,aAA1B3E,KAAKoG,SAASo3D,SAAyB,CAC/C,MAAO53D,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe9G,KAAKoG,SAASR,QAGzC,IAAKA,EASF,YARA5F,KAAK+B,GAAGqG,OAAOC,UACZ,sBAAsBrI,KAAKoG,SAASR,aAAaX,EAAOkC,OACxD,CACGmI,QAAS,mCACTzF,KAAM,CAAEzD,SAAUpG,KAAKoG,YAOhCpG,KAAK4F,MAAQA,EAEb,MAAM1F,EAAMF,KAAKE,IACXi9E,EAAU15E,MAAMhD,GAAG,CACtBC,KAAM,UACNoI,OAAQ,EAAGnG,SAASsT,IACjBtT,EAAM0V,cAAco4B,SAASx6B,EAAOoC,eACvCjW,GAAI,CACDoI,OAAQ,KACL5E,EAAMy/E,sBAAsB1hF,GAAGzD,EAAI4I,QAASlD,EAAO,CAAC,EAAE,GAG5D+9E,gBAAgB,IAEnB/9E,EAAMs9E,sBAAsB/F,EAAS,KAAMv3E,GAE3C,MAAM4gG,EAAU7iG,GAAGzD,EAAI4I,QAEvB09F,EAAQ/hG,OAAO,UAAW04E,GAC1BqpB,EAAQ/hG,OACL,cACA,GAAGzE,KAAKoB,MAAM,gBAAgBwE,EAAMxE,SAEvColG,EAAQ9+F,SACR8+F,EAAQ9hG,SACX,CACH,CAEA8F,SACG1K,MAAM0K,SACNxK,KAAKkoG,UACR,CAEA7B,mBAAmBI,GAChB,IAAIC,EAAa,GACbD,GACD9iG,GAAG3D,KAAKE,IAAIsa,OAAO5V,OACnB8hG,EAAa,CACV,CACGriG,IAAKrE,KAAK4F,MAAMhF,GAChBwvB,KAAM,SACNztB,MAAO8jG,KAIb9iG,GAAG3D,KAAKE,IAAIsa,OAAO7V,OAEtB,MAAM0oB,EAAKrtB,KAAKqsB,eAEhBgB,EAAG6B,gBAAgB,CAAEjF,KAAM,MAAO5I,MAAOqlF,IACzCr5E,EAAGyD,YACN,CAEA82E,SAASl6F,GACN1N,KAAKonG,mBAAmBxiG,KAAK8I,EAChC,CAQAvI,uBAAuBgjG,EAAY,IAChC,MAAM96E,EAAKrtB,KAAKqsB,eACX,YAAUgB,GAAIjnB,UAAU2jB,iBAAiBxd,WAAY47F,KACvD96E,EAAGjnB,SAAS2jB,gBAAgBxd,WAAa47F,QACnCnoG,KAAKqsB,eAAeyE,cAE7B9wB,KAAKkoG,UACR,CAWAf,mBAAmB/F,EAAUC,EAAc,IACxC,MAAMh0E,EAAKrtB,KAAKqsB,eACX,YAAUgB,GAAIlC,aAAck2E,KAC9Bh0E,EAAG6B,gBAAgBmyE,GACnBh0E,EAAGyD,aACH9wB,KAAKkoG,WAEX,CAEAR,cAAch6F,GACX1N,KAAKmgD,aAAamjD,UAAU51F,EAC/B,CAEAw6F,WACG,MAAM76E,EAAKrtB,KAAKqsB,eAEhB,IAAKgB,EAAI,OAET,IAAI+6E,EAAgBn7D,SAASwgD,uBAC1B,iBAAiBztF,KAAKoG,SAASsuD,cAGlC,MAAM2zC,EAAkBroG,KAAKmgD,aAAakhD,cAC1C,IAAIiH,EACDD,GAAiBhnF,OAAOlb,OAAS,EAC5BkiG,GAAiBhnF,OAAOlb,OACxB,KACR,IAAK,IAAI0H,KAAKu6F,EACXzkG,GAAGkK,GAAGpJ,OAAO,QAAS6jG,GACtB3kG,GAAGkK,GAAGnJ,UAGT,IAAI6jG,EAAct7D,SAASwgD,uBACxB,eAAeztF,KAAKoG,SAASsuD,cAGhC,MAAM8zC,EAAgBn7E,EAAGjnB,SAAS2jB,gBAAgBxd,WAClD,IAAIk8F,EAAYD,GAAeriG,OAAS,EAAIqiG,GAAeriG,OAAS,KAEpE,IAAK,IAAI0H,KAAK06F,EACX5kG,GAAGkK,GAAGpJ,OAAO,QAASgkG,GACtB9kG,GAAGkK,GAAGnJ,UAGT,IAAIgkG,EAAez7D,SAASwgD,uBACzB,sBAAsBztF,KAAKoG,SAASsuD,cAGvC,MAAMrvC,EAAagI,EAAGjnB,SAAS2jB,gBAAgB1E,WAC/C,GAAkB,MAAdA,EACD,IAAK,IAAIzY,KAAK87F,EAAc,CACzB,IAAIC,EAAgB17D,SAAS07D,cAE1BA,GAAezlF,YAAYmJ,gBAAgB1pB,OACxC3C,KAAKoG,SAASsuD,YACjBi0C,GAAiB/7F,EAAE2pE,qBAAqB,SAAS,IAIjD5yE,GAAGiJ,GAAG/H,SAASwgB,EAErB,CAEN,CAEA+8E,UACGpiG,KAAKmgD,aAAazpB,eAAe,cAAe12B,KAAKknG,oBAExD,EClZY,MAAM0B,UAAyB,KAO3CzoG,YACG,OAAO,IAAI2mG,EAA0B9mG,KACxC,CAEAgsE,eACGlsE,MAAMksE,eAEN,IAAIp7C,EAAK5wB,KAAKqsB,eACd,GAAKuE,GAKF,GAA8B,aAA1B5wB,KAAKoG,SAASo3D,SAAyB,CACxC,MAAMv4D,EAAS2rB,EAAGxE,YACXxmB,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe9G,KAAKoG,SAASR,QAEpCA,GACF5F,KAAKksE,gBAAgB,gCAE3B,OAZAlsE,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,cAa5D,oBCjCH,MAAMm0C,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAElChrC,EAAyB+qC,EAAmB1jE,gBAIlD1lC,EAAOC,QAAU,cAA6BmpG,EAW3C5iG,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS4vD,YACXh2D,KAAKoG,SAAS4vD,aAAe8H,EAAuB9H,YACvDh2D,KAAKoG,SAAS8vD,SACXl2D,KAAKoG,SAAS8vD,UAAY4H,EAAuB5H,SACpDl2D,KAAKoG,SAAS6vD,WACXj2D,KAAKoG,SAAS6vD,YAAc6H,EAAuB7H,WACtDj2D,KAAKoG,SAAS+vD,QACXn2D,KAAKoG,SAAS+vD,SAAW2H,EAAuB3H,OACtD,CAUAh2D,YACG,OAAO,IAAI2oG,EAAwB9oG,KACtC,oBCzCH,MAAM+oG,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtCvpG,EAAOC,QAAU,cAA2BqpG,EAazC5oG,YACG,OAAO,IAAI6oG,EAAsBhpG,KACpC,CAEAgsE,eACGlsE,MAAMksE,eAEGhsE,KAAKqsB,gBAEXrsB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,cAG5D,mBC7BH,MAAMu0C,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9CzpG,EAAOC,QAAU,cAAmCupG,EAMjD9oG,YACG,OAAO,IAAI+oG,EAA8BlpG,KAC5C,oBCXH,MAAMmpG,EAA0B,EAAQ,OAClCC,EACH,WAEGC,EAA+B,EAAQ,OAE7C5pG,EAAOC,QAAU,cAAkCypG,EAWhDljG,WAAWN,GACR7F,MAAMmG,WAAWN,GACjB3F,KAAKspG,YAAYj0C,aAAar1D,KAAKoG,SACtC,CAOAjG,YACG,OAAO,IAAIkpG,EAA6BrpG,KAC3C,CAEIspG,kBAID,OAH0B,MAAtBtpG,KAAKupG,gBACNvpG,KAAKupG,cAAgB,IAAIH,GAErBppG,KAAKupG,aACf,oBCpCH,MAAMC,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,MAE5ChqG,EAAOC,QAAU,cAAiC8pG,EAM/CrpG,YACG,OAAO,IAAIspG,EAA4BzpG,KAC1C,oBCXH,MAAM0pG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3ClqG,EAAOC,QAAU,cAAgCgqG,EAM9CvpG,YACG,OAAO,IAAIwpG,EAA2B3pG,KACzC,oBCXH,MAAM4pG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CpqG,EAAOC,QAAU,cAA+BkqG,EAU7CzpG,YACG,OAAO,IAAI0pG,EAA0B7pG,KACxC,oBCfH,MAAM8pG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CtqG,EAAOC,QAAU,cAA+BoqG,EAe7C3pG,YACG,OAAO,IAAI4pG,EAA0B/pG,KACxC,oBCpBH,MAAMgqG,EAAuB,EAAQ,MAC/BC,EAA4B,EAAQ,MAE1CxqG,EAAOC,QAAU,cAA+BsqG,EAe7C7pG,YACG,OAAO,IAAI8pG,EAA0BjqG,KACxC,mBCpBH,MAAMkqG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3C1qG,EAAOC,QAAU,cAAgCwqG,EAM9C/pG,YACG,OAAO,IAAIgqG,EAA2BnqG,KACzC,CAEAoqG,gBAAgBC,EAAM7qD,GACnB,MAAMlvC,EAAM4I,OAAOoxF,IAAIC,gBAAgBF,GAEjCz8F,EAAIq/B,SAASC,cAAc,KACjCt/B,EAAEu6E,KAAO73E,EACT1C,EAAE48F,SAAWhrD,EACbvS,SAASxrC,KAAK8sF,YAAY3gF,GAC1BA,EAAErM,QACFqM,EAAEmN,SAEF7B,OAAOoxF,IAAIG,gBAAgBn6F,EAC9B,CAEA07D,eACGlsE,MAAMksE,eAEGhsE,KAAKkmB,iBAAmBlmB,KAAKqsB,gBAEnCrsB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,eAIpD10D,KAAKoG,SAASo5C,UAChBx/C,KAAKksE,gBAAgB,kCAM3B,oBC3CH,MAAMw+B,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAC9BC,EAAmB,EAAQ,OAC3BtoC,EAAmB,EAAQ,OAC3BuoC,EAAoB,EAAQ,OAC5BC,EAA2B,EAAQ,OAEnCC,GADoB,EAAQ,OACX,EAAQ,QAEzBhrG,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAW5CgrD,EAAsC4pC,EAAevlE,gBAE3D1lC,EAAOC,QAAU,cAAyBgrG,EACvC/qG,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAEnCnlC,KAAKgrG,WAAa,CACfC,iBAAkB,KAAM,EAE9B,CAEAC,iBAIG,OAH4B,MAAxBlrG,KAAKmrG,kBACNnrG,KAAKmrG,gBAAkBrrG,MAAMK,aAEzBH,KAAKmrG,eACf,CAOAhrG,YACG,OAAO,IAAIwqG,EAAoB3qG,KAClC,CAEAorG,qBAAqBlrG,GAElB,IAAImrG,EAAgBrrG,KAAK2nB,OACrBrU,GAAMA,aAAas3F,GAAoBt3F,EAAElN,SAASg6D,YACpD,GAGmB,MAAjBirC,GACDA,EAAgBT,EAAiBpsC,YAAYx+D,KAAK+E,YAAa/E,MAC/DqrG,EAAcjlG,SAASg6D,WAAY,GAInCpgE,KAAK4nB,OAAS5nB,KAAK2nB,OACfrU,KAAQA,aAAas3F,GAAsBt3F,EAAElN,SAASg6D,aAK7D,IAAIkrC,EAAQtrG,KAAK2nB,QAAQxZ,KAAKmF,IAAOA,EAAE3S,SAASy5D,GAAK,GAAK,IAC1DkxC,EAAMhnG,KAAKtE,KAAK4nB,OAAOzhB,QAAU,GACjCmlG,EAAMhnG,KAAKX,GAAGzD,EAAI6G,QAAQZ,QAAU,GACpC,IAAIolG,EAAOhlG,KAAKm6C,OAAO4qD,GAQvB,OALAD,EAAc1qG,SAASy5D,EAAImxC,EAG3BvrG,KAAK4nB,OAAOtjB,KAAK+mG,GAEVA,CACV,CAUAG,cAAcrtC,EAAUnmD,EAAKqV,EAAIo+E,GAE9B,MAAMC,EAAgB,CAAC,MACvBvtC,EAASyxB,WAAU,SAAU53E,GAC1B0zF,EAAcpnG,KAAK0T,EAAI/V,OAAOkF,KACjC,IAGA,MAAMwkG,EAAUxtC,EAASyxB,YACnBgc,EAAW,CAAC,EAClBF,EAAcznG,SAASiS,IACpB01F,EAAS11F,GAAOy1F,EAAQz1F,EAAI,IAI/BlW,KAAKohE,iBACDvR,GACEA,aAAgByS,GAChBzS,aAAgBg7C,GAChBh7C,aAAgBi7C,GACfj7C,aAAgBk7C,GAAwC,UAAtBl7C,EAAKzpD,SAASxE,OACrDqC,SAAS+C,IACR,MAAM6kG,EAAa7rG,KAAK8rG,eAAe9kG,EAAEpG,IACzC,GAAkB,MAAdirG,EAAoB,OAExB,MAAMjmG,EAAQoB,EAAEpB,QAChB,GAAIA,EAAO,CACR,MAAMqG,EAAW4/F,EAAW5/F,UAAY4/F,EAAWxsB,MAAMpzE,SACrDA,IACD2/F,EAAShmG,EAAMkB,YAAcmF,EAAS4wC,KAAKgvD,EAAYD,GAC7D,KAIH5zF,EAAIgP,gBAAgB/iB,SAAS+C,KAEiB,GAAxC0kG,EAAcr+F,QAAQrG,EAAEF,aACxB8kG,EAAS5kG,EAAEF,qBAEJ8kG,EAAS5kG,EAAEF,mBACX8kG,EAAS5kG,EAAEmqB,gBACrB,IAIH,IAAK,MAAMqU,KAAQomE,EACM,MAAlBA,EAASpmE,IAA0C,GAAzBomE,EAASpmE,GAAMr/B,SAC1CylG,EAASpmE,GAAQ,IAIvB,IAAIumE,EAMJ,GAJIN,IACDM,EAAaN,EAAOx+E,aAGnB8+E,EAAY,CACb,MAAMnqE,EAAa6pE,EAAOr/E,WAEJpU,EAAIgP,gBACZ/iB,SAAS+C,IACpB,MAAMglG,EAAehsG,KAAKohE,iBACtB6qC,GAAUA,GAAOrmG,WAAWhF,KAAOoG,GAAGpG,KAG1C,GACGghC,EAAWhhC,IAAMoG,EAAEZ,SAASO,YAC5BqlG,EAAa7lG,OAAS,QACKklB,IAA3BugF,EAAS5kG,EAAEF,YACZ,CACC,MAAMolG,EAAcllG,EAAEK,WACjBL,EAAEK,WAAWP,WACb86B,EAAWlS,KAEhBk8E,EAAS5kG,EAAEF,YAAc,CAAC,EAC1B8kG,EAAS5kG,EAAEF,YAAYolG,GACpBH,EAAWG,IAAgBH,EAAWnrG,EAC5C,IAEN,CAIA,MAAMurG,EAAiB93F,OAAO6pC,OAAO7wB,EAAGJ,aAAe,CAAC,EAAG2+E,GAW3D,OARA5zF,EAAIjR,QAAQC,GAAe,aAATA,EAAE3C,KAA+B,WAAT2C,EAAE3C,MAAkBJ,SAC1D+C,IACgC,MAA1B4kG,EAAS5kG,EAAEF,cACZ8kG,EAAS5kG,EAAEF,YAAcE,EAAEwZ,OAAO2rF,GAAgB,GACrD,IAICP,CACV,CAWAQ,aAAaC,EAAWpnG,EAAQ2mG,GAC7B,IAAIrmG,GAAU,EAGd,MAAM+mG,EAAiBtsG,KAAKohE,iBACxB6qC,GACyC,GAAvCA,GAAOrmG,UAAUQ,UAAU21C,UACE,GAA7BkwD,GAAO7lG,UAAU21C,WACrB5tC,KAAK89F,GAAUA,EAAMrmG,UAGvB,IAAI2B,EA4CJ,GA3CIhC,IACDgC,EAAYtC,EAAOurB,YAAYo7E,GAC/BrmG,EAAUgC,EAAUmW,QAIvB2uF,EAAU3uB,WAGV4uB,EAAeroG,SAAS+C,IACrB,IAAKA,EAAG,OAER,MAAMymC,EAAWm+D,EAAS5kG,EAAEF,YAC5B,GAAgB,IAAZ2mC,GAA8B,MAAZA,GAAoBA,EAAStnC,OAAS,EAAG,CAC5DkmG,EAAUntF,YAAYlY,EAAEF,WAAY/G,EAAE,8BACtCwF,GAAU,EAGV,MAAMgnG,EAAaF,EAAUnjG,SAASlC,EAAEF,YACxC,GAAIylG,EAAY,CAEEA,EAAWC,QACb,KACVD,EAAW9nG,OAAO,SAAU,IAC5B8nG,EAAW1rG,UAId,MAAM4rG,EACHF,EAAW7+F,MAAM+/E,uBACd,0BACD,GACAgf,GAAmBpxB,MAAM,iBAC3BoxB,EAAkBpxB,MAAMqxB,WAAa,GAClC1sG,KAAKoG,SAAStE,YACdg/D,EAAoCh/D,eAG7C,CACH,MAIEyD,EAAS,CACX,MAAMonG,EAAaN,EAAUjxB,UAAU,CACpC16E,KAAM,SACNkB,KAAM,SAIL2F,GAAWiW,QAAQrX,QACpBoB,EAAUiW,OAAOvZ,SAASkE,IACvBkkG,EAAUntF,YAAY/W,EAAIhB,KAAMgB,EAAImJ,QAAQ,IAG/Cq7F,GAAYvnG,WAEZunG,GAAYjlG,QAElB,CAEA,OAAOnC,CACV,CAQAJ,yBACG,OAAOnF,KAAKk1D,WAAW03C,YAC1B,CASAznG,eAAeknG,GAGZ,IAAKrsG,KAAKgrG,YAAYC,qBAAsB,OAG5C,IAAKoB,IAAcA,EAAU3uB,WAE1B,OAGH2uB,EAAUQ,kBAGV,MAAMl5E,EAAK3zB,KAAKqsB,eAChB,GAAU,MAANsH,EAAY,OAGhB,MAAM3b,EAAM2b,EAAGvH,WACf,GAAW,MAAPpU,EAAa,OAGjB,MAAMhQ,EAAQ2rB,EAAG3rB,MACjB,GAAa,MAATA,EAAe,OAGnB,MAAM4jG,EAAW5rG,KAAKwrG,cACnBa,EACAr0F,EACA2b,EACAA,EAAGpH,oBAsBAugF,EAAa3kG,IAChB,MAAM4kG,EAAcV,EAAUjxB,UAAU,CACrC16E,KAAM,SACNkB,KAAM,SAIT,GAAIuG,EACD,GAAIA,EAAIyV,kBACL,IAAK,MAAMC,KAAQ1V,EAAIyV,kBAAmB,CACvC,IAAIovF,EAAe7kG,EAAIyV,kBAAkBC,GACrCmvF,GAAgBA,EAAa,KAC9BA,EAAeA,EAAa,IAE/BX,EAAUntF,YAAYrB,EAAMmvF,EAAa17F,QAC5C,MACQnJ,EAAI8kG,WACZxpG,MAAM6N,QAAQ,CACXjD,KAAMlG,EAAI8kG,WACVrrG,KAAM,WAGT6B,MAAM6N,QAAQ,CACXjD,KAAMtO,EAAE,mCACR6B,KAAM,UAET5B,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,2BACT5Q,KAAMV,KAAK8F,WAKpBinG,GAAarlG,SAEb2kG,GAAW1kG,gBAAgB,EAU9B,SANM3H,KAAKktG,mBAGXltG,KAAKs1D,iBAAiBs2C,IAGjB5rG,KAAKosG,aAAaC,EAAWr0F,EAAK4zF,GAEpC,OAMH,IAAIuB,EAFJd,EAAUhnG,eAAe,CAAEzD,KAAM,SAOjC,IAGMurG,EADCvB,EAAShrG,SACUoH,EAAMirE,OAAO24B,EAAShrG,GAAIgrG,SAE1B5jG,EAAMykE,OAAOm/B,EAKvC,CAHE,MAAOzjG,GAEN,MADA2kG,EAAU3kG,EAAI0B,MACR1B,CACT,CAwBA,UACSnI,KAAKy1D,cAAc03C,EAO5B,CANE,MAAOhlG,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,iCACT5Q,KAAMV,KAAK8F,QACXqnG,YAAaA,GAEnB,CAGA,IACGntG,KAAKyhE,cAAc0rC,EAOtB,CANE,MAAOC,GACNptG,KAAK+B,GAAGqG,OAAOC,UAAUF,IAAK,CAC3BmJ,QAAS,iCACT5Q,KAAMV,KAAK8F,QACXqnG,YAAaA,GAEnB,CAGA,MApIkB,CAACA,IAEZx5E,IACG3zB,KAAKoG,SAAS46D,aACfrtC,EAAG9G,UAAU,MACbw/E,EAAUnnG,SAENioG,GAAeA,EAAYvsG,IAAI+yB,EAAG9G,UAAUsgF,EAAYvsG,KAIlEyrG,EAAU1kG,iBAINwlG,GAAantG,KAAKwP,KAAK,QAAS29F,EAAY,EAoHnDE,CAAUF,GACHA,CACV,CAEAG,eACG,IACIC,EAAgB,GACpBvtG,KAAK2nB,QAAQ1jB,SAASmK,IACH,WAAZA,EAAK/J,KAAgC,aAAZ+J,EAAK/J,KAHnB,GAIR+J,EAAKzN,SAASy5D,IAEfmzC,EAAgBn/F,EAAKxN,GAE3B,IAEH,IAAI4sG,EAAiBxtG,KAAK8rG,eAAeyB,GACrCC,GAAkB7pG,GAAG6pG,EAAe/sG,GAAGG,KACxC+C,GAAG6pG,EAAe/sG,GAAGG,IAAIue,OAE/B,CAEI2sF,qBAED,OADuB9rG,KAAKkrG,iBACNY,cACzB,CAEA9/B,eACGlsE,MAAMksE,eAEGhsE,KAAKqsB,gBAEXrsB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,eAIrD10D,KAAKoG,SAAS6uD,YAIdj1D,KAAKoG,SAAS+6D,WAGrB,oBChfH,MAAMssC,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CjuG,EAAOC,QAAU,cAA+B+tG,EAM7CttG,YACG,OAAO,IAAIutG,EAA0B1tG,KACxC,oBCXH,MAAM2tG,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5CnuG,EAAOC,QAAU,cAAiCiuG,EAM/CxtG,YACG,OAAO,IAAIytG,EAA4B5tG,KAC1C,oBCXH,MAAM6tG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OACrC1E,EACH,WACG2E,EACH,WAEGvtC,EACHqtC,EAAsB1oE,gBAEL,EAAQ,OAK5B1lC,EAAOC,QAAU,cAAgCmuG,EAM9CluG,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,GAGnCnlC,KAAKguG,kBAAoBhuG,KAAK+B,GAAGgzB,iBAC9B,GAAG/0B,KAAKY,uBAGXZ,KAAKguG,kBAAkBh5E,WACpBh1B,KAAKosB,WAAapsB,KAAKosB,WAAWrlB,SAAW,GAC7C/G,KAAKosB,WAAapsB,KAAKosB,WAAa,MAsBvCpsB,KAAKguG,kBAAkBnpG,SACpB7E,KAAKoG,SAAS4jB,kBACXw2C,EAA2Cx2C,iBAEpD,CAYA/jB,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKspG,YAAYj0C,aAAar1D,KAAKoG,UACnCpG,KAAKiuG,aAAa54C,aAAar1D,KAAKoG,SACvC,CAEW8nG,6BACR,OAAO9E,EAAsB+E,kBAAkBnuG,KAAKJ,IAAKI,KAAKH,OACjE,CAEWuuG,8BACR,OAAOL,EAAuBI,kBAAkBnuG,KAAKJ,IAAKI,KAAKH,OAClE,CAOAM,YACG,OAAO,IAAI2tG,EAA2B9tG,KACzC,CAEIspG,kBAID,OAH0B,MAAtBtpG,KAAKupG,gBACNvpG,KAAKupG,cAAgB,IAAIH,GAErBppG,KAAKupG,aACf,CAEI0E,mBAID,OAH2B,MAAvBjuG,KAAKquG,iBACNruG,KAAKquG,eAAiB,IAAIN,GAEtB/tG,KAAKquG,cACf,oBCzGH,MAAMC,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1C9uG,EAAOC,QAAU,cAA+B4uG,EAM7CnuG,YACG,OAAO,IAAIouG,EAA0BvuG,KACxC,oBCXH,MAAMwuG,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9ChvG,EAAOC,QAAU,cAAmC8uG,EAMjDruG,YACG,OAAO,IAAIsuG,EAA8BzuG,KAC5C,oBCXH,MAAM0uG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAGrCD,EAAmBvpE,gBAEtB1lC,EAAOC,QAAU,cAA6BgvG,EAKhCE,yBACR,OAAOD,CACV,CAOAxuG,YACG,OAAO,IAAIwuG,EAAwB3uG,KACtC,CAQA6uG,mBAAmBxqG,GAChB,IAAI6F,EAAOlK,KAAKw7D,sBAQhB,OAAOn3D,GANH6F,EACkBA,EAAK4kG,iBAELrrG,MAAMyH,MAI/B,oBCxCH,MAAM6jG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExCvvG,EAAOC,QAAU,cAA6BqvG,EAM3C5uG,YACG,OAAO,IAAI6uG,EAAwBhvG,KACtC,oBCXH,MAAMivG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CzvG,EAAOC,QAAU,cAA+BuvG,EAM7C9uG,YACG,OAAO,IAAI+uG,EAA0BlvG,KACxC,oBCXH,MAAMmvG,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5C3vG,EAAOC,QAAU,cAAiCyvG,EAM/ChvG,YACG,OAAO,IAAIivG,EAA4BpvG,KAC1C,oBCXH,MAAMqvG,EAA+B,EAAQ,OACvCC,EAAoC,EAAQ,OAElD7vG,EAAOC,QAAU,cAAuC,EAQrDS,YACG,OAAO,IAAImvG,EAAkCtvG,KAChD,oBCbH,MAAMuvG,EAA6B,EAAQ,OACrCC,EAAkC,EAAQ,OAEhD/vG,EAAOC,QAAU,cAAqC,EAQnDS,YACG,OAAO,IAAIqvG,EAAgCxvG,KAC9C,oBCbH,MAAMyvG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3CjwG,EAAOC,QAAU,cAAgC+vG,EAM9CtvG,YACG,OAAO,IAAIuvG,EAA2B1vG,KACzC,oBCXH,MAAM2vG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,MAExCnwG,EAAOC,QAAU,cAA6BiwG,EAO3CxvG,YACG,OAAO,IAAIyvG,EAAwB5vG,KACtC,8ECVY,MAAM6vG,UAA6BtP,EAAA,EAC/C5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,eAAekhG,EAASngG,KAClCyT,OAAO6pC,OACJ,CACG4xD,KAAM,GACNC,MAAO,IAEV7vG,IAINF,KAAKgwG,QAAU,KAOfhwG,KAAKiwG,WAAa,KAClBjwG,KAAKkwG,eAAiB,KACtBlwG,KAAKmwG,aAAe,KACpBnwG,KAAKowG,cAAgB,KACrBpwG,KAAKqwG,cAAgB,KACrBrwG,KAAKswG,WAAa,KAElBtwG,KAAKuwG,kBAAoB,KACzBvwG,KAAKwwG,gBAAkB,KAEvBxwG,KAAKywG,YAAc,CAAC,EAMpB,MAAMC,EAAU1wG,KAAKE,IAAI6vG,MAEzB/vG,KAAK2wG,aAAe,CACjBC,aAAeC,IACZ,MAAMC,EAAentG,GAAG+sG,GAASK,WAAW,SAC5C,IAAKD,EAAc,OAAO,EAE1B,MAAME,EAAYF,EAAannD,QAC/B,SAAKqnD,IAAcA,EAAU1jF,SAEtB0jF,EAAU1jF,OAAOujF,EAAO,EAElCI,WAAaJ,IACV,IAAK7wG,KAAK2wG,aAAaC,aAAaC,GAAS,OAE7C,MAAMK,EAAavtG,GAAG+sG,GAASK,WAAW,cAC1C,OAAKG,EAEEA,EAAWD,WAAWJ,QAF7B,CAEoC,EAG7C,CAEApwG,KACG,MAAMP,EAAMF,KAAKE,IACX6/E,EAAO//E,MACP,WAAEmxG,EAAU,YAAEC,EAAW,UAAEC,GAAcrxG,KAAKsxG,kBAC9C3P,EAAM7hG,MAAMW,GAAG,CAClB,CACGU,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,OACNE,GAAIV,EAAI4vG,KACR3uB,OAAQ,IACRngF,MAAO,IACP6I,KAAM,CACH,CACGjJ,GAAI,MACJ+B,MAAO3C,KAAKoB,MAAM,QAErB,CACGR,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,SAErB,CACGR,GAAI,QACJ+B,MAAO3C,KAAKoB,MAAM,UAErB,CACGR,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,UAGxBgB,GAAI,CACDgI,YAAcxJ,IACXZ,KAAKuxG,SAAS3wG,EAAG,MAMhC,CACGA,GAAIV,EAAI6vG,MACRrvG,KAAM,QACN4mD,OAAQ,CAAC6pD,EAAYC,EAAaC,GAClCG,SAAU,IAAIC,IAAI,CACf,CACG1B,MAAM2B,SAASC,QAEf,cAAwB5B,MAAM2B,SAASC,QACpCxsG,cACG,MAAMyrB,EAAKmvD,EAAK6xB,sBAChB,OAAKhhF,GAOGA,EAAG2D,WAAa,IAAIpmB,KAAI,CAAC6iB,EAAG6gF,IACjC9xB,EAAK+xB,cAAc9gF,EAAG6gF,KART,EAUnB,CACA9pE,QACG,OAAOt4B,QAAQC,QAAQ,GAC1B,CACAvK,cAAc6S,EAAKjM,EAAOkJ,GAClB8qE,EAAK0wB,YAAYz4F,EAAIpX,MACvBm/E,EAAK0wB,YAAYz4F,EAAIpX,IAAMm/E,EAAKgyB,QAAQ/5F,IAE3C,MAAMojB,QAAgB2kD,EAAK0wB,YAAYz4F,EAAIpX,IAE3C,cADOm/E,EAAK0wB,YAAYz4F,EAAIpX,IACrB,CACJA,IAAKw6B,GAAW,CAAC,GAAGx6B,GAE1B,CACAuE,iBAAiBvE,EAAIoX,GAClB,aAAa+nE,EAAKiyB,WAAWh6F,EAAIpX,GAAIoX,EACxC,CACA7S,iBAAiBvE,GACd,aAAam/E,EAAKkyB,WAAWrxG,EAChC,SASf,cAFO+gG,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAOjB,MAAMmwG,EAAQvuG,GAAG3D,KAAKE,IAAI4vG,MAEtBoC,GAAOA,EAAMC,SAAS,MAC7B,CAOIP,4BACD,OAAO9xG,MAAM8xG,uBAAyB5xG,KAAKgwG,OAC9C,CAaA8B,cAAc1yF,EAAM,CAAC,EAAGrT,EAAQ,MAC7B,MAAMlC,EAAO,CAAC,EACRqmG,EAAiBlwG,KAAKkwG,eACtBC,EAAenwG,KAAKmwG,aACpBC,EAAgBpwG,KAAKowG,cAE3B,IAAKF,IAAoBC,IAAiBC,EAAgB,OAAOvmG,EAEjE,MAAMs0C,EAAW,IAAI19B,KAErB5W,EAAS,GAAIuV,EAAIxe,IAAMwe,EAAIvP,KAC3BhG,EAAW,KAAI,OACfA,EAAa,OAAI,EACjBA,EAAW,MAAI,EAGf,MAAMomG,EAAajwG,KAAKiwG,WAClBI,EAAgBrwG,KAAKqwG,cACrBC,EAAatwG,KAAKswG,WAyBxB,OAvBAzmG,EAAW,KAAIomG,EACV7wF,EAAI6wF,EAAWnpG,aAAe,GAC9B9G,KAAKyK,cAAcg7B,YAAYrmB,GACpCvV,EAAiB,WAAIuV,EAAI8wF,EAAeppG,aAAeq3C,EACvDt0C,EAAe,SAAIwmG,EACd52D,WAAWr6B,EAAIixF,EAAcvpG,aAAe,GAC5C,EAEDwpG,IAAYzmG,EAAc,QAAIuV,EAAIkxF,EAAWxpG,aAAe,IAE5DqpG,IACDtmG,EAAe,SAAIuV,EAAI+wF,EAAarpG,aAAeq3C,GAElDiyD,IAAevmG,EAAe,SAAIuV,EAAIgxF,EAActpG,aAAe,GAGlE+C,EAAe,UAAMA,EAAe,WACtCA,EAAe,SAAIs0C,EACnBt0C,EAAe,SAAI,GAGlBkC,IAAOlC,EAAY,MAAIkC,GAEpBlC,CACV,CAWAuoG,cAActmE,GACX,MAAMumE,EAAQ,CAAC,EACTpC,EAAajwG,KAAKiwG,WAClBC,EAAiBlwG,KAAKkwG,eACtBG,EAAgBrwG,KAAKqwG,cACrBC,EAAatwG,KAAKswG,WAClBH,EAAenwG,KAAKmwG,aACpBC,EAAgBpwG,KAAKowG,cAe3B,OAbIH,IAAYoC,EAAMpC,EAAWnpG,YAAcglC,EAAW,MAAK,IAE3DokE,IAAgBmC,EAAMnC,EAAeppG,YAAcglC,EAAiB,YAEpEukE,IACDgC,EAAMhC,EAAcvpG,YAAc2yC,WAAW3N,EAAe,UAAK,IAEhEwkE,IAAY+B,EAAM/B,EAAWxpG,YAAcglC,EAAc,SAEzDqkE,IAAckC,EAAMlC,EAAarpG,YAAcglC,EAAe,UAE9DskE,IAAeiC,EAAMjC,EAActpG,YAAcglC,EAAe,UAE7DumE,CACV,CAMArtG,WAAWC,GACRnF,MAAMkF,WAAWC,GAGjB,MAAMmB,EAAWpG,KAAKoG,SAElBnB,IACDjF,KAAKiwG,WAAahrG,EAAO8I,UAAU3H,EAAS88D,cAC5CljE,KAAKkwG,eAAiBjrG,EAAO8I,UAAU3H,EAAS+8D,kBAChDnjE,KAAKmwG,aAAelrG,EAAO8I,UAAU3H,EAASg9D,gBAC9CpjE,KAAKowG,cAAgBnrG,EAAO8I,UAAU3H,EAASi9D,iBAC/CrjE,KAAKqwG,cAAgBprG,EAAO8I,UAAU3H,EAASk9D,iBAC/CtjE,KAAKswG,WAAarrG,EAAO8I,UAAU3H,EAASm9D,cAElD,CAMA+uC,mBAAmBjmF,GAChBvsB,MAAMwyG,mBAAmBjmF,GAEzB,MAAMgB,EAAKrtB,KAAK4xG,uBAAyBvlF,EACpCgB,IAILrtB,KAAKgwG,QAAU3jF,EAGfrsB,KAAKgF,WAAWqoB,EAAGjB,YAEA,CAAC,SAAU,SAAU,SAAU,mBAEvCnoB,SAASoG,IAEdA,KAAKgjB,EAAGklF,UACiD,IAAzDvyG,KAAKw2B,SAASwiC,WAAWw5C,GAAOA,EAAG//E,YAAcpoB,MAK5C,WADAA,EAEFrK,KAAKuyB,SAAS,CACXC,QAASnF,EACToF,UAAW,SACXC,SAAWm+E,IAEJ7wG,KAAK2wG,aAAaC,aAAaC,IAChC7wG,KAAK2wG,aAAaM,WAAWJ,EAAO,IAO7C7wG,KAAKuyB,SAAS,CACXC,QAASnF,EACToF,UAAWpoB,EACXqoB,SAAU,KACP1yB,KAAKyyG,UAAU,IAK3B,IAEN,CAMA9tG,OACGhB,GAAG3D,KAAKE,IAAIC,YAAYwE,MAC3B,CAEA8tG,WACG,MAAMC,EAAY/uG,GAAG3D,KAAKE,IAAI6vG,OAC9B,IAAK2C,EAAW,OAEhB,MAAMC,EAAcD,EAAU3B,WAAW,SACzC,IAAK4B,EAAa,OAElB,MAAMC,EAAUD,EAAYhpD,QACvBipD,GAWL/9F,YAAW,KACR+9F,EAAQ53F,WAER,MAAM4V,EAAK5wB,KAAK4xG,sBACViB,EAAa,CAChBhpG,KAAM+mB,GACAA,EAAG2D,WAAa,IAAIpmB,KAAI,CAAC6iB,EAAGjlB,IAC1B/L,KAAK8xG,cAAc9gF,EAAGjlB,KAEzB,IAIJ/L,KAAKkwG,iBAAmBlwG,KAAKmwG,cAAgBnwG,KAAKowG,gBACnDwC,EAAQn7F,MAAMo7F,GAIjB,MAAMC,EAAYH,EAAYI,YAE9B/yG,KAAKuwG,kBAAoBuC,EAAU//E,MACnC/yB,KAAKwwG,gBAAkBsC,EAAUvrD,IAEjCvnD,KAAK2N,MAAM,GACX,GACN,CAEI2jG,wBAoBD,MAAO,CACJD,UApBe,CAAEpwF,KAAM,MAAOT,OAAQ,MAqBtCwyF,WApBa,CACV/xF,KAAM,OACNT,OAASuS,IACN,MAAMmnD,EAASz2E,MAAMgd,KAAKq+B,UAAU,SAC9Bm0D,EAASxvG,MAAMgd,KAAKyyF,UAAUngF,GAC9BogF,EAAO1vG,MAAMgd,KAAKW,IACrB3d,MAAMgd,KAAKW,IAAI6xF,EAAQ,EAAG,QAAQ,IACjC,EACD,OACA,GAGH,OAAO/4B,EAAO+4B,GAAU,MAAQ/4B,EAAOi5B,EAAK,GASlD/B,YANc,CAAEnwF,KAAM,QAAST,OAAQ,MAOvC2wF,WANa,CAAElwF,KAAM,OAAQT,OAAQ,MAQ3C,CAEA+wF,SAAS6B,GACN,MAAMV,EAAY/uG,GAAG3D,KAAKE,IAAI6vG,OAC9B,IAAK2C,EAAW,OAEhB,MAAMW,EAAYX,EAAU3B,WAAW,SACvC,IAAKsC,EAAW,OAEhB,MAAMC,EAAY,IACZ,WAAEnC,EAAU,YAAEC,EAAW,WAAE4B,EAAU,UAAE3B,GAC1CrxG,KAAKsxG,kBAER,OAAQ8B,GACL,IAAK,MACFE,EAAUhvG,KAAK6sG,EAAYC,EAAaC,GACxC,MAEH,IAAK,OACFiC,EAAUhvG,KAAK6sG,EAAYC,EAAa4B,GACxC,MAEH,IAAK,QACFM,EAAUhvG,KAAK6sG,EAAYC,GAC3B,MAEH,IAAK,OACFkC,EAAUhvG,KAAK6sG,GAIrB,MAAMnO,EAAUhjG,KAAK+B,GAAG4Y,MAClBm4F,EAAYJ,EAAU3B,WAAW,SAASgC,YAC7ChgF,EAAQiwE,EAAQviF,KAAKW,IAAIphB,KAAKuwG,mBAAoB,EAAG6C,GAAO,GAC5D7rD,EAAMy7C,EAAQviF,KAAKW,IAAIphB,KAAKwwG,gBAAiB,EAAG4C,GAAO,GAE1DC,EAAUE,UACPxgF,EACAw0B,EACAurD,EAAUU,QACVV,EAAUW,UACVX,EAAUY,WACVJ,GAEHZ,EAAU/4B,KAAKj1E,UACfguG,EAAUz5B,WAAW06B,OAAO,CAAE1L,IAAK,EAAG2L,KAAM,GAC/C,CAMAppG,SACG1K,MAAM0K,SACNxK,KAAKsyG,mBAAmBtyG,KAAKqsB,gBAE7B1oB,GAAG3D,KAAKE,IAAIC,YAAYyE,MAC3B,CAEA+I,OAiCA,CAEAxI,cAAc0uG,GACX,MAAMxB,EAAQryG,KAAKoyG,cAAcyB,GAC3B9Q,EAAK/iG,KAAK+B,GAEhB,IAGG,aAAa/B,KAAKyK,eAAezC,QAAQykE,OAAO4lC,GAanD,CAZE,MAAOhoG,GAWN,MAVA04F,EAAGpoF,MAAMxJ,MAAM,CACZC,MAAOpR,KAAKoB,MAAM,qBAClBmQ,GAAIvR,KAAKoB,MAAM,QACfiN,KAAMrO,KAAKoB,MAAM,+BAEpB2hG,EAAG36F,OAAOC,UAAUgC,EAAG,CACpBiF,QAAS,2CACT+iG,UAGGhoG,CACT,CACH,CAEAlF,iBAAiB6pB,GACd,MAAM+zE,EAAK/iG,KAAK+B,GAEhB,IAKG,aAFM/B,KAAKyK,cAAczC,QAAQsO,OAAO0Y,GAEjC,CAAC,CAaX,CAZE,MAAO3kB,GAWN,MAVA04F,EAAGpoF,MAAMxJ,MAAM,CACZC,MAAOpR,KAAKoB,MAAM,uBAClBmQ,GAAIvR,KAAKoB,MAAM,QACfiN,KAAMrO,KAAKoB,MAAM,iCAEpB2hG,EAAG36F,OAAOC,UAAUgC,EAAG,CACpBiF,QAAS,gDACT0f,UAGG3kB,CACT,CACH,CAEAlF,iBAAiB6pB,EAAO8kF,GACrB,MAAMzB,EAAQryG,KAAKoyG,cAAc0B,GAC3B/Q,EAAK/iG,KAAK+B,GAEhB,IAKG,aAFM/B,KAAKyK,cAAczC,QAAQirE,OAAOjkD,EAAOqjF,GAExC,CAAC,CAaX,CAZE,MAAOhoG,GAWN,MAVA04F,EAAGpoF,MAAMxJ,MAAM,CACZC,MAAOpR,KAAKoB,MAAM,uBAClBmQ,GAAIvR,KAAKoB,MAAM,QACfiN,KAAMrO,KAAKoB,MAAM,iCAEpB2hG,EAAG36F,OAAOC,UAAUgC,EAAG,CACpBiF,QAAS,gDACT+iG,UAGGhoG,CACT,CACH,ECtkBH,MAAM0pG,EAAkB,EAAQ,OAEjB,MAAMC,UAAoBD,EACtCp0G,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,EACtC,CAOAhlC,YACG,OAAO,IAAI0vG,EAAqB7vG,KACnC,CAEAgsE,eACGlsE,MAAMksE,eAEN,IAAIp7C,EAAK5wB,KAAKqsB,eACd,GAAKuE,EAKF,GAAK5wB,KAAKoG,SAAS+8D,iBAEZ,CACJ,IAAIv9D,EAAQgrB,EAAGxE,YAAYre,UACxB/N,KAAKoG,SAAS+8D,kBAEZv9D,GACF5F,KAAKksE,gBACF,iCAAiClsE,KAAKoG,SAAS+8D,oBAGxD,MAVGnjE,KAAKksE,gBAAgB,6CALxBlsE,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,cAgB5D,yFChCY,MAAMu/C,UAAgCz1F,EAAA,EAClD7e,YAAYE,GAGTC,MAAM,CACHo0G,YAAa,GAHhBr0G,EAASA,GAAU,sCAIhBoK,KAAM,GAAGpK,uBAGZG,KAAKkD,eAAiB,KAKtBlD,KAAKm0G,gBAAkB,KAIvBn0G,KAAKo0G,MAAQ,KAIbp0G,KAAKq0G,UAAY,KAIjBr0G,KAAKs0G,cAAgB,EAGxB,CAEA7zG,KACG,IAAIs/E,EAAO//E,KAGX,MAAO,CACJU,KAAM,QACNE,GAAIZ,KAAKE,IAAIg0G,YACblzG,MAAO,IACPD,OAAQ,EACRu8F,QAAQ,EACRzkB,QAAQ,EACRp3E,KAAM,CACHb,GAAIZ,KAAKE,IAAI+J,KACbvJ,KAAM,OACN6zG,YAAY,EACZ1qG,KAAM,CACH,CAAE1C,KAAM,MAAOoE,KAAM,gBACrB,CAAEpE,KAAM,QAASoE,KAAM,gBACvB,CAAEpE,KAAM,MAAOoE,KAAM,cACrB,CAAEpE,KAAM,MAAOoE,KAAM,iBAExB+5D,SACG,mFACHljE,GAAI,CACDgI,YAAa,SAAUxJ,GACpB,IAAIT,EAAYH,KAAKmtB,QAAQvsB,GAC7Bm/E,EAAKpT,OAAOxsE,EAAUgH,KACzB,IAIZ,CAEAhC,WAAWpD,GACJA,IACD/B,KAAK+B,GAAKA,GAEb0B,MAAMhD,GAAGT,KAAKS,MACdkD,GAAG3D,KAAKE,IAAIg0G,aAAarzG,QAC5B,CASA2zG,mBAAmBnnF,GAChBrtB,KAAKm0G,gBAAkB9mF,CAC1B,CAOAroB,WAAWC,GACRjF,KAAKkD,eAAiB+B,CACzB,CAQAwvG,gBAAgB1tG,EAAS,IACtB/G,KAAKs0G,cAAgBvtG,GAAU,EAClC,CAOA2tG,YAAYl1D,GACTx/C,KAAKq0G,UAAY70D,CACpB,CAQAm1D,iBAAiBC,GACd50G,KAAKo0G,MAAQQ,CAChB,CAQAhwG,KAAK8I,GACF/J,GAAG3D,KAAKE,IAAIg0G,aAAatvG,KAAK8I,EACjC,CAEAvI,aAAagC,GACV,IAAI0tG,EAEA76C,EAAU,CAAC,EAEX3sC,EAAKrtB,KAAKm0G,gBACVjxG,EAAiBlD,KAAKkD,eACtBkxG,EAAQp0G,KAAKo0G,MACbC,EAAYr0G,KAAKq0G,WAGlBhnF,GACEA,EAAGjnB,SAAS8jB,SAAWmD,EAAGT,YAAcS,EAAGpC,eAAeC,mBAGtDmC,EAAGyD,WAAW,EAAG,MACvBzD,EAAGjnB,SAAS8jB,SAAU,GAKrBhnB,GACDA,EAAe6D,SAAS9C,SAAS+C,IAE1BhH,KAAKs0G,cAAcjnG,QAAQrG,EAAEF,aAAe,IAEhDkzD,EAAQhzD,EAAEF,YAAc,CACrBw+D,SAAW72C,GACDznB,EAAEwZ,OAAOiO,IAErB,IAMP,MAAMqmF,EAAeV,EAAMvqG,KAAK2jB,KAAK,CAACunF,uBAAwB,IAAI5uG,OAAS,EACrE6uG,EAAa51F,GAAQ01F,GAA+C,GAA/B11F,GAAK21F,uBAEhD,OAAQ5tG,GACL,IAAK,MACF1D,MAAMwxG,IAAIv9D,UAAUv2C,KAAO,IAE3B0zG,EAAWpxG,MAAMyxG,MAAMd,EAAO,CAC3B50D,SACG60D,IAAcnxG,EAAiBA,EAAe9B,MAAQ,MACzD44D,QAASA,EACTlxD,OAAQksG,IAEX,MACH,IAAK,QACFH,EAAWpxG,MAAM0xG,QAAQf,EAAO,CAC7B50D,SACG60D,IAAcnxG,EAAiBA,EAAe9B,MAAQ,MACzD+F,KACGktG,IAAcnxG,EAAiBA,EAAe9B,MAAQ,MACzD44D,QAASA,EACTo7C,YAAY,EACZtsG,OAAQksG,IAEX,MACH,IAAK,MACFH,EAAWpxG,MAAM4xG,MAAMjB,EAAO,CAC3B50D,SACG60D,IAAcnxG,EAAiBA,EAAe9B,MAAQ,MACzDg0G,YAAY,EACZtsG,OAAQksG,IAEX,MACH,IAAK,MACFH,EAAWpxG,MAAM6xG,MAAMlB,EAAO,CAC3B50D,SACG60D,IAAcnxG,EAAiBA,EAAe9B,MAAQ,QAMlE,UACSyzG,EACNlxG,GAAG3D,KAAKE,IAAIg0G,aAAavvG,MAQ5B,CAPE,MAAOwD,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4DAA4DnK,IACrEouG,WAAYpuG,EACZ6yD,UACAw7C,SAAUnB,GAEhB,CACH,iBCzNCt0G,EAAI,KAEO,MAAM01G,UAAkCj3F,EAAA,EAGpD7e,YAAY+1G,EAAqB71G,GAG9BC,MAAM,CACHK,UAAW,GAHdN,EAASA,GAAU,8CAIhB81G,OAAQ,GAAG91G,uBAGdG,KAAKyK,cAAgB,KAIrBzK,KAAK41G,cAAgBF,EAIrB11G,KAAK+B,GAAK2zG,EAAoB3zG,GAG9B/B,KAAK61G,WAAa,IAAIl2B,EAAA,EAAW9/E,EAAQG,KAAK+B,IAIzChC,IACFA,EAAI,IAAI+V,IACE9V,KAAK+B,GAAGsP,aAAajQ,SAAS0U,GAG9C,CAEArV,KACG,IAAIP,EAAMF,KAAKE,IAGf,MAAO,CACJQ,KAAM,QACNE,GAAIV,EAAIC,UAERsB,KAAM,CACHT,MAAO,IACPa,KAAM,CAEH7B,KAAK61G,WAAWp1G,KAChB,CAAEM,OAAQ,IACV,CACGI,KAAM,CACH,CAAC,EACD,CACGT,KAAM,SACNiC,MAAO5C,EAAE,UACTiB,MAAO,IACPO,MAAO,KACJvB,KAAK2E,MAAM,GAGjB,CACG/D,GAAIV,EAAIy1G,OACRz0G,IAAK,gBACLR,KAAM,SACNU,MAAOrB,EAAE,UACT6B,KAAM,OACNZ,MAAO,IACPO,MAAO,KACJvB,KAAK21G,QAAQ,OAO/BvzG,GAAI,CACDoI,OAAQ,KACLxK,KAAKwK,QAAQ,GAIzB,CAEArF,WAAWpD,GAIR,OAHA0B,MAAMhD,GAAGT,KAAKS,MACdT,KAAK61G,WAAWvyG,KAAKvB,GAEd0N,QAAQC,SAClB,CAMA/K,OACGhB,GAAG3D,KAAKE,IAAIC,WAAWwE,MAC1B,CAWAK,WAAWC,EAAQgkF,GAChBjpF,KAAKyK,cAAgBxF,EACrBjF,KAAK61G,WAAW7wG,WAAWC,GAC3BjF,KAAKs0E,UAAY2U,CACpB,CAEAz+E,SAAU,CAUV5F,KAAK8I,EAAOvL,EAAU,MACJ,MAAXA,EACDwB,GAAG3D,KAAKE,IAAIC,WAAWyE,KAAK8I,EAAOvL,GAEnCwB,GAAG3D,KAAKE,IAAIC,WAAWyE,KAAK8I,EAElC,CAOAioG,SAEG,IAAIG,EAAgBnyG,GAAG3D,KAAKE,IAAIy1G,QAC7BI,EAAe/1G,KAAK61G,WAAW5pG,YAAc,GAIhD,GAFA6pG,EAAc1wG,WAETpF,KAAK41G,cAIP,YADAE,EAAcpuG,SAEV,GAAIquG,EAAa5vG,OAAS,EAG9B,YADA2vG,EAAcpuG,SAIjB,IAAIsuG,EAAah2G,KAAK41G,cAAcK,eAChCC,EAAgB,GACpBF,EAAWnsG,KAAKy7E,MAAK,SAAUlmE,GAEzBA,GACAA,EAAIoe,eAAe,2BACW,GAA9Bpe,EAAI21F,wBAEJmB,EAAc5xG,KAAK8a,EAAIxe,GAE7B,IAEA,IAAI6E,EAAO,CAAC,EACZswG,EAAa9xG,SAASmK,IACnB,IAAIi5B,EAAYrnC,KAAKyK,cAAcsD,UAAUK,EAAK1D,SAC7C28B,IAEL5hC,EAAK4hC,EAAUvgC,YAAcsH,EAAKzL,MAAK,IAGtCuzG,EAAc/vG,OAAS,EACxB1C,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,6BACTsO,KAAMtO,EAAE,yDACR8R,SAAW/D,IACJA,GACGkoG,GAAcA,EAAW3wG,cAC1B2wG,EAAW3wG,aAAa,CAAEzD,KAAM,SAEpB5B,KAAKyK,cAAczC,QAE9BkrE,YAAY,CACVC,OAAQ+iC,EACRvwG,OAAQF,IAEViP,MAAK,KAEHohG,EAAcpuG,SACd1H,KAAK2E,OAEDqxG,GAAcA,EAAWruG,cAC1BquG,EAAWruG,cAAc,IAE9BgN,OAAOxM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,+DACH6jE,OAAQ+iC,EACRvwG,OAAQF,GACT,KAGRqwG,EAAcpuG,QACjB,KAINjE,MAAM0N,MAAM,CACTC,MAAOrR,EAAE,uBACTsO,KAAMtO,EACH,+EAGN+1G,EAAcpuG,SACd1H,KAAK2E,OAEX,iBClOY,MAAM+wG,UAA4BnV,EAAA,EAC9C5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,cAAckhG,EAASngG,KACjCyT,OAAO6pC,OACJ,CACGi4D,MAAO,GAGPC,QAAS,GACTC,qBAAsB,GAEtBC,aAAc,GACdC,iBAAkB,GAClBC,WAAY,GACZC,aAAc,GAEdxP,oBAAqB,GAErByP,UAAW,IAEdx2G,IAINF,KAAKknG,oBAAsB,CAAC9F,EAAUC,KACnCrhG,KAAKmnG,mBAAmB/F,EAAUC,EAAY,EAGjDrhG,KAAK22G,eAAiB,IAAI7gG,KACvB9V,KAAK42G,aAAa9gG,EAAO,EAO5B9V,KAAKoiG,UACLrB,EAAS5gD,aAAa/9C,GAAG,cAAepC,KAAKknG,qBAG7ClnG,KAAKY,GAAKmgG,EAASngG,GAqBnBZ,KAAK62G,gBAAkB,EAIvB72G,KAAK82G,iBAAmB,EAQxB92G,KAAK+2G,iBAAkB,EAIvB/2G,KAAKyhG,SAAWV,EAASW,eAAevhG,YAIxC,MAAM62G,EAAUh3G,KAAKE,IAAIi2G,MACnBpT,EAAK/iG,KAAK+B,GAEhB/B,KAAKi3G,YAAc,IAAI,EAAcD,GACrCh3G,KAAKi3G,YAAY3zG,KAAKy/F,GAItB/iG,KAAKk3G,yBAA2B,IAAI,EAAuBl3G,KAAMg3G,GACjEh3G,KAAKk3G,yBAAyB5zG,KAAKy/F,GAKnC/iG,KAAKm3G,4BAA8B,IAAI,IAAiBH,GACxDh3G,KAAKm3G,4BAA4B7zG,KAAKy/F,GACtC/iG,KAAKm3G,4BAA4B/0G,GAAG,WAAYilG,IAC7CrnG,KAAKsnG,iBAAiBD,EAAY,IAKrCrnG,KAAKo3G,iBAAmB,CACrB,yBACA,yBACA,wBACA,uBACA,oBAeHp3G,KAAKq3G,qBAAsB,EAM3Br3G,KAAKs3G,cAAgB,KAKrBt3G,KAAKu3G,yBAA0B,CAClC,CAIIC,yBACD,MAAO,qBACV,CAEApV,UACGpiG,KAAKU,KAAKy/C,aAAas3D,mBAAmB,eAC1Cz3G,KAAKqsB,gBAAgBqK,eAAe,eAAgB12B,KAAK22G,eAC5D,CASAe,eAAe92G,GACZ,IAAIixG,EAAO7xG,KAAKi2G,eAAeyB,eAAe92G,GAQ9C,OAPKZ,KAAKoG,SAASu9D,YAKhBkuC,IAEIA,CACV,CAEA8F,cACG,MAAMz3G,EAAMF,KAAKE,IACXkG,EAAWpG,KAAKoG,SAChB25E,EAAO//E,KAEb,IAAIU,EAAO,aAEP0F,EAASwxG,eAAiBxxG,EAASo+D,WAEpC9jE,EAAO,aAEV,IAAIm3G,EAAa,OAKjB,OAHKzxG,EAASs9D,aAAet9D,EAAS4vD,cAAe5vD,EAAS8vD,WAC3D2hD,EAAa,OAET,CACJn3G,OACAE,GAAIV,EAAIw2G,UACRoB,aAAc,CAAE5wB,KAAM,IACtB6wB,UAAW,CAAE7wB,KAAM,IACnB8wB,WAAW,EACX5vD,SAAUhiD,EAASs9D,WACnBu0C,gBAAgB,EAChBl3G,OAAQqF,EAASrF,QAAU,EAC3Bm3G,WAAY,SACZ5a,OAAQua,EACR1jC,OAEG/tE,EAAS29D,eAAe59D,OAAS,GACjCC,EAAS49D,aAAa79D,OAAS,EAClCmgG,SAAS,EAgBT6R,YAAY,EACZ/1G,GAAI,CACDg2G,eAAgB,SAAUvuG,EAAMwuG,GAC7B,IAAmD,GAA/Ct4B,EAAKq3B,iBAAiB/pG,QAAQxD,EAAK4qE,QACpC,OAAO,EACH,GAAIruE,EAASs9D,WAAY,CAC7B,MACM4Z,EADayC,EAAK1zD,eAAeD,WACRrlB,QAC3BC,GAAMA,EAAEF,aAAe+C,EAAK4qE,SAC9B,GAEF,GAAmB,MAAf6I,EAAqB,OAAO,EAEhC,MAAMg7B,EAAWt4G,KAAKw0E,YAAY,CAC5Bp1D,IAAKvV,EAAKuV,IACVq1D,OAAQ5qE,EAAK4qE,SAEhBhmD,EAAUzuB,KAAKmtB,QAAQtjB,EAAKuV,KAE/B,OAAOk+D,EAAY4E,WAAWzzD,EAAS,KAAM6pF,EAChD,CAAO,SAAKlyG,EAAS4vD,cAAgB5vD,EAAS8vD,gBAAvC,CAEV,EACAqiD,cAAe,CAAC1uG,EAAMwuG,KAMfr4G,KAAKoG,SAASs9D,YACf1jE,KAAKu4G,cAAc1uG,EAAMwuG,EAC5B,EAEHG,kBAAmB,SAAU53G,GAC1B,GAAyB,2BAApBZ,KAAKmtB,QAAQvsB,GAAiC,OAAO,CAC7D,EACA63G,QAAS,SAAUr5F,EAAKkgE,EAAKppE,GAE1B,GAAW,0BAAPopE,EAGDS,EAAK24B,0BAEL,GAAItyG,EAASs9D,WAAY,CAGtB,MAAMxZ,EAAQ,CACXvnD,MAAOuT,GAEJ5Q,EAAS,CACZ8Z,IAAKA,EACLq1D,OAAQ6K,EACRr9E,OAAQ,MAGX89E,EAAK44B,gBAAgBzuD,EAAO5kD,EAC/B,KAAO,CACStF,KAAKw0E,YAAY,CAC3Bp1D,IAAKA,EACLq1D,OAAQ6K,IAEW/N,cACnB,0BAISM,QADD,GAAP37D,CAKP,CAEN,EACA0iG,iBAAkB,SAAU1uD,EAAO5kD,GAEnC,EACAqzG,gBAAiB,CAACzuD,EAAO5kD,EAAQuzG,KACF,GAAxB74G,KAAK+2G,iBACN/2G,KAAK24G,gBAAgBzuD,EAAO5kD,EAAQuzG,EAAa,EAEvDC,kBAAmB,WAChB94G,KAAK+2G,iBAAkB,CAC1B,EACAgC,oBAAqB,WAClB/4G,KAAK+2G,iBAAkB,CAC1B,EAMAiC,eAAgB,SACblyG,EACA6sE,EACAsB,EACAgkC,GAWA,IAA4C,GAPpB,CACrB,yBACA,wBACA,uBACA,oBAGiB5rG,QAAQvG,GAAmB,CAE5C9G,KAAKu/E,aAELv/E,KAAKk5G,eAAepyG,EAAYmuE,GAChCj1E,KAAKw/E,eAIL,MAAM/K,EAASsL,EAAKo5B,gBAEpBryG,EAAa2tE,EAAO7zE,IAIjB+yE,EADCA,EAAWsB,EACDR,EAAOzzE,MAAQ,GAIfyzE,EAAOzzE,OAAS2yE,EAAW,KAO1B,KACZA,EAAW,IAGdc,EAAOpL,SAAWsK,EAElB3zE,KAAKk5G,eAAepyG,EAAY6sE,EACnC,CAEIslC,GACDl5B,EAAKi5B,eACFlyG,EACA6sE,EACAsB,EACAgkC,EAGT,EACAG,YAAcpqF,IAAD,EAKbqqF,mBAAoB,CAAC11E,EAAU9S,OACmB,IAA7C7wB,KAAKo3G,iBAAiB/pG,QAAQs2B,IACnC21E,mBAAoB,CAAC31E,EAAUC,EAAU/S,OAGS,IAA7C7wB,KAAKo3G,iBAAiB/pG,QAAQu2B,IACnC21E,kBAAmB,CAAC51E,EAAUC,EAAU/S,IACrC7wB,KAAKu5G,kBAAkB51E,EAAUC,EAAU/S,GAU9C2oF,cAAe,CAAC54G,EAAIyJ,EAAG9H,KAEpBvC,KAAKw5G,cAAc54G,EAAIyJ,EAAG9H,EAAK,GAI3C,CAEAk3G,WACG,OAAOz5G,KAAKU,KAAKy/C,aAAa1/C,IAGjC,CAOAi5G,YACG,MAAMx5G,EAAMF,KAAKE,IACX6/E,EAAO//E,KAEb,MAAO,CACJU,KAAM,UACNE,GAAIV,EAAIk2G,QACRv9B,QAAQ,EACR33E,IAAK,kBACLC,KAAM,CACH,CACGT,KAAM,SACNE,GAAIV,EAAIq2G,iBACRr1G,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,QAClBmK,KAAM,wBACN3J,KAAM,OACNinC,UAAU,EACVvnC,WAAW,EACXC,MAAO,WACJw+E,EAAK45B,kBAAkB35G,KAAK0N,MAC/B,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAIm2G,qBACRn1G,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,UAClBmK,KAAM,cACN3J,KAAM,OACNinC,UAAU,EACVvnC,WAAW,EACXC,MAAO,WACJw+E,EAAK65B,sBAAsB55G,KAAK0N,MACnC,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAIo2G,aACRp1G,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,WAClBmK,KAAM,eACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJw+E,EAAK2nB,cAAc1nG,KAAK0N,MAC3B,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAIs2G,WACRt1G,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,QAClBmK,KAAM,aACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJw+E,EAAK85B,YAAY75G,KAAK0N,MACzB,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAIu2G,aACRv1G,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,UAClBmK,KAAM,cACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJw+E,EAAK+5B,cAAc95G,KAAK0N,MAC3B,GAEH,CAAC,EACD,CACG9M,GAAIV,EAAI+mG,oBACRvmG,KAAM,SACNg7E,YAAa17E,KAAKoB,MAAM,aACxBgB,GAAI,CACDw7E,gBAAiB,KACd,MAAMv4D,EAAa1hB,GAAGzD,EAAI+mG,qBAAqBh7F,WAE/CjM,KAAKU,KAAKy/C,aAAa0nD,mBAAmBxiF,EAAW,KAMvE,CAEA5kB,KACG,MAAMs5G,EAAU,CACbn5G,GAAIZ,KAAKE,IAAIi2G,MACbv0G,KAAM,QACND,YAAY,EACZE,KAAM,CACH,CAAC,EACD,CACGnB,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,6BAClB44G,WAAY,IACZ34G,MAAO,UAEV,CAAC,IAID+E,EAAWpG,KAAKoG,UAElBpG,KAAKqsB,gBAA0C,KAAxBjmB,EAASsuD,cACjCqlD,EAAQv3G,QAAU4D,EAAS5D,QAC3Bu3G,EAAQl4G,KAAO,GACXuE,EAASq9D,aACVs2C,EAAQl4G,KAAKyC,KAAKtE,KAAK05G,aAEtB15G,KAAKoG,SAAS69D,WAAWC,cAC1B61C,EAAQl4G,KAAKyC,KAAKtE,KAAKy5G,YAG1BM,EAAQl4G,KAAKyC,KAAKtE,KAAK23G,gBAG1B,MAAMhW,EAAM7hG,MAAMW,GAAG,CAACs5G,IAItB,cAFOpY,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,EAAIs5D,EAAc,GACtBt5D,SAAUjC,MAAMwD,KAAKvB,GAEzB,MAAMg+E,EAAO//E,KACPE,EAAMF,KAAKE,IAIX8iG,EAAUjhG,EAAG4Y,MAEnBqoF,EAAQiX,SAAW,GACnBjX,EAAQkX,IAAM,YAUd,MAAMC,EAAan6G,KAAKi2G,eAExB,IAAImE,EAAwB,KACxBC,EAAgB,KAEpB,IAAKF,EAAY,OAEjBnX,EAAQt/F,OAAOy2G,EAAYnX,EAAQp/F,aAEnCu2G,EAAWl4G,OAAOo5D,YAAcA,EAE5BA,EAAc,GAAG8+C,EAAW11G,OAAO,YAAY,GAEnD,MAAM2B,EAAWpG,KAAKoG,SAEhBiuE,EAAkBxqE,IACrB,MAAMY,EAAgBzK,KAAKqsB,gBAAgBD,WAE3C,IAAK3hB,IAAkB0vG,EAAWtwG,KAAM,OAExC,MAAMywG,EAAiB,GAEjBC,EAAsBJ,EAAWK,iBAAiBpgD,EACrDqgD,EAAYN,EAAWl4G,OAAOw4G,UAG9BC,GADGP,EAAWzsG,MAAM6jE,cAAc,kBAAkB2c,aACpC3nF,KAAKC,MAAM+zG,EAAsBE,IACjDE,EAAcD,EAAgBP,EAAWS,kBAE5C,IAAI7uG,EAAQ,EAEZouG,EAAWtwG,KAAKg9D,MAAMye,MAAM1kF,IACf,MAANA,GAAc85G,GAAiB3uG,GAASA,GAAS4uG,GAClDL,EAAeh2G,KAAK1D,GAEvBmL,GAAO,IAGV,IAAIq8C,EAAWhiD,EAASs9D,WAEpBy2C,EAAWl4G,OAAOo5D,YAAc,IAAGjT,GAAW,GAElD39C,EAAc4pE,eACXxqE,EACA7J,KAAK+B,GAAG85B,KACRs+E,EACAG,EACAlyD,EACF,EAGJ+xD,EAAW7qF,YAAY,iBAAiB,SAAUzlB,GAC/CswG,EAAWt5G,SAEPu5G,GAAuBnmG,aAAammG,GAExCA,EAAwBvlG,YAAW,KAC5BwlG,GAAepmG,aAAaomG,GAChChmC,EAAer0E,KAAK6J,KAAK,GACzB,KAEH9H,EAAGyc,QAAQq8F,YAAYV,GACvB9lG,OAAOC,KAAKpU,GAAK+D,SAASI,IACvB,MAAMq1E,EAAM/1E,GAAGzD,EAAImE,IACfq1E,GACD33E,EAAGyc,QAAQq8F,YAAYnhC,EAC1B,GAEN,IAKAygC,EAAW7qF,YAAY,YAAY,WAC5B+qF,GAAepmG,aAAaomG,GAE5BD,GAAuBnmG,aAAammG,GAExCC,EAAgBxlG,YAAW,KACxBw/D,EAAer0E,KAAK6J,KAAK,GACzB,KACN,IACAswG,EAAW7qF,YAAY,iBAAiB,WACjC8qF,GAAuBnmG,aAAammG,GAExCA,EAAwBvlG,YAAW,KAC5BwlG,GAAepmG,aAAaomG,GAChChmC,EAAer0E,KAAK6J,KAAK,GACzB,IACN,IAIAswG,EAAW7qF,YAAY,eAAe,SAAU1uB,EAAIyJ,EAAG9H,GAEpD,MAAM8qB,EAAK0yD,EAAK1zD,eACV5hB,EAAgB4iB,GAAIjB,WAE1B,GAAK3hB,EAOL,GAL4B,IAAxBrE,EAASs9D,YACIy2C,EAAWhtF,QAAQvsB,GAI1B,SAANyJ,GAAgBA,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,QAAU,EAEtD0yE,EAAK0gB,WAAWpzE,EAAIzsB,EAAIwF,EAAS4vD,aACjC+pB,EAAK+6B,UAAU10G,EAAS6vD,WAAYj2D,WAChC,GAAIqK,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,WAAa,EAChD0yE,EAAK0gB,WAAWpzE,EAAIzsB,EAAIwF,EAAS8vD,UACjC6pB,EAAK+6B,UAAU10G,EAAS+vD,QAASn2D,WAC7B,GAAIqK,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,UAAY,EAC/C0yE,EAAKvwE,KAAK,eAAgB/E,EAAe7J,EAAGwe,UAE1C,GAAI/U,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,sBAAwB,EAAG,CAC5D,MAAM0tG,EAAa,CAAC,EAEpBA,EAAWn6G,EAAG6zE,QAAU,GAENtvE,WACf,UAC0BsF,EAAczC,QAAQirE,OAC1CryE,EAAGwe,IACH27F,EAWN,CAPE,MAAO5yG,GACN43E,EAAKh+E,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kCACTgC,QAAS,sBACT0G,IAAKvN,EAAc3E,QACnBlF,GAAIA,EAAGwe,KAEb,GAGH47F,EACH,MAES3wG,EAAEm/C,OAAOiD,UAAUp/C,QAAQ,UAAY,EAC7C21F,EAAQpxF,QAAQ,CACbR,MAAO2uE,EAAK3+E,MAAM,eAClBiN,KAAM0xE,EAAK3+E,MAAM,mCACjByQ,SAAU,SAAU/D,GAkCjB,OAjCIA,GACiB3I,WACf,WAC0BsF,EAAczC,QAAQsO,OAC1C1V,EAAGwe,MAGO67F,QAAU,GACpBd,EAAWp/F,OAAOna,GAClBu5G,EAAW36F,kBAEXwjF,EAAQ7xF,MAAM,CACX9C,KAAM0xE,EAAK3+E,MACR,sDAYZ,CATE,MAAO+G,GACN43E,EAAKh+E,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kCACTgC,QAAS,sBACT0G,IAAKvN,EAAc3E,QACnBlF,GAAIA,EAAGwe,KAIb,GAGH87F,GAGHf,EAAW36F,kBAEJ,CACV,IAEGpZ,EAAS4vD,YAAY7vD,QAG3B45E,EAAK0gB,WAAWpzE,EAAIzsB,EAAIwF,EAAS4vD,aACjC+pB,EAAK+6B,UAAU10G,EAAS6vD,WAAYj2D,OAC5BoG,EAAS8vD,SAAS/vD,SAG1B45E,EAAK0gB,WAAWpzE,EAAIzsB,EAAIwF,EAAS8vD,UACjC6pB,EAAK+6B,UAAU10G,EAAS+vD,QAASn2D,MAEvC,IAGIoG,EAASq9D,eAEPr9D,EAASu9D,YACTv9D,EAASgxC,YACThxC,EAASy9D,cACRz9D,EAAS69D,YACP79D,EAAS69D,WAAWC,cACuB,YAA3C99D,EAAS69D,WAAWE,qBAEvBxgE,GAAGzD,EAAIk2G,SAASxxG,OAEdwB,EAASu9D,aACXhgE,GAAGzD,EAAIq2G,kBAAkB5xG,OACzBhB,GAAGzD,EAAIm2G,sBAAsB1xG,QAG3ByB,EAASw9D,aAAajgE,GAAGzD,EAAIm2G,sBAAsB1xG,OAEpDyB,EAAS69D,aAE8B,IAArC79D,EAAS69D,WAAWC,cACuB,YAA3C99D,EAAS69D,WAAWE,oBAEpBxgE,GAAGzD,EAAIo2G,cAAc3xG,OAGgB,IAArCyB,EAAS69D,WAAWC,cACyB,WAA7C99D,EAAS69D,WAAWk3C,sBAEpBhB,EAAWx1G,OAEVyB,EAAS69D,WAAWG,gBACrBzgE,GAAGzD,EAAI+mG,qBAAqBriG,OAC1BjB,GAAGzD,EAAI+mG,qBAAqBtiG,OAE7ByB,EAAS69D,WAAWC,cACrBlkE,KAAKU,KAAKy/C,aAAa78C,KAAKtD,KAAK+B,KAGlCqE,EAASgxC,YAAYzzC,GAAGzD,EAAIs2G,YAAY7xG,OAExCyB,EAASy9D,cAAclgE,GAAGzD,EAAIu2G,cAAc9xG,QAGhDyB,EAASi+D,YAAYrkE,KAAKqkE,aAE9B,MAAMh3C,EACHrtB,KAAKqsB,gBAAkBrsB,KAAK+B,GAAGyqB,mBAAmBpmB,EAASsuD,YAEzD10D,KAAKu3G,yBAAyBv3G,KAAKsyG,mBAAmBjlF,GAG3DrtB,KAAKs3G,cACFt3G,KAAKs3G,qBACEt3G,KAAK+B,GAAG+X,QAAQjE,IAAI7V,KAAKw3G,qBAChC,CAAC,EAEAnqF,GAAIjB,aAGLpsB,KAAKyhG,SAASn+F,KAAK,CAChB5C,KAAMV,KAAKU,KACX2rB,eAAgBgB,IAGnBrtB,KAAKo7G,gBAEX,CAOAp6B,OACGhhF,KAAKi2G,gBAAgB5wG,eAAe,CAAEzD,KAAM,QAC/C,CAWAulG,mBAAmB/F,EAAUC,EAAc,IACxC,MAAMnhG,EAAMF,KAAKE,IACXm7G,EAAgB13G,GAAGzD,EAAIo2G,cAE7B,GAAI+E,EAAe,CAChB,MAAMhT,EAAkBroG,KAAKU,KAAKy/C,aAAakhD,cAE/Cga,EAAc52G,OAAO,QAAS4jG,GAAiBhnF,OAAOlb,QAAU,GAChEk1G,EAAc32G,SACjB,CAEA,MAAM2oB,EAAKrtB,KAAKqsB,eAEhBgB,EAAG6B,gBAAgBmyE,GACnBh0E,EAAGyD,YACN,CAEA3rB,uBAAuBgjG,EAAY,IAChC,MAAMmT,EAAc33G,GAAG3D,KAAKE,IAAIs2G,YAEhC8E,EAAY72G,OAAO,QAAS0jG,EAAUhiG,QAAU,MAChDm1G,EAAY52G,UAEZ,MAAM62G,EAAWv7G,KAAKi2G,eAEtB,GAAIsF,EAAS1xG,KAAK2jB,KAAK,CAAC,GAAGrnB,OAASo1G,EAAS1xG,KAAKgoB,QAC/C,UAGS7xB,KAAKqsB,eAAeyE,WAAW,EAAG,EAM3C,CALE,MAAO3oB,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,4EAET,CAIHuF,YAAW,KACR0mG,EAAS5tG,MAAK,CAACC,EAAGC,IAAM7N,KAAKm3G,4BAA4BxpG,KAAKC,EAAGC,IAAG,GACpE,IACN,CAaA4yF,WAAW9sE,EAAI6nF,EAASz0C,GACrB,MAAM/3C,EAAQwsF,GAASp8F,KAAO,KAG1BuU,GAAIA,EAAG9G,UAAUmC,GAGjBhvB,KAAKyhG,UAAUzhG,KAAKyhG,SAAShB,WAAW15B,EAAM/3C,GAElDlvB,MAAM2gG,WAAW15B,EACpB,CAEAt6D,aAAaqK,EAAU,IACpB9W,KAAKoG,SAASqG,aAAeqK,CAChC,CAQAw7F,mBAAmBjlF,GAChB,MAAMouF,EAAQz7G,KAAKqsB,eACnBrsB,KAAKqsB,eAAiBgB,EAEtB,MAAM5iB,EAAgB4iB,GAAIjB,WACpB+tF,EAAan6G,KAAKi2G,eAEpBkE,IAEIn6G,KAAK07G,oBACP17G,KAAK07G,kBAAoB,KACtB17G,KAAKghF,MAAM,EAGdhhF,KAAK27G,mBAAqB,KACvB37G,KAAKohF,OAAO,EAGfphF,KAAK47G,sBAAwB,KAEI,cAA3BzB,EAAWl4G,OAAOvB,MAClB+J,IACCA,EAAc8a,UAEf40F,EAAWn/F,WACXm/F,EAAW1iG,MAAM4V,EAAGkH,WAAa,IAEjCv0B,KAAK+mC,WACL/mC,KAAKohF,QACR,GAIFq6B,IAEDA,EAAM/kF,eAAe,mBAAoB12B,KAAK07G,mBAC9CD,EAAM/kF,eAAe,kBAAmB12B,KAAK27G,oBAC7CF,EAAM/kF,eAAe,WAAY12B,KAAK47G,wBAGrCvuF,GACGA,EAAGd,oBAAsBc,EAAGZ,UAC7BY,EAAGqH,KAAKylF,EAAY9sF,EAAGd,mBAAoBc,EAAGZ,WAC5CY,EAAGqH,KAAKylF,GAGb9sF,EAAGqJ,eAAe,mBAAoB12B,KAAK07G,mBAC3CruF,EAAGjrB,GAAG,mBAAoBpC,KAAK07G,mBAC/BruF,EAAGqJ,eAAe,kBAAmB12B,KAAK27G,oBAC1CtuF,EAAGjrB,GAAG,kBAAmBpC,KAAK27G,oBAC9BtuF,EAAGqJ,eAAe,WAAY12B,KAAK47G,uBACnCvuF,EAAGjrB,GAAG,WAAYpC,KAAK47G,uBACvB57G,KAAK+mC,WAEL/mC,KAAK67G,uBAAwB,GACzB1B,EAAWxlF,SAGdlqB,IACDzK,KAAKU,KAAKy/C,aAAan7C,WAAWyF,GAClCzK,KAAKk3G,yBAAyBlyG,WAC3ByF,EACAzK,KAAKi2G,gBAERj2G,KAAKm3G,4BAA4BnyG,WAAWyF,GAE5CzK,KAAKi3G,YAAYjyG,WAAWyF,GAC5BzK,KAAKi3G,YAAYzC,mBAAmBnnF,GACpCrtB,KAAKi3G,YAAYtC,iBAAiB30G,KAAKi2G,gBACvCj2G,KAAKi3G,YAAYxC,gBAAgBz0G,KAAKoG,SAASw8B,cAC/C5iC,KAAKi3G,YAAYvC,YAAY10G,KAAKU,KAAKU,QAGhD,CAQA06G,sBACGn4G,GAAG3D,KAAKE,IAAIq2G,mBAAmBnxG,UAC/BzB,GAAG3D,KAAKE,IAAIm2G,uBAAuBjxG,UAEnCpF,KAAKwP,KAAK,oBACb,CAQAusG,qBACGp4G,GAAG3D,KAAKE,IAAIq2G,mBAAmB7uG,SAC/B/D,GAAG3D,KAAKE,IAAIm2G,uBAAuB3uG,SAEnC1H,KAAKwP,KAAK,YACb,CAEAwsG,qBAGG,OAAOh8G,KAAKi2G,eAAexxG,OAAO,aAAczE,KAAK82G,iBACxD,CAOAb,eACG,OAAOtyG,GAAG3D,KAAKE,IAAIw2G,UACtB,CAMAyC,gBACG,MAAMgB,EAAan6G,KAAKi2G,eAExB,IAAIgG,EAAa,CAAC,EASlB,OANA9B,EAAW5lC,YAAYppE,IACpB,MAAMsB,EAAe0tG,EAAW+B,gBAAgB/wG,GAErB,IAAvBsB,EAAaic,QAAauzF,EAAaxvG,EAAY,IAGnDwvG,CACV,CAMAl1E,WACG,IAAK/mC,KAAKoG,SAASo+D,QAAS,OAE5B,MAAM23C,EAAan8G,KAAKi2G,eAMlBmG,EAAe,CAAC,EACAp8G,KAAKqsB,eAAeD,WAE5BrlB,SAAS9C,SAAS+C,IAC7B,OAAQA,EAAE3C,KACP,IAAK,SACF+3G,EAAap1G,EAAEF,YAAc,CAACE,EAAEF,WAAY,OAE5C,MAEH,IAAK,YACL,IAAK,UACFs1G,EAAap1G,EAAEF,YAAc,CAC1BE,EAAEF,WACF,CAAC0+B,EAAM62E,KACJ,IAAKA,EAAU,OAAO,EAEtB,IAAI57D,EAAM,EASV,GAPA47D,EAASp4G,SAAS2L,IAGf6wC,GAAkC,EAA3Bz5C,EAAEwZ,OAAO5Q,GAAG,GAAO,EAAS,IAIjC5I,EAAEylB,WAAiC,cAApBzlB,EAAEylB,UAAUpoB,IAE3B,CACF,MAAM47C,EAAgB,CAAC,EAIvB,OAFAA,EAAcj5C,EAAEylB,UAAU3lB,YAAc25C,EAEjCz5C,EAAEylB,UAAUjM,OAAOy/B,EAC7B,CAPG,OAAOQ,CAOV,GAIN,MAEH,IAAK,gBACF27D,EAAap1G,EAAEF,YAAc,CAC1BE,EAAEF,WACF,CAAC0+B,EAAM62E,KACJ,IAAKA,IAAaA,EAASl2G,OAAQ,OAAO,EAE1C,IAAI0rB,EAAQ,EAWZ,OATAwqF,EAASp4G,SAAS2L,IACf,MAAM0sG,EAAc1sG,EAAE5I,EAAEmqB,gBAGpBmrF,GAAan2G,OAAQ0rB,GAASyqF,EAAYn2G,OAErCm2G,IAAazqF,GAAS,EAAC,IAG5BA,CAAK,GAIlB,MAEH,QACGuqF,EAAap1G,EAAEF,YAAc,CAC1BE,EAAEF,WACF,SAAU0+B,EAAM62E,GACb,IAAKA,IAAaA,EAASl2G,OAAQ,OAAO,EAE1C,IAAI0rB,EAAQ,EASZ,OAPAwqF,EAASp4G,SAAS2L,IACH41B,EAAK51B,KAGRiiB,GAAS,EAAC,IAGfA,CACV,GAIT,IAYH,IAAI0qF,GAAYv8G,KAAKoG,SAASo+D,SAAW,IACrC97C,MAAM,KACNva,KAAKquG,GAAMA,EAAE32E,SAEjB02E,EAAWA,EAAS71D,UAEpB61D,EAASt4G,SAAQ,CAACu0B,EAASikF,KACxB,MAAMC,EAAW18G,KAAK+B,GAAG2D,UAAU02G,GAEnC,IAAIpuG,EAGAyuG,IAAWF,EAASp2G,OAAS,EAAG6H,EAAKwqB,GAGtCxqB,EAAMoR,IACH,IAAIu9F,EAAUv9F,EAAIoZ,GAElB,IAAK,IAAIjlB,EAAIkpG,EAAS,EAAGlpG,EAAIgpG,EAASp2G,OAAQoN,IAC3CopG,EAAU,GAAGv9F,EAAIm9F,EAAShpG,SAASopG,IAGtC,OAAOA,CAAO,EAIjBJ,EAASt4G,SAAS24G,IACXA,IAAapkF,IAASkkF,EAASE,GAAY,CAACA,GAAS,KAI/DT,EAAWtyG,KAAKgzG,MAAM,CACnB7uG,GAAIA,EACJG,IAAKuuG,GACN,GAER,CAEAr4C,aACG,MAAM81C,EAAan6G,KAAKi2G,eAExBkE,EAAW11G,OAAO,UAAU,GAC5B01G,EAAWz1G,SACd,CAWAS,wBAAwBw+B,EAAUC,EAAU/S,GACtB7wB,KAAKi2G,eACFj2G,KAAKqsB,eAAeD,WAD1C,MAEMhmB,EAAWpG,KAAKoG,SAChBqG,EAAezM,KAAKoiB,gBAM1B,IAAIyhB,EAAY,KACZC,EAAO,EAEX,IAAK,IAAIvwB,EAAI,EAAGA,EAAI9G,EAAatG,OAAQoN,IACtC,GAAI9G,EAAa8G,GAAG3S,IAAM+iC,EAAU,CACjCE,EAAYp3B,EAAa8G,GACzB9G,EAAaN,OAAOoH,EAAG,GACvBuwB,EAAOvwB,EAEP,KACH,CAIH,IAAK,IAAIwwB,EAAI,EAAGA,EAAIt3B,EAAatG,OAAQ49B,IACtC,GAAIt3B,EAAas3B,GAAGnjC,IAAMgjC,EAAU,CAI7BE,GAAQC,GAAGA,IAEft3B,EAAaN,OAAO43B,EAAG,EAAGF,GAE1B,KACH,CAWH7jC,KAAKoiB,cAAc3V,GAEfrG,EAASq+D,WAAWzkE,KAAK88G,oBAM7B98G,KAAKwP,KACF,eACA/C,EAAa0B,KAAK5K,GAAMA,EAAE44B,WAG7Bn8B,KAAKo7G,eAuCR,CAUAj2G,sBAAsB+kD,EAAO5kD,EAAQuzG,GAIlC,MAAMsB,EAAan6G,KAAKi2G,eAGxB,IACK/rD,EAAM6yD,KAAuB,KAAhB7yD,EAAMvnD,OACN,KAAdunD,EAAM6yD,KAA8B,KAAhB7yD,EAAMvnD,MAI3B,OAFAw3G,EAAW36F,kBAEJ,EAGV,GAAIla,EAAOrD,OACR,OAAQqD,EAAOrD,OAAOqD,QACnB,IAAK,SACF4kD,EAAMvnD,MAAQ82C,WAAWyQ,EAAMvnD,OAE/B,MAEH,IAAK,WACFunD,EAAMvnD,MAAQunD,EAAMvnD,MAAMq2C,UAEtBkR,GAASA,EAAM6yD,KAAO7yD,EAAM6yD,IAAI/jE,UACjCkR,EAAM6yD,IAAM7yD,EAAM6yD,IAAI/jE,WAQlC,GAAIkR,EAAMvnD,QAAUunD,EAAM6yD,IAAK,CAC5B,MAAM3uG,EAAO+rG,EAAWhtF,QAAQ7nB,EAAO8Z,KAEvChR,EAAK9I,EAAOmvE,QAAUvqB,EAAMvnD,MAE5Bw3G,EAAW6C,cAAc5uG,EAAKxN,GAAI0E,EAAOmvE,OAAQ,iBACjD0lC,EAAW6C,cAAc5uG,EAAKxN,GAAI0E,EAAOmvE,OAAQ,sBAEjD,MAAMhqE,EAAgBzK,KAAKqsB,eAAeD,WACpC7kB,EAAYkD,EAAc+lB,YAAYpiB,GAE5C,GAAI7G,EAAUmW,OAAQ,CAQnB,MAAMqlF,EAAK/iG,KAAK+B,GAEhB,UACS0I,EAAczC,QAAQirE,OAAO7kE,EAAKxN,GAAIwN,GAExC+rG,EAAW7sF,OAAOhoB,EAAO8Z,OAC1B+6F,EAAW7oF,WAAWhsB,EAAO8Z,IAAKhR,GAClC+rG,EAAW36F,iBACX26F,EAAWz1G,QAAQY,EAAO8Z,KA0BhC,CAxBE,MAAOjX,GACN46F,EAAG36F,OAAOC,UAAUF,EAAK,CACtBmH,QAAS,kDACTlB,OACA9I,SACA4kD,QACAjlD,OAAQwF,EAAc3E,UAGzBq0G,EAAW36F,iBAGRujF,EAAGhlF,WAAWK,sBACXjW,EACA7C,EAAO8Z,IACP+6F,EAST,CA8BH,MAAO5yG,EAAU0W,WAAW3Y,EAAO8Z,IAAK+6F,EAC3C,MAAOA,EAAW36F,iBAElB,OAAO,CA4BV,CASA+4F,cAAc1uG,GAMX7J,KAAKi2G,gBAAgBgH,SAASpzG,EAAKuV,IAAKvV,EAAK4qE,OAChD,CAWAtvE,qBAAqB2B,EAAY6sE,EAAUsB,EAAUgkC,GAGlD,IAAIiE,GAAiB,EAErB,MAAMna,EAAK/iG,KAAK+B,GAEZ4xE,EAAW,KACZA,EAAW,GACXupC,GAAiB,EAEjBna,EAAGpoF,MAAMrJ,QAAQ,CACd1P,KAAM,OACNyM,KAAMrO,KAAKoB,MAAM,8BAA+B,CAAC,KACjD+Q,OAAQ,OAId,MAAMiQ,EAAgBpiB,KAAKoiB,gBAE3B,GAAIA,EAAe,CAChB,MAAM2xD,EAAS3xD,EAAcoL,MAAM5G,GAAMA,EAAEhmB,IAAMkG,IAE7CitE,IACDA,EAAO/yE,MAAQ2yE,SAERI,EAAOG,OAEpB,CAEAl0E,KAAKoiB,cAAcA,GAEfpiB,KAAKoG,SAASq+D,iBACTzkE,KAAK88G,oBAaVI,GAAgBl9G,KAAKo7G,gBAEzBp7G,KAAKg8G,qBAMLh8G,KAAKwP,KAAK,gBAAiB1I,EAAY6sE,EAAUsB,EACpD,CAMAukC,cAAc54G,EAAIyJ,EAAG9H,GAClB,IAAkD,IAA9CvC,KAAKo3G,iBAAiB/pG,QAAQzM,EAAG6zE,QAAgB,OAAO,EAK5D,MAAM0oC,EAAYn9G,KAAKqsB,eAAeD,WAAWrlB,QAC7CC,GAAMA,EAAEF,aAAelG,EAAG6zE,SAC5B,GAQF,OAFAz0E,KAAKwP,KAAK,wBAAyBjN,EAAM46G,IAElC,CACV,CAMA3yG,SACG1K,MAAM0K,SAGNxK,KAAKi2G,gBAAgB/hC,SAErB,MAAMvgD,EAAK3zB,KAAKqsB,eAEZsH,GACD3zB,KAAKuyB,SAAS,CACXC,QAASmB,EACTlB,UAAW,eACXC,SAAU1yB,KAAK22G,eAAejiF,KAAK10B,OAE5C,CAMAohF,QACGphF,KAAKi2G,gBAAgBtuG,gBACxB,CAUAyzG,cAAcgC,EAAcp9G,KAAKo9G,aAG9B,MAAM3yG,EAAgBzK,KAAKqsB,eAAeD,WAE1C,IAAK3hB,EAAe,OAEpB,MAAMvK,EAAMF,KAAKE,IACXi6G,EAAax2G,GAAGzD,EAAIw2G,WAE1B,IAAKyD,EAAY,OAEjB,MAAM9+C,EAAc8+C,EAAWl4G,OAAOo5D,YAEtC8+C,EAAW11G,OAAO,YAAa,GAC/B01G,EAAW11G,OAAO,aAAc,GAEhC,IAAIg2G,EAAY,EAEhBhwG,EAAcy5B,cAAcjgC,SAASg1D,IAClC,MAAM7yD,EAAW6yD,EAAM3sD,cAEnBlG,EAAS46C,WAAa56C,EAAS66C,YAAcw5D,IAC9CA,EAAYr0G,EAAS66C,YAAW,IAGlCw5D,GAAWN,EAAW11G,OAAO,YAAag2G,GAI9C,MAAMr0G,EAAWpG,KAAKoG,SAEtB,IAAIgiD,EAAWhiD,EAASs9D,WAEpBy2C,EAAWl4G,OAAOo5D,YAAc,IAAGjT,GAAW,GAIlD,MAAMi1D,EAAmB5yG,EAAcmpE,eACpC,EACAxrB,EAEA,GACA,GACA,IAGH,IAAIwrB,EAAgB5zE,KAAKoiB,gBAEzB,MAAM2gF,EAAK/iG,KAAK+B,GAGX6xE,IAAiBwpC,IACnBxpC,EAAgBmvB,EAAGr9F,UAAU1F,KAAKoG,SAASqG,eAGjB,IAAzBmnE,EAAcztE,SAAcytE,EAAgBypC,GAKhD,MAAMC,EAAqBD,EAAiBlvG,KAAKyY,GAAMA,EAAEuV,UAEzDy3C,EAAgBA,EAAc9qE,QAC1BvF,GAAM+5G,EAAmBjwG,QAAQ9J,EAAE44B,UAAY,IAInDy3C,EAAc3vE,SAASV,IAGpB,MAAMg6G,EAAUF,EAAiB7vF,MAAM5G,GAAMA,EAAEuV,UAAY54B,EAAE44B,UAO7D9nB,OAAOC,KAAKipG,GAASt5G,SAASsQ,IACD,mBAAfgpG,EAAQhpG,IAA2B,YAANA,IACrChR,EAAEgR,GAAKgpG,EAAQhpG,GAClB,IAGH,MAAMvN,EAAIyD,EAAcsD,UAAUxK,EAAE44B,SAE/Bn1B,IAGDZ,EAASw8B,aAAav1B,QAAQrG,EAAEF,aAAe,IAChDvD,EAAEs1E,QAAS,GAIVzyE,EAAS29D,eAAe12D,QAAQrG,EAAEpG,KAAO,EAC7B,aAAToG,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAC3Bd,EAAE4wE,OAAS,CAAEC,QAAS,cAAexuE,MAAOoB,GAC1CzD,EAAE4wE,OAAS,CAAEC,QAAS,cAGrBhuE,EAAS49D,aAAa32D,QAAQrG,EAAEpG,KAAO,IAC7C2C,EAAE4wE,OAAS,CAAEC,QAAS,gBAAe,IAG3C,IAAIhyD,EAAgBpiB,KAAKoiB,gBAEpBA,IAAiBg7F,IACnBp9G,KAAKoiB,cAAcwxD,GAEnBxxD,EAAgBwxD,GAGnBA,EAAgBmvB,EAAGr9F,UAAU0c,GAE7B,MAAMo7F,EAAmB,GACnBC,EAAW,GA0EjB,GAxEA7pC,EAAc3vE,SAASq7E,IAKpB,GAJAA,EAAI58E,WAAY,EAIZ48E,EAAIrL,kBAC8B,iBAAxBqL,EAAIrL,kBACZqL,EAAIrL,gBAAkBlgE,KAAK0D,MAAM6nE,EAAIrL,kBAGpCqL,EAAIrL,gBAAgB9tE,QAAQ,CAC7B,MAAMu3G,EAAe,GAGrBp+B,EAAIrL,gBAAgBhwE,SAASmsB,IAC1B,MAAM0xD,EAASihB,EAAGhuE,iBACfuqD,EAAI1+E,IAGP88G,EAAap5G,KAAKw9E,EAAOrhF,IAEzB+8G,EAAiBl5G,KAAK,CACnBwE,OAAQg5E,EACRphF,KAAMohF,EAAO5hF,IAAIy4E,aACjB7xE,WAAYw4E,EAAI1+E,GAChBqzE,gBAAiB7jD,EAAK/O,MACtB+rD,eAAgBh9C,EAAKg9C,gBACtB,IAIL,MAAMuwC,EACHz9G,EAAImhB,MAAQ,IAAMi+D,EAAI1+E,GAGzB68G,EAASn5G,KAAKq5G,GAEd5a,EAAGpoF,MAAMla,GAAG,CACTC,KAAM,QACNQ,IAAK,iBACLN,GAAI+8G,EACJl8G,KAAM,CACHI,KAAM67G,IAGf,CAIH,GACGt3G,EAASo+D,UACRp+D,EAASo+D,SAAW,IAAIn3D,QAAQiyE,EAAI1+E,KAAO,EAC7C,CACC,MAAMg9G,EAAanzG,EAAcsD,UAAUuxE,EAAInjD,SAE3CyhF,IACDt+B,EAAIha,SAAW,CAACttD,EAAKy0B,KAElB,GAAIz0B,EAAIqqE,OAAQ,CACb,MAAM5zD,EAAUs0E,EAAGr9F,UAAUsS,GAI7B,OAFAyW,EAAQmvF,EAAW92G,YAAc2nB,EAAQ9rB,MAGtC8pC,EAAOoxE,UAAU7lG,EAAKy0B,GACtBmxE,EAAWp9F,OAAOiO,EAExB,CAAO,OAAOmvF,EAAWp9F,OAAOxI,EAAI,EAE7C,KAGCwlG,EAAiBr3G,OAAQ,CAE1B,MAAM23G,EAAqB,GAE3BN,EAAiBv5G,SAAS+C,IAGvBA,EAAE8B,OAAOksB,WAAWvqB,EAAc1D,UAElCC,EAAE8B,OAAOjE,SAASmC,EAAEitE,iBAGf9mE,MAAMC,QAAQ0wG,EAAmB92G,EAAEF,eACrCg3G,EAAmB92G,EAAEF,YAAc,IAGtCg3G,EAAmB92G,EAAEF,YAAYxC,KAAK,CACnCgyB,QAAS3yB,GAAGqD,EAAEtG,MAAMq9G,kBACpBp4G,OAAQw0G,EAAW6D,kBACnB5wC,eAAgBpmE,EAAEomE,gBACnB,IAGL,MAAM/rD,EAAQ,CAAC,EAGf84F,EAAWzsG,MAAMowG,mBAAqBA,EAEtCzpG,OAAOC,KAAKwpG,GAAoB75G,SAASI,IACtCgd,EAAMhd,GAAO,CAAC1B,EAAOkH,KAElB,IAAItE,GAAU,EACV6nE,EAAiB,GA8BrB,OA5BA+sC,EAAWzsG,MAAMowG,mBAAmBz5G,GAAKJ,SAAS6E,IAE/C,MAAMm1G,EAAU,CAAC,GAEhBxzG,EAAc1D,UAAY,IAAI9C,SAAS2B,IACrCq4G,EAAQr4G,EAAMhF,IAAMiJ,EAAKjE,EAAMkB,WAAW,IAIzC+C,EAAKgG,OAAMouG,EAAqB,YAAIp0G,EAAKgG,MAG3B/G,EAAOwtB,QAAQ2nF,KAI9B14G,GAAU,EACV6nE,EAAiBtkE,EAAOskE,eAC3B,IAIE7nE,GACFw9F,EAAGpoF,MAAMrJ,QAAQ,CACd1P,KAAM,QACNyM,KAAM++D,IAGL7nE,CAAO,CAChB,IAGJ40G,EAAW11G,OAAO,QAAS4c,GAE3B84F,EAAWl4G,OAAOw7G,SAAWA,EAC7BtD,EAAWz1G,SACd,MAEOy1G,EAAWl4G,OAAOw7G,UACnBtD,EAAWl4G,OAAOw7G,SAASx5G,SAASy0E,IAC7B/0E,GAAG+0E,IAAQ/0E,GAAG+0E,GAAOwlC,YAAY,IAG3C/D,EAAW11G,OAAO,QAAS,CAAC,GAC5B01G,EAAWz1G,UAGd,MAAMy5G,EAAe,GAKjB/3G,EAASk+D,eAEVsP,EAAcrgD,QAAQ,CACnB3yB,GAAI,yBACJmzE,OAAQ,QACRrxE,WAAW,EACX4iE,SAAWttD,GAAQvN,EAAcg7B,YAAYztB,KAGhDmmG,EAAa75G,KAAK,2BAGjB8B,EAASu9D,YAA8B,IAAhBtI,GACxBuY,EAAcrgD,QAAQ,CACnB3yB,GAAI,yBACJmzE,OAAQ,CAAEK,QAAS,iBAAkBgqC,UAAW,OAChDp9G,MAAO,GACPskE,SAAU,sDACVpkE,IAAK,CAAE,aAAc,YAExBlB,KAAK62G,gBAAkB,EACvBsH,EAAa75G,KAAK,2BACdtE,KAAK62G,gBAAkB,EAED,KAAzBzwG,EAAS4vD,aAAuB5vD,EAASm+D,cAC1CqP,EAActvE,KAAK,CAChB1D,GAAI,yBACJmzE,OAAQ,GACR/yE,MAAO,GACPskE,SAAU,CAACttD,EAAKy0B,IACb,4EACHvrC,IAAK,CAAE,aAAc,YAGxBi9G,EAAa75G,KAAK,2BAGM,IAAvB8B,EAAS09D,WAAmC,IAAhBzI,IAC7BuY,EAActvE,KAAK,CAChB1D,GAAI,wBACJmzE,OAAQ,GACR/yE,MAAO,GACPskE,SACG,qEACHpkE,IAAK,CAAE,aAAc,SAAUyhG,OAAQ,aAG1Cwb,EAAa75G,KAAK,0BAII,KAAtB8B,EAAS8vD,UACR9vD,EAASm+D,aACM,IAAhBlJ,IAEAuY,EAActvE,KAAK,CAChB1D,GAAI,uBACJmzE,OAAQ,GACR/yE,MAAO,GACPskE,SAAU,8CACVpkE,IAAK,CAAE,aAAc,YAGxBi9G,EAAa75G,KAAK,yBAGjB8B,EAASw9D,aAA+B,IAAhBvI,IACzBuY,EAActvE,KAAK,CAChB1D,GAAI,mBACJmzE,OAAQ,GACR/yE,MAAO,GACPskE,SAAU,gDACVpkE,IAAK,CAAE,aAAc,YAGxBi9G,EAAa75G,KAAK,qBAIrB,IAAI+5G,EAAU,KAEd,IAAK,IAAI9qG,EAAIqgE,EAAcztE,OAAS,EAAGoN,GAAK,EAAGA,IAC5C,IAAK8qG,EAAS,CACX,MAAM/+B,EAAM1L,EAAcrgE,GAE1B,IAAK+rE,EAAIzG,SAA4C,IAAlCslC,EAAa9wG,QAAQiyE,EAAI1+E,IAAY,CACrDy9G,EAAU/+B,EAEV,KACH,CACH,CAEC++B,IACDA,EAAQ37G,WAAY,EACpB27G,EAAQh1C,SAAWg1C,EAAQr9G,MAC3Bq9G,EAAQr9G,MAAQ,KAGnBm5G,EAAWmE,eAAe1qC,GAG1B5zE,KAAK82G,iBAAmBqH,EAAah4G,OAGjCg4G,EAAa9wG,QAAQ,2BAA6B,IACnDrN,KAAK82G,kBAAoB,GAExB92G,KAAK82G,iBAAmB,IAAG92G,KAAK82G,iBAAmB,GAGvD,MAAMn0E,EAAiBv8B,EAASu8B,eAEV,IAAlBA,EACDw3E,EAAW11G,OACR,YACA01G,EAAWzC,eAAe/0E,GAAkB,GAE7Cw3E,EAAW11G,OAAO,YAAazE,KAAK62G,iBAEzC72G,KAAKg8G,qBACL7B,EAAWmE,gBAEd,CAOAn5G,0BACG,MAAM49F,EAAK/iG,KAAK+B,GACVw8G,QACIxb,EAAGjpF,QAAQjE,IAAI7V,KAAKw3G,qBAAwB,CAAC,EACjDF,EAAgBt3G,KAAKs3G,cAE3BiH,EAAmBv+G,KAAKw+G,cAAgBlH,EAAct3G,KAAKw+G,cACtDlH,EAAct3G,KAAKw+G,cACnB,GAEL,IAAK,MAAMpwG,KAAQmwG,EAChBA,EAAmBnwG,GAAMnK,SAASmK,IAE3BA,GAAM+lE,QAAQvuE,cAAcwI,EAAK+lE,OAAOvuE,KAAK,UAIjDm9F,EAAGjpF,QAAQC,IAAI/Z,KAAKw3G,mBAAoB+G,EACjD,CAYAn8F,cAAczf,EAAQ,MACnB,MAAM20G,EAAgBt3G,KAAKs3G,cAE3B,IAAI30G,EACC,OAAO20G,EAAct3G,KAAKw+G,cADpBlH,EAAct3G,KAAKw+G,cAAgB77G,CAEjD,CASAi0G,UAAUnoF,GACP,MAAM0rF,EAAan6G,KAAKi2G,eAEnBkE,IAEA1rF,EACIA,GAAS7tB,IAAMu5G,EAAW7sF,OAAOmB,EAAQ7tB,IAC/Cu5G,EAAW7c,OAAO7uE,EAAQ7tB,IAAI,GAC5Bu5G,EAAW7c,OAAO,MAAM,GAHf6c,EAAWsE,WAI5B,CAQAD,aACG,MAAM/zG,EAAgBzK,KAAKqsB,eAAeD,WAE1C,MAAO,GAAGpsB,KAAKY,MAAM6J,EAAgBA,EAAc7J,GAAK,KAC3D,CASAk6G,UAAU4D,EAAWC,GAElB,MAAMC,EACHD,EAAGE,mBAAmBzjC,UAAU,CAAEx6E,GAAI89G,KAAgB/6G,GAAG+6G,GAE5D,IAAKE,EAAK,OAGV,MAAME,EAASF,EAAInzG,gBAAgBA,gBAEnC,IAAKqzG,EAAQ,OAGTA,EAAOj6G,UAAUi6G,EAAOj6G,SAAS65G,GAGrC,MAAMK,EAAUD,EAAO1jC,UAAU,CAAE16E,KAAM,cAAgB,UAGrDq+G,GAAS/+G,KAAK86G,UAAUiE,EAASJ,EACxC,CAEAjG,qBACG,MAAMyB,EAAan6G,KAAKi2G,eAExB,IAAI+I,EAAe,EAEnB7E,EAAWtwG,KAAKy7E,MAAMttE,SAED,IAARA,GACP3D,OAAOuoC,UAAUpf,eAAeqf,KAC7B7kC,EACA,2BAE4B,IAA/BA,EAAI+8F,wBAEJiK,GAAc,IAGhBA,EAAe,EAAGh/G,KAAK+7G,qBACtB/7G,KAAK87G,qBACb,CAEAlC,sBAAsBlsG,GACnB,MAAMysG,EAAan6G,KAAKi2G,eAClBxrG,EAAgBzK,KAAKqsB,eAAeD,WACpC6yF,EAAc,GAEpB9E,EAAWtwG,KAAKy7E,MAAMlmE,SAED,IAARA,GAEP/K,OAAOuoC,UAAUpf,eAAeqf,KAC7Bz9B,EACA,2BAE4B,IAA/BA,EAAI21F,wBAGJkK,EAAY36G,MAAK,IAAMmG,EAAczC,QAAQsO,OAAO8I,EAAIxe,KAC3D,IAGH,MAAMoiG,EAAUhjG,KAAK+B,GAAG4Y,MAEpBskG,EAAY94G,OAAS,EACtB68F,EAAQpxF,QAAQ,CACbR,MAAOpR,KAAKoB,MAAM,2BAClBiN,KAAMrO,KAAKoB,MACR,yDAEHyQ,SAAU1M,MAAO2I,IACVA,UAEK2B,QAAQ8R,IAAI09F,EAAY9wG,KAAKmxB,GAAMA,OAGzCt/B,KAAK87G,sBACR,IAIN9Y,EAAQ7xF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,uBAClBiN,KAAMrO,KAAKoB,MACR,8EAGZ,CAEAsmG,cAAch6F,GACX1N,KAAKU,KAAKy/C,aAAamjD,UAAU51F,EACpC,CAEAmsG,YAAYnsG,GACT1N,KAAKm3G,4BAA4BvyG,KAAK8I,EACzC,CAEAosG,cAAcpsG,GACX1N,KAAKi3G,YAAYryG,KAAK8I,EACzB,CAEAisG,kBAAkBjsG,GACf1N,KAAKk3G,yBAAyBtyG,KAAK8I,EACtC,CAOAwxG,QAAQlnG,EAAKy0B,GACV,MAAMhiC,EAAgBzK,KAAKqsB,eAAeD,WACpC+yF,EAAqB10G,EAAcy5B,cAAc/1B,KACnDnH,GAAMA,EAAEF,aAGZ,IAAIs4G,EAAM,GAEV,MAAMt4G,EAAa2lC,EAAOgoC,OAAO7zE,GAAGsS,QAAQ,IAAK,IAEjD,GAAI/F,MAAMC,QAAQ4K,EAAIlR,IACnBkR,EAAIlR,GAAY7C,SAAQ,SAAUkiB,GAC3BA,EAAE9X,OAAM+wG,GAAOj5F,EAAE9X,KAAO,QAC/B,SACI,QACsC,IAAnC2J,EAAIlR,EAAa,eACG,iBAApBkR,EAAIlR,GAEXs4G,EAAMpnG,EAAIlR,EAAa,cAAcuH,UACnC,QAA8C,IAAnC2J,EAAIlR,EAAa,cAA+B,CAC7D,IAAIu4G,EAAernG,EAAIlR,EAAa,cAE/BqG,MAAMC,QAAQiyG,KAAeA,EAAe,CAACA,KAEjDA,GAAgB,IAAIp7G,SAAQ,SAAUkiB,GAChCA,IAAGi5F,GAAOj5F,EAAE9X,KAAO,QAC1B,GACH,MAAO,IAAgD,IAA5C8wG,EAAmB9xG,QAAQvG,GAAoB,CACvD,IAAKkR,EAAIlR,GACN,MAAO,GAGPs4G,EAAM,gEAAgEpnG,EAAIlR,QAEhF,KAAoC,SAAzB2lC,EAAOgoC,OAAOnvE,OACtB85G,EAAM3yE,EAAOgoC,OAAOj0D,OAAOxI,EAAIlR,IACA,eAAzB2lC,EAAOgoC,OAAOnvE,OACpBmF,EAAc1D,SAAS9C,SAAS+C,IACzBA,EAAEF,aAAeA,GACdE,EAAEZ,SAASjE,SACZ6E,EAAEZ,SAASjE,QAAQ8B,SAASkiB,IACrBA,EAAEvlB,KAAOoX,EAAIlR,KACds4G,EAAMj5F,EAAE9X,KACX,GAGT,IAED+wG,EAAMpnG,EAAIlR,GAEf,OAAKs4G,GAAY,EAEpB,CAOAE,sBAAsB/8G,GAEnBA,EAAK84E,MAAMkkC,WAAa,QAC3B,CAOAC,qBAAqBj9G,GAEgB,QAA9BA,EAAKk9G,YAAYC,SAClB7qG,YAAW,KACR,MAAM8qG,EAAYh6F,SAASpjB,EAAK84E,MAAM4sB,IAAI/0F,QAAQ,KAAM,KAAO,IACzD0sG,EAAWj6F,SAASpjB,EAAK84E,MAAMu4B,KAAK1gG,QAAQ,KAAM,KAAO,IAE/D,GAAIysG,EAAYzmG,OAAO2mG,YAAa,CACjC,MAAMC,EAAaH,EAAYzmG,OAAO2mG,YAChCE,EACHp6F,SAASpjB,EAAK84E,MAAM4sB,IAAI/0F,QAAQ,KAAM,KAAO4sG,EAChDv9G,EAAK84E,MAAM4sB,IAAM8X,EAAS,IAC7B,CAEA,GAAIH,EAAW1mG,OAAOmE,WAAY,CAC/B,MAAM2iG,EAAaJ,EAAW1mG,OAAOmE,WAC/B4iG,EACHt6F,SAASpjB,EAAK84E,MAAMu4B,KAAK1gG,QAAQ,KAAM,KAAO8sG,EACjDz9G,EAAK84E,MAAMu4B,KAAOqM,EAAU,IAC/B,CAEA19G,EAAK84E,MAAMkkC,WAAa,SAAS,GACjC,KACCh9G,EAAK84E,MAAMkkC,WAAa,SAClC,iBC3vEH,MAAMW,EAAiB,EAAQ,OAGzBtc,EACH,WAEY,MAAMuc,UAAmBD,EAoBrCj6G,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKmgD,aAAakV,aAAar1D,KAAKoG,SAAS69D,WAChD,CAEAm8C,oBAAoBlgH,EAAKskE,GACtB,IAAI67C,EAAW77C,GAAW,GACH,iBAAZ67C,IACRA,EAAWA,EAAS33F,MAAM,MAG7B,IAAIvmB,EAAUwB,GAAGzD,EAAIskE,SAASia,UAAU50E,KAAK2jB,KAAK,CAAC,GAEnD7pB,GAAGzD,EAAIogH,aAAatlG,WACpBqlG,EAASp8G,SAASu0B,IACf,IAAIkpB,EAAMv/C,EAAQ2G,QAAQqd,GAAMA,EAAEvlB,IAAM43B,IAAS,GAC7CkpB,GACD/9C,GAAGzD,EAAIogH,aAAal/F,IAAIsgC,EAC3B,GAEN,CAOAvhD,YACG,OAAO,IAAIu1G,EAAoB11G,KAClC,CAEImgD,mBAQD,OAP2B,MAAvBngD,KAAKyjG,iBACNzjG,KAAKyjG,eAAiB,IAAI,IACvBzjG,KAAK+B,GACL,GAAG/B,KAAKY,oBAIPZ,KAAKyjG,cACf,CAEI/B,qBAID,OAH6B,MAAzB1hG,KAAK2jG,mBACN3jG,KAAK2jG,iBAAmB,IAAIC,GAExB5jG,KAAK2jG,gBACf,CAEA33B,eACGlsE,MAAMksE,eACN,IAAIu0C,EAASvgH,KAAKu6D,eAClBv6D,KAAKu6D,gBAAiB,EACtB,IAAI3pC,EAAK5wB,KAAKqsB,eACdrsB,KAAKu6D,eAAiBgmD,EACjB3vF,GACF5wB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,cAG5D,iEC/EC30D,EAAI,KAEO,MAAMygH,UAAiD,IACnE7gH,YAAYE,GAGTC,MAAM,CACHK,UAAW,GAHdN,EAASA,GAAU,wCAIhBoK,KAAM,GAAGpK,mBACTqK,KAAM,GAAGrK,qBAGZG,KAAKyK,cAAgB,KAIrBzK,KAAKuN,gBAAiB,EAItBvN,KAAKqM,UAAY,KAIZtM,IACFA,EAAI,IAAI+V,IACE9V,KAAK+B,GAAGsP,aAAajQ,SAAS0U,GAG9C,CAEA2qG,SACG,MAAMjZ,EAASxnG,KAAKE,IAAIC,UACxB,MAAO,CACJO,KAAM,OACNE,GAAIZ,KAAKE,IAAIgK,KAEbvI,YAAY,EACZuH,SAAU,CACP,CACGxI,KAAM,SACNkB,KAAM,OACNV,IAAK,gBACLyB,MAAO5C,EAAE,gBACTqC,GAAI,CACDgI,YAAa,KACVpK,KAAKsK,kBACLtK,KAAKuK,iBAAiB,EAEzB4wE,cAAe,WACZn7E,KAAK2nG,eAAeniB,aACjB,UACA,GAAGgiB,oBAET,KAKf,CAEA/mG,KACG,MAAO,CACJC,KAAM,QACNE,GAAIZ,KAAKE,IAAIC,UAEba,MAAO,IACPS,KAAMzB,KAAKygH,SACXr+G,GAAI,CACDoI,OAAQ,KACLxK,KAAKwK,QAAQ,GAIzB,CAGArF,WAAWpD,GACJA,IACD/B,KAAK+B,GAAKA,GAIR4B,GAAG3D,KAAKE,IAAIC,YAAYsD,MAAMhD,GAAGT,KAAKS,KAC9C,CAYA6J,gBAAgBI,EAASC,GACtB,IAAIo1E,EAAO//E,KACP4K,EAAYjH,GAAG3D,KAAKE,IAAIgK,MAExBW,EAAYD,EAAUE,gBAAgB3E,OAAS,EAC/C4E,EAAa/K,KAAKgL,cAAa,GACnCJ,EAAUK,QACP,CACGrK,GAAI,OAAS6C,MAAMyH,MACnB/J,KAAM,CACH,CACGT,KAAM,QACNM,MAAO,IACPmB,QAAS4I,EACT3I,GAAI,CACDC,SAAU,SAAU8I,GAEjB40E,EAAK30E,cAAcD,EADVnL,KAEZ,IAGN,CACGU,KAAM,YACNM,MAAO,IACPmB,QAAS,CACN,CACGvB,GAAI,GACJ+B,MAAO5C,EAAE,yBAGfqC,GAAI,CACDC,SAAU,KAEPrC,KAAKuK,iBAAiB,IAI/B,CACG7J,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNZ,MAAO,GACPoB,GAAI,CACDgI,YAAa,WACVQ,EAAUY,WAAWxL,KAAKyL,iBAC1Bs0E,EAAKr0E,kBAAiB,GACtBq0E,EAAKx1E,iBACR,MAKZM,GAICH,GACiBE,EACdE,gBACAD,GAAWC,gBAAgB,GACnBjG,SAAS6F,GAGpBC,GACmBC,EAChBE,gBACAD,GAAWC,gBAAgB,GACjBjG,SAAS8F,EAE7B,CAWAK,aAAaW,GACV,IAAIf,EAAYjH,GAAG3D,KAAKE,IAAIgK,MACzBa,EAAa,GAEZjH,EAAY9D,KAAKyK,cAAc1D,SACnC,GAAwB,GAApBjD,EAAUqC,OAAa,OAAO4E,EAalC,GAVAjH,EAAUG,SAAS+C,IACZA,EAAE4E,mBACHb,EAAWzG,KAAK,CACb1D,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,OAEf,IAICuK,EAAiB,CAClB,IAAIE,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIC,EAAgBF,EAAMhB,gBAAgB,GAAGmB,WACzCD,IACDjB,EAAaA,EAAWjC,QAAQ9B,GAAMA,EAAEpG,IAAMoL,IAEpD,GAEN,CACA,OAAOjB,CACV,CAOA/F,WAAWC,GACRjF,KAAKyK,cAAgBxF,CACxB,CAcAmH,YAAYhG,GACTpG,KAAKqM,UAAYrM,KAAK+B,GAAG2D,UAAUU,EACtC,CAaAkG,cACG,IAAI1B,EAAYjH,GAAG3D,KAAKE,IAAIgK,MACzBqC,EAAa,GAEZV,EAAajB,EAAUE,gBAc3B,OAbIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WACnCM,EAAWjI,KAAK,CACbD,IAAKqG,EACLC,IAAKA,GAEX,IAEI4B,CACV,CAYAnB,cAAc+wB,EAAS3vB,GACpB,IACIk0G,EADA58G,EAAY9D,KAAKyK,cAAc1D,SAEhC2F,EAAUF,EAAGf,gBAAgBX,gBAAgB,GAG7C3I,EAAU,KAGb,GADAu+G,EAAc58G,EAAU0pB,MAAMxmB,GAAMA,EAAEpG,IAAMu7B,IAC5C,CAEA,OAAQukF,EAAYr8G,KACjB,IAAK,OACFlC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,oBACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,qBAE1B,MACH,IAAK,SACFoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAE1B,MAEH,QACGoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAKhC2M,EAAQjI,OAAO,UAAWtC,GAC1BuK,EAAQhI,UAOR1E,KAAK0L,mBACL1L,KAAKuK,iBAjCmB,CAkC3B,CAMAC,SACG,IAAII,EAAYjH,GAAG3D,KAAKE,IAAIgK,MAG5BzG,MAAMhD,GAAGT,KAAKygH,SAAU71G,GAExB,IAAI+B,EAAQ3M,KAAKqM,UACbM,GAASA,EAAM1I,SAChB0I,EAAM1I,SAAS2I,IACZ5M,KAAKsK,gBAAgBsC,EAAEvI,IAAKuI,EAAEjC,IAAI,IAI3B,MAATgC,GAAiC,GAAhBA,EAAMxG,QACxBnG,KAAKsK,iBAEX,CAQAoB,iBAAiBmB,GACd,IAAIjC,EAAYjH,GAAG3D,KAAKE,IAAIgK,MACzBa,EAAa/K,KAAKgL,cAAa,GAC/B8B,EAAiB,GACjBC,EAAmB,GAElBlB,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWyiB,MAAMxmB,GAAMA,EAAEpG,IAAM8J,IAEzCsC,EAEDF,EAAexI,KAAK0I,GAGpBD,EAAiBzI,KAAKwH,EAE5B,IAIEe,GACFE,EAAiB9I,SAAQ,SAAU6H,GAChClB,EAAUY,WAAWM,EACxB,KAIHD,EAAajB,EAAUE,iBACR3E,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWjC,QAAO,SAAU9B,GACpC,OAAOA,EAAEpG,IAAM8J,CAClB,IAGCuC,EAAgCH,EAAehE,QAAO,SACvDoE,GAEA,OAAIC,MAAMC,QAAQJ,KAAsC,IAAzBA,EAASK,QAAQH,EAInD,IAGII,EAAevC,EAAWjC,QAAO,SAAUoE,GAC5C,OACGC,MAAMC,QAAQH,KACgC,IAA9CA,EAA8BI,QAAQH,EAK5C,IAGApB,EAAMhB,gBAAgB,GAAGrG,OAAO,UAAW6I,GAC3CxB,EAAMhB,gBAAgB,GAAGpG,SAC5B,GAEN,CAMA6F,kBAEOvK,KAAKuN,iBAETvN,KAAKqM,UAAYrM,KAAKsM,cAEtBtM,KAAKwP,KAAK,UAAWxP,KAAKqM,WAC7B,CAEAmB,gBACGxN,KAAKuN,gBAAiB,CACzB,CAEAE,kBACGzN,KAAKuN,gBAAiB,CACzB,CAYA3I,KAAK8I,EAAOhD,EAASvI,GAClBnC,KAAKwN,gBAEL7J,GAAG3D,KAAKE,IAAIC,WAAWyE,KAAK8I,EAAOvL,GAAW,MAE1CuI,GACD1K,KAAKsK,gBAAgBI,GAGxB1K,KAAKyN,iBACR,CASAE,KAAKC,EAAGC,GACL,IAAIC,EAAS,EAEb,MAAMjC,EAAalI,GAAG3D,KAAKE,IAAIgK,MAAMY,gBAyCrC,OAxCIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,CAAC6H,EAAOC,KACxB,GAAIF,EAAW1F,OAAS,GAAK4F,GAAmB,GAAV+B,EAAa,OAEnD,MAAMpD,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WAE/BrG,EAAQ5F,KAAKyK,cAAcsD,UAAUrD,GAC3C,IAAK9E,EAAO,OAEZ,MAAMoI,EAAKpI,EAAMkB,WAEjB,IAAImH,EAASL,EAAEI,GACZE,EAASL,EAAEG,GAEVb,MAAMC,QAAQa,KACfA,GAAUA,GAAU,IAChBE,KAAI,SAAUC,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRnB,MAAMC,QAAQc,KACfA,GAAUA,GAAU,IAChBC,KAAKC,GAASA,EAAKC,MAAQD,IAC3BE,KAAK,MAGRL,GAAUC,IAERJ,EADQ,OAAPnD,EACQsD,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,EAEtC,IAICJ,CACV,oBClhBH,MAAM6yG,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAIrCnhH,EAAOC,QAAU,cAA0BihH,EAcxCxgH,YACG,OAAO,IAAIygH,EAAqB5gH,KACnC,CAEAgsE,eACGlsE,MAAMksE,eAEDhsE,KAAKoG,SAASo5C,UAChBx/C,KAAKksE,gBAAgB,mBAE3B,+DC7BH,MAAM20C,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEhCld,EACH,WAEY,MAAMmd,UAAqBF,EAWvC1gH,YACG,OAAO,IAAI2gH,EAAsB9gH,KACpC,CAEI0hG,qBACD,OAAQ1hG,KAAK2jG,iBACV3jG,KAAK2jG,kBAAoB,IAAIC,CACnC,CAEA53B,eACGlsE,MAAMksE,eACGhsE,KAAKqsB,gBAEXrsB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,cAG5D,oBC3BH,MAAM6rC,EAAkB,WAClB7gB,EAAa,EAAQ,OACrBkrB,EAAmB,EAAQ,OAEjC,IAAI7qG,EAAI,KAGRN,EAAOC,QAAU,cAAiC6gG,EAC/C5gG,YAAYqhH,EAAWnhH,EAAQqlE,GAE5BplE,MADAD,EAASA,GAAU,GAAGmhH,EAAUtgH,MAAME,mBACxB,CACXsJ,KAAM,KAGJnK,IACFA,EAAI,IAAI+V,IACE9V,KAAK+B,GAAGsP,aAAajQ,SAAS0U,IAI3C9V,KAAK+B,GAAKi/G,EAAUj/G,GAEpB/B,KAAKihH,gBAAkB,KAIvBjhH,KAAKklE,WAAaA,EAKlBllE,KAAK+7B,SAAW/7B,KAAK+B,GAAG83B,eAAe,CAAC,EAK3C,CAOIpvB,oBACD,OAAOzK,KAAK+B,GAAGkW,WAAWjY,KAAKihH,gBAClC,CAEAxgH,KACG,IAAIP,EAAMF,KAAKE,IAGf,MAAO,CACJU,GAAIV,EAAIC,UACRa,MAAO,IACP63E,QAAQ,EACRh3E,KAAM,CACH,CACGnB,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,gBAEZ,CACGW,KAAM,OACN6K,KAAM,YACNlK,MAAO,QACPE,MAAO,KACJvB,KAAK2E,MAAM,KAKvB,CACGjE,KAAM,aACNe,KAAM,CACHI,KAAM,CACH,CACGjB,GAAIV,EAAIgK,KACRxJ,KAAM,OACNiB,YAAY,EACZE,KAAM,QAO3B,CAEAsD,WAAWpD,GACR/B,KAAK+B,GAAKA,CACb,CAOI0I,oBACD,OAAOzK,KAAK+B,GAAGkW,WAAWjY,KAAKihH,gBAClC,CAEAj8G,WAAWC,GACRjF,KAAKihH,gBAAkBh8G,EAAOrE,EACjC,CAEA+D,OACGhB,GAAG3D,KAAKE,IAAIC,YAAYwE,OAExB3E,KAAKwP,KAAK,QACb,CAEA5K,KAAKiF,GACFlG,GAAG3D,KAAKE,IAAIC,YAAYyE,OAExB5E,KAAKkhH,YAAYr3G,EACpB,CAEA+2E,YACG,OAAOj9E,GAAG3D,KAAKE,IAAIC,YAAYygF,cAAe,CACjD,CAEAsgC,YAAYr3G,GACT,IAAI3J,EAAMF,KAAKE,IACf,IAAImsG,EAAY1oG,GAAGzD,EAAIgK,MACnBO,EAAgBzK,KAAKyK,cAEzB,IAAKA,IAAkB4hG,EAAW,OAElCxiG,EAAOA,GAAQ,CAAC,EAEhB,IAAIs3G,EAAY,CACbvgH,GAAI,GAAGZ,KAAKE,IAAIC,qBAChBkE,IAAKq7E,EAAWjzC,SAASpoC,IACzB+B,SAAU,CACP4zD,QAAS,EACTrC,cAAe,MACfhC,UAAW,EACXoL,YAAa,EACbC,YAAa,EACbl/D,WAAY,IACZf,OAAQ,IAKVmJ,EAAOlK,KAAK+B,GAAG+5B,iBAAiBqlF,GAEpCj3G,EAAKlF,WAAWyF,GAGhBA,EAAc1D,SAAS9C,SAAQ,CAAC+C,EAAG+E,OAE3B/L,KAAKklE,YAAcllE,KAAKklE,WAAW73D,QAAQrG,EAAEpG,KAAO,IACtDsJ,EAAKo3D,eAAet6D,EAAG+E,EAC1B,IAIH7B,EAAK0d,OAAOtjB,KACT,IAAIsmG,EACD,CACGxkG,SAAU,CACPw5D,aAAa,EACbE,eAAe,EACfE,cAAc,GAEjBr/D,SAAU,CACPy5D,EAAG3vD,EAAc1D,SAASZ,SAGhCnG,KAAK+7B,SACL7xB,IAKNA,EAAK0d,OAAO3jB,SACT,CAACqP,EAAGvH,IAAWuH,EAAE1S,GAAK,GAAGsJ,EAAKtJ,MAAM0S,EAAEjP,OAAO0H,MAGhD,IAAIq1G,EAAUl3G,EAAK/J,UAAUH,KAAK+B,GAAG85B,MAGrCp4B,MAAMhD,GAAG2gH,EAAQ3gH,KAAKoB,KAAKmmB,OAAO,CAAC,GAAIqkF,GACvC5oG,MAAMC,OAAO2oG,EAAW5oG,MAAMG,aAE9Bw9G,EAAQ99G,KACLtD,KAAK+B,GACL,EACA,CACGkpG,iBAAkB,KAEf,IAAIW,EAAW1hG,EAAKshG,cAAca,EAAW5hG,GAG7C,QAAKP,EAAKkiG,aAAaC,EAAW5hG,EAAemhG,KAIjDS,GAAWhnG,aAAa,CAAEzD,KAAM,SAE5BgqG,EAAShrG,GACV6J,EAAczC,QACVirE,OAAO24B,EAAShrG,GAAIgrG,GACpBl3F,MAAM2sG,IACJrhH,KAAKwP,KAAK,SAAU6xG,GAGpBhV,GAAW1kG,aAAa,CAAE/F,KAAM,QAAS,IAE3C+S,OAAOxM,IAELnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,8EACHs8F,aAEHS,GAAW1kG,aAAa,CAAE/F,KAAM,QAAS,IAK/C6I,EAAczC,QACVykE,OAAOm/B,GACPl3F,MAAM4sG,IAEJthH,KAAKwP,KAAK,MAAO8xG,GAEjBjV,GAAW1kG,aAAa,CAAE/F,KAAM,QAAS,IAE3C+S,OAAOxM,IAELnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,+EACHs8F,aAGHS,GAAW1kG,aAAa,CAAE/F,KAAM,QAAS,KAI3C,EAAK,GAGlB,GAIHyqG,EAAUnnG,QACVmnG,EAAU50F,MAAM5N,GAEhBu3G,EAAQ52G,OAAOX,EAClB,oBCvQH,MAAM03G,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErC/hH,EAAOC,QAAU,cAA0B6hH,EACxC5hH,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,EACtC,CAOAhlC,YACG,OAAO,IAAIqhH,EAAqBxhH,KACnC,CAEAgsE,eACGlsE,MAAMksE,eAEDhsE,KAAKqO,MACPrO,KAAKksE,gBAAgB,yBAE3B,mBCvBH,MAAMu1C,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtCjiH,EAAOC,QAAU,cAA2B+hH,EAMzCthH,YACG,OAAO,IAAIuhH,EAAsB1hH,KACpC,CAEAgsE,eACGlsE,MAAMksE,eAEoB,GAAtBhsE,KAAK4nB,OAAOzhB,QACbnG,KAAKksE,gBAAgB,sBAE3B,oBCnBH,MAAMy1C,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAIpCniH,EAAOC,QAAU,cAAyBiiH,EAUvCxhH,YACG,OAAO,IAAIyhH,EAAoB5hH,KAClC,CAEAgsE,eACGlsE,MAAMksE,eACGhsE,KAAKqsB,gBAEXrsB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,cAG5D,oBC3BH,MAAMmtD,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAEpCriH,EAAOC,QAAU,cAAyBmiH,EAMvC1hH,YACG,OAAO,IAAI2hH,EAAoB9hH,KAClC,oBCXH,MAAM+hH,EAAiB,EAAQ,OAEzBhoD,EAA8BgoD,EAAe58E,gBAEnD1lC,EAAOC,QAAU,cAAyBqiH,EAWvC5hH,UAAU6hH,GAAQ,GACf,IAAI7hH,EAAYL,MAAMK,YAiBtB,GAfAA,EAAUwhG,IAAMxhG,EAAUM,KAG1BN,EAAUM,GAAK,KACL,CACJC,KAAM,aACNiB,YAAY,EACZT,IACGlB,KAAKoG,SAASgiE,gBACdrO,EAA4BqO,eAC/B3mE,KAAMtB,EAAUwhG,MAKlBqgB,EAAO,CACR,IAAIC,EAAe9hH,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASk5D,KACbA,EAAcA,GAAer7D,KAAKo7D,gBAC3B6mD,EAAa3+G,KAAKtD,KAAK+B,GAAIs5D,EAAal5D,IAElDqI,OAAQ,IAAIsL,IACFmsG,EAAaz3G,YAAYsL,GAGzC,CAEA,OAAO3V,CACV,CAEA6rE,eACGlsE,MAAMksE,eAIiB,GAFRhsE,KAAK2nB,QAEPxhB,QACVnG,KAAKksE,gBAAgB,qBAGvBlsE,KAAK8lB,SAAW,IAAI7hB,SAAS+d,IAC3BA,EAAEgqD,cAAc,GAEtB,oBC9DH,MAAMk2C,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,MAIrC1iH,EAAOC,QAAU,cAA0BwiH,EACxCviH,YAAYgG,EAAQZ,EAAakQ,EAAQkwB,GACtCrlC,MAAM6F,EAAQZ,EAAakQ,EAAQkwB,EACtC,CAOAhlC,YACG,OAAO,IAAIgiH,EAAqBniH,KACnC,CAEAgsE,eACGlsE,MAAMksE,eAEGhsE,KAAKqsB,gBAEXrsB,KAAKksE,gBACF,qCAAqClsE,KAAKoG,SAASsuD,cAG5D,oBC5BH,MAAM0tD,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9C5iH,EAAOC,QAAU,cAAmC0iH,EAcjDjiH,YACG,OAAO,IAAIkiH,EAA8BriH,KAC5C,oBCnBH,MAAMsiH,EAAgB,EAAQ,OAExBC,EAAqB,EAAQ,OAEnC9iH,EAAOC,QAAU,cAAwB4iH,EAOtCniH,UAAU6hH,GAAQ,GACf,IAAI7hH,EAAY,IAAIoiH,EAAmBviH,MAGvC,GAAIgiH,EAAO,CACR,MAAMC,EAAe9hH,EAErBA,EAAY,CACTM,GAAIwhH,EAAaxhH,KACjB6C,KAAM,CAACnB,EAASk5D,IACN4mD,EAAa3+G,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIsL,IACFmsG,EAAaz3G,YAAYsL,GAGzC,CAEA,OAAO3V,CACV,CAEA6rE,eACGlsE,MAAMksE,eAIiB,GAFRhsE,KAAK2nB,QAEPxhB,QACVnG,KAAKksE,gBAAgB,kBAO3B,mBC7CH,MAAMs2C,EAAiB,EAAQ,OAEzBC,EAAsB,EAAQ,OAEpChjH,EAAOC,QAAU,cAAyB8iH,EAMvCriH,YACG,OAAO,IAAIsiH,EAAoBziH,KAClC,oBCZH,MAAM0iH,EAAmB,EAAQ,OAEGA,EAAiBv9E,gBAIrD1lC,EAAOC,QAAU,cAA2BgjH,EAWzCviH,UAAUP,GACP,IAAI+kE,EAAO7kE,MAAMK,UAAUP,GAU3B,OARA+kE,EAAKn6D,OAAUiyD,IACZ,IAAI9oC,EAAK3zB,KAAKqsB,eACVsH,GAAMA,EAAG/G,YAAc+G,EAAG1I,eAAeC,YAE1CyI,EAAGd,UACN,EAGI8xC,CACV,oBC7BH,MAAM47B,EAAkB,WAExB9gG,EAAOC,QAAU,cAAyC6gG,EACvD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,iBAAiBkhG,EAASngG,KACpCyT,OAAO6pC,OACJ,CACG6kC,OAAQ,GACRuzB,aAAc,GACdv0B,cAAe,IAElB7hF,IAINF,KAAK2iH,aAAe,IACvB,CAEAliH,KACG,MAAMP,EAAMF,KAAKE,IACXkG,EAAWpG,KAAKoG,SAChBklF,EAAkBtrF,KAAKU,KAAKf,YAAYwlC,gBACxCw8D,EAAM7hG,MAAMW,GAAG,CAClB,CACGC,KAAM,SACNkB,KAAM,QACND,YAAY,EACZR,KAAM,CACH,CACGP,GAAIV,EAAIo2G,aACR51G,KAAM,SACNQ,IAAK,oBACLU,KAAM,OACN2J,KAAM,eACN5J,YAAY,EACZX,MAAO,GACPI,MAAO,GACPG,MAAO,KACJvB,KAAKqjG,iBAAiB,GAG5B,CACGziG,GAAIV,EAAI6iF,OACRriF,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,iBACN5J,YAAY,EACZX,MAAOoF,EAASpF,OAASsqF,EAAgBtqF,MACzCI,MAAOgF,EAASuuD,aAAe22B,EAAgB32B,YAC/CpzD,MAAO,KACJvB,KAAK4iH,iBAAiB,GAG5B,CAAElgH,WAAW,OAOtB,cAFOi/F,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,GAGR,SAFMjC,MAAMwD,KAAKvB,IAEZ/B,KAAK2iH,aAAc,CACrB,MAAMA,EAAe5gH,EAAGgzB,iBAAiB/0B,KAAKE,IAAI6hF,eAE5C10D,EAAKrtB,KAAKqsB,eAEhB,GAAIgB,EAAI,CACL,MAAMrV,EAAMqV,EAAGjB,WAEfu2F,EAAa3tF,WAAWhd,GAAKjR,YAAc,GAC9C,CAEA47G,EAAar/G,OACbq/G,EAAavgH,GAAG,UAAW8T,IACxBlW,KAAK6iH,eAAe3sG,EAAI,IAG3BlW,KAAK2iH,aAAeA,CACvB,CACH,CAEAC,kBACG,IAAItyG,EAAM,0BAA0BtQ,KAAKU,KAAKE,KAE9C,MAAMovB,EAAQhwB,KAAK2iH,aAAa12G,WAEhC,IAAK+jB,GAAO3O,OAAS,IAAIlb,OAAQ,CAC9B,IAAI28G,EAAU/uG,KAAKC,UAAUgc,GAE7B8yF,EAAU3sG,mBAAmB2sG,GAC7BxyG,EAAM,GAAGA,WAAawyG,GACzB,CAEA5pG,OAAO6pG,KAAKzyG,EACf,CAEA+yF,kBACG,MAAM2f,EAAgBr/G,GAAG3D,KAAKE,IAAIo2G,cAElCt2G,KAAK2iH,aAAa9mC,MAAMmnC,EAAgBA,EAAct1G,MAAQ,KACjE,CAEAm1G,iBACG,MAAMG,EAAgBr/G,GAAG3D,KAAKE,IAAIo2G,cAElC,IAAK0M,EAAe,OAEpB,MAAMhzF,EAAQhwB,KAAK2iH,aAAa12G,WAEhC+2G,EAAcv+G,OAAO,SAAUurB,EAAM3O,OAAS,IAAIlb,QAAU,MAC5D68G,EAAct+G,SACjB,oBCvHH,MAAM67F,EAAkB,WAClB0iB,EAAc,EAAQ,OAE5BxjH,EAAOC,QAAU,cAAyC6gG,EACvD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,iBAAiBkhG,EAASngG,KACpCyT,OAAO6pC,OACJ,CACG6kC,OAAQ,GACRrK,MAAO,GAEPxuE,KAAM,GACNu8E,SAAU,GACVy8B,eAAgB,GAChBlsC,YAAa,GACbmsC,kBAAmB,GACnBC,WAAY,GAEZntG,OAAQ,GACRygG,UAAW,GAEX2M,cAAe,GACfC,YAAa,GAEbC,aAAc,GACdliG,MAAO,IAEVnhB,IAINF,KAAKwjH,YAAc,IAAIP,GAAY,IAAIQ,IAASzjH,KAAKoB,SAASqiH,KAI9DzjH,KAAK+2G,iBAAkB,EAEvB/2G,KAAK0jH,UAAY,KACjB1jH,KAAK2jH,aAAe,IACvB,CAEAljH,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBklF,EAAkBtrF,KAAKU,KAAKf,YAAYwlC,gBACxCw8D,EAAM7hG,MAAMW,GAAG,CAClB,CACGU,KAAM,CACH,CACGT,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,eACNnK,MAAOpB,KAAKoB,MACTgF,EAASuuD,aAAe22B,EAAgB32B,aAE3C3zD,MAAOoF,EAASpF,OAASsqF,EAAgBtqF,MACzCO,MAAO,KACJvB,KAAKsjG,WAAW,GAGtB,CACG5gG,WAAW,OAQvB,cAFOi/F,EAAI//F,KAEJ+/F,CACV,CAEA5C,WACG,MAAM7+F,EAAMF,KAAKE,IAEjB,MAAO,CACJU,GAAIV,EAAIgK,KACRxJ,KAAM,OACNkB,KAAM,QACND,YAAY,EACZ0nE,SAAU,IACVpP,QAAS,EACT/wD,SAAU,CACP,CACGrH,KAAM,CACH,CACGjB,GAAIV,EAAIumF,SACR/lF,KAAM,WACNyG,KAAM,UACNjG,IAAK,gBACLyB,MAAO3C,KAAKoB,MAAM,qBAClBwiH,OAAQ,WACR/8B,UAAU,EACVg9B,UAAU,EACVx7E,KAAMnoC,EAAIgjH,eACV9gH,GAAI,CACD0kF,gBAAkBlQ,IACf52E,KAAK2jH,aAAe/sC,EAEb52E,KAAK8jH,iBAIrB,CACGljH,GAAIV,EAAIgjH,eACR/7G,KAAM,eACNzG,KAAM,OACNkB,KAAM,WACN2yG,YAAY,EACZ5yG,YAAY,EACZoiH,QAAS,CACNC,oBAAqB,CAAC35G,EAAGzJ,KACtBZ,KAAKikH,cAAcrjH,EAAG,IAI/B,CACG4B,QAAS,GACTX,KAAM,CACH,CACGjB,GAAIV,EAAI82E,YACRt2E,KAAM,aACNyG,KAAM,cACN/F,MAAOpB,KAAKoB,MAAM,gBAClBU,WAAY,IACZK,QAASnC,KAAKwjH,YAAY9sC,mBAC1B/zE,MAAO,IACPP,GAAI,CACDC,SAAU,KACPrC,KAAK8jH,aAAa,IAI3B,CACGljH,GAAIV,EAAIijH,kBACRziH,KAAM,WACNyG,KAAM,oBACN/F,MAAOpB,KAAKoB,MAAM,wBAClBU,WAAY,IACZ+mC,UAAU,EACVlmC,OAAO,EACPP,GAAI,CACDC,SAAU,KACPrC,KAAKkkH,oBAAoB,MAMxC,CACGtiH,KAAM,QACNC,KAAM,CACH,CACGnB,KAAM,aACNyjH,UAAW,IACX1iH,KAAM,CACHe,QAAS,GACT5B,GAAIV,EAAIkjH,WACRvhH,KAAM,UASjC,CAEAuiH,gBACG,MAAMlkH,EAAMF,KAAKE,IAEjB,MAAO,CACJ+5D,QAAS,EACTp4D,KAAM,CACH,CACGnB,KAAM,UACNQ,IAAK,UACLC,KAAM,CACH,CAAEH,MAAO,GACT,CACGJ,GAAIV,EAAI+V,OACRvV,KAAM,SACNiC,MAAO,GACPvB,MAAO,GACPs6E,YAAa17E,KAAKoB,MAAM,qBACxBijH,gBAAiB,IACjBjiH,GAAI,CACDw7E,gBAAiB,KACd59E,KAAKiW,OAAOtS,GAAGzD,EAAI+V,QAAQhK,WAAW,IAI/C,CAAEjL,MAAO,KAGf,CACGJ,GAAIV,EAAIw2G,UACRh2G,KAAM,YACNo3G,cAAc,EACd1vD,UAAU,EACV8vD,WAAY,WACZh3G,IAAK,kBACLS,YAAY,EACZ2kG,QAAUtuF,GACSA,EAAIssG,UACftsG,EAAIssG,UACJ,uBAGRj7C,SAAU,IACVrP,QAAS,GACT53D,GAAI,CACD02G,kBAAmB,CAACl4G,EAAIoX,EAAKusG,KAE1B,IAAI/mG,EAAS,GAEbnJ,OAAOC,KAAKiwG,GAAStgH,SAASI,IAC3BrE,KAAK0N,MAAMowG,mBAAmBz5G,GAAKJ,SAASkE,IACzCqV,GAAUrV,EAAIilE,eAAiB,OAAO,GACvC,IAGL,MAAMo3C,EAAM7gH,GAAGzD,EAAIw2G,WAEnB8N,EAAIjlC,aACJilC,EAAIlzF,WAAW1wB,EAAI,CAChB6jH,QAAS,UACTH,UAAW9mG,IAEdgnG,EAAIhlC,eAEJx/E,KAAK+2G,iBAAkB,CAAI,EAE9BgC,oBAAqB,CAACn4G,EAAIoX,EAAKusG,KAE5B,MAAMC,EAAM7gH,GAAGzD,EAAIw2G,WAEnB8N,EAAIjlC,aACJilC,EAAIlzF,WAAW1wB,EAAI,CAChB6jH,QAAS,QACTH,UAAW,KAEdE,EAAIhlC,eACJx/E,KAAK+2G,iBAAkB,CAAK,EAE/B0B,QAAS,KACN,MAAM10B,EAAWpgF,GAAGzD,EAAIw2G,WAAWlpF,KAAK,CACrCk3F,WAAW,IAERC,EAAgBhhH,GAAGzD,EAAIqjH,cAE7BoB,EAAc9/G,SAAS7E,KAAK4kH,YAAY7gC,IAEpC/jF,KAAK6kH,eAAe9gC,GAAW4gC,EAAcv/G,UAC5Cu/G,EAAcj9G,QAAQ,IAIpC,CACG9G,GAAIV,EAAIojH,YACRviH,OAAQ,GAEX,CACGL,KAAM,SACNyG,KAAM,SACNvG,GAAIV,EAAIqjH,aACR5gH,MAAO3C,KAAKoB,MAAM,UAClBF,IAAK,gBACL2nC,UAAU,EACVtnC,MAAO,KACJvB,KAAK6sE,QAAQ,IAK5B,CAEAi4C,UACG,MAAM5kH,EAAMF,KAAKE,IAEjB,MAAO,CACJU,GAAIV,EAAIw4E,MACRh4E,KAAM,SACNm4E,QAAQ,EACRl4E,SAAU,SACVG,OAAO,EACPD,QAAQ,EACRI,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CAAC,EACD,CACGT,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,gBAClBE,WAAW,GAEd,CAAC,EACD,CACGZ,KAAM,SACNM,MAAO,GACPE,IAAK,oBACLU,KAAM,OACN2J,KAAM,uBACNhK,MAAO,KACJvB,KAAK2E,MAAM,KAKvBlD,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGD,KAAM,OACNT,KAAM,CACHnB,KAAK++F,WACL,CAAE/9F,MAAO,IACThB,KAAKokH,gBACL,CAAEpjH,MAAO,KAGf,CACGJ,GAAIV,EAAImjH,cACR3iH,KAAM,QACNW,MAAO,QACPw3E,QAAQ,GAEX,CACGA,QAAQ,EACRwB,OAAQ,EACRl5E,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNyG,KAAM,SACNxE,MAAO3C,KAAKoB,MAAM,UAClBF,IAAK,mBACLI,WAAW,EACXC,MAAO,KACJvB,KAAK2E,MAAM,OAsBnC,CAEAQ,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IAIXmtB,EAAKrtB,KAAKqsB,eAEZgB,GAAIrtB,KAAKgF,WAAWqoB,EAAGjB,YAE3B,MAAM42E,EAAUjhG,EAAG4Y,MAEnBqoF,EAAQviG,GAAGT,KAAK8kH,WAEhB,MAAMxkC,EAAQ38E,GAAGzD,EAAIgK,MAEjBo2E,GAAO0iB,EAAQt/F,OAAO48E,EAAO0iB,EAAQp/F,aAEzC,MAAMmhH,EAAephH,GAAGzD,EAAIojH,aAExByB,GAAc/hB,EAAQt/F,OAAOqhH,EAAc/hB,EAAQp/F,YAC1D,CAEA0/F,YACG,MAAMpjG,EAAMF,KAAKE,IAEjByD,GAAGzD,EAAIw4E,QAAQ9zE,OAEf5E,KAAKglH,YAGLrhH,GAAGzD,EAAIumF,UAAUgB,YACpB,CAEA9iF,OACGhB,GAAG3D,KAAKE,IAAIw4E,QAAQ/zE,MACvB,CAEAqgH,YACG,MAAM9kH,EAAMF,KAAKE,IAEjBF,KAAK0jH,UAAY,KACjB1jH,KAAK2jH,aAAe,KAEpB,MAAMrjC,EAAQ38E,GAAGzD,EAAIgK,MAErBo2E,EAAMusB,kBACNvsB,EAAMp7E,QAENvB,GAAGzD,EAAI82E,aAAanyE,SAAS,KAE7B7E,KAAK+B,GAAG4Y,MAAMla,GAAG,GAAIkD,GAAGzD,EAAIkjH,aAE5Bz/G,GAAGzD,EAAIijH,mBAAmB/9G,UAC1BzB,GAAGzD,EAAIqjH,cAAcn+G,UAErBzB,GAAGzD,EAAI+V,QAAQpR,SAAS,IACxBlB,GAAGzD,EAAIgjH,gBAAgBloG,WACvBrX,GAAGzD,EAAIw2G,WAAW17F,WAElB,MAAMiqG,EAAiBthH,GAAGzD,EAAImjH,eAE9B4B,EAAepgH,SAAS,IACxBogH,EAAetgH,MAClB,CAEAsR,OAAOoP,GACJ,MAAM2wF,EAAaryG,GAAG3D,KAAKE,IAAIw2G,WAE/B,IAAKV,EAAY,OAEjB3wF,GAAcA,GAAc,IAAIhN,cAEhC,MAAM6sG,EAAcllH,KAAKmlH,iBAEzBnP,EAAWltG,QAAQsW,IAChB,IAAIkO,GAAS,EAYb,OAVC43F,GAAe,IAAIjhH,SAAS+C,IACtBsmB,IAEJA,GACIlO,EAAI,GAAGpY,EAAEo+G,gBAAkB,IACxBxwG,WACAyD,cACAhL,QAAQgY,IAAe,EAAC,IAG3BiI,CAAM,GAEnB,CAEA+3F,eAAej3G,GACZ,IAAIk3D,EAAW,GAEf,IAAKl3D,EAAM,OAAOk3D,EAElB,OAAQl3D,EAAKq2G,SACV,IAAK,cACFn/C,EAAW,sCACX,MACH,IAAK,UACFA,EAAW,mDACX,MACH,IAAK,QAGL,IAAK,OACFA,EAAW,oCACX,MACH,IAAK,OACFA,EAAW,qCAIjB,OAAOA,CACV,CAEAngE,oBACG,MAAMw+G,EAAe3jH,KAAK2jH,aAE1B,IAAKA,EAAc,OAAO,EAE1B,MAAMH,EAAcxjH,KAAKwjH,YAEzB,IAAKA,EAAY7sC,aAAagtC,GAO3B,OANA3jH,KAAK+B,GAAG4Y,MAAMxJ,MAAM,CACjBC,MAAOpR,KAAKoB,MAAM,sCAClBiN,KAAMrO,KAAKoB,MAAM,gCACjBmQ,GAAIvR,KAAKoB,MAAM,SAGX,EAGV,MAAMlB,EAAMF,KAAKE,IAGXogF,EAAQ38E,GAAGzD,EAAIgK,MAErBo2E,GAAOj7E,eAAe,CAAEzD,KAAM,SAG9B,MAAM0jH,EAAqB3hH,GAAGzD,EAAIijH,mBAC5BwB,EAAgBhhH,GAAGzD,EAAIqjH,cAE7B+B,EAAmB59G,SACnBi9G,EAAcj9G,SAEd1H,KAAK0jH,gBAAkBF,EAAYzsC,YAChC4sC,EACAhgH,GAAGzD,EAAI82E,aAAa/qE,YAGvB,MAAMy3G,EAAY1jH,KAAK0jH,UAEvB,IAAIv9G,EAASu9G,EAAUv9G,OAQvB,OANIm/G,EAAmBr5G,aAAY9F,EAASu9G,EAAUv9G,OAAS,GAE/Dw+G,EAAc9/G,SAAS7E,KAAK4kH,YAAYz+G,IACxCnG,KAAKkkH,qBACL5jC,GAAO34E,kBAEA,CACV,CAEAs8G,cAAcsB,GAIX,OAHA5hH,GAAG3D,KAAKE,IAAIgjH,gBAAgBnoG,OAAOwqG,GACnCvlH,KAAKglH,aAEE,CACV,CAEAd,qBACG,MAAMnkC,EAAO//E,KACPE,EAAMF,KAAKE,IACX8iG,EAAUhjG,KAAK+B,GAAG4Y,MAGlB6qG,EAAc7hH,GAAGzD,EAAIkjH,YAE3BpgB,EAAQviG,GAAG,GAAI+kH,GAEf,MAAM9B,EAAY1jH,KAAK0jH,UAEvB,IAAKA,EAAW,OAGhB,MAAM+B,EAAY/B,EAAU,GAE5B,IAAK+B,EAAW,OAEhB,MAAMC,EAAgB,GAChB7mF,EAAY,GACZ8mF,EAAgB3lH,KAAKyK,cAEvBk7G,GACD9mF,EAAUv6B,QACJqhH,EAAc5+G,QAAQC,IAEtB,GACGhH,KAAKoG,SAAS4uD,mBAAmB7uD,QACjCnG,KAAKoG,SAAS4uD,kBAAkB3nD,QAAQrG,EAAEpG,IAAM,EAEhD,OAAO,EAIV,MAAMglH,EAAW5+G,EAAEw6D,gBAEnB,IAAKokD,EAAU,OAAO,EAEtB,MAAMC,EAAaD,EAASn5E,SAE5B,OAAKo5E,GAEoB,iBAAlBA,EAAWxhH,GAAsB,KAIjD,MAAMm/G,EAAcxjH,KAAKwjH,YAGrB7/G,GAAGzD,EAAIijH,mBAAmBl3G,WAC3By5G,EAAcphH,QACRmhH,EAAUt3G,KAAI,CAACqqB,EAASzsB,KACjB,CACJnL,GAAImL,EAAQ,EACZpJ,MAAO61B,EACPn0B,IAAKm/G,EAAYjsC,iBAAiBmsC,EAAW33G,QAKtD05G,EAAUxhH,SAAQ,CAACoG,EAAGkJ,KACnBmyG,EAAcphH,KAAK,CAChB1D,GAAI2S,EAAI,EACR5Q,MAAO3C,KAAKoB,MAAM,aAAc,CAACmS,EAAI,IACrClP,IAAKm/G,EAAYjsC,iBAAiBmsC,EAAWnwG,IAC9C,IAIRmyG,EAAcnyF,QAAQ,CACnB3yB,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,UAIrB,MAAM0kH,EAAY,GACZC,EAAkB,GAExBlnF,EAAU56B,SAAS+C,IAEhB,MAAMg/G,EAAWN,EAAc58G,QAC3BvF,GAAMA,EAAEc,KAAO2C,EAAE3C,KAAO0hH,EAAgB14G,QAAQ9J,EAAE3C,IAAM,IAC1D,GAEF,IAAIqlH,EAAY,OAEZD,IACDC,EAAYD,EAASplH,GAGrBmlH,EAAgBzhH,KAAK2hH,IAGxB,IAAIC,EAAc,CACfxlH,KAAM,aACNu5D,QAAS,EACT93D,QAASujH,EACTh7G,QAAS1D,EAAEpG,GACXulH,OAAQ,cACRxjH,MAAOsjH,EACP7jH,GAAI,CACDC,SAAU,WACP09E,EAAKqmC,iBAAiBpmH,MACtB+/E,EAAKsmC,gBACR,IAKN,GAAc,SAAVr/G,EAAE3C,IAAgB,CACnB,MAAMiiH,EAAuB,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAmB,CACtB,CAAE5jH,MAAO3C,KAAKoB,MAAM,WAAYR,GAAI,KACpC,CAAE+B,MAAO3C,KAAKoB,MAAM,YAAaR,GAAI,OAElC4lH,EAAqB,CACxB,CAAE7jH,MAAO3C,KAAKoB,MAAM,WAAYR,GAAI,KACpC,CAAE+B,MAAO3C,KAAKoB,MAAM,YAAaR,GAAI,OAElC6lH,EAAoB,CACvB,CAAE9jH,MAAO3C,KAAKoB,MAAM,YAAaR,GAAI,MACrC,CAAE+B,MAAO3C,KAAKoB,MAAM,gBAAiBR,GAAI,SAEtC8lH,EAAmB,CACtB,CACG/jH,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,GAEP,CACG+B,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,GAEP,CACG+B,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,GAEP,CACG+B,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,IAIVslH,EAAc,CACXjsD,QAAS,EACTp4D,KAAM,CACHqkH,EACA,CACGxlH,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,aAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKqmH,gBAAgB,GAG3Bl/G,KAAM,YACNg/G,OAAQ,mBACRhkH,QAASmkH,EACT3jH,MAAO,KAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,OAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKqmH,gBAAgB,GAG3Bl/G,KAAM,MACNg/G,OAAQ,mBACRhkH,QAASokH,EACT5jH,MAAO,KAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,SAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKqmH,gBAAgB,GAG3Bl/G,KAAM,QACNg/G,OAAQ,mBACRhkH,QAASqkH,EACT7jH,MAAO,KAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,QAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKqmH,gBAAgB,GAG3Bl/G,KAAM,OACNg/G,OAAQ,mBACRhkH,QAASskH,EACT9jH,MAAO,MAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,SAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKqmH,gBAAgB,GAG3Bl/G,KAAM,QACNg/G,OAAQ,mBACRhkH,QAASukH,EACT/jH,MAAO,IAInB,CAGA,GAAIqE,EAAEq8B,aAAc,CACjB,IAAIsjF,EAAmB,GAEnB3/G,EAAEJ,iBACH+/G,EAAmB3/G,EAAEJ,eACjBG,QAAQ6/G,IAASA,EAAIvjF,eACrBl1B,KAAKy4G,IACI,CACJhmH,GAAIgmH,EAAIhmH,GACR+B,MAAOikH,EAAIxlH,WAKvB8kH,EAAc,CACXjsD,QAAS,EACTp4D,KAAM,CACHqkH,EACA,CACGxlH,KAAM,aACNU,MAAO,IACPU,WAAY,GACZqkH,OAAQ,iBACRttC,QAAQ,EACR12E,QAASwkH,EACThkH,MAAOgkH,EAAiB,GAAKA,EAAiB,GAAG/lH,GAAK,OAIlE,CAEAklH,EAAUxhH,KAAK,CACZ5D,KAAM,SACNiB,YAAY,EACZR,KAAM,CACH,CACGT,KAAM,WACNu5D,QAAS,EACTt4D,YAAY,EACZT,IAAK,CAAE,cAAe,IACtBokE,SAAU,sBAAsBt+D,EAAEuE,iBAAiBvE,EAAE5F,SAExD8kH,IAEJ,IAELljB,EAAQviG,GAAGqlH,EAAWN,GAEtBxlH,KAAKqmH,gBACR,CAEAD,iBAAiBS,GACd,IAAKA,EAAe,OAEpB,MACMC,EADeD,EAAcp7G,gBACG2vE,UACnC,CAAE+qC,OAAQ,kBACV,OACD,GAEGW,IAE4B,SAA7BD,EAAc56G,WAAuB66G,EAAiBniH,OACrDmiH,EAAiBliH,OACzB,CAEAigH,eAAeh7G,GAGZ,OAAIA,EAAK1D,OAFK,MAIXnG,KAAK+B,GAAG4Y,MAAMxJ,MAAM,CACjBC,MAAOpR,KAAKoB,MAAM,oBAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MACR,0HACA,CATK,SAaJ,EAIb,CAEAilH,iBACG,MAAMnmH,EAAMF,KAAKE,IACX81G,EAAaryG,GAAGzD,EAAIw2G,WACpB3T,EAAK/iG,KAAK+B,GAEhB,IAAKi0G,EAAY,OAEjBA,EAAWh7F,WAGXg7F,EAAW3wG,eAAe,CAAEzD,KAAM,SAGlC,MAAMsjH,EAAcllH,KAAKmlH,iBACnBnrD,EAAU,GAGhBA,EAAQ11D,KAAK,CACV1D,GAAI,UACJmzE,OAAQ,GACRzO,SAAUtlE,KAAKqlH,eACfrkH,MAAO,KAIVg5D,EAAQ11D,KAAK,CACV1D,GAAI,YACJmzE,OAAQ,CAAEK,QAAS,kBACnB9O,SAAU,sBACVtkE,MAAO,KAGV,MAAMw8G,EAAmB,GACnBC,EAAW,GA4DjB,IAzDCyH,GAAe,IAAIjhH,SAAS+C,IAC1B,IAAIitE,EAAkBjtE,EAAEpB,MAAMQ,SAAS6tE,gBAMvC,GAHIA,GAA8C,iBAApBA,IAC3BA,EAAkBlgE,KAAK0D,MAAMw8D,IAE5BA,GAAiB9tE,OAAQ,CAC1B,MAAMu3G,EAAe,GAGrBzpC,EAAgBhwE,SAASmsB,IACtB,MAAM0xD,EAASihB,EAAGhuE,iBACf,GAAG/tB,EAAEpB,MAAMhF,MAAMmiG,EAAGpoF,MAAMzP,SAG7BwyG,EAAap5G,KAAKw9E,EAAOrhF,IAEzB+8G,EAAiBl5G,KAAK,CACnBwE,OAAQg5E,EACRphF,KAAMohF,EAAO5hF,IAAIy4E,aACjB7xE,WAAYE,EAAEpB,MAAMhF,GACpBqzE,gBAAiB7jD,EAAK/O,MACtB+rD,eAAgBh9C,EAAKg9C,eACrBg4C,YAAap+G,EAAEo+G,aAChB,IAIL,MAAMzH,EAAU,GAAGz9G,EAAImhB,SAASra,EAAEpB,MAAMhF,MAAMmiG,EAAGpoF,MAAMzP,QAGvDuyG,EAASn5G,KAAKq5G,GAEd5a,EAAGpoF,MAAMla,GAAG,CACTC,KAAM,QACNQ,IAAK,iBACLN,GAAI+8G,EACJl8G,KAAM,CACHI,KAAM67G,IAGf,CAEA,MAAMp4G,EAAyB,UAAhB0B,EAAEpB,OAAOvB,IAAkB,SAAW,OAErD21D,EAAQ11D,KAAK,CACV1D,GAAIoG,EAAEo+G,YACNrxC,OAAQ/sE,EAAEpB,MAAMxE,MAChBkE,OAAQA,EACRggE,SAAU,CAACttD,EAAKy0B,EAAQ9pC,IACrBA,EAAMuQ,QAAQ,OAAQ,QACzBm2D,SAAU,IACV3mE,WAAW,GACZ,IAGD86G,EAAiBr3G,OAAQ,CAE1B,MAAM23G,EAAqB,GAE3BN,EAAiBv5G,SAAS+C,IAGvBA,EAAE8B,OAAOksB,WAAWh1B,KAAKyK,cAAc1D,UAEvCC,EAAE8B,OAAOjE,SAASmC,EAAEitE,iBAGf9mE,MAAMC,QAAQ0wG,EAAmB92G,EAAEF,eACrCg3G,EAAmB92G,EAAEF,YAAc,IAGtCg3G,EAAmB92G,EAAEF,YAAYxC,KAAK,CACnCgyB,QAAS3yB,GAAGqD,EAAEtG,MAAMq9G,kBACpBp4G,OAAQqwG,EAAWgI,kBACnB5wC,eAAgBpmE,EAAEomE,eAClBg4C,YAAap+G,EAAEo+G,aAChB,IAGL,MAAM/jG,EAAQ,CAAC,EAGf20F,EAAWtoG,MAAMowG,mBAAqBA,EAGtCzpG,OAAOC,KAAKwpG,GAAoB75G,SAASI,IACtCgd,EAAMhd,GAAO,CAAC1B,EAAOkH,KAElB,IAAItE,GAAU,EAgCd,OA9BAywG,EAAWtoG,MAAMowG,mBAAmBz5G,GAAKJ,SAAS6E,IAC/C,MAAMi+G,EAAW,CAAC,GAKjB7B,GAAe,IAAIjhH,SAAS+C,IAC1B,MAAMonB,EAASvkB,EAAK7C,EAAEo+G,aAGH,SAAhBp+G,EAAEpB,MAAMvB,KACR+pB,EAAOqiB,SAAS,kBAEhBlrC,GAAU,GAEbwhH,EAAS//G,EAAEpB,MAAMhF,IAAMwtB,CAAM,IAGdtlB,EAAOwtB,QAAQywF,KAI9BxhH,GAAU,EAKb,IAGIA,CAAO,CAChB,IAGJywG,EAAWvxG,OAAO,QAAS4c,GAE3B20F,EAAW/zG,OAAOw7G,SAAWA,EAC7BzH,EAAWtxG,SACd,MAEOsxG,EAAW/zG,OAAOw7G,UACnBzH,EAAW/zG,OAAOw7G,SAASx5G,SAASy0E,IACjC,MAAMsuC,EAASrjH,GAAG+0E,GAEbsuC,GAELA,EAAO9I,YAAY,IAKzBlI,EAAWvxG,OAAO,QAAS,CAAC,GAC5BuxG,EAAWtxG,UAId,MAAMuiH,EAAa,IAElBjnH,KAAK0jH,WAAa,IAAIz/G,SAAQ,CAACmb,EAAKrT,KAClC,MAAMg7G,EAAW,CACdnmH,GAAImL,EAAQ,IAIdm5G,GAAe,IAAIjhH,SAAS+C,IAC1B,MAAM6C,EAAOuV,EAAIpY,EAAEo+G,YAAc,GAEjC,GAAoB,SAAhBp+G,EAAEpB,MAAMvB,IAAgB,CAKzB,IAAI63C,EAAa6mD,EAAG1hF,MAAMhB,OAAOxW,EAAM,CACpC2W,OAAQxZ,EAAEwZ,SAEb07B,EAAa6mD,EAAG1hF,MAAMX,aAAaw7B,EAAY,CAC5C17B,OAAQ,eAGQ,iBAAf07B,IACDA,EAAaA,EAAa,MAAQryC,GAErCk9G,EAAS//G,EAAEo+G,aAAelpE,CAC7B,MAAO6qE,EAAS//G,EAAEo+G,aAAev7G,CAAI,IAIxCk9G,EAAoB,WAAI,EAExBE,EAAW3iH,KAAKyiH,EAAS,IAIJpjH,GAAGzD,EAAIijH,mBAAmBl3G,YAE3Bg7G,EAAW9gH,OAAS,GAAG8gH,EAAWxyG,QAEzD,MAAMkwG,EAAgBhhH,GAAGzD,EAAIqjH,cAE7BoB,EAAc9/G,SAAS7E,KAAK4kH,YAAYqC,IACxCjR,EAAWsI,eAAetkD,GAC1Bg8C,EAAWv+F,MAAMwvG,GAEbjnH,KAAK6kH,eAAeoC,GAAatC,EAAcv/G,UAC9Cu/G,EAAcj9G,SAGnBsuG,EAAWruG,gBACd,CAEAu/G,yBAAyBC,EAAiBC,EAAOr7G,GAC9C,MAAM7L,EAAMF,KAAKE,IAOXmnH,GAJY,IAAI5mG,KAAS0mG,GAEOp7G,GAEEq7G,EAAQr7G,GAEhD,IAAI+B,EAAS,GAGb,MAAMw5G,GAAQD,EAAa,OAAUhtE,QAAQ,GACvChB,GAASguE,EAAa,MAAShtE,QAAQ,GACvCd,GAAW8tE,EAAa,KAAOhtE,QAAQ,GACvCktE,GAAWF,EAAa,KAAMhtE,QAAQ,GAqB5C,GAnBiBvsC,EAAby5G,EAAU,EAAY,GACjBA,EAAU,GACPvnH,KAAKoB,MAAM,wCAAyC,CAC1DmmH,IAKc,GAAXhuE,EACGv5C,KAAKoB,MAAM,+CAAgD,CACjEmmH,EAAU,KAGPhuE,EAAU,GACPv5C,KAAKoB,MAAM,sCAAuC,CAACm4C,IACtDF,EAAQ,GACLr5C,KAAKoB,MAAM,sCAAuC,CAACi4C,IACjDr5C,KAAKoB,MAAM,qCAAsC,CAACkmH,IAE5Dx5G,EACDnK,GAAGzD,EAAIqjH,eAAe1+G,SAASiJ,OAC3B,CACJ,MAAMi2E,EAAWpgF,GAAGzD,EAAIw2G,YAAYlpF,KAAK,CAAEk3F,WAAW,IACtD/gH,GAAGzD,EAAIqjH,eAAe1+G,SAAS7E,KAAK4kH,YAAY7gC,GACnD,CACH,CAcAohC,iBACG,MAAMr3G,EAAS,GACT5N,EAAMF,KAAKE,IAiGjB,OA9FuByD,GAAGzD,EAAIkjH,YAC1BhoC,UAAU,CAAE+qC,OAAQ,eAAiB,OACrCr9G,QAAQo3F,GAAoC,QAAvBA,EAASj0F,cAEf,IAAIhI,SAASujH,IAC7B,MAAM7B,EAAgB3lH,KAAKyK,cAE3B,IAAKk7G,EAAe,OAGpB,MAAM//G,EAAQ+/G,EAAc53G,UAAUy5G,EAAUvlH,OAAOyI,SAEvD,IAAK9E,EAAO,OAEZ,MACM6hH,EAAY,CACfrC,YAFcoC,EAAUv7G,WAGxBrG,MAAOA,GAGV,GAAkB,SAAdA,EAAMvB,IAAgB,CACvB,MACMqjH,EADeF,EAAU/7G,gBACW2vE,UACvC,CAAE+qC,OAAQ,oBACV,OAIH,GAAIuB,EAAsB,CAMvB,IAAIlnG,EAEJ,OAPAknG,EAAqBzjH,SAASi8F,IAC3BunB,EAAUvnB,EAASj+F,OAAOkF,MAAQ+4F,EAASj0F,UAAU,IAMhDw7G,EAAU5gD,OACf,IAAK,IACFrmD,EACGinG,EAAUr2D,IACVq2D,EAAUE,UACVF,EAAUp2D,MACVo2D,EAAUE,UACVF,EAAUG,KACb,MACH,IAAK,IACFpnG,EACGinG,EAAUp2D,MACVo2D,EAAUE,UACVF,EAAUr2D,IACVq2D,EAAUE,UACVF,EAAUG,KACb,MACH,IAAK,IACFpnG,EACGinG,EAAUG,KACVH,EAAUE,UACVF,EAAUp2D,MACVo2D,EAAUE,UACVF,EAAUr2D,IACb,MACH,IAAK,IACF5wC,EACGinG,EAAUG,KACVH,EAAUE,UACVF,EAAUr2D,IACVq2D,EAAUE,UACVF,EAAUp2D,MAGnBo2D,EAAUjnG,OAASA,CACtB,CACH,CAEA,GAAI5a,EAAMy9B,aAAc,CACrB,MACMwkF,EADeL,EAAU/7G,gBACQ2vE,UACpC,CAAE+qC,OAAQ,kBACV,OACD,GAGF,GAAI0B,EAAmB,CACpB,MAAMC,EAAcliH,EAAMgB,eAAemH,UACtC85G,EAAkB57G,YAGrBw7G,EAAUK,YAAcA,CAC3B,CACH,CAEAh6G,EAAOxJ,KAAKmjH,EAAU,IAGlB35G,CACV,CAEA82G,YAAY7gC,GACT,IAAI59E,EAAS49E,EAIb,OAFI52E,MAAMC,QAAQ22E,KAAW59E,EAAS49E,EAAS59E,QAExCnG,KAAKoB,MAAM,qBAAsB,CAAC+E,GAC5C,CAOAhB,eAEG,MAAMkoB,EAAKrtB,KAAKqsB,eAOVs5F,EAAgB3lH,KAAKyK,cAE3B,IAAKk7G,EAAe,OAMpB,MAAMzlH,EAAMF,KAAKE,IACXykH,EAAgBhhH,GAAGzD,EAAIqjH,cAE7BoB,EAAcv/G,UAGd,MAAMk7E,EAAQ38E,GAAGzD,EAAIgK,MACf66G,EAAephH,GAAGzD,EAAIojH,aAE5BhjC,EAAMj7E,aAAa,CAAEzD,KAAM,SAC3BmjH,EAAa1/G,aAAa,CACvBzD,KAAM,MACNjB,SAAU,OAIb,MAAMukH,EAAcllH,KAAKmlH,iBAGnB4C,EAAWpC,EAAc39G,QACzBguG,EAAaryG,GAAGzD,EAAIw2G,WACpBsR,EAAehS,EAAWxoF,KAAK,CAAEk3F,WAAW,IAElD,IAAIuD,EAAgB,EAEpB,MAAMC,EAAsB,KACzBD,GAAiB,EACjBlD,EAAa1/G,aAAa,CACvBzD,KAAM,SACNjB,SAAUsnH,EAAgBD,EAAa7hH,QACxC,EAECgiH,EAAa,CAACr7F,EAAQg2B,KACrBkzD,IAEDA,EAAWoS,UAAUt7F,EAAQ,YAC7BkpF,EAAWz2B,aACXy2B,EAAW1kF,WAAWxE,EAAQ,CAC3B23F,QAAS,OACTH,UAAWxhE,IAEdkzD,EAAWx2B,gBAGd0oC,IAEA1/G,QAAQ+G,MAAMuzC,EAAW,EAEtBkgD,EAAUhjG,KAAK+B,GAAG4Y,MAClB0tG,EAAc,CAACv7F,EAAQtP,EAAS,MACnC,GAAIw4F,EAAY,CAEb,MAAMsS,EAAW,GAEjB9qG,EAAOvZ,SAASkE,IACRA,GAAKhB,OAEQ+9G,EAAYp8G,QAC1B9B,GAAMA,EAAEpB,OAASoB,EAAEpB,MAAMkB,YAAcqB,EAAIhB,OAC7C,GAEFmhH,EAAShkH,KAAK6D,EAAIhB,KAAO,KAAOgB,EAAImJ,SAAQ,IAS/C0kG,EAAWz2B,aACXy2B,EAAW1kF,WAAWxE,EAAQ,CAC3B23F,QAAS,UACTH,UAAWgE,EAASh6G,KAAK,WAE5B0nG,EAAWx2B,eACXw2B,EAAWoS,UAAUt7F,EAAQ,gBAChC,GAuCGm4F,EAAiBthH,GAAGzD,EAAImjH,eACxBkF,EAAY,KAGf5D,EAAcj9G,SAGd44E,EAAM34E,eACNo9G,EAAap9G,eAEbs9G,EAAepgH,SAAS,IACxBogH,EAAetgH,OAEf,MAAMo/E,EAAWiyB,EAAWxoF,KAAK,CAAEk3F,WAAW,IAE9CC,EAAc9/G,SAAS7E,KAAK4kH,YAAY7gC,IACxC/jF,KAAKwP,KAAK,OAAO,EAIdi8F,EAASp+E,GAAId,mBACbi8F,EAAoB,GAE1B,IAAI5mF,EACAmqE,EAEAN,GAAQx+E,cACT2U,EAAa6pE,EAAOr/E,WAEpBo8F,EAAkBlkH,QACZqhH,EAAc5+G,QACbC,GAAMA,EAAEq8B,cAAgBr8B,EAAEZ,SAASO,aAAei7B,EAAWhhC,MAIpEmrG,EAAaN,EAAOx+E,aAGvB,MAAMw7F,EAAY,GAElB,IAAIC,GAAW,EA0Ef,IArECV,GAAgB,IAAI/jH,SAAQ,CAAC4F,EAAMkC,KACjC,MAAMgjC,EAAa,CAAC,EAGhBnN,GAAc4mF,EAAkBriH,QAAU4lG,GAC3Cyc,EAAkBvkH,SAAS+C,IACxB,MAAMklG,EAAcllG,EAAEK,WACjBL,EAAEK,WAAWP,WACb86B,EAAWlS,KAEhBqf,EAAW/nC,EAAEF,YAAc,CAAC,EAC5BioC,EAAW/nC,EAAEF,YAAYolG,GACtBH,EAAWG,IAAgBH,EAAWnrG,EAAE,IAIjDskH,EAAYjhH,SAAS+C,IAClB,GAAKA,EAAEpB,OAAOvB,IAEd,OAAQ2C,EAAEpB,MAAMvB,KAIb,IAAK,SACF,GAAmC,iBAAxBwF,EAAK7C,EAAEo+G,aAA2B,CAC1Cr2E,EAAW/nC,EAAEpB,MAAMkB,aAChB+C,EAAK7C,EAAEo+G,cAAgB,IACxBlyG,QAAQ,aAAc,IAExB,KACH,CAEA67B,EAAW/nC,EAAEpB,MAAMkB,YAAc+C,EAAK7C,EAAEo+G,aAExC,MAEH,QACGr2E,EAAW/nC,EAAEpB,MAAMkB,YAAc+C,EAAK7C,EAAEo+G,aAG9C,IAGH,IAAI7/G,GAAU,EACV+iH,EAAW,GAGf,MAAM/gH,EAAYo+G,EAAcn1F,YAAYue,GAjH7B,IAACjiB,EAmHhBvnB,EAAUgC,EAAUmW,OACpB4qG,EAAW/gH,EAAUiW,OAEjBjY,EAEDA,EAAUywG,EAAWt4B,SAAS7zE,EAAKjJ,KAEnC8nH,GAAW,EAEXL,EAAYx+G,EAAKjJ,GAAI0nH,IAGpB/iH,GA/HYunB,EAgIHjjB,EAAKjJ,GA/Hdo1G,IAUDA,EAAW2S,aAAa77F,EAAQ,iBAChCkpF,EAAWz2B,aACXy2B,EAAW1kF,WAAWxE,EAAQ,CAC3B23F,QAAS,GACTH,UAAW,KAEdtO,EAAWx2B,gBAgHXipC,EAAUnkH,KAAK,CAAE1D,GAAIiJ,EAAKjJ,GAAIiJ,KAAMklC,KAChC25E,GAAW,CAAK,KAKrBA,EAwBF,OAVAH,SAEAvlB,EAAQ7xF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,gBAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MACR,sGAUT,MAAMwnH,EAAc,CAAC,EAKf7hG,EAAkBm+F,EAAYp8G,QAChC9B,GAAMA,GAAKA,EAAEpB,OAAOy9B,cAAgBr8B,EAAE8gH,cAG1C,IAAIX,EACA58B,EAAU,EAEd,IAEG,MAAMs+B,EAAa,GAgFnB,IA9EC9hG,GAAmB,IAAI9iB,SAAS+C,IAC9B,MAAM6B,EAAe7B,EAAEpB,MAEjBkjH,EAAgBjgH,EAAajC,eAEnC,IAAKkiH,EAAe,OAEpB,MAAMC,EAAeD,EAAc9gH,QAEnC,IAAK+gH,EAAc,OAEnB,MAAMC,EAAYngH,EAAaxB,WAC1BwB,EAAaxB,WAAWP,WACxB+B,EAAa5D,OAAOyqB,KAGzBk5F,EAAY//G,EAAajI,IAAM,CAAC,EAuBhCioH,EAAWvkH,KApBWa,WACnB,IACG,MAAM8E,QAAa8+G,EAAa14F,QAAQ,CACrCL,MAAO,CAAC,EACR/mB,UAAU,KAEAgB,EAAKJ,MAAQI,GAEjB,IAAIhG,SAASmb,IAGnBwpG,EAAY//G,EAAajI,IACtBwe,EAAIpY,EAAE8gH,YAAYhhH,aACjBsY,EAAI4pG,EAAU,GAIxB,CAFE,MAAO7gH,GACNK,QAAQ+G,MAAMpH,EACjB,GAGa8gH,GAAgB,UAG7Bx5G,QAAQ8R,IAAIsnG,GAGlBJ,EAAUxkH,SAAS4F,IAChB,MAAMklC,EAAallC,EAAKA,KAGxBmsG,EAAWz2B,aACXy2B,EAAW1kF,WAAWznB,EAAKjJ,GAAI,CAC5B6jH,QAAS,cACTH,UAAW,KAEdtO,EAAWx2B,gBAGVz4D,GAAmB,IAAI9iB,SAAS+C,IAE9B,MAAM6B,EAAe7B,EAAEpB,MACjBojH,EAAYngH,EAAaxB,WAC1BwB,EAAaxB,WAAWP,WACxB+B,EAAa5D,OAAOyqB,KACnB7f,EACH+4G,EAAY//G,EAAajI,IACtBmuC,EAAWlmC,EAAa/B,aAGzB+I,IACFw4G,EAAYx+G,EAAKjJ,GAAI,CAAC,CAAEuG,KAAM0B,EAAa/B,cAC3C4hH,GAAW,GAGd35E,EAAWlmC,EAAa/B,YAAc,CAAC,EACvCioC,EAAWlmC,EAAa/B,YAAYkiH,GAAan5G,CAAI,GACtD,KAGA64G,EAUF,OATA1lB,EAAQ7xF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,gBAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MACR,2GAGNmnH,IAMH,MAAMnrD,EAAW,GACX8rD,EAAe,CAACnB,EAAUoB,EAAa7tF,EAAS8rF,IACnD,IAAI33G,SAAQ,CAACC,EAASmH,KACnBykB,EAAQg6B,iBAAiB6zD,GAEHhkH,WACnB,IACG,MAAM2I,QAAei6G,EAASn1C,YAAY,CACvCxgC,MAAO+2E,IAEJC,EAAet7G,EAAO0P,OAG5BnJ,OAAOC,KAAK80G,GAAcnlH,SAASolH,IAChC,MAAM95G,EAAQ65G,EAAaC,GAEvB95G,GACD44G,EACGkB,EACA95G,EAAM+B,SAAW/B,EAAM09F,YAAc19F,EAE3C,IAGH,MAAM+5G,EAAax7G,EAAOjE,KACpB0/G,EAAsB,GAE5Bl1G,OAAOC,KAAKg1G,GAAYrlH,SAASolH,IAC9BE,EAAoBjlH,KACjB,IAAImL,SAAQ,CAACC,EAASmH,KAEI1R,WACpB,UACSm2B,EAAQm6B,cACX6zD,EAAWD,IAlU1Bv8F,EAqUqBu8F,EApUhCrT,IAEDA,EAAW2S,aAAa77F,EAAQ,YAChCkpF,EAAWoS,UAAUt7F,EAAQ,YAC7BkpF,EAAWz2B,aACXy2B,EAAW1kF,WAAWxE,EAAQ,CAC3B23F,QAAS,OACTH,UAAW,KAEdtO,EAAWx2B,gBAGd0oC,IAyT2Bx4G,GAIH,CAHE,MAAOvH,GACNggH,EAAWkB,EAAUlhH,GACrB0O,EAAO,mBACV,CA1UV,IAACiW,CA0US,EAGH08F,EAAgB,IAErB,IAGJ,MAAMC,EAA0BtkH,UAC7B,UACSsK,QAAQ8R,IAAIgoG,GAElBJ,EAAYllH,SAASmb,IAElBmrE,IACIA,EAAU,IAAM,GACjBvqF,KAAKknH,yBACFC,EACAsB,EAAUtiH,OACVokF,EAEN,IAGCA,IAAY68B,IACbmB,IACA5D,EAAcv/G,WAGjBsK,GAOH,CANE,MAAOvH,GAKN0O,EAAO1O,EACV,SAGGshH,GAIT,CAHE,MAAOthH,GACNK,QAAQ+G,MAAMpH,GACd0O,EAAO1O,EACV,GAGHuhH,EAAe,IAGrBjB,EAAUxkH,SAAS4F,IAChBuzD,EAAS94D,KAAK,CAAE1D,GAAIiJ,EAAKjJ,GAAIiJ,KAAMA,EAAKA,MAAO,IAKlD,MAAM8/G,EAAiB,GACjBvC,EAAQhqD,EAASj3D,OAEvB,IAAI4F,EAAQ,EAEZ,KAAOqxD,EAASj3D,QACbwjH,EAAe59G,GAASqxD,EAASjxD,OAAO,EAAG,IAE3CJ,IAIH,MAAM69G,EAAwB,CAC3BC,EACAC,EACAC,EACA3C,IAEA,IAAI33G,SAAQ,CAACC,EAASmH,KAWI1R,WACpB,UACS+jH,EACHnB,EACA8B,EACAE,EACA3C,GAIH,MAAM4C,EAAcF,EAAiBr1G,QAGjCu1G,GAAa7jH,aACRyjH,EACHI,EACAF,EACAC,EACA3C,GAIH13G,GAKN,CAHE,MAAOvH,GAEN0O,EAAO1O,EACV,GAGH+R,EAAgB,IAMtBitG,EAAkB,IAAI1mG,KAEtB,MAAMoL,EAAO89F,EAAel1G,cAGtBm1G,EAAsB/9F,EAAM89F,EAAgB3pH,KAAKU,KAAM0mH,EAWhE,CAVE,MAAOj/G,GAEN66F,EAAQ7xF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,0BAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MAAM,+CAGpBmnH,IACA//G,QAAQ+G,MAAMpH,EACjB,CACH,oBChyDH,MAAMo9F,EAAgC,EAAQ,MAE9C9lG,EAAOC,QAAU,cAAuC,EAGrDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,mBAAmBkhG,EAASngG,KAAMV,EAC/D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAASwwD,SACfqzD,MAAO,CACJl3F,MAAO,EACPkL,KAAM73B,EAAS4wD,UACfzP,IAAKnhD,EAAS6wD,UAEjBizD,MAAO,CACJ5kD,SAAUl/D,EAASywD,SACd,yBAAyBzwD,EAAS2wD,kCAClC,IAERozD,OAAQ/jH,EAASywD,SACZ,CACGyO,SAAU,yBAAyBl/D,EAAS2wD,kCAC5CpxD,OAAQ,IAEX,KACLykH,OAAQ,CACL,CACGC,MAAO,GACP1nH,MAAO,UACPuiG,MAAO,WAEV,CACGmlB,MAAO,GACP1nH,MAAO,WACPuiG,MAAO,YAGbnkG,OAAQqF,EAAS0wD,aAGvB,CAEA3xD,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBCtDH,MAAM+6F,EAAgC,EAAQ,MAE9C9lG,EAAOC,QAAU,cAAsC,EAGpDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,kBAAkBkhG,EAASngG,KAAMV,EAC9D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAAS+wD,QACfmzD,OAAQlkH,EAASgxD,UACjBz0D,MAAO,UACPuiG,MAAO,UACP+kB,MAAO,CACJl3F,MAAO,EACPkL,KAAM73B,EAAS4wD,UACfzP,IAAKnhD,EAAS6wD,UAEjBizD,MAAO,CACJ5kD,SAAUl/D,EAASywD,SACd,yBAAyBzwD,EAAS2wD,kCAClC,IAERozD,OACwB,QAArB/jH,EAAS+wD,SAAsB/wD,EAAS+wD,QAInC/wD,EAASywD,SACT,CACGyO,SAAU,yBAAyBl/D,EAAS2wD,kCAC5CpxD,OAAQ,IAEX,KARAS,EAASywD,SACN,yBAAyBzwD,EAAS2wD,kCAClC,GAOXh2D,OAAQqF,EAASrF,QAGvB,CAEAoE,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBClDH,MAAMq8F,EAA2B,EAAQ,OAEzCpnG,EAAOC,QAAU,cAAmCmnG,EACjDlnG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,eAAekhG,EAASngG,KAAMV,EAC3D,CAEAiF,WAAWpD,EAAIs5D,SACNv7D,MAAMwD,KAAKvB,EAAIs5D,GAErB,MAAMkvD,EAAa5mH,GAAG3D,KAAKE,IAAIC,WACzB6iG,EAAUhjG,KAAK+B,GAAG4Y,MAEpB4vG,GAAYvnB,EAAQt/F,OAAO6mH,EAAYvnB,EAAQp/F,aAEnD,MAAMm9F,EAAW/gG,KAAKU,KAChB2sB,EAAKrtB,KAAKqsB,eAEhB,GAAIgB,EAAI,CACL,MAAMm9F,EAAa,CAChB,eACA,SACA,SACA,SACA,mBAIAn9F,EAAGd,sBACD,iBAAmBc,EAAGd,mBAAmBgmF,SAAW,MAEtDxR,EAASxuE,SAAS,CACfC,QAASnF,EAAGd,mBACZkG,UAAW,eACXC,SAAU,KACPquE,EAASgD,aAAa,IAI/BymB,EAAWvmH,SAASwmH,IACjB1pB,EAASxuE,SAAS,CACfC,QAASnF,EACToF,UAAWg4F,EACX/3F,SAAU,KACPquE,EAASgD,aAAa,GAE1B,GAER,CAEAhD,EAASgD,aACZ,CAEAv5F,SACG1K,MAAM0K,QACT,mBCvDH,MAAM+1F,EAAkB,WAExB9gG,EAAOC,QAAU,cAA4C6gG,EAC1D5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,wBAAwBkhG,EAASngG,KAC3CyT,OAAO6pC,OACJ,CACGwsE,eAAgB,IAEnBxqH,GAGT,CAEAO,GAAGkqH,GACA,MAAMhpB,EAAM7hG,MAAMW,GAAG,CAClB4T,OAAO6pC,OAAO,CAAEt9C,GAAIZ,KAAKE,IAAIwqH,gBAAkBC,GAAoB,CAAC,KAKvE,cAFOhpB,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,SAIN,MAAMu2F,EAAW/gG,KAAKU,KAEtBqgG,EAAS6pB,SAAU,EAEnB5qH,KAAK+jG,YAAYhD,EAAS9rF,OAAO+uF,aAEpC,CAEAD,YAAYG,GACT,MAAM2mB,EAAkBlnH,GAAG3D,KAAKE,IAAIwqH,gBAC9BI,EAAkBnnH,GAAG3D,KAAKE,IAAIC,WAEhC0qH,GAAiBhhH,MAAMghH,EAAgBhhH,KAAKglE,KAAKq1B,GAErDrvF,YAAW,KACRi2G,GAAiB52C,SACjB22C,GAAiB32C,QAAQ,GACzB,IACN,oBCrDH,MAAMqxB,EAAgC,EAAQ,MAE9C9lG,EAAOC,QAAU,cAAuC,EAGrDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,mBAAmBkhG,EAASngG,KAAMV,EAC/D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAAS+xD,SACfmyD,OAAQlkH,EAASgyD,WACjBz1D,MAAO,UACPuiG,MAAO,UACP+kB,MAAO,CACJl3F,MAAO,EACPkL,KAAM73B,EAAS4wD,UACfzP,IAAKnhD,EAAS6wD,UAEjBizD,MAAO,CACJ5kD,SAAUl/D,EAASywD,SACd,yBAAyBzwD,EAAS2wD,kCAClC,IAERozD,OAAQ/jH,EAASywD,SACZ,CACGyO,SAAU,yBAAyBl/D,EAAS2wD,kCAC5CpxD,OAAQ,IAEX,KACL5E,OAAQqF,EAAS0wD,aAGvB,oBCrCH,MAAMyuC,EAAgC,EAAQ,MAE9C9lG,EAAOC,QAAU,cAAsC,EAGpDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,kBAAkBkhG,EAASngG,KAAMV,EAC9D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAASkyD,QACf31D,MAAO,UACPuiG,MAAO,UACPilB,OAAQ/jH,EAASywD,SACZ,CACG71D,MAAOhB,KAAKU,KAAKuU,OAAO7O,SAAStE,WACjCwjE,SAAU,0BAA0Bl/D,EAAS2wD,mCAEhD,KACLg0D,aAAc,0BAA0B3kH,EAASmyD,kCACjDyyD,OAAQ,EACRjqH,OAAQqF,EAASrF,QAGvB,oBC5BH,MAAMw/F,EAAkB,WAExB9gG,EAAOC,QAAU,cAAqC6gG,EACnD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,iBAAiBkhG,EAASngG,KACpCyT,OAAO6pC,OACJ,CACG+sE,QAAS,IAEZ/qH,GAGT,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChBihG,EAAM7hG,MAAMW,GAAG,CAClB,CACGG,GAAIZ,KAAKE,IAAI+qH,QACbvqH,KAAM,WACN0O,MAAO2xF,EAAS1nC,cAChBN,YAAagoC,EAASnoC,mBACtB73D,OAAQf,KAAKoG,SAASrF,OACtB8I,KAAM7J,KAAKkrH,iBACX9oH,GAAI,CACD+oH,YAAa,CAACvqH,EAAIoX,EAAKjM,KACpB/L,KAAKorH,WAAWpzG,EAAI3J,KAAM,IAAIoS,KAAO,EAWxC4qG,cAAgBr8F,IACbhvB,KAAKsrH,cAAct8F,EAAM,MAQrC,cAFO2yE,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMg/F,EAAW/gG,KAAKU,KAEtBqgG,EAASwqB,WAAaxqB,EAASwqB,YAAc,CAAC,EAE9C,MAAMrrH,EAAMF,KAAKE,IACXsrH,EAAW7nH,GAAGzD,EAAI+qH,SAExB,GAAIO,EAAU,CACX,MAAMC,EAAeD,EAASpwC,UAAU,CAAE16E,KAAM,SAE5C+qH,IAEI1qB,EAASwqB,WAAWG,iBACtB3qB,EAASwqB,WAAWG,eACjBD,EAAa5hH,KAAKylB,YACf,kBACA,CAACN,EAAOnlB,EAAM8hH,KACK,WAAZA,GACD3rH,KAAK4rH,cAAc58F,GAAQnlB,GAAQ,CAAC,GAAGwE,KAC1C,KAKZ5K,MAAMC,OAAO+nH,EAAchoH,MAAMG,aAEvC,CAEA,MAAM+vB,EAAK3zB,KAAKqsB,eAEXsH,IAKAotE,EAASwqB,WAAW9+C,SACtBs0B,EAASwqB,WAAW9+C,OAAS94C,EAAGvxB,GAAG,UAAU,IAC1CpC,KAAK6rH,oBAGN9qB,EAASwqB,WAAWt4C,SACtB8tB,EAASwqB,WAAWt4C,OAASt/C,EAAGvxB,GAAG,UAAU,IAC1CpC,KAAK6rH,oBAGN9qB,EAASwqB,WAAWj1G,SACtByqF,EAASwqB,WAAWj1G,OAASqd,EAAGvxB,GAAG,UAAU,IAC1CpC,KAAK6rH,oBAGN9qB,EAASwqB,WAAW14F,WACtBkuE,EAASwqB,WAAW14F,SAAWc,EAAGvxB,GAAG,YAAY,IAC9CpC,KAAK6rH,oBAEd,CAEAX,iBACG,MAAMnqB,EAAW/gG,KAAKU,KAChBizB,EAAK3zB,KAAKqsB,eAEhB,IAAKsH,EAAI,OAAO,KAEhB,MAAMm4F,EAAU/qB,EAAS7nC,eACnB6yD,EAAahrB,EAAS5nC,kBACtB6yD,EAAUjrB,EAAS3nC,eAEzB,IAAK0yD,IAAYC,EAAY,OAAO,KAEpC,MAAME,EAAcH,EAAQhlH,WACtBolH,EAAiBH,EAAWjlH,WAC5BqlH,EAAcH,EAAUA,EAAQllH,WAAa,KAC7CslH,EAAaz4F,EAAGY,UAChB83F,EAAW,GA6BjB,OA3BAD,EAAWnoH,SAAQ,CAACmK,EAAMrC,KACvB,GAAIqC,EAAK89G,GAAiB,CACvB,MAAMrvF,EAAOkkE,EAAS1nC,cAAc7rC,MAAMqP,GAChCA,EAAKl6B,QAAUyL,EAAK69G,KAExBpiH,EAAO,CACVjJ,GAAIwN,EAAKxN,GACT0rH,QAASzvF,EAAOA,EAAKj8B,GAAK,EAC1B+f,KAAMvS,EAAK+9G,GAAe,IAAI1rG,KAAKrS,EAAK+9G,IAAgB,KACxDI,aAAc,IAAI9rG,KAAKrS,EAAiB,YACxCC,KAAMD,EAAK89G,IAGdG,EAAS/nH,KAAKuF,EACjB,KAGHwiH,EAAS1+G,MAAK,SAAUC,EAAGC,GACxB,OAAIs+G,EACM,IAAI1rG,KAAK7S,EAAE+S,MAAMq4B,UAAY,IAAIv4B,KAAK5S,EAAE8S,MAAMq4B,UAGlD,IAAIv4B,KAAK7S,EAAE2+G,cAAcvzE,UACzB,IAAIv4B,KAAK5S,EAAE0+G,cAAcvzE,SAElC,IAEOqzE,CACV,CAEAR,iBACG,MAAM9qB,EAAW/gG,KAAKU,KAElBqgG,EAASyrB,kBAAkBv4G,aAAa8sF,EAASyrB,kBAErDxsH,KAAKghF,OAEL,MAAM9gF,EAAMF,KAAKE,IAEjB6gG,EAASyrB,iBAAmB33G,YAAW,KACpC,MAAM22G,EAAW7nH,GAAGzD,EAAI+qH,SAExB,IAAKO,EAAU,OAGf,MAAMC,EAAeD,EAASpwC,UAAU,CAAE16E,KAAM,SAE5C+qH,GAAcA,EAAazwG,WAG/B,MAAMyxG,EAAczsH,KAAKkrH,iBAErBuB,GACDjB,EAAS/zG,MAAMg1G,GAIdhB,GAAcA,EAAaiB,SAAS,EAAGp+E,OAAOq+E,yBAE3C5rB,EAASyrB,iBAEhBxsH,KAAKohF,OAAO,GACZ,GACN,CAEAgqC,WAAWwB,EAAaC,GACrB7sH,KAAK8sH,SAASF,EAAaC,EAC9B,CAEA1nH,oBAAoB6pB,EAAO49F,GACxB,MAAM7rB,EAAW/gG,KAAKU,KAChBsH,EAAQ+4F,EAAS/4F,QAEvB,IAAKA,EAAO,OAEZ,MAAM+kH,EAAehsB,EAAS5nC,kBAE9B,IAAK4zD,EAAc,OAEnB,MAAMpnH,EAAS,CAAC,EAIhB,OAFAA,EAAOonH,EAAajmH,YAAc8lH,GAAe,SAEpC5kH,EAAMirE,OAAOjkD,EAAOrpB,EACpC,CAEAR,oBAAoB6pB,GACjB,MACMhnB,EADWhI,KAAKU,KACCsH,QAEvB,GAAKA,EAEL,aAAaA,EAAMsO,OAAO0Y,EAC7B,CAEAgyD,OACG,MAAM9gF,EAAMF,KAAKE,IACXsrH,EAAW7nH,GAAGzD,EAAI+qH,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAASpwC,UAAU,CAAE16E,KAAM,SAE3C+qH,IAELA,EAAarmH,UAETqmH,EAAapmH,cACdomH,EAAapmH,aAAa,CAAEzD,KAAM,SACxC,CAEAw/E,QACG,MAAMlhF,EAAMF,KAAKE,IACXsrH,EAAW7nH,GAAGzD,EAAI+qH,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAASpwC,UAAU,CAAE16E,KAAM,SAE3C+qH,IAELA,EAAa/jH,SAET+jH,EAAa9jH,cAAc8jH,EAAa9jH,eAC/C,CAEAxC,eAAeynH,EAAaC,GACzB,IAAKD,EAAa,OAElB,MAAMj5F,EAAK3zB,KAAKqsB,eAEhB,IAAKsH,EAAI,OAET,MAAMotE,EAAW/gG,KAAKU,KAChBsH,EAAQ+4F,EAAS/4F,QACjB+6F,EAAK/iG,KAAK+B,GAEhB,IAAKiG,EAUF,YATA+6F,EAAG36F,OAAOuuB,QACP,CAAC,EACD,CACGrlB,QACG,iEACH8rB,SAAU2jE,EAAS3/F,QAO5B,MAAM6pH,EAAU,CAAC,EACXhiE,EAAY83C,EAAS7nC,eAEvBjQ,IAAWgiE,EAAQhiE,EAAUniD,YAAci8F,EAAGjwF,QAAQlC,YAE1D,MAAMm8G,EAAehsB,EAAS5nC,kBAE1B4zD,IAAc9B,EAAQ8B,EAAajmH,YAAc8lH,GAErD,MAAMztC,EAAY4hB,EAAS3nC,eAEvB+lB,IAAW8rC,EAAQ9rC,EAAUr4E,YAAc+lH,GAG/C,MAAMt+F,EAASoF,EAAGpH,mBAElB,GAAIgC,GAAQtB,YAAa,CACtB,MAAM2U,EAAarT,EAAOnC,WACpBK,EAAYkH,EAAGlH,UAEjBmV,GAAcnV,IACfw+F,EAAQx+F,EAAU3lB,YAAc,CAAC,EACjCmkH,EAAQx+F,EAAU3lB,YAAY86B,EAAWlS,MACtCnB,EAAOtB,YAAYrsB,GAE5B,CAEA,aAAaoH,EAAMykE,OAAOw+C,EAC7B,iEC5SY,MAAM1qB,UAAwB,IAC1C5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMD,GAAU,UAAUkhG,EAASngG,KAAMV,GAEzCF,KAAKU,KAAOqgG,EACZ/gG,KAAKoG,SAAW26F,EAAS36F,SACzBpG,KAAK+B,GAAKg/F,EAASh/F,GACnB/B,KAAKqsB,eAAiB00E,EAAS76E,iBAAmB66E,EAAS10E,eAE3DrsB,KAAKw2B,SAAW,GAShBx2B,KAAKihH,gBAAkB,KAIvBjhH,KAAKgtH,wBAA0B,IAGlC,CAOIviH,oBACD,OAAOzK,KAAK+B,GAAGkW,WAAWjY,KAAKihH,gBAClC,CAMIrP,4BACD,OAAO5xG,KAAK+B,GAAGyqB,mBAAmBxsB,KAAKgtH,wBAC1C,CAEAvsH,GAAGwsH,EAAe,IAEf,MAAMtrB,EAAM,CACT/gG,GAAIZ,KAAKE,IAAIC,UACbO,KAAM,SACNkB,KAAM,QACNC,KAAMorH,GAST,OAFKtrB,EAAI9/F,KAAKsE,SAAQw7F,EAAI5gG,OAAS,IAE5B4gG,CACV,CAEAx8F,WAAWpD,GACR/B,KAAK+B,GAAKA,CACb,CAOAuwG,mBAAmBjmF,GAChBrsB,KAAKgtH,wBAA0B3gG,GAAgBzrB,EAClD,CAEAoE,WAAWC,GACRjF,KAAKihH,gBAAkBh8G,GAAQrE,EAClC,CAcA2xB,SAASgE,GACN,IAAKA,IAAQA,EAAI/D,UAAY+D,EAAI7D,SAAU,OAG3C,MAAM8D,EAAWx2B,KAAKw2B,SACPA,EAAS1tB,QACpBuB,GAAMA,EAAEmoB,UAAY+D,EAAI/D,SAAWnoB,EAAEooB,YAAc8D,EAAI9D,YAI/CtsB,SAETqwB,EAASlyB,KAAK,CACXkuB,QAAS+D,EAAI/D,QACbC,UAAW8D,EAAI9D,UACfC,SAAU6D,EAAI7D,WAIjB6D,EAAI/D,QAAQpwB,GAAGm0B,EAAI9D,UAAW8D,EAAI7D,UAExC,CAMAw6F,cACGltH,KAAKw2B,SAASvyB,SAASsyB,IACpBA,EAAI/D,QAAQkE,eAAeH,EAAI9D,UAAW8D,EAAI7D,SAAS,IAG1D1yB,KAAKw2B,SAAW,EACnB,CAMAhsB,SAEG,GAAIxK,MAAMU,MAAM0F,UAAUu0B,OAAQ,CAE/B,IAAIK,EAAOh7B,KAAK+B,GAAG44B,OAAO36B,KAAKU,KAAK0F,SAASu0B,QACzCK,EAAK50B,SAASm3B,QACfvC,EAAK+1C,cAEX,CAGA,MAAM1jD,EAAKrtB,KAAKqsB,eAEXgB,GAEDA,EAAGT,aAAeS,EAAGpC,eAAeC,YAErCmC,EAAGwF,UACT,oBC1JH,MAAMg0E,EAA2B,EAAQ,OAEzCpnG,EAAOC,QAAU,cAAkD,EAGhEC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,8BAA8BkhG,EAASngG,KACjDyT,OAAO6pC,OACJ,CACG9L,MAAO,IAEVlyC,IAINF,KAAKmtH,aAAe,KACpBntH,KAAKotH,eAAiB,KAGtBptH,KAAKguG,kBAAoBjN,EAASh/F,GAAGgzB,iBAClC,GAAGgsE,EAASngG,sBAGfZ,KAAKqtH,yBACR,CAEA5sH,KACG,MAAM6sH,EAA0B,CAC7B1sH,GAAIZ,KAAKE,IAAIkyC,MACb1xC,KAAM,YACN+B,MAAO,CACJ,CACG2vC,MAAO,OACP1xC,KAAM,SACNmB,KAAM,CACH,CACGnB,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,uBAM3BugG,EAAM7hG,MAAMW,GAAG,CAAC6sH,IAStB,OAPAA,EAAwB7qH,MAAM6B,KAC3B+P,OAAO6pC,OAAO,CAAE9L,MAAO,MAAQpyC,KAAKutH,YAAY9sH,MAChD4T,OAAO6pC,OAAO,CAAE9L,MAAO,QAAUpyC,KAAKwtH,cAAc/sH,cAGhDkhG,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,EAAIs5D,SACNv7D,MAAMwD,KAAKvB,EAAIs5D,SAEf5rD,QAAQ8R,IAAI,CACfvhB,KAAKutH,YAAYjqH,KAAKvB,EAAIs5D,GAC1Br7D,KAAKwtH,cAAclqH,KAAKvB,EAAIs5D,KAG/Br7D,KAAKqtH,0BAEL,MAAMhgG,EAAKrtB,KAAKqsB,eAEhB,GAAIgB,EAAI,CACL,MAAM0zE,EAAW/gG,KAAKU,KAGtBqgG,EAASxuE,SAAS,CACfC,QAASnF,EACToF,UAAW,WACXC,SAAU,IAAM1yB,KAAKytH,gBAGxB1sB,EAASxuE,SAAS,CACfC,QAASnF,EACToF,UAAW,kBACXC,SAAU,IAAM1yB,KAAKytH,gBAGxB1sB,EAASxuE,SAAS,CACfC,QAASnF,EACToF,UAAW,eACXC,SAAU,IAAI1Q,IAAMhiB,KAAKytH,eAAezrG,IAE9C,CAEAhiB,KAAKytH,aACR,CAEAjjH,SACG1K,MAAM0K,SAENxK,KAAKqtH,0BACLrtH,KAAKytH,aACR,CAEIF,kBACD,OAAQvtH,KAAKmtH,aACVntH,KAAKmtH,cACLntH,KAAKU,KACDinB,QACA6F,MAAMla,GAAkB,OAAZA,GAAGnM,OACfhH,WACV,CAEIqtH,oBACD,OAAQxtH,KAAKotH,eACVptH,KAAKotH,gBACLptH,KAAKU,KACDinB,QACA6F,MAAMla,GAAkB,SAAZA,GAAGnM,OACfhH,WACV,CAEAstH,YAAYl+F,GACT,MAAMlC,EAAKrtB,KAAKqsB,eACVnsB,EAAMF,KAAKE,IACXyzG,EAAShwG,GAAGzD,EAAIkyC,QAElB/kB,IACIkC,IAAUA,EAAWlC,EAAGJ,aAIzBsC,GACAlC,EAAGT,aAAeS,EAAGpC,eAAeC,YAClCmC,EAAGT,aAAeS,EAAGpC,eAAeyB,cAQ7B1sB,KAAKguG,kBAAkBzoG,QAAQgqB,IAI5CokF,GAAQv1B,UAAU,MAClBp+E,KAAKutH,aAAa/iH,aAElBmpG,GAAQv1B,UAAU,QAClBp+E,KAAKwtH,eAAehjH,YAdjBmpG,GAAQv1B,UAAU,OAgB3B,CAEAivC,0BACG,MAAMhgG,EAAKrtB,KAAKqsB,eACV2hF,EAAoBhuG,KAAKguG,kBAE3B3gF,GAAIjB,WAAY4hF,EAAkBh5E,WAAW3H,EAAGjB,WAAWrlB,UAC1DinG,EAAkBh5E,WAAW,IAElCg5E,EAAkBnpG,SACf7E,KAAKoG,SAAS4jB,kBACXhqB,KAAKU,KAAKf,YAAYwlC,gBAAgBnb,iBAE/C,oBCnKH,MAAMu2E,EAAkB,WAExB9gG,EAAOC,QAAU,cAAuC6gG,EACrD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,mBAAmBkhG,EAASngG,KAAMV,GAE5DF,KAAKmC,QAAU,KAEfnC,KAAK8rG,eAAiB,CAEtB,EAIA9rG,KAAK0tH,iBAAmB,CAExB,EAIA1tH,KAAK2tH,mBAAsB1mD,IACxB85B,EAASN,WAAWx5B,EAAO,CAEjC,CAEAxmE,GAAGwsH,GAEA,MAAMtlG,EAAQ3nB,KAAKU,KAAKy5D,sBAClByzD,EAAW5tH,KAAK6tH,YAAYlmG,GAC5Bg6E,EAAM7hG,MAAMW,GAAGwsH,GAAgBW,GAIrC,cAFOjsB,EAAI//F,KAEJ+/F,CACV,CAGAx8F,WAAWpD,EAAIs5D,EAAc,EAAGl5D,EAAU,CAAC,SAClCrC,MAAMwD,KAAKvB,GAEjB/B,KAAKmC,QAAUA,EAEf,MAAMmf,EAAW,GAUjB3d,GAAG3D,KAAKE,IAAIC,YAAYsE,OAAO,MAAO,eAAe42D,KAErD,MAAMywC,EAAiB9rG,KAAK8rG,eAG5B,IAAK,MAAMznG,KAAOynG,IAGXA,EAAeznG,KACfrE,KAAKU,KAAKinB,OAAOrU,GAAMA,EAAE1S,KAAOyD,IAAK8B,UAKrCk1D,EACD/5C,EAAShd,KAAKwnG,EAAeznG,GAAKf,KAAKvB,EAAIs5D,EAAal5D,IAK3DwB,GAAG3D,KAAK0tH,iBAAiBrpH,IAAMM,cAG5B8K,QAAQ8R,IAAID,EACrB,CAEAusG,YAAYlmG,GACT,MAAM9lB,EAAO,GACPisH,EAAe,CAAC,EAEtB,IAAIC,EACAC,EAEJ,MAAM5nH,EAAWpG,KAAKoG,SAChBklF,EAAkBtrF,KAAKU,KAAKf,YAAYwlC,gBAwF9C,OAtFAxd,EAAM1jB,SAASqP,IAGZ,IAAInT,EAEJ,IACGA,EAAYmT,EAAEnT,YAEdmT,EAAEmkG,mBAAmB,aAOxB,CANE,MAAOtvG,GACNhI,EAAYmT,EAAEnT,UAAUH,KAAK+B,GAAG85B,MAEhC,MAAMp7B,EAAKN,EAAUM,GAErBN,EAAUM,IAAK,IAAOA,GAAIi0B,KAAKv0B,EAClC,CAcA,GAZAH,KAAK8rG,eAAex4F,EAAE1S,IAAMT,EAYR,MAAhBmT,EAAE3S,SAASy5D,GAAa9mD,EAAE3S,SAASy5D,IAAM2zD,EAAa,CACvDA,EAAcz6G,EAAE3S,SAASy5D,GAAKv4D,EAAKsE,OACnC6nH,EAAc,EAEd,MAAMC,EAAS,CACZ9sH,KAAM,IAIH+sH,EAAY9nH,EAAS4zD,SAAWsxB,EAAgBtxB,QAEtD,IAAK,IAAIzmD,EAAI,EAAGA,EAAI26G,EAAW36G,IAC5B06G,EAAO9sH,KAAKmD,KAAK,CACd21D,QAAS7zD,EAAS6zD,UAAU1mD,GACvBoS,SAASvf,EAAS6zD,QAAQ1mD,IAC1B+3E,EAAgBrxB,UAG3Bp4D,EAAKyC,KAAK2pH,EACb,CAGA,MAAME,EAAUtsH,EAAKsE,OAAS,EACxBioH,EAASvsH,EAAKssH,GACdE,EAAS/6G,EAAE3S,SAASuM,GAAK,EACzBohH,EAAS,GAAGH,KAAWE,IAE7B,IAAIE,EAAU,EAEVT,EAAaQ,IACd9lH,QAAQ+G,MACL,aAAapP,GAAWD,KAAKC,uCAAuC2tH,EAAaQ,GAAQpuH,KAAKC,wCAGpG2tH,EAAaQ,GAAUnuH,EAEnBiuH,EAAOjtH,KAAKktH,IAASp0D,UACtBs0D,EAAUH,EAAOjtH,KAAKktH,GAAQp0D,SAEjC,MAAM0nC,EAAMxhG,EAAUM,KAEtBT,KAAK0tH,iBAAiBp6G,EAAE1S,IAAM+gG,EAAI/gG,GAClC+gG,EAAI1nC,QAAUs0D,EAGdH,EAAOjtH,KAAKktH,GAAU1sB,EAGtB3hG,KAAKuyB,SAAS,CACXC,QAASlf,EACTmf,UAAW,aACXC,SAAU1yB,KAAK2tH,qBAGlBK,GAAa,IAGTnsH,CACV,CAEA2I,SACG1K,MAAM0K,SAGN6J,OAAO1O,OAAO3F,KAAK8rG,gBAAgB7nG,SAASiS,IACzCA,EAAI1L,UAAU,GAEpB,oBCxLH,MAAM+1F,EAAkB,WAClByI,EAAwB,EAAQ,OAChCpF,EACH,WAEHnkG,EAAOC,QAAU,cAAsC6gG,EACpD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,kBAAkBkhG,EAASngG,KACrCyT,OAAO6pC,OACJ,CACGswE,WAAY,GACZC,aAAc,IAEjBvuH,IAINF,KAAKyhG,SAAW,IACnB,CAEAhhG,KACG,MAAMP,EAAMF,KAAKE,IACXyhG,EAAM7hG,MAAMW,GAAG,CAClB,CACGG,GAAIV,EAAIsuH,WACR9tH,KAAM,aACNgB,OAAQ,IACRD,KAAM,CACHb,GAAIV,EAAIuuH,aACR/tH,KAAM,aACNguH,SAAU,GACVC,SAAU,GACV/sH,KAAM,QACNT,KAAM,IAETiB,GAAI,CACDwsH,cAAezpH,UACZ,MAAMwrB,EAAMhtB,GAAGzD,EAAIsuH,YAAYhU,uBAEzBx6G,KAAK0B,OAAOivB,EAAI,MAQlC,cAFOgxE,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IACXmtB,EAAKrtB,KAAKqsB,eAEhB,IAAKgB,EAAI,OAET,MAAMwhG,EAAWlrH,GAAGzD,EAAIuuH,cAGxBzuH,KAAKyhG,SAAWzhG,KAAK0hG,eAAevhG,YACpCH,KAAKyhG,SAASn+F,KAAK,CAChB5C,KAAMV,KAAKU,KACX2rB,eAAgBgB,IASnBA,EAAGuhD,iBAAiBigD,GACpBxhG,EAAGjrB,GAAG,oBAAoB,KACvBpC,KAAKghF,MAAM,IAEd3zD,EAAGjrB,GAAG,mBAAmB,KACtBpC,KAAKohF,OAAO,IAEf/zD,EAAGjrB,GAAG,YAAY,KACfpC,KAAK8uH,YACL9uH,KAAK+uH,YAAY,IAEpB1hG,EAAGjrB,GAAG,UAAU,KACbpC,KAAK8uH,YACL9uH,KAAK+uH,YAAY,IAEpB1hG,EAAGjrB,GAAG,UAAU,KACbpC,KAAK8uH,YACL9uH,KAAK+uH,YAAY,IAEpB1hG,EAAGjrB,GAAG,UAAU,KACbpC,KAAK8uH,YACL9uH,KAAK+uH,YAAY,GAYvB,CAEAvkH,SACG1K,MAAM0K,SAEN,MAAM6iB,EAAKrtB,KAAKqsB,eAEXgB,GAEDA,EAAGT,aAAeS,EAAGpC,eAAe0B,aAAa3sB,KAAK+uH,YAC7D,CAEIzwD,gBACD,OAAOt+D,KAAKgvH,YAAc,CAC7B,CAEI1wD,cAAU3tC,GACX3wB,KAAKgvH,WAAar+F,CACrB,CAEAqwD,OACG,MAAM9gF,EAAMF,KAAKE,IACX+uH,EAAStrH,GAAGzD,EAAIuuH,cAChBS,EAASvrH,GAAGzD,EAAIsuH,YAGtB,IAAKU,IAAWD,EAAQ,OAExBA,EAAO7pH,UAEP,MAAM49F,EAAUhjG,KAAK+B,GAAG4Y,MAEnBu0G,EAAO7pH,cAAc29F,EAAQt/F,OAAOwrH,EAAQlsB,EAAQp/F,aAEzDsrH,EAAO7pH,aAAa,CAAEzD,KAAM,QAC/B,CAEAw/E,QACG,MAAMlhF,EAAMF,KAAKE,IACX+uH,EAAStrH,GAAGzD,EAAIuuH,cAChBS,EAASvrH,GAAGzD,EAAIsuH,YAGtB,IAAKU,IAAWD,EAAQ,OAExBA,EAAOvnH,SAEP,MAAM3F,EAAK/B,KAAK+B,GAEZmtH,IAAWA,EAAOvnH,cACnB5F,EAAG4Y,MAAMjX,OAAOwrH,EAAQntH,EAAG4Y,MAAM/W,aAEpCsrH,EAAOvnH,cACV,CAEAonH,aACG,MAAM7uH,EAAMF,KAAKE,IACXg2D,EAAWl2D,KAAKoG,SAAS8vD,SACzBF,EAAch2D,KAAKoG,SAAS4vD,YAC5Bm5D,EAAU,GACV9hG,EAAKrtB,KAAKqsB,eAEhB,IAAKgB,EAGF,YAFArtB,KAAKohF,QAKR,MAAM6tC,EAAStrH,GAAGzD,EAAIuuH,eAAiB9qH,GAAGzD,EAAIC,WAE9C,IAAK8uH,GAAUpsE,MAAMosE,EAAOG,QAGzB,YAFApvH,KAAKohF,QAKR,MAAM2f,EAAW/gG,KAAKU,KAChBm9D,EAASl4C,SAAS3lB,KAAKoG,SAASy3D,QAChCwxD,EAAc9oH,KAAKC,OACrByoH,EAAOG,OAAS,GAAc,GAATvxD,GAAeA,GAGlCh8D,EAAOwrB,EAAGkH,UAGhB,GAAI06F,EAAOK,gBAAkBztH,EAAKsE,OAG/B,YAFAnG,KAAKohF,QAKR6tC,EAAOK,cAAgBztH,EAAKsE,OAG5BnG,KAAKuvH,UAAYN,EAAOnkH,cAAgBmkH,EAAOnkH,gBAAgB3E,OAAS,EAExE,IAAIqpH,EAAU3tH,EAAKsE,OAEfknB,EAAGjnB,SAAS8jB,SAA8B,IAAnBlqB,KAAKuvH,UAAiBC,EAAU3tH,EAAKsE,OACvDtE,EAAKsE,OAASnG,KAAKuvH,UAAY,KAAIC,EAAUxvH,KAAKuvH,UAAY,IAEvE,IAAK,IAAIh8G,EAAIvT,KAAKuvH,UAAWh8G,EAAIi8G,EAASj8G,IAAK,CAE5C,MAAMwrD,EAAY,IAAIiqC,EAAsBjI,EAAUl/F,EAAK0R,GAAG3S,IACxD+gG,EAAM5iC,EAAUt+D,KAGtBkhG,EAAI//F,KAAO,QACX+/F,EAAIzgG,IAAM,kBAEN80D,GAAeE,KAChByrC,EAAIzgG,KAAO,8BAA8BW,EAAK0R,GAAG3S,KAE7Co1D,IAAa2rC,EAAIzgG,KAAO,mBAExBg1D,IAAUyrC,EAAIzgG,KAAO,kBAG5BygG,EAAI+sB,SAAW,GACf/sB,EAAIgtB,SAAW,EACfhtB,EAAIt4B,SAAWgmD,EAAc,GAC7B1tB,EAAI1hB,SAAWovC,EAEXJ,EAAOhkH,SACRgkH,EAAOhkH,QAAQ02F,GAAM,GACrB5iC,EAAUz7D,KAAK,KAAM,GACrBuR,WAAWkqD,EAAUt5B,YAAY5jC,EAAK0R,IAAK,IACvC47G,EAAQ7qH,KAAKq9F,EACvB,CAEA,GAAIwtB,EAAQhpH,OAAQ,CACjB,MAAMspH,EAAa,CAChB7uH,GAAIV,EAAIuuH,aACR/tH,KAAM,aACNguH,SAAU,GACVC,SAAU,GACV/sH,KAAM,QACNT,KAAMguH,GAGTnvH,KAAK+B,GAAG4Y,MAAMla,GAAGgvH,EAAY9rH,GAAGzD,EAAIsuH,YAAa7qH,GAAGzD,EAAIuuH,eAExD,IAAK,IAAI1qF,EAAI/jC,KAAKuvH,UAAWxrF,EAAIyrF,EAASzrF,IAAK,CAC5C,MAAMg7B,EAAY,IAAIiqC,EAAsBjI,EAAUl/F,EAAKkiC,GAAGnjC,IAE9Dm+D,EAAUz7D,KAAK,KAAM,GACrBuR,WAAWkqD,EAAUt5B,YAAY5jC,EAAKkiC,IAAK,EAC9C,CACH,CAEIpgC,GAAGzD,EAAIsuH,cACR7qH,GAAGzD,EAAIsuH,YAAY9B,SAAS,EAAG1sH,KAAKs+D,YAEhCtI,GAAeE,KAChB+4D,EAAOvhH,MAAMu1F,QAAW54F,IACrB,IAAIqlH,GAAU,EACVC,EAAOtlH,EAAEslD,MAAQ,GAQrB,GALKggE,EAAKxpH,SACPwpH,EAAKrrH,KAAK+F,EAAEm/C,QACZmmE,EAAKrrH,KAAK+F,EAAEm/C,OAAOmkC,aAGlBz3B,EACD,IAAK,IAAIl0C,KAAK2tG,EACX,GACG3tG,EAAEyqC,WACFzqC,EAAEyqC,UAAUp/C,QAAQ,+BAAiC,EACtD,CACCqiH,GAAU,EACV1tG,EAAE2rE,WAAWA,WAAW5G,UAAU9iF,SAASV,IACxC,GAAIA,EAAE8J,QAAQ,eAAiB,EAAG,CAE/B,MAAM+gB,EAAS7qB,EAAE2P,QAAQ,aAAc,IACvClT,KAAKyhG,SAAShB,WAAWvqC,EAAU9nC,EAEtC,KAEH,KACH,CAIN,GAAI4nC,IAAgB05D,EACjB,IAAK,IAAI1tG,KAAK2tG,EACX,GACG3tG,EAAEyqC,WACFzqC,EAAEyqC,UAAUp/C,QAAQ,wBAA0B,EAC/C,CACC2U,EAAE2rE,WAAWA,WAAW5G,UAAU9iF,SAASV,IACxC,GAAIA,EAAE8J,QAAQ,eAAiB,EAAG,CAE/B,MAAM+gB,EAAS7qB,EAAE2P,QAAQ,aAAc,IACvClT,KAAKyhG,SAAShB,WAAWzqC,EAAa5nC,EAEzC,KAGH,KACH,CAEN,IAMT,MAAMjnB,EAAO45F,EAAS55F,KAAK+L,QAAQ,YAAa,IAEhD+7G,EAAOvhH,MAAM83E,aACV,UACA,sBAAsBr+E,KAAQ45F,EAASngG,MAG1CquH,EAAOnkH,gBAAgB7G,SAAQ,CAACktF,EAAO59E,KACpC,MAAM1D,EAAOhO,EAAK0R,EAAIvT,KAAKuvH,WAAiB,KACtC7uH,EAAOywF,EAAMzjF,MAEnBhN,EACI6wE,cAAc,8BACbiU,aACC,UACA,iBAAiBr+E,KAAQ0I,KAAQkxF,EAASngG,MAEhDF,EACI6wE,cAAc,gCACbiU,aACC,UACA,wBAAwBr+E,KAAQ0I,KAAQkxF,EAASngG,KACnD,IAGPZ,KAAKohF,OACR,CAEA0tC,YACG,MAAM5uH,EAAMF,KAAKE,IACXuvH,EAAa,CAChB7uH,GAAIV,EAAIuuH,aACR/tH,KAAM,aACNkB,KAAM,QACNY,QAAS,GACTtB,IAAK,CAAE0uH,WAAY,sBACnBzuH,KAAM,IAGTnB,KAAK+B,GAAG4Y,MAAMla,GAAGgvH,EAAY9rH,GAAGzD,EAAIsuH,YAAa7qH,GAAGzD,EAAIuuH,cAC3D,CASAtpH,aAAawrB,GACV,MAAMzwB,EAAMF,KAAKE,IACX+uH,EAAStrH,GAAGzD,EAAIuuH,cAChBS,EAASvrH,GAAGzD,EAAIsuH,YAEhBp0D,EAAIzpC,EAAIypC,EAGd,GAFgB60D,EAAOziB,QAAU0iB,EAAO1iB,QAE1BpyC,GAJG,GAIY,CAC1B,GAAIp6D,KAAK6vH,cAAe,OAExB7vH,KAAKs+D,UAAYlE,EAEjB,MAAM/sC,EAAKrtB,KAAKqsB,eAEhB,IAAKgB,EAAI,OAET,GAAI4hG,EAAOnkH,gBAAgB3E,QAAUknB,EAAGoH,WAAY,OAGpDz0B,KAAKghF,aAEC3zD,EAAGwF,SAASo8F,EAAOnkH,gBAAgB3E,QAAU,GAEnDnG,KAAK6vH,cAAgBh7G,YAAW,KAC7B7U,KAAK6vH,cAAgB,IAAI,GACzB,KACN,CACH,CAEInuB,qBACD,OAAQ1hG,KAAK2jG,iBACV3jG,KAAK2jG,kBAAoB,IAAIC,CACnC,oBC9YH,MAAMiG,EAA4B,EAAQ,OAE1CpqG,EAAOC,QAAU,cAA4C,EAG1DC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,wBAAwBkhG,EAASngG,KAAMV,EACpE,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QAEvB,OAAO9F,MAAMW,GAAG,CACb2B,GAAI,CAED+4E,cAAe,KACZ,MAAM2Q,EAAS,mBAAmBlmF,GAAOkB,cACtClB,GAAOhF,MACNmgG,EAAStlC,yBAAyB76D,IAAMmgG,EAAS9rF,OAAOrU,KAE5D+C,GAAG3D,KAAKE,IAAI4vH,aAAapiH,MAAM83E,aAAa,UAAWsG,EAAO,IAI1E,CAEAjnF,SAASqR,GACN,IAAIssE,EAAW,GAIZA,EADCtsE,GAAOnC,KAAK0D,MAAMvB,GAEhB,8DAEU,wDAEhBpW,MAAM+E,SAAS29E,EAClB,oBCtCH,MAAM1yD,EAAgB,EAAQ,OACxB+2E,EAA2B,EAAQ,OAEzCpnG,EAAOC,QAAU,cAAoCmnG,EAClDlnG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,gBAAgBkhG,EAASngG,KAAMV,EAC5D,CAEAO,KAMG,MAAO,CACJmB,KAAM,OACND,YAAY,EACZE,KAAM,CACH,CACGJ,KAVC3B,MAAMW,OAcnB,CAEA+J,SACG,MAAMu2F,EAAW/gG,KAAKU,KAEtB,IACG,MAAMorF,EAAS,UAAUiV,EAAS55F,MAAMuhB,MAAM,KAAK,MAAMq4E,EAASngG,KAElE+C,GAAG3D,KAAKE,IAAIC,WAAWuN,MAAM83E,aAAa,UAAWsG,EAGxD,CAFE,MAAOzhF,GACN7B,QAAQC,KAAK,0BAA2B4B,EAC3C,CAGA,MAAMspB,EAAK3zB,KAAKqsB,eAEhB,GAAIsH,EAAI,CACL,MAAMpE,EAAWoE,EAAG1G,YAEhBsC,GAAUvvB,KAAKylC,YAAYlW,GAE/BvvB,KAAKuyB,SAAS,CACXC,QAASmB,EACTlB,UAAW,eACXC,SAAU,IAAI1Q,IAAMhiB,KAAKylC,eAAezjB,KAG3ChiB,KAAKuyB,SAAS,CACXC,QAASmB,EACTlB,UAAW,SACXC,SAAWq9F,IACWp8F,EAAG1G,aAENrsB,KAAOmvH,EAAWnvH,IAC/BZ,KAAKylC,YAAYsqF,EAAW,IAIrC/vH,KAAKuyB,SAAS,CACXC,QAASmB,EACTlB,UAAW,SACXC,SAAWs9F,IACWr8F,EAAG1G,aAENrsB,KAAOovH,EAAWpvH,IAC/BZ,KAAKylC,YAAYuqF,EAAW,GAGxC,CAEAlwH,MAAM0K,QACT,CAEAi7B,YAAYhX,EAAU,CAAC,IACLzuB,KAAKU,KAAKinB,SAAW,IAAIha,MAAK,CAACC,EAAGC,IACzCD,GAAGhI,OAAUiI,GAAGjI,MAID,YAAhBgI,EAAEhI,MAAMvB,KAAqC,cAAhBwJ,EAAEjI,MAAMvB,KAC9B,EACc,cAAhBuJ,EAAEhI,MAAMvB,KAAuC,YAAhBwJ,EAAEjI,MAAMvB,IACtC,EAEH,EAT4B,IAYhCJ,SAAS+C,IACZ,IAAIkP,EAEJ,GAAIlP,EAAEpB,MAAO,CACV,MAAMA,EAAQoB,EAAEpB,QAEhB,IAAKA,EAAO,OAGZ,OAAQA,EAAMvB,KACX,IAAK,gBA+DL,IAAK,OACF6R,EAAMtQ,EAAMk1C,mBAAmBrsB,GAE/B,MA7DH,IAAK,OAGF,GAFAvY,EAAMuY,IAAU7oB,EAAMkB,aAEjBoP,EAAK,CACPA,EAAM,GAEN,KACH,CAEA,GAAkC,IAA9BtQ,EAAMQ,SAASk7C,WAAkB,CAClC,IAAI2uE,EAAQ,GAMZ,GAJArqH,EAAMQ,SAASjE,QAAQ8B,SAAS9B,IACzBA,EAAQvB,KAAOsV,IAAK+5G,EAAQ9tH,EAAQkM,KAAI,IAG3CzI,EAAMQ,SAASm7C,UAAW,CAC3B,IAAI8tC,EAAQ,SACR1E,EAAiB,GAErB/kF,EAAMQ,SAASjE,QAAQ8B,SAAS2iB,IACzBA,EAAEvY,OAAS4hH,IACZ5gC,EAAQzoE,EAAEg7B,IACV+oC,EAAiB,iBACpB,IAGHslC,EAAQ,uCAAuCtlC,+BAA4C0E,wBAA4B4gC,iBAC1H,CAEA/5G,EAAM+5G,CACT,KAAO,CACJ,MAAMlkC,EAAQ,GAEd,IAAIkkC,EAAQ,GAEZ/5G,EAAIjS,SAAStB,IACV,IAAIgoF,EAAiB,GACjBC,EAAY,GAEZhlF,EAAMQ,SAASm7C,WAAa5+C,EAAMi/C,MACnC+oC,EAAiB,iBACjBC,EAAY,eAAejoF,EAAMi/C,QAGpCh8C,EAAMQ,SAASjE,QAAQ8B,SAAS9B,IACzBA,EAAQvB,KAAO+B,EAAM/B,KAAIqvH,EAAQ9tH,EAAQkM,KAAI,IAEpD09E,EAAMznF,KACH,uCAAuCqmF,aAA0BC,gBAAwBjoF,EAAM/B,aAAaqvH,kBAC9G,IAGJ/5G,EAAM61E,EAAMz9E,KAAK,GACpB,CAEA,MAOH,IAAK,OAGF,GAFA4H,EAAMuY,IAAU7oB,EAAMkB,aAEjBoP,EAAK,CACPA,EAAM,GAEN,KACH,CAEA,MAEH,IAAK,UACF,GAAIuY,EAAS,CACV,MAAMkF,EAAK3zB,KAAKqsB,eACVkQ,EAAK5I,EAAKA,EAAGvH,WAAa,KAC1B8jG,KACF3zF,GAAMA,aAAczM,GAExB5Z,EAAMtQ,EAAM4a,OAAOiO,EAASyhG,EAC/B,CAEA,MAEH,QACGh6G,EAAMtQ,EAAM4a,OAAOiO,GAG5B,CAGA,MAAMo9E,EAAa7kG,EAAE7G,UAAU,KAAMH,KAAKE,IAAI4vH,YAI9CjkB,GAAYhnG,WAAWqR,GACvB21F,GAAY7hC,cAAcv7C,EAAQ,GAExC,oBC7MH,MAAMo7E,EAA4B,EAAQ,OAE1CpqG,EAAOC,QAAU,cAA2C,EAGzDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,uBAAuBkhG,EAASngG,KAAMV,EACnE,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACb2B,GAAI,CAED+4E,cAAe,KACZ,MAGM2Q,EAAS,oBAFZiV,EAASn7F,OAAOghH,GAAQA,EAAIhmH,KAAOwF,EAASsE,WACvC5D,YAAc,MAEnBV,EAASsE,WACRq2F,EAAStlC,yBAAyB76D,IAAMmgG,EAAS9rF,OAAOrU,KAE5D+C,GAAG3D,KAAKE,IAAI4vH,aAAapiH,MAAM83E,aAAa,UAAWsG,EAAO,IAI1E,CAEAjnF,SAASqR,GACN,MAAMzQ,EAAO,GAET0H,MAAMC,QAAQ8I,GACfA,EAAIjS,SAASmqB,IACV3oB,EAAKnB,KACF,wCAAwC8pB,EAAO/f,cACjD,IAEF5I,EAAKnB,KAAK,wCAAwC4R,EAAI7H,eAE3DvO,MAAM+E,SAASY,EAAK6I,KAAK,IAC5B,mBC1CH,MAAMu7F,EAA4B,EAAQ,OAE1CpqG,EAAOC,QAAU,cAA0C,EAGxDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,sBAAsBkhG,EAASngG,KAAMV,EAClE,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QACJm7F,EAASxiC,kBAE5B,IAAI+G,EAAW1/D,EAAQA,EAAMouE,eAAe1O,SAAS,CAAC,GAAK,GAE3D,OAAOxlE,MAAMW,GAAG,CACb0jH,UAAW,GACXpjH,OAAQ,GACRukE,WACAljE,GAAI,CAED+4E,cAAe,KACZ,MAAM2Q,EAAS,iBAAiBlmF,GAAOkB,cACpClB,GAAOhF,MACNmgG,EAAStlC,yBAAyB76D,IAAMmgG,EAAS9rF,OAAOrU,KAE5D+C,GAAG3D,KAAKE,IAAI4vH,aAAapiH,MAAM83E,aAAa,UAAWsG,EAAO,IAI1E,CAEAthF,SACG1K,MAAM0K,OAEN,MAAMu2F,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QAEvB,IAAKA,EAAO,OAEZ,MAAMuqH,EAAcxsH,GAAG3D,KAAKE,IAAI4vH,YAEhC,IAAKK,EAAa,OAElB,MACG1hG,EADesyE,EAASxiC,kBACJlyC,eAAeY,aAAe,CAAC,EACnD1qB,EAAO4tH,EAAYziH,MAEtB9H,EAAM8uE,cAAcjmD,EAAS,KAAMlsB,EAAM,CACtC6lD,UAAU,IAIb7lD,EAAKkrF,uBAAuB,kBAAkB,GAAGvF,gBAAgB,QACpE,CAEArjF,SAASqR,GACN,MAAMtQ,EAAQ5F,KAAKU,KAAKkF,QAExB,IAAKA,EAAO,OAEZ,MAAMuqH,EAAcxsH,GAAG3D,KAAKE,IAAI4vH,YAEhC,IAAKK,EAAa,OAElB,MAAM1hG,EAAU,CAAC,EAEjBA,EAAQ7oB,EAAMkB,YAAcoP,EAE5BtQ,EAAMf,SAASsrH,EAAa1hG,EAC/B,oBCvEH,MAAMo7E,EAA4B,EAAQ,OAE1CpqG,EAAOC,QAAU,cAAyC,EAGvDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,qBAAqBkhG,EAASngG,KAAMV,EACjE,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QACjB+7F,EAAM,CACTv/F,GAAI,CAED+4E,cAAe,KACZ,MAAM2Q,EAAS,gBAAgBlmF,GAAOkB,cAAclB,GAAOhF,MACxDmgG,EAAStlC,yBAAyB76D,IAAMmgG,EAAS9rF,OAAOrU,KAG3D+C,GAAG3D,KAAKE,IAAI4vH,aAAapiH,MAAM83E,aAAa,UAAWsG,EAAO,IAIjE1lF,EAAWpG,KAAKoG,SAItB,OAFIA,EAASrF,SAAQ4gG,EAAI5gG,OAASqF,EAASrF,QAEpCjB,MAAMW,GAAGkhG,EACnB,CAEA98F,SAASqR,GACN,MAAMtQ,EAAQ5F,KAAKU,KAAKkF,QAExB,IAAKA,EAGF,YAFA9F,MAAM+E,SAAS,IAKlB,MAAMurH,EAAiBl6G,GAAOtQ,EAAMQ,SAAS+6C,gBAE7C,IAAKivE,EAGF,YAFAtwH,MAAM+E,SAAS,IAKlB,MAAMwrH,EAAWzqH,EAAM4zD,SAAS42D,GAC1BhqH,EAAWpG,KAAKoG,SAOhByiF,EAAgB,CACnB,oCACA,8GAA8GwnC,gBARnGjqH,EAASpF,OAAS4E,EAAMQ,SAAS26C,YAAc,kBAC9C36C,EAASrF,OACnB,GAAGqF,EAASrF,WACZ6E,EAAMQ,SAAS66C,YACf,GAAGr7C,EAAMQ,SAAS66C,gBAClB,+BAIF,YAAYovE,uFACZ,gBACD/hH,KAAK,IAEPxO,MAAM+E,SAASgkF,EAClB,oBChEH,MAAM0X,EAAkB,WAExB9gG,EAAOC,QAAU,cAAwC6gG,EACtD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,oBAAoBkhG,EAASngG,KACvCyT,OAAO6pC,OACJ,CACG4xE,WAAY,GACZQ,gBAAiB,IAEpBpwH,GAGT,CAEAO,GAAG8vH,EAAwB,CAAC,GACzB,MAAMxvB,EAAW/gG,KAAKU,KAGhB0F,EAAW26F,EAASxiC,mBAAmBn4D,UAAY,CAAC,EACpDR,EAAQm7F,EAASn7F,QAEjB4qH,EAAuC,OAA1BpqH,EAASuxD,cAEtBklD,EAAQ,GAEd,GAAIz2G,EAASuvD,UAAW,CACrB,MAAM86D,EAAgBD,EACjB,iHACA,yGAECE,EAAU,CACb9vH,GAAIZ,KAAKE,IAAIowH,gBACb5vH,KAAM,WACNiB,YAAY,EACZZ,OAAQ,GACRukE,SAAUmrD,EACV5mH,KAAM,CAAEzI,MAAOwE,GAAOxE,OAAS,KAE7BovH,IAAYE,EAAQ1vH,MAAQoF,EAAStE,WAAa,IACvD+6G,EAAMv4G,KAAKosH,EACd,CAEA,IAAI3vH,EAC+B,IAA/B6E,GAAOQ,UAAU46C,YAClBjgD,EAAS4kB,SAAS/f,EAAMQ,SAAS66C,cAAgBlgD,GAEpD,MAAM4vH,EAAUt8G,OAAO6pC,OACpB,CACGt9C,GAAIZ,KAAKE,IAAI4vH,WACbpvH,KAAM,WACNiB,YAAY,EACZL,WAAW,EACXP,SACAqrF,QAAwB,SAAfxmF,GAAOvB,IAChBihE,SAAUkrD,EACL,gDACA,0DACL3mH,KAAM,CAAE+nE,QAAS,KAEpB2+C,GAGEI,EAAQ5vH,QAA4B,GAAlB4vH,EAAQ5vH,gBACrB4vH,EAAQ5vH,OACf4vH,EAAQpc,YAAa,GAExBsI,EAAMv4G,KAAKqsH,GACX,MAAMC,EAAS,CAAC,EACU,OAA1BxqH,EAASuxD,cACHi5D,EAAO/uH,KAAOg7G,EACd+T,EAAOzvH,KAAO07G,EACpB,MAAMlb,EAAM7hG,MAAMW,GAAG,CAACmwH,IAItB,cAFOjvB,EAAI//F,KAEJ+/F,CACV,CAMA98F,SAASqR,EAAK26G,GACX,MAAMV,EAAcxsH,GAAGktH,GAAY7wH,KAAKE,IAAI4vH,YAE5C,IAAKK,EAAa,OAElB,MAAMvqH,EAAQ5F,KAAKU,KAAKkF,QAEL,WAAfA,GAAOvB,KAAmC,aAAfuB,GAAOvB,IAMtC8rH,EAAY3/B,UAAU,CAAE5e,QAAS17D,IAL9Bi6G,EAAY3/B,UAAU,CAAE5e,QAAS17D,EAAIhD,QAAQ,OAAQ,SAM3D,oBCnGH,MAAM22F,EAA4B,EAAQ,OAE1CpqG,EAAOC,QAAU,cAAwC,EAGtDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,oBAAoBkhG,EAASngG,KAAMV,EAChE,CAEAO,KACG,MAAMmF,EAAQ5F,KAAKU,KAAKkF,QAClB+7F,EAAM,CACTzgG,IAAK,UACLkB,GAAI,CAED+4E,cAAe,KACZ,MAAM2Q,EAAS,eAAelmF,GAAOkB,cAAclB,GAAOhF,MACvDZ,KAAKU,KAAK+6D,yBAAyB76D,IAAMZ,KAAKU,KAAKuU,OAAOrU,KAG7D+C,GAAG3D,KAAKE,IAAIC,YAAYuN,MAAM83E,aAAa,UAAWsG,EAAO,IAIhE1lF,EAAWpG,KAAKoG,SAItB,OAFIA,EAASrF,SAAQ4gG,EAAI5gG,OAASqF,EAASrF,QAEpCjB,MAAMW,GAAGkhG,EACnB,mBC7BH,MAAMkI,EAA4B,EAAQ,OAE1CpqG,EAAOC,QAAU,cAAwC,EAGtDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,oBAAoBkhG,EAASngG,KAAMV,EAChE,CAEIusD,gBACD,MAAO,gBACV,CAEAtnD,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAGjB/B,KAAK6E,SAAS,eAAe7E,KAAKysD,oBACrC,CAEAqkE,aACG,MAAMX,EAAcxsH,GAAG3D,KAAKE,IAAI4vH,YAEhC,GAAKK,EAEL,OAAOA,EAAYziH,MAAM+/E,uBAAuBztF,KAAKysD,WAAW,EACnE,CAEA5nD,SAASqR,GAEN,MAAMzQ,EAAO,GAETyQ,IAAQ/I,MAAMC,QAAQ8I,IAAMzQ,EAAKnB,KAAK4R,GAE1CrB,YAAW,KAER,MAAMk8G,EAAU/wH,KAAK8wH,aAErB,IAAKC,EAAS,OAAO,EAErB,MAAMnrH,EAAQ5F,KAAKU,KAAKkF,QAClBmpF,EAAW,QAE0B,IAAhCnpF,EAAMQ,SAASjE,QAAQ0H,OAC/BjE,EAAMQ,SAASjE,QAAU,IAAInC,KAAK+B,GAAG4Y,MAAM40D,eAAe,CACvD1lE,KAAMjE,EAAMQ,SAASjE,WAG3ByD,EAAMQ,SAASjE,QAAQ0H,KAAKy7E,MAAK,SAAUttE,GACxC,IAA8B,IAA1BvS,EAAK4H,QAAQ2K,EAAIpX,IAAY,CAC9B,IAAI0oF,EAAO,GACP2F,EAASj3E,EAAIpX,GAEjB,KAAOZ,KAAKkvF,YAAYD,IACrBrpF,EAAMQ,SAASjE,QAAQ0H,KAAKy7E,MAAK,SAAU6J,GAErCvpF,EAAMQ,SAASjE,QAAQ0H,KAAKqlF,YAAYD,KACxCE,EAAIvuF,KAEJ0oF,EAAO,GAAG6F,EAAI9gF,SAASi7E,IAE7B,IAEA2F,EAASjvF,KAAKkvF,YAAYD,GAG7B3F,GAAQtxE,EAAI3J,KACZ0gF,EAASzqF,KAAKglF,EACjB,CACH,IAIA,IAAI8F,EAAW,iCAEfL,EAAS9qF,SAAQ,SAAUmK,GACxBghF,GAAY,2GAA4GhhF,UAC3H,IAEAghF,GAAY,SACZ2hC,EAAQ5jF,UAAYiiD,EAEpB,IAAIruF,EAAS,GAETgwH,EAAQxgC,aAAe,KAAIxvF,EAASgwH,EAAQxgC,cAEhD,MAAM4/B,EAAcxsH,GAAG3D,KAAKE,IAAI4vH,YAEhCK,EAAYluH,OAAOlB,OAASA,EAC5BovH,EAAYtvH,QAAQ,GACpB,GACN,kEC3FH,MAAMmwH,cAAgB,oBAAQ,OACxBC,YAAc,oBAAQ,OACtBC,WAAa,oBAAQ,OACrBC,MAAQ,oBAAQ,OAEhBlpE,eAAiB,oBAAQ,OACzBmpE,aAAe,oBAAQ,OACvBthG,cAAgB,oBAAQ,OAExBywE,gBAAkB,6BAExB9gG,OAAOC,QAAU,MAAMyqG,mCAAmC5J,gBACvD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,qBAAqBkhG,EAASngG,KACxCyT,OAAO6pC,OACJ,CACGmzE,eAAgB,GAChBC,YAAa,IAEhBpxH,GAGT,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAChBklF,EAAkByV,EAASphG,YAAYwlC,gBAG7C,IAAI7jC,GAAY,EAEI,KAJA8E,EAASpF,OAASsqF,EAAgBtqF,SAI/BM,GAAY,GAEnC,IAAIiwH,EAAa,CACd3vH,KAAM,SACNZ,MAAO,GAENwwH,EAAc,CACf5vH,KAAM,SACNZ,MAAO,GAGV,OAAQoF,EAASm5D,gBAAkB+rB,EAAgB/rB,gBAChD,IAAK,OACF,MACH,IAAK,SACFgyD,EAAa,CACV3vH,KAAM,UAET4vH,EAAc,CACX5vH,KAAM,UAET,MACH,IAAK,QACF2vH,EAAa,CACV3vH,KAAM,UAKf,MAAM6vH,EACH1wB,EAAS3hC,aACTh5D,EAASg5D,aACTksB,EAAgBlsB,YACbl/D,EAAMF,KAAKE,IACXyhG,EAAM7hG,MAAMW,GAAG,CAClB,CACGC,KAAM,UACNQ,IACGkF,EAASk5D,mBAAqBgsB,EAAgBhsB,kBACjDn+D,KAAM,CACHowH,EACA,CACG3wH,GAAIV,EAAImxH,eACR3wH,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,oBACNnK,MAAOqwH,EACPzwH,MAAOoF,EAASpF,OAASsqF,EAAgBtqF,MACzCM,UAAWA,EACXC,MAAO,KACJvB,KAAK0xH,YAAY,EAEpBtvH,GAAI,CAED+4E,cAAe,KACZ,MAAMh0E,EAAO45F,EAAS55F,MAAM+L,QAAQ,eAAgB,IAC9C44E,EAAS,iBAAiB3kF,KAAQ45F,EAASngG,KACjD+C,GAAGzD,EAAImxH,iBACF3jH,MAAM6jE,cAAc,UACrBiU,aAAa,UAAWsG,EAAO,IAI5C,CACGlrF,GAAIV,EAAIoxH,YACR5wH,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,qBAErB,CACGQ,KAAM,UAET4vH,MAOT,cAFO7vB,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IACXyxH,EAAkBhuH,GAAGzD,EAAImxH,gBACzBO,EAAejuH,GAAGzD,EAAIoxH,aAExBtxH,KAAKU,KAAK0F,SAASo5C,UACpBmyE,EAAgB/sH,OAChBgtH,EAAajtH,SAEbgtH,EAAgBhtH,OAChBitH,EAAahtH,OAEnB,CAEAO,eACGrF,MAAM0K,OAEN,MAAMm/C,EAAQ,GAEd3pD,KAAKU,KAAKwlB,gBAAgBjiB,SAASopB,IAC5BA,EAAGT,aAAeS,EAAGpC,eAAeC,YAErCy+B,EAAMrlD,KAAK+oB,EAAGwF,WAAW,IAI3B82B,EAAMxjD,OAAS,GAAGnG,KAAKghF,aAErBvxE,QAAQ8R,IAAIooC,GAGlB3pD,KAAKohF,OACR,CAEAJ,OACG,MAAM2wC,EAAkBhuH,GAAG3D,KAAKE,IAAImxH,gBAE/BM,IAELA,EAAgBvsH,UAChBusH,EAAgBltH,OAAO,OAAQ,yBAC/BktH,EAAgBjtH,UACnB,CAEA08E,QACG,MAAMuwC,EAAkBhuH,GAAG3D,KAAKE,IAAImxH,gBAE/BM,IAELA,EAAgBjqH,SAChBiqH,EAAgBltH,OAAO,OAAQ,qBAC/BktH,EAAgBjtH,UACnB,CAEAS,mBACGnF,KAAKghF,OAEL,MAAM6wC,EAAe7xH,KAAK8xH,gBAKpBlvB,QAAe5iG,KAAK+xH,iBAGpBC,QAA4BhyH,KAAKiyH,uBAGjCC,EAAWlyH,KAAKmyH,iBACnBH,EACAH,EACAjvB,GAGG7B,EAAW/gG,KAAKU,KAGtBqgG,EAASqJ,gBAAgB8nB,EAAUnxB,EAAS1hC,WAG5Cr/D,KAAKohF,OACR,CAEA0wC,gBACG,MAAMhkH,EAAS,CAAC,EAGVoY,EAAkBlmB,KAAKU,KAAKwlB,gBAC5BksG,EAAiBlsG,EAAgB/f,OAAS,EAyFhD,OAvFA+f,EACIpd,QAAQukB,GAAOA,GAAIjB,aACnBnoB,SAASopB,IACP,MAAMrV,EAAMqV,EAAGjB,WACTimG,EAAWhlG,EAAGJ,YACdqlG,EAAW,GACXjG,EAAW,GAGjB,GAAIgG,EAAU,CACX,MAAM1kG,EAAaN,EAAGJ,WAAU,GAEhCo/F,EAAS/nH,KAAKtE,KAAK+B,GAAGygB,MAAM,CAAC,EAAG6vG,EAAU1kG,GAC7C,MAAO0+F,EAAS/nH,QAAQtE,KAAK+B,GAAG2D,UAAU2nB,EAAGkH,YAG7C,MAAMuK,EAAW9mB,EAAIqoB,qBAErBgsF,EAASpoH,SAAS4F,IACf,IAAIy/G,EAGJtxG,EAAIjR,SAAS9C,SAAS+C,IACnB,MAAMurH,EAAc,GAGhBv6G,aAAe8X,eACqB,iBAA1B9oB,EAAE/B,OAAOugB,eACjBxe,EAAE/B,OAAOugB,aAAezR,KAAK0D,MAC1BzQ,EAAE/B,OAAOugB,eAGe,iBAAnBxe,EAAEwe,eACVxe,EAAEwe,aAAezR,KAAK0D,MAAMzQ,EAAEwe,gBAEhCxe,EAAE/B,OAAOugB,cAAgB,IAAIvhB,SAASuuH,IACpC,MAAMC,GAAazrH,EAAEwe,cAAgB,IAAI1c,QACrC2pH,GACEA,EAAUxzF,gBAAkBuzF,EAAQvzF,gBACxC,GAEF,IAAKwzF,EAAW,OAEhB,MAAMC,EAAcF,EAAQpxH,MACtBuxH,EAAaF,EAAUrxH,MAG7BmxH,EAAYjuH,KAAK,GAAGouH,KAAeC,IAAa,KAInB,iBAAnB3rH,EAAEwe,eACfxe,EAAEwe,aAAezR,KAAK0D,MAAMzQ,EAAEwe,eAEjCxe,EAAEwe,aAAavhB,SAAS6xB,IACrBy8F,EAAYjuH,KAAKwxB,EAAK10B,MAAM,IAG/BkoH,EAAatpH,KAAK4yH,gBACf/oH,EACA7C,EACAurH,EACAzzF,GAIHwqF,EAAWv/C,QAAU/xD,CAAG,IAG3Bs6G,EAAShuH,KAAKglH,EAAW,IAI5B,MAAMuJ,EACHP,EAASnsH,OAAS,EAAImsH,EAAWA,EAAS,GAG1CF,GACCjlH,MAAMC,QAAQylH,IACZA,EAAmB1sH,OAAS,GAE9BknB,EAAG7H,cAAgB,IAAIvhB,SAAS6xB,IAC9BhoB,EAAOgoB,EAAK10B,OAASyxH,CAAkB,IAExCx+G,OAAO6pC,OAAOpwC,EAAQ+kH,EAAmB,IAG7C/kH,CACV,CAEA8kH,gBAAgB/oH,EAAMjE,EAAO2sH,EAAc,GAAIO,GAC5C,MAAMhlH,EAAS,CAAC,EAEhB,IAAIoI,EAAM,KAEVpI,EAAOlN,GAAKiJ,EAAKjJ,GACjBkN,EAAO,GAAGlI,EAAMkB,qBAAuB+C,EAAKjE,EAAMkB,YAElD,MAAMi6F,EAAW/gG,KAAKU,KAGtB,GAAIoyH,EAAoB3sH,OAAQ,CAC7B,MAAM4sH,GAAeD,GAAuB,IAAIhqH,QAC5CszB,GAAiC,MAAnBvyB,EAAKuyB,KAGvB2kE,EAAShiE,UAAUl1B,EAAMA,EAAMkpH,EAAahyB,EAAS5wF,aACxD,CA2DA,OAxDIvK,aAAiBqiD,gBAKlB/xC,EAAMrM,EAAKjE,EAAMkB,YAEboP,GAAKjS,SACNiS,EAAIjS,SAASqP,IACLA,IAGD1N,EAAMgB,gBACPhB,EAAMgB,eACFG,QAAQC,IAAOA,EAAEq8B,eACjBp/B,SAAS+C,IACPsM,EAAE,GAAGtM,EAAEF,qBAAuBwM,EAAEtM,EAAEF,YAElCwM,EAAEtM,EAAEF,YAAcE,EAAEwZ,OAAOlN,EAAG,CAC3BnD,aAAc4wF,EAAS5wF,cACxB,IAKPmD,GAAkB,iBAANA,IAAgBA,EAAEy2D,QAAUnkE,EAAMgB,gBAAc,KAMtEsP,EAAMtQ,EAAM4a,OAAO3W,EAAM,CACtBsG,aAAc4wF,EAAS5wF,eAI7BoiH,EAAYtuH,SAAS7C,IACd8U,EAAKpI,EAAO1M,GAAS8U,EACfpI,EAAO1M,KAAQ0M,EAAO1M,GAAS,GAAE,IAI1CyI,EAAKA,MAAM1D,SACZ2H,EAAOjE,KAAOiE,EAAOjE,MAAQ,IAE5BA,EAAKA,MAAQ,IAAI5F,SAAQ,CAAC+uH,EAAWjnH,KAEnC+B,EAAOjE,KAAKkC,GAAS/L,KAAK4yH,gBACvBI,EACAptH,EACA2sH,EACAO,EACF,KAIAhlH,CACV,CAEA3I,uBACG,MAAMy9F,EAAS,CAAC,EACVj5C,EAAQ,GACRspE,EAAkB,CAACC,EAAYrpH,EAAO,MACzCA,EAAK5F,SAAS+sB,IACX,MAAMmiG,EAAWD,EAAW1yG,OAAOwQ,GAE/BmiG,IAAavwB,EAAOuwB,IACrBxpE,EAAMrlD,KACH,IAAImL,SAAQ,CAACC,EAASmH,KACnB,MAAMu8G,EAASF,EAAW15D,SAAS25D,GAEnCjC,WAAWmC,iBAAiBD,GAAQ,CAAC7jH,EAAO6kE,KACzC,GAAI7kE,EAAO,OAAOsH,EAAOtH,GAGzBqzF,EAAOuwB,GAAY/+C,EAEnB1kE,GAAS,GACV,KAMXujH,EAAgBC,EAAYliG,EAAEnnB,MAAQ,GAAG,GAC1C,EAyBL,OAtBA7J,KAAKU,KAAKwlB,gBACNpd,QAAQukB,GAAOA,GAAIjB,aACnBnoB,SAASopB,IACP,MAAMrV,EAAMqV,EAAGjB,WAEf,IAAIknG,EAAajmG,EAAGJ,YAEpB,GAAIqmG,EAAY,CAEb,MAAM3lG,EAAaN,EAAGJ,WAAU,GAEhCqmG,EAAa,CAACtzH,KAAK+B,GAAGygB,MAAM,CAAC,EAAG8wG,EAAY3lG,GAC/C,MACK2lG,EAAajmG,EAAGkH,UAErBvc,EAAIjR,QAAQC,GAAMA,aAAaoqH,eAAcntH,SAAS+C,IACnDisH,EAAgBjsH,EAAGssH,EAAW,GAC/B,UAGF7jH,QAAQ8R,IAAIooC,GAEXi5C,CACV,CAEAqvB,uBACG,MAAM3hH,EAAMtQ,KAAKU,KAAK++D,cAEtB,OAAO,IAAIhwD,SAAQ,CAACC,EAASmH,KAC1Bq6G,WAAWmC,iBAAiB/iH,GAAK,CAACf,EAAO6kE,KACtC,GAAI7kE,EAAO,OAAOsH,EAAOtH,GAEzBG,EAAQ0kE,EAAQ,GACjB,GAER,CAEA+9C,iBAAiBoB,YAAa1pH,KAAM+4F,QACjC,MAAM4wB,UAAY,CAAC,EACbC,IAAM,IAAItC,MAAMoC,aAChBG,IAAM,IAAI1C,cACV2C,YAAc,IAAI1C,YAAY,CACjC2C,UAAU,EACVC,SAAU,CAACC,EAAUC,IAKXnxB,OAAOkxB,IAAa,GAE9BE,QAAS,CAACC,EAAWH,EAAUC,KAC5B,MAAMl4E,EAAa,CAAC,IAAK,KACnBklD,EAAW/gG,KAAKU,KAChB2sB,EAAK0zE,EAAS10E,eAEpB,GAAKgB,EA6CE,CACJ,IAAIrV,EAAMqV,EAAGjB,WAEb,IAAKpU,EAAK,OAAO6jC,EAGjB,GAAIk4E,EAAQ1mH,QAAQ,MAAQ,EAAG,CAC5B,MAAM6mH,EAAWH,EAAQrrG,MAAM,KAI/B,GAFA1Q,EAAMA,EAAIwO,SAASL,GAAMA,EAAE/kB,QAAU8yH,EAAS,KAAI,IAE7Cl8G,EAAK,OAAO6jC,EAEjBk4E,EAAUG,EAAS,EACtB,CAEA,MAAMz9D,EAAaz+C,EAAIjR,QACnBC,GAAMA,EAAEF,aAAeitH,IACzB,GAEF,OAAKt9D,GAAYrwD,UAGdqwD,EAAWrwD,SAAS06C,UACpB2V,EAAWrwD,SAAS26C,aAEpBlF,EAAW,GAAK4a,EAAWrwD,SAAS26C,YAGpC0V,EAAWrwD,SAAS46C,WACpByV,EAAWrwD,SAAS66C,cAEpBpF,EAAW,GAAK4a,EAAWrwD,SAAS66C,aAEhCpF,GAd2BA,CAerC,CAhFS,CACN,MAAMs4E,EAAMpzB,EAAS76E,gBAErB,OAAIiuG,GACDA,EAAIlwH,SAASopB,IACV,IAAIrV,EAAMqV,EAAGjB,WAEb,IAAKpU,EAAK,OAAO,EAGjB,GAAI+7G,EAAQ1mH,QAAQ,MAAQ,EAAG,CAC5B,IAAI6mH,EAAWH,EAAQrrG,MAAM,KAE7B,IAAK1Q,EAAIwO,QAAS,OAAO,EAIzB,GAFAxO,EAAMA,EAAIwO,SAASL,GAAMA,EAAE/kB,QAAU8yH,EAAS,KAAI,IAE7Cl8G,EAAK,OAAO,EAEjB+7G,EAAUG,EAAS,EACtB,CAEA,MAAMz9D,EAAaz+C,EAAIjR,QACnBC,GAAMA,EAAEF,aAAeitH,IACzB,GAEF,QAAKt9D,GAAYrwD,WAGdqwD,EAAWrwD,SAAS06C,UACpB2V,EAAWrwD,SAAS26C,aAEpBlF,EAAW,GAAK4a,EAAWrwD,SAAS26C,YAGpC0V,EAAWrwD,SAAS46C,WACpByV,EAAWrwD,SAAS66C,cAEpBpF,EAAW,GAAK4a,EAAWrwD,SAAS66C,cAEhC,EAAK,IAGRpF,GACIA,CACjB,CAmCA,IA0BN,IACG63E,IAAIU,aAAaT,aACbU,QAAQZ,KACRzlC,QAAQnkF,MACRqiF,WAAW,CACThS,OAAQ,SAAUo6C,KACf,MAAO,CACJz+G,IAAK,SAAU0+G,MAAOjlH,SAEnB,GAA6B,IAAzBglH,IAAIjnH,QAAQ,SAAgB,CAC7B,MAAMm4B,GAAQ8uF,IAAI5rG,MAAM,KAAK,IAAM,IAAImd,OAEvC,OAAQ0uF,MAAY,MAAK,IAAIzrH,QAAO,SAAUsF,GAC3C,QAAOA,EAAKo3B,EACf,GACH,CAEK,GAAI8uF,IAAIjnH,QAAQ,WAAa,EAAG,CAClC,MAAMm4B,EAAO8uF,IAAI5rG,MAAM,UAAU,GAC3B8rG,EAAUF,IAAI5rG,MAAM,UAAU,GAEpC,IAAI1H,EAASuzG,MAAM/uF,GAYnB,MAVsB,iBAAXxkB,IACRA,EAASA,EAAO9N,QACb,UACA,KAGDsgH,UAAUgB,KAAUhB,UAAUgB,GAAW,GAE9ChB,UAAUgB,IAAY/6E,WAAWz4B,GAE1BuzG,MAAM/uF,EAChB,CAEK,GAA6B,IAAzB8uF,IAAIjnH,QAAQ,SAAgB,CAClC,MAAMmnH,EAAUF,IAAIphH,QAAQ,QAAS,IAErC,OAAOsgH,UAAUgB,IAAY,CAChC,CAyCK,GAAyB,IAArBF,IAAIjnH,QAAQ,KAAY,CAC9B,MAAM+uF,EAAQk4B,IAAIphH,QAAQ,IAAK,IAAIwV,MAAM,KACnC+rG,EAAar4B,EAAM,GAAGv2D,OACtB6uF,EAAat4B,EAAM,GAAGv2D,OAE5B,IAAK4uF,IAAeC,EAAY,MAAO,GAGvC,IAAIC,EAEJ,MAAM38G,EAAMu8G,MAAMxqD,QAElB,GAAI/xD,EAAK,CACN,MAAM48G,EAAiB58G,EAAIjR,QACvBC,GAAMA,EAAEF,aAAe4tH,IACzB,GAEF,GAAIE,EAAgB,CACjB,MAAMvtH,EAAautH,EAAevtH,WAElCstH,EAAettH,EACVA,EAAWP,WACX,IACR,CACH,CAEA,IAAI+tH,EAAahrH,KAAK4qH,GAElBI,IAAe1nH,MAAMC,QAAQynH,KAC9BA,EAAa,CAACA,IAEjB,MAAMC,EAAUjrH,GACbA,EAAK,GAAG8qH,aACR9qH,EAAK8qH,IACL9qH,EAAKjJ,IACLiJ,EAEH,OAAQgrH,GAAc,IAAI/rH,QAAO,SAAUsF,GAExC,IAAI2mH,EAAWR,MAAMG,GAErB,OAAIvnH,MAAMC,QAAQ2nH,GAEZA,EAASjsH,QACLvF,GAAMuxH,EAAOvxH,KAAOuxH,EAAO1mH,KAC7BjI,OAAS,EAEL2uH,EAAO1mH,KAAU0mH,EAAOC,EACvC,GACH,CAEK,GAAIT,IAAIjnH,QAAQ,MAAQ,EAAG,CAC7B,MAAMS,OAASymH,MACT/uF,KAAO8uF,IAAI5rG,MAAM,KAAK,GACtBkkB,UAAY0nF,IAAI5rG,MAAM,KAAK,GAEjC,GAAI8c,MAAQoH,UAAW,CACpB,IAAI/iC,KAAO0qH,MAAM/uF,MAEjB,GAAI37B,KAGD,OAFKsD,MAAMC,QAAQvD,QAAOA,KAAO,CAACA,OAE3BA,KAAKf,QAAQkoB,GACjBopB,KAAKxN,UAAU15B,QAAQ,MAAO,QAGvC,CACA,OAAOpF,MACV,CAAO,MAAY,MAARwmH,IAAoBC,MACnBA,MAAMD,IACrB,EAEN,IAEFzkD,QAGP,CAFE,MAAOtgE,GACN,OAAOA,CACV,CAGA,MAAMylH,SAAWtB,IAAIuB,SAASC,SAAS,CACpCtzH,KAAM,OACNuzH,SACG,4EAGN,OAAOH,QACV,oBC/tBH,MAAMrmB,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAA+BivG,EAC7ChvG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,oBAAoBkhG,EAASngG,KAAMV,EAChE,CAEAO,KACG,MAAMs/E,EAAO//E,KACP+gG,EAAW/gG,KAAKU,KAChBwJ,EAAO62F,EAASvlC,sBAChBp1D,EAAW26F,EAAS36F,UAAY,CAAC,EAEjC+5D,EACH/5D,EAAS+5D,WAAa4gC,EAASphG,YAAYwlC,gBAAgBg7B,UAExDwhC,EAAM,CACTxgG,KAAM,IAmFT,MA/EkB,WAAdg/D,GAAwC,UAAdA,GAC3BwhC,EAAIxgG,KAAKmD,KAAK,CAAC,GAId8B,EAAS05D,eACV6hC,EAAIxgG,KAAKmD,KACN,CACG5D,KAAM,SACNY,WAAW,EACXqB,MAAOyD,EAAS25D,aAAe//D,KAAKoB,MAAM,UAC1CG,MAAO,WACJw+E,EAAKx3E,SAASvI,KACjB,EACAoC,GAAI,CACD+4E,cAAe,WACZn7E,KAAK2nG,eAAeniB,aACjB,UACA,iBAAiBt7E,EAAKtJ,KAE5B,IAGN,CACGI,MAAO,KAMZoF,EAAS45D,cACV2hC,EAAIxgG,KAAKmD,KACN,CACG5D,KAAM,SACNY,WAAW,EACXqB,MAAOyD,EAAS65D,YAAcjgE,KAAKoB,MAAM,SACzCG,MAAO,WACJw+E,EAAKq1C,QAAQp1H,KAChB,EACAoC,GAAI,CACD+4E,cAAe,WACZn7E,KAAK2nG,eAAeniB,aACjB,UACA,gBAAgBt7E,EAAKtJ,KAE3B,IAGN,CACGI,MAAO,KAMZoF,EAASw5D,aACV+hC,EAAIxgG,KAAKmD,KAAK,CACX5D,KAAM,SACNkB,KAAM,OACNV,IAAK,gBACLI,WAAW,EACXqB,MAAOyD,EAASy5D,WAAa7/D,KAAKoB,MAAM,QACxCG,MAAO,WACJw+E,EAAKj4E,OAAO9H,KACf,EACAoC,GAAI,CACD+4E,cAAe,WACZn7E,KAAK2nG,eAAeniB,aACjB,UACA,eAAet7E,EAAKtJ,KAE1B,KAMS,WAAdu/D,GAAwC,SAAdA,GAAsBwhC,EAAIxgG,KAAKmD,KAAK,CAAC,GAE5DxE,MAAMW,GAAGkhG,EACnB,CAEAp5F,SAAS8sH,GACN,MAAMt0B,EAAW/gG,KAAKU,KAChB0F,EAAW26F,EAAS36F,UAAY,CAAC,EAGjC8D,EAAO62F,EAASvlC,sBAUtB,GAPWtxD,EAAKmiB,gBAGZQ,UAAU,MAEdwoG,GAAcv3C,gBAAgB54E,QAE1BkB,EAAS85D,YAAah2D,EAAKu2F,WAAWr6F,EAAS85D,iBAE9C,CACF,MAAMo1D,EAAiBtzG,GAAMA,EAAE5b,UAA+B,SAAnB4b,EAAE5b,SAASxE,KAEhD2zH,EAAWv1H,KAAK27D,aACtB,GAAI45D,EAAU,CACX,MAAM55D,EAAa45D,EAAS55D,WAAW25D,IAAkBC,EAErD55D,GAAYzxD,EAAKu2F,WAAW9kC,EAAW/6D,GAC9C,CACH,CACH,CAEAw0H,QAAQI,GAEL,MAGMnoG,EAHOrtB,KAAKU,KAAK86D,sBAGPnvC,eAGZgB,GACDA,EAAGR,UAAU,MAGhB2oG,GAAa13C,gBAAgB54E,OAChC,CAEA4C,OAAO6kG,GACJ,IAAKA,EAEF,YADAnkG,QAAQ+G,MAAM,8BAIjB,MAAMrF,EAAOlK,KAAKU,KAAK86D,sBACjB2C,EAAWwuC,EAAW7uB,cAG5B6uB,EAAWvnG,YAGX8E,EACI4iH,SAAS3uD,GACTzpD,MAAK,KACHi4F,EAAWjlG,WAGXwC,EAAKojG,cAAc,IAErB34F,OAAOxM,IACLK,QAAQ+G,MAAMpH,GACdwkG,EAAWjlG,UAAU,GAE9B,oBC5KH,MAAMinG,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAA0C,EAGxDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,sBAAsBkhG,EAASngG,KAAMV,EAClE,CAEAO,KACG,OAAOX,MAAMW,GAAG,CACbC,KAAM,YAEZ,oBCbH,MAAM6/F,EAAkB,WAClB5oE,EAAiB,EAAQ,OACzBkzE,EAAoB,EAAQ,OAC5BvoC,EAAmB,EAAQ,OAC3BmzD,EAAoB,EAAQ,OAC5B1qB,EAAiB,EAAQ,OAMzByS,EAAmB,GAEzB/9G,EAAOC,QAAU,cAAkC6gG,EAChD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,cAAckhG,EAASngG,KACjCyT,OAAO6pC,OACJ,CACGh0C,KAAM,GAENi3E,OAAQ,GACRY,cAAe,GACf2zC,WAAY,GACT71H,GAAU,cAAckhG,EAASngG,wBAGvCV,IAINF,KAAK21H,QAAU,KAEf31H,KAAK41H,SAAU,CAClB,CAEAn1H,KACG,MAAMsgG,EAAW/gG,KAAKU,KAEhBmB,EADiBk/F,EAASmK,iBACJzqG,KAAKoB,MAAQ,GACnCg0H,EAAyB71H,KAAK81H,qBAC9Bn0B,EAAM7hG,MAAMW,GAAG,CAClB,CACGG,GAAIZ,KAAKE,IAAIgK,KACbxJ,KAAM,OACNq1H,KAAMh1B,EAASngG,GACfiB,KAAMA,EAAKmmB,OAAO6tG,MAMxB,cAFOl0B,EAAI//F,KAEJ+/F,CACV,CAEAm0B,qBACG,MAAMhoH,EAAS,CACZ,CACG+qE,QAAQ,EACRh3E,KAAM,KAKNk/F,EAAW/gG,KAAKU,KAChBuE,EAASjF,KAAKqsB,gBAAgBD,YAAc20E,EAAS79F,eAE3D,IAAK+B,EAAQ,OAAO6I,EAEpB,MAAM4vG,EAAe,GACfsY,EAAej1B,EAAS3/B,kBA6C9B,OA3CAn8D,EAEI8B,QAAQC,GAAMA,GAAGZ,UAAU6tE,kBAC3BhwE,SAAS+C,IACMgvH,EAAaxoG,MACtByoG,GAAQjvH,EAAEpG,KAAOq1H,EAAI7vH,SAASsE,YAMQ,iBAA/B1D,EAAEZ,SAAS6tE,kBACnBjtE,EAAEZ,SAAS6tE,gBAAkBlgE,KAAK0D,MAC/BzQ,EAAEZ,SAAS6tE,kBAKjBjtE,EAAEZ,SAAS6tE,gBAAgBhwE,SAAQ,CAACmsB,EAAMyhF,KACvC,MAAM/vB,EAAS9hF,KAAK+B,GAAGgzB,iBACpB,GAAG/tB,EAAEF,cAAc+qG,KAGG,mBAAd/vB,EAAOrhF,GACfi9G,EAAap5G,KAAKw9E,EAAOrhF,MAGzBi9G,EAAap5G,KAAKw9E,EAAOrhF,IAI5B+8G,EAAiBl5G,KAAK,CACnBwE,OAAQg5E,EACRphF,KAAMohF,EAAO5hF,IAAIy4E,aACjB7xE,WAAYE,EAAEF,WACdmtE,gBAAiB7jD,EAAK/O,MACtB+rD,eAAgBh9C,EAAKg9C,gBACtB,IACH,IAGRt/D,EAAOjM,KAAO67G,EAEP5vG,CACV,CAEA3I,WAAWpD,EAAIs5D,EAAal5D,EAAU,CAAC,SAC9BrC,MAAMwD,KAAKvB,GAEjB/B,KAAKU,KAAKwqG,iBAAiB5nG,KAAKvB,EAAIs5D,EAAal5D,GAEjDnC,KAAKk2H,cAAc/zH,GACnBnC,KAAKm2H,aACLn2H,KAAKo2H,sBACLp2H,KAAKq2H,0BAEL,MAAMrzB,EAAUhjG,KAAK+B,GAAG4Y,MAClB2lE,EAAQ38E,GAAG3D,KAAKE,IAAIgK,MAEtBo2E,GACD0iB,EAAQt/F,OAAO48E,EAAO0iB,EAAQp/F,aAG7By3D,EAAc,GAAGilB,EAAMl7E,SAC9B,CAEA8wH,cAAc/zH,EAAU,CAAC,GAElBA,GAAS4+D,cAEV/gE,KAAKU,KAAK0F,SAAS26D,YAAc5+D,EAAQ4+D,eAG5C,MAAMggC,EAAW/gG,KAAKU,KAElByB,EAAQ8oG,iBACTlK,EAASiK,WAAWC,iBAAmB9oG,EAAQ8oG,iBAC7ClK,EAASiK,WAAWC,iBAAmB,KAAM,CACrD,CAEAkrB,aAEG,MAAM9oG,EAAKrtB,KAAKqsB,eAEhB,IAAKgB,EAAI,OAGTrtB,KAAKuyB,SAAS,CACXC,QAASnF,EACToF,UAAW,eACXC,SAAWjE,IACSzuB,KAAKU,KACgB0gE,iBAClCvR,GAASA,aAAgBg7C,IAIR5mG,SAAS+C,IAC3B,MAAMpB,EAAQoB,EAAEpB,QAChB,GACmC,OAAhCA,GAAOQ,UAAUc,aACjBtB,GAAOo+E,0BAEAp+E,EAAMo+E,iBACTv1D,EAAQ7oB,EAAMkB,aACf,GAAIqG,MAAMC,QAAQqhB,EAAQ7oB,EAAMkB,aAAc,CAC3C,IAAIwvH,EAAW,GACf7nG,EAAQ7oB,EAAMkB,YAAY7C,SAASqP,IAChCgjH,EAAShyH,KAAKgP,EAAE1N,EAAMX,OAAOyqB,MAAM,IAEtC9pB,EAAMo+E,iBAAmBsyC,EAAShoH,MACrC,MACG1I,EAAMo+E,iBAAmBv1D,EAAQ7oB,EAAMkB,WAGhD,IAGH9G,KAAKylC,YAAYhX,EAAQ,IAI/B,MAAMvuB,EAAMF,KAAKE,IAEjBF,KAAKuyB,SAAS,CACXC,QAASnF,EACToF,UAAW,mBACXC,SAAU,KACP,MAAM4tD,EAAQ38E,GAAGzD,EAAIgK,MAEjBo2E,IACDA,EAAMl7E,UAENk7E,EAAMj7E,eAAe,CAAEzD,KAAM,SAChC,IAIN5B,KAAKuyB,SAAS,CACXC,QAASnF,EACToF,UAAW,kBACXC,SAAU,KACP,MAAM4tD,EAAQ38E,GAAGzD,EAAIgK,MAEjBo2E,IACDA,EAAM54E,SAEN44E,EAAM34E,iBACT,IAIN3H,KAAKuyB,SAAS,CACXC,QAASnF,EACToF,UAAW,2BACXC,SAAU,CAACzT,EAAKpV,KACb,IAAKA,GAAMqO,SAAU,OAErB,MAAMjT,EAASooB,EAAGjB,WAElB,GAAKnnB,IAGFA,EAAOrE,KAAOiJ,EAAKqO,UACnBjT,EAAO8B,QAAQC,GAAMA,EAAEZ,SAASO,aAAekD,EAAKqO,WAChD/R,OAAS,GACd,CACC,MAAMopB,EAAWlC,EAAGJ,YAEhBsC,GAAUvvB,KAAKylC,YAAYlW,EAClC,KAKN,MAAM+C,EAASjF,EAAGd,mBAEd+F,GAEDtyB,KAAKuyB,SAAS,CACXC,QAASF,EACTG,UAAW,eACXC,SAAWjE,IACRzuB,KAAKu2H,kBAAkB9nG,EAAQ,GAG3C,CAEA2nG,sBACG,MAAM/oG,EAAKrtB,KAAKqsB,eAEhB,IAAKgB,EAAI,OAET,IAAKmwF,EAAiBr3G,OAAQ,OAG9B,MAAM23G,EAAqB,GAE3BN,EAAiBv5G,SAAS+C,IAEvBA,EAAE8B,OAAOhE,gBAAgBuoB,EAAGjB,WAAWrnB,aACvCiC,EAAE8B,OAAOksB,WAAW3H,EAAGjB,WAAWrlB,UAElCC,EAAE8B,OAAOjE,SAASmC,EAAEitE,iBAIf9mE,MAAMC,QAAQ0wG,EAAmB92G,EAAEF,eACrCg3G,EAAmB92G,EAAEF,YAAc,IAGtCg3G,EAAmB92G,EAAEF,YAAYxC,KAAK,CACnCgyB,QAAS3yB,GAAGqD,EAAEtG,MAAMq9G,kBAEpB3wC,eAAgBpmE,EAAEomE,gBACnB,IAGL,MAAMltE,EAAMF,KAAKE,IAGjBmU,OAAOC,KAAKwpG,GAAoB75G,SAASI,IAEtC,MAAMmyH,EAAY7yH,GAAGzD,EAAIgK,MAAMkxE,UAAU,CACtCj0E,KAAM9C,IAITmyH,EAAU9oH,MAAMowG,mBAAqBA,EAAmBz5G,GAExDmyH,EAAU/xH,OAAO,YAAY,SAAUgyH,EAAMC,EAAM9wH,GAEhD,MAAM+wH,EAAkBhzH,GAAGzD,EAAIgK,MAAMkxE,UAAU,CAC5Cj0E,KAAMvB,IAIT,IAAIL,GAAU,EA+Bd,OA5BAoxH,EAAgBjpH,MAAMowG,mBAAmB75G,SAAS6E,IAC/C,MAAM7D,EAASooB,EAAGjB,WACZviB,EAAO7J,KAAK4vF,YAGZquB,EAAU,CAAC,GAEhBh5G,EAAO8B,UAAY,IAAI9C,SAAS2B,IAC9Bq4G,EAAQr4G,EAAMhF,IAAMiJ,EAAKjE,EAAMkB,WAAW,IAIzC+C,EAAKgG,OAAMouG,EAAqB,YAAIp0G,EAAKgG,MAG3B/G,EAAOwtB,QAAQ2nF,KAI9B14G,GAAU,EAEVoxH,EAAgBlyH,OACb,iBACAqE,EAAOskE,gBAEb,IAGI7nE,CACV,IAEAixH,EAAU9xH,SAAS,GAEzB,CAEA2xH,2BACIr2H,KAAKoG,UAAU6uD,aAAe,IAAIhxD,SAASmsB,KACxCA,GAAMwmG,gBAAgBC,YAAYC,iBAAmB,IAAI7yH,SACtDwmB,IACE,GAAqB,UAAjBA,EAAGssG,UAAuB,OAE9B,MAAMC,EAAah3H,KAAK+B,GAAGyqB,mBAAmB/B,EAAG9nB,OAG9Cq0H,GACAA,EAAWpqG,aAAeoqG,EAAW/rG,eAAeC,YAEpD8rG,EAAWnkG,UAAU,GAE7B,GAEP,CAEA1tB,aAAa0E,GACV7J,KAAK41H,SAAU,EAEf,MAGM1qB,EAHWlrG,KAAKU,KAGUwqG,uBAC1BA,EAAe1gG,SAErB,MAAMtK,EAAMF,KAAKE,IACXogF,EAAQ38E,GAAG3D,KAAKE,IAAIgK,MACpBmjB,EAAKrtB,KAAKqsB,eAEhB,GAAIgB,EAAI,CAGL,MAAMjnB,EAAWpG,KAAKoG,SAElBA,EAAS26D,aACV1zC,EAAGR,UAAU,OAKZzmB,EAAS26D,aAAe36D,EAAS46D,cAClCr9D,GAAGzD,EAAIw1H,aAAajqH,iBAAiBD,WAAWtL,EAAIw1H,YAGvD,MAAMjnG,EAAUpB,EAAGJ,kBAGbjtB,KAAKylC,YAAYhX,GAEnB6xD,GAAOjzD,EAAGqH,KAAK4rD,EACtB,YAEWtgF,KAAKylC,YAAY57B,GAAQ,CAAC,GAGrC7J,KAAKstG,eAEDhtB,GAAOA,EAAMpM,QACpB,CAEA/uE,kBAAkBspB,GAEf,GAAIzuB,KAAK21H,QAAS,OACb31H,KAAK21H,cAtZhBxwH,eAAuB8xH,GACpB,OAAO,IAAIxnH,SAASC,GAAYmF,WAAWnF,EAqZN,KApZxC,CAoZgCwC,GAE1B,MAAM6uF,EAAW/gG,KAAKU,KAChBw2H,EAAen2B,EAAS3/B,iBAC1BvR,GACEA,aAAgByS,GAEfzS,aAAgB4lE,GACS,SAAvB5lE,EAAKzpD,SAASxE,MAChBiuD,aAAgBk7C,GAAyC,WAAvBl7C,EAAKzpD,SAASxE,OAIvD,GAAK6sB,EAyDFyoG,EAAajzH,SAAS+C,IACnB,MAAM6oD,EAAOkxC,EAAS+K,eAAe9kG,EAAEpG,IAClCivD,IAED7vD,KAAK41H,SAAS/lE,GAAMrlD,WAGxBxD,GAAGpB,SAASf,SAASlB,GAAGksD,EAAK3vD,IAAIi3H,UAAW1oG,GAE5CohC,GAAMnrD,UAAU+pB,GAAQ,QAlEhB,CACXyoG,EAAajzH,SAAS+C,IACnB,MAAMpB,EAAQoB,EAAEpB,QAChB,IAAKA,EAAO,OAEZ,MAAMiqD,EAAOkxC,EAAS+K,eAAe9kG,EAAEpG,IACvC,IAAKivD,EAAM,OAGP7vD,KAAK41H,SAAS/lE,GAAMrlD,WAGxB,MAAM4sH,EAAiB,CAAC,EAExBxxH,EAAMw/B,aAAagyF,GACnBxxH,EAAMf,SAASlB,GAAGksD,EAAK3vD,IAAIi3H,UAAWC,GAEtCvnE,GAAMnrD,UAAU0yH,EAAe,IAGbr2B,EAAS3/B,iBAC1BvR,GACEA,aAAgBl4B,KACdk4B,aAAgByS,KAGXr+D,SAAS+C,IACnB,MAAMpB,EAAQoB,EAAEpB,QAChB,IAAKA,EAAO,OAEZ,MAAMiqD,EAAOkxC,EAAS+K,eAAe9kG,EAAEpG,IACvC,IAAKivD,EAAM,OAEX,GAAc,WAAV7oD,EAAE3C,IAAkB,OAExB,MAAMm0B,EAAU5yB,EAAMkB,WAGhBnB,EAAS,CAAC,EAEhBC,EAAMw/B,aAAaz/B,GACnBhC,GAAGksD,EAAK3vD,IAAIi3H,WAAWtyH,SAASc,EAAO6yB,IAAY,GAAG,IAIzD,MACMlG,EADKtyB,KAAKqsB,eACEE,mBAElB,GAAI+F,EAAQ,CACT,MAAM+kG,EAAa/kG,EAAOrF,YAE1BjtB,KAAKu2H,kBAAkBc,EAC1B,CACH,CAgBAr3H,KAAK21H,QAAU,IAClB,CAEAY,kBAAkB9nG,GACf,MAAMpB,EAAKrtB,KAAKqsB,eAIhB,GADmBgB,EAAGJ,YACN,OAEhB,MAAMqqG,EAAgBjqG,EAAGZ,UACzB,IAAK6qG,EAAe,OAEpB,MAAMv2B,EAAW/gG,KAAKU,KAEhB62H,EAAmBx2B,EAAS3/B,iBAAiBvR,GAC1CA,aAAgBl4B,GAEfk4B,EAAKjqD,SAAShF,KAAO02H,EAAc12H,KAC1C,GACH,IAAK22H,EAAkB,OAEvB,MAAMC,EAAoBz2B,EAAS+K,eAAeyrB,EAAiB32H,IACnE,IAAK42H,EAAmB,OAExB,MAAMC,EAAqB9zH,GAAG6zH,EAAkBt3H,IAAIi3H,UAI9CO,EAAW,CAAC,EAElBA,EALkBJ,EAAcnmG,gBAKP1C,EAGzB6oG,EAAczyH,SAAS4yH,EAAoBC,EAC9C,CAEAt1B,UAEA,CAEAkL,eACG,MAAMvM,EAAW/gG,KAAKU,KAEtB,IAAIi3H,EAAc,EACdpqB,EAAgB,GAEpBxM,EAASp5E,QAAQ1jB,SAASmK,IACN,YAAbA,EAAK/J,KAAkC,cAAb+J,EAAK/J,KAC5B+J,EAAKzN,SAASy5D,IAAMu9D,IACrBA,EAAcvpH,EAAKzN,SAASy5D,EAC5BmzC,EAAgBn/F,EAAKxN,GACxB,IAGN,MAAM4sG,EAAiBzM,EAAS+K,eAAeyB,GAE3CC,GAAkB7pG,GAAG6pG,EAAettG,IAAIi3H,WACzCxzH,GAAG6pG,EAAettG,IAAIi3H,UAAUh4G,OACtC,oBC1iBH,MAAMwvF,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAAyC,EAGvDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,qBAAqBkhG,EAASngG,KACxCyT,OAAO6pC,OACJ,CACGw6B,MAAO,GACPk/C,UAAW,IAEd13H,IAINF,KAAK63H,iBAAmB,KACxB73H,KAAK83H,kBAAoB,IAC5B,CAEIlyH,YACD,OAAO5F,KAAKU,KAAKkF,OACpB,CAEAnF,KACG,MAAMmF,EAAQ5F,KAAK4F,MACbm7F,EAAW/gG,KAAKU,KAChBwJ,EAAO62F,EAASvlC,sBAChBp1D,EAAWpG,KAAKoG,SAEtB,IAAKR,EAGF,OAFA4C,QAAQ+G,MAAM,gCAAgCnJ,EAASsE,WAEhD5K,MAAMW,GAAG,CACbC,KAAM,QACNU,MAAO,KAIb,MAAMuhF,EAAyC,QAA3B/8E,EAAMQ,SAASa,SAC7B8wH,EAAe7tH,GAAM9D,UAAY,CAAC,EAClClG,EAAMF,KAAKE,IAEjB,IAAIyhG,EAAM,CACP/gG,GAAIV,EAAIi3H,SACRz2H,KAAMiiF,EAAc,aAAe,QACnCx7E,KAAMvB,EAAMkB,WACZi1C,SAAUn2C,GAAOQ,UAAU21C,UAAY31C,GAAU21C,WAAY,EAG7DipC,YAAap/E,EAAMhF,GACnBwB,GAAI,CACDgI,YAAa,CAACxJ,EAAIyJ,KACf,GACGA,EAAEm/C,OAAOu9B,UAAUx0C,SAAS,sBAC5BloC,EAAEm/C,OAAO89B,QAAQx6D,OAClB,CACC,MAAMkC,EAAQ3kB,EAAEm/C,OAAO89B,QAAQx6D,OAC/B,IAAKkC,EAAO,OACZhvB,KAAKg4H,aAAahpG,EACrB,GAEH3sB,SAAWwH,IACR7J,KAAKi4H,UAAUpuH,EAAK,IAKzBkuH,EAAapiE,YACdgsC,EAAIvgG,MAAQwE,EAAMxE,MAClBugG,EAAI7/F,WAAai2H,EAAaj2H,WAC9B6/F,EAAIhqC,cAAgBogE,EAAapgE,eAGpC33D,KAAKk4H,kBAELv2B,EAAIxkB,QAAU,CACX4F,QAAQ,EACRo1C,YAAWx1C,EACXlhF,KAAM,CACHoI,KAAM,GACNy7D,UACGy7B,GAAU36F,UAAU86D,SACf,kEACA,IAHE,WAMb9+D,GAAI,CACDoI,OAAQ,KACL5E,EAAMy/E,sBAAsB1hF,GAAGzD,EAAIi3H,UAAWvxH,EAAOsE,EAAK,GAIhEpB,OAAQ,EAAGnG,SAASsT,IACjBtT,EAAM0V,cAAco4B,SAASx6B,EAAOoC,gBAG1CspF,EAAIoiB,QAAU,CACXqU,YAAa,CAACx3H,EAAIyJ,EAAGguH,KAClB,GAAyB,IAArBjyH,EAAShB,QAAe,OAE5B,MAAMqpB,EAAU,CAAC,EACX6pG,EAAY30H,GAAGzD,EAAIi3H,UAEzB,GAAImB,EAAW,CACZ,MAAM/1H,EAAO+1H,EAAU5qH,MAEvB9H,EAAMs8E,WAAWzzD,EAAmBlsB,EACvC,IAIN,IAAIg2H,EAAQv4H,KAAK63H,kBAAkBp3H,GA8CnC,OA7CI83H,GAED52B,EAAIvgG,MAAQ,GACZugG,EAAI7/F,WAAa,EAGjBy2H,EAAMn2H,GAAK,CACRgI,YAAa,KAEVpK,KAAK63H,kBAAkB9T,QAAQ75G,EAAKmiB,iBAE7B,IAIbs1E,EAAM,CACH62B,QAASt4H,EAAIi3H,SACbt1H,KAAM,CACH,CACGV,KAAM,CACH,CACGT,KAAM,QACNU,MAAOwE,EAAMxE,MACbJ,MAAO+2H,EAAaj2H,WACpBT,MAAO,QAEVk3H,EACA52B,MAMZA,EAAM7hG,MAAMW,GAAGkhG,KAEfA,EAAM,CACH62B,QAASt4H,EAAIi3H,SACbt1H,KAAM,CAAC8/F,IAGVA,EAAM7hG,MAAMW,GAAGkhG,UAERA,EAAI9/F,KAAK,GAAGjB,IAGf+gG,CACV,CAEAx8F,gBAAgB0E,GACb,MAAM3J,EAAMF,KAAKE,IACX0F,EAAQ5F,KAAK4F,MACbm7F,EAAW/gG,KAAKU,KAEtB,IAAI+3H,EACAtrH,MAAMC,QAAQvD,IACf4uH,EAAiB,GACjB5uH,EAAK5F,SAASmqB,IACXqqG,EAAen0H,KAAK8pB,EAAOxtB,IAAMwtB,EAAO,MAS3CqqG,EAAiB5uH,EACE,iBAARA,IAER4uH,EAAiB7yH,EAAMw+E,eAAev6E,IAItC4uH,EADCA,GAAgB73H,GACA63H,EAAe73H,GAEfiJ,GAMvB,MAAMyuH,EAAY30H,GAAGzD,EAAIi3H,UAgBzB,GAX0C,OAAtCn3H,MAAM4F,OAAOQ,UAAUc,cACxBlH,KAAKghF,aACCp7E,EAAMs9E,sBACTo1C,EACAv3B,EAAS5+F,QACTyD,EACAm7F,EAASvlC,uBAEZx7D,KAAKohF,SAGJk3C,EAAW,CACZA,EAAU/4C,aAEV,MAAMm5C,EAAaD,EAAenqH,KAC7BmqH,EAAenqH,OACfmqH,EAELH,EAAUzzH,SAAS6zH,GACnBJ,EAAU94C,cACb,CACH,CAEAr6E,WAAWpD,EAAII,SACNrC,MAAMwD,KAAKvB,GAEjB,MAAMu2H,EAAY30H,GAAG3D,KAAKE,IAAIi3H,UAC1BmB,GAAW70H,MAAMC,OAAO40H,EAAW70H,MAAMG,aAE7C5D,KAAKk4H,iBACR,CAEAA,kBACG,MAAMn3B,EAAW/gG,KAAKU,KAGhBi4H,EAAY53B,GAAU36F,UAAU+3D,SAClCw6D,GAAa53B,IAAa/gG,KAAK63H,mBAChC73H,KAAK63H,iBAAmB92B,EAASuI,YAAYnpG,UAC1CH,KAAK+B,GACL,GAAGg/F,EAASngG,MAAM+3H,KAErB34H,KAAK63H,iBAAiB/yH,gBAAgBi8F,EAASh8F,aAC/C/E,KAAK63H,iBAAiBv0H,KAAK,CACxBs1H,WAAY54H,KAAK64H,iBAAiBnkG,KAAK10B,MACvC84H,cAAe94H,KAAK+4H,eAAerkG,KAAK10B,MACxC+gE,YAAa/gE,KAAKg5H,oBAAoBtkG,KAAK10B,SAIjD,MAAMi5H,EAAal4B,GAAU36F,UAAU86D,SACnC+3D,GAAcl4B,IAAa/gG,KAAK83H,oBACjC93H,KAAK83H,kBAAoB/2B,EAASkN,aAAa9tG,UAC5CH,KAAK+B,GACL,GAAGg/F,EAASngG,MAAMq4H,KAErBj5H,KAAK83H,kBAAkBhzH,gBAAgBi8F,EAASh8F,aAChD/E,KAAK83H,kBAAkBx0H,KAAK,CACzBs1H,WAAY54H,KAAK64H,iBAAiBnkG,KAAK10B,MACvC84H,cAAe94H,KAAK+4H,eAAerkG,KAAK10B,MACxC+gE,YAAa/gE,KAAKg5H,oBAAoBtkG,KAAK10B,QAGpD,CAEAmF,uBAAuB2nH,GACpB,MAAM5sH,EAAMF,KAAKE,IACX0F,EAAQ5F,KAAK4F,MAGb0yH,EAAY30H,GAAGzD,EAAIi3H,UACzB,IAAKmB,EAAW,OAGhBt4H,KAAKghF,OACLp7E,EAAMszH,aAAal5H,KAAKU,KAAK0F,SAAS4jB,kBACtC,MAAMngB,QAAajE,EAAMs9E,sBACtBo1C,EACAt4H,KAAKU,KAAKyB,QACVyD,EACA5F,KAAKU,KAAK86D,uBAYb,GAVAx7D,KAAKohF,QAGLv3E,EAAK5F,SAASmK,IACXA,EAAKzL,MAAQyL,EAAKC,IAAI,IAGzBiqH,EAAU75C,UAAUzjE,WACpBs9G,EAAU75C,UAAUh6E,OAAO,OAAQoF,GAEH,SAA5BjE,EAAMQ,SAASa,SAAqB,CACrC,MAAMkyH,EAAcb,EAAUrsH,WAE9B,IAAImtH,GACsC,IAAtCD,EAAY9rH,QAAQy/G,EAASlsH,MAC9Bw4H,EAAgBD,EACX,GAAGA,KAAerM,EAASlsH,KAC3BksH,EAASlsH,IAEjB03H,EAAUzzH,SAASu0H,EACtB,MACGd,EAAUzzH,SAASioH,EAASlsH,GAYlC,CAEAm4H,iBAGG,OAFAp1H,GAAG3D,KAAKE,KAAKw4E,QAAQxL,WAEd,CACV,CAEA8rD,sBACG,OAAO,CACV,CAEA/sH,SAASwiB,GACN,OAAOzuB,KAAK4F,MAAMqG,SAAStI,GAAG3D,KAAKE,IAAIi3H,UAAW1oG,EACrD,CAEA4qG,SAAS/4C,GACDA,IAELA,EAAMl7E,YACNk7E,EAAMj7E,eAAe,CAAEzD,KAAM,SAChC,CAEAyrG,UAAU/sB,GACFA,IAELA,EAAM54E,WACN44E,EAAM34E,iBACT,CAEAqwH,aAAahpG,GACV,MAAM5oB,EAAWpG,KAAKoG,SAEtB,IAAKA,EAAS86D,SAAU,OAExB,MAAMA,EAAWlhE,KAAKU,KAAKqE,YAAYwjB,WAAWniB,EAAS86D,UAEtDA,IAESv9D,GAAG3D,KAAKE,IAAIi3H,UAAUr5C,cAGpC99E,KAAK83H,kBAAkB/T,UAAUrvG,MAAK,KACnC,MAAM2Y,EAAK6zC,EAAS70C,eAEhBgB,IACDA,EAAGR,UAAUmC,GAEbhvB,KAAKs5H,kBACFt5H,KAAKs5H,mBACLjsG,EAAGjrB,GAAG,mBAAmB,KACtBirB,EAAGR,UAAUmC,EAAM,IAE5B,IAEN,CAEA7pB,eACG,MAAMjF,EAAMF,KAAKE,IACXo4H,EAAY30H,GAAGzD,EAAIi3H,UAEzB,IAAKmB,EAAW,OAEhB,MAAM1yH,EAAQ5F,KAAK4F,MAEnB,IAAKA,EAAO,OAEZ,MAAMrD,EAAO+1H,EAAU5qH,MAEvB,IAAKnL,EAAM,OAEX,MAAMg3H,EAAQ51H,GAAGpB,GAEjB,IAAKg3H,EAAO,OAEZ,MAAMnzH,EAAWpG,KAAKoG,SACtB,IAAI4jB,EAAmB,CACpBC,KAAM,MACN5I,MAAO,IAoBV,GAjBIjb,GAAU4jB,kBAAkB3I,OAAOlb,SACpC6jB,EAAmBhqB,KAAK+B,GAAG2D,UACxB1F,KAAKU,KAAK0F,SAAS4jB,oBAMrBA,GAAkB3I,OAAOlb,QAC1BC,GAAU2jB,iBAAiBC,kBAAkB3I,OAAOlb,SAEpD6jB,EAAmBhqB,KAAK+B,GAAG2D,UACxBU,EAAS2jB,gBAAgBC,oBAK1B5jB,GAAUozH,sBAAwB,IAAInsH,QAAQ,MAAQ,EAAG,CAC3D,MAAM1H,EAASS,EAASozH,qBAAqB9wG,MAAM,KAChD+wG,EAAe9zH,EAAO,GACtB+zH,EAAiB/zH,EAAO,GAE3BqkB,EAAiB3I,MAAM/c,KAAK,CACzBD,IAAKq1H,EACLtpG,KAAM,uBACNztB,MAAO82H,GAEb,CAEA,MAAME,EAA2B,CAAClqF,EAAYg1C,EAAQ,IAC5C,IACDh1C,EAAWpuB,MACVvY,QAAQuB,GAAiB,yBAAXA,EAAE+lB,OAChBjiB,KAAK9D,IACH,MAAMuvH,EAAuBvlH,OAAO6pC,OAAO,CAAC,EAAG7zC,GAI/C,OAFAuvH,EAAqBn1C,MAAQA,EAEtBm1C,CAAoB,KAElC5xG,UACIynB,EAAWpuB,MACVvY,QAAQuB,GAAMA,EAAE4f,OAChB9b,KAAK9D,GAAMsvH,EAAyBtvH,EAAGo6E,EAAQ,MAInDsc,EAAW/gG,KAAKU,KAChB6jF,EAAwBo1C,EAC3B3vG,GACD7b,KAAK9D,IACJ,IAAK,MAAMhG,KAAO08F,EAAS9rF,OAAO62F,eAAgB,CAC/C,KAEM/K,EAAS9rF,OAAO62F,eAAeznG,aAC/BrE,KAAKL,aAGR,SAEH,MAAMk6H,EAAMl2H,GACTo9F,EAAS9rF,OAAO62F,eAAeznG,GAC3B5D,KACAoB,KAAK2rB,MAAMssG,GAAOA,EAAGtB,WAAUA,SAGtC,GAAIqB,GAAK53H,QAAQkF,OAASkD,EAAE1H,MAAO,CAGhC0H,EAAEw6E,YAAcg1C,EAEhB,KACH,CACH,CAEA,MAAM92B,EAAK/iG,KAAK+B,GACV6D,EAAQm9F,EACV9qF,WAAW7R,EAAS8R,UACpBnK,UAAU3H,EAASsE,SAEjBqvH,EADeh3B,EAAG9qF,WAAWrS,EAAMQ,SAASO,YACjBoH,UAAU1D,EAAEhG,KAc7C,OATGgG,EAAE06E,aAHDg1C,GAAa3zH,UAAUgB,WAGP27F,EACb9qF,WAAW8hH,EAAY3zH,SAASO,YAChCI,QACG+B,GACEA,EAAOlI,KAAOm5H,EAAY3zH,SAASiB,YACnC0yH,EAAY3zH,SAASkB,cACzB,GAAGR,WACa,KAEjBuD,CAAC,IAkBX,GAfA02F,EAAS5+F,QAAU,CAChBg8D,SAAU/3D,EAAS+3D,SACnB7nC,QAAStM,EAGTrc,KAAMvH,EAASmG,YAAcnG,EAAS2jB,iBAAiBxd,WACvD67C,SAA+B,IAArBhiD,EAAShB,QACnB8wD,YACI9vD,EAAS86D,UAAkC,SAAtB96D,EAAS86D,UAClCqjB,yBAMCwc,EAAS5+F,QAAQimD,SAAU,CAC5B,MAAM4xE,EAAe,GAErBz1C,EAAsBtgF,SAAS43F,IAC5B,GAAIA,EAAGhX,aAAegX,EAAGx3F,IAAK,CAC3B,MAAM41H,EAAqBt2H,GAAGk4F,EAAGhX,YAAY5iF,OAAOrB,IAEpD,IAAIs5H,EAAc,KAEbD,GAOYr0H,EAAMqG,SAASguH,KAI1BC,EAAc,CACXt5H,GAAIi7F,EAAGhX,YAAY5iF,OAAOrB,GAC1BQ,MAAO64H,EAAmBh4H,OAAOb,QAIvC64H,EAAmB3qG,YAChB,YACAnqB,MAAOkF,IACc4vH,EAAmBhuH,YAGlCstH,EAAM90H,OAAO,YAAY,GACzB80H,EAAM90H,OACH,cACAzE,KAAKoB,MAAM,iBAEdpB,KAAKghF,aACCp7E,EAAMs9E,sBACTq2C,EACAx4B,EAAS5+F,QACTyD,EACAm7F,EAASvlC,uBAEZx7D,KAAKohF,UAELm4C,EAAM90H,OAAO,YAAY,GACzB80H,EAAM90H,OACH,cACAzE,KAAKoB,MAAM,qCAAsC,CAC9C64H,EAAmBh4H,OAAOb,UAOnCm4H,EAAM70H,SAAS,IAElB,IAhDHw1H,EAAc,CACXt5H,GAAI,gBACJQ,MAAOpB,KAAKoB,MAAM,mBAmDrB84H,GACAF,EAAahhE,WAAW3uD,GAAMA,EAAEzJ,KAAOs5H,EAAYt5H,KAAM,GAEzDo5H,EAAa11H,KAAK41H,EACxB,KAGCF,EAAa7zH,SAAWozH,EAAMttH,YAC/BstH,EAAM90H,OAAO,YAAY,GACzB80H,EAAM90H,OACH,cACAzE,KAAKoB,MAAM,qCAAsC,CAC9C44H,EAAa7rH,KAAK9D,GAAMA,EAAEjJ,QAAOkN,KAAK,WAI5CirH,EAAM90H,OAAO,YAAY,GACzB80H,EAAM90H,OAAO,cAAezE,KAAKoB,MAAM,iBAE7C,MACGm4H,EAAM90H,OAAO,cAAe,IAC5B80H,EAAM90H,OAAO,YAAY,GAG5B80H,EAAM70H,UAEN1E,KAAKghF,aACCp7E,EAAMs9E,sBAETo1C,EACAv3B,EAAS5+F,QACTyD,EACAm7F,EAASvlC,uBAEZx7D,KAAKohF,QAGL,MAAM0K,EAAS,GAAGlmF,EAAMvB,OAAOuB,EAAMkB,cAAclB,EAAMhF,MAAMmgG,EAAS9rF,OAAOrU,KAC/E2B,EAAKijF,aAAa,UAAWsG,GAG7B9rF,KAAKi4H,UAAUK,EAAUrsH,WAC5B,CAEA+0E,OACG,MAAMs3C,EAAY30H,GAAG3D,KAAKE,IAAIi3H,UAE9BmB,GAAWlzH,UACXkzH,GAAWjzH,eAAe,CAAEzD,KAAM,QACrC,CAEAw/E,QACG,MAAMk3C,EAAY30H,GAAG3D,KAAKE,IAAIi3H,UAE9BmB,GAAW5wH,SACX4wH,GAAW3wH,gBACd,oBCrnBH,MAAMgnG,EAA0B,EAAQ,OAClCyiB,EAAe,EAAQ,OACvB+I,EAAoB,EAAQ,OAIlC16H,EAAOC,QAAU,cAAwC,EAGtDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,oBAAoBkhG,EAASngG,KAAMV,EAChE,CAEIk6H,gBACD,MAAMr5B,EAAW/gG,KAAKU,KAEhBq3H,EADOh3B,EAASvlC,uBACKp1D,UAAY,CAAC,EAClCA,EAAW26F,EAAS36F,UAAY,CAAC,EAEvC,IAAIutE,EAAWokD,EAAaj2H,WAM5B,OAJIsE,EAAS+3D,SAAUwV,GAAY,GAC1BokD,EAAapiE,WAA4C,QAA/BoiE,EAAapgE,gBAC7Cgc,EAAW,GAEPA,CACV,CAEAlzE,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QAEjBmyH,EADOh3B,EAASvlC,uBACKp1D,UAAY,CAAC,EAClCA,EAAWR,GAAOQ,UAAY26F,EAAS36F,UAAY,CAAC,EAEpDi0H,EACHz0H,GAAOQ,UAAU21C,UAAY/7C,KAAKoG,SAAS21C,SACtC,iBACA,GAER,IAAI00E,EAAgB,GAEhBsH,EAAapiE,YAEX86D,EADgC,QAA/BsH,EAAapgE,cACE,+KAA+K0iE,qBAE/K,mMAAmMA,sBAGzN,IAAIt5H,EAAS,GAET6E,aAAiBwrH,EACdhrH,EAAS46C,UACyB,QAA/B+2E,EAAapgE,eACd52D,EAAS4kB,SAASvf,EAAS66C,cAlDnB,GAmDRlgD,GAAU,IAEVA,EAAS4kB,SAASvf,EAAS66C,cArDnB,GAwDXlgD,EADuC,QAA/Bg3H,EAAapgE,cACZ2iE,IAxDE,GA8DNvC,EAAapiE,WAA4C,QAA/BoiE,EAAapgE,gBAC/C52D,EA/Dc,IAiEjB,MAAMukE,EAAW,2BACdyyD,EAAapgE,kBAEiB,OAA9BogE,EAAapgE,cAAyB,GAAK84D,oBAE1Cv9G,QAAQ,WAAY6kH,EAAaj2H,YACjCoR,QAAQ,WAAYtN,EAAMxE,OAC1B8R,QACE,cACAtN,GACKouE,aAAa,CACZhzE,MAAOhB,KAAKo6H,UACZr5H,OAAQA,EACRqnD,UAAU,IAEZkd,SAAS,CAAC,IAAM,IAG1B,OAAOxlE,MAAMW,GAAG,CACbC,KAAM,YACNoB,WAAY,EACZ6sH,SAAU,EACVD,SAAU,EACVxtH,IAAK,kBAILO,KAAM,CACHf,KAAM,IAAIy5H,EAAkBn6H,KAAK+B,GAAG85B,MAAMx3B,IAC1CnD,IAAK,iBACLS,YAAY,EACZ2jE,SAAUA,EACVvkE,OAAQA,EACRgjH,QAAS,CACNqU,YAAa,CAAC7hG,EAAKlsB,EAAGguH,KACnB,GAAyB,IAArBjyH,EAAShB,QAAe,OAE5B,IAAIqpB,EAAU,CAAC,EAEf,MAAM0vC,EACHn+D,MAAMw7D,yBACNx7D,KAAKU,MAAM86D,wBAEd,GAAI2C,EAAU,CACX,MAAMxqC,EAAKwqC,EAAS9xC,eAChBsH,IAAIlF,EAAUkF,EAAG1G,aAAe,CAAC,EACxC,CAGA,IAAI1qB,EAAOoB,GAAG00H,GAAK5sH,gBAAgBiC,MACnC9H,GAAOs8E,WACJzzD,EACAzuB,KAAKu6H,OACLh4H,EACAvC,KAAKE,IAAIi3H,SACT5gG,EACF,KAKhB,CAEA/rB,SACG,MAAMtK,EAAMF,KAAKE,IACXo4H,EAAY30H,GAAGzD,EAAIi3H,UAEzB,IAAKmB,EAAW,OAEhB,MAAMv3B,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QAEpBrD,EAAO+1H,EAAU5qH,MAGdo+E,EAAS,GAAGiV,EAAS18F,OAAOuB,EAAMvB,OAAOuB,EAAMkB,cAAci6F,EAASngG,MAAMmgG,EAAS9rF,OAAOrU,KAClG2B,EAAKijF,aAAa,UAAWsG,GAE7B,MAAM3pF,EAAU,CACbsmF,OAAQvoF,EAAIi3H,SACZ/uE,SAAwC,IAA9B24C,EAAS36F,SAAShB,SAG3BQ,aAAiBwrH,IAClBjvH,EAAQpB,OAAS6E,EAAMQ,SAAS46C,WAC3Br7B,SAAS/f,EAAMQ,SAAS66C,cAtJf,GAwJd9+C,EAAQnB,MAAQ4E,EAAMQ,SAAS06C,UAC1Bn7B,SAAS/f,EAAMQ,SAAS26C,aACxB/gD,KAAKo6H,WAGbx0H,EAAM8uE,cArBO,CAAC,EAqBe10E,KAAK+B,GAAG85B,KAAMt5B,EAAMJ,EACpD,CAEA8J,SAASwiB,GACN,MAAM7oB,EAAQ5F,KAAKU,KAAKkF,QAClB0yH,EAAY30H,GAAG3D,KAAKE,IAAIi3H,UAE9B,OAAOvxH,EAAMqG,SAASqsH,EAAW7pG,EACpC,oBCzKH,MAAMkgF,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAA4C,EAG1DC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,wBAAwBkhG,EAASngG,KAAMV,EACpE,CAEAO,KACG,MAAMmF,EAAQ5F,KAAKU,KAAKkF,QAElB+7F,EAAM,CACTjhG,KAAM,cAGT,OAAKkF,GAG8B,IAA/BA,EAAMQ,UAAU81C,aAAkBylD,EAAI//F,KAAO,QAG/B,aAAdgE,EAAMvB,KAAqD,IAA/BuB,EAAMQ,UAAU03C,aAC7C6jD,EAAI7/B,YAAa,GAGpB6/B,EAAIv5C,UAAW,GAGXu5C,EAAIh/F,OAAWg/F,EAAIh/F,iBAAiB8d,OACrCkhF,EAAIh/F,MAAQ,IAAI8d,KAAKkhF,EAAIh/F,QAGd,OAAViD,GAAmBsT,OAAOysE,cAAagc,EAAInhF,OAAS5a,EAAM43C,aAEvD19C,MAAMW,GAAGkhG,IAnBGA,CAoBtB,oBCpCH,MAAMpB,EAAkB,WAExB9gG,EAAOC,QAAU,cAAsC6gG,EACpD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,kBAAkBkhG,EAASngG,KACrCyT,OAAO6pC,OAAO,CAAEi5E,SAAU,IAAMj3H,GAEtC,CAEAO,GAAG+5H,EAAsB,CAAC,GAEvB,MAAMz5B,EAAW/gG,KAAKU,KAChBwJ,EAAO62F,EAASvlC,sBACnB51D,EAAQm7F,EAASn7F,WAAa,KAE3BQ,EAAW8D,GAAM9D,UAAY,CAAC,EAC9Bq0H,EAAc,CACjB75H,GAAIZ,KAAKE,IAAIi3H,SACbx/D,cAAevxD,EAASuxD,cACxB71D,WAAYsE,EAAStE,WACrBV,MANQ,IASX,GAAIwE,EAAO,CACR60H,EAAYtzH,KAAOvB,EAAMkB,WAGzB,MAAM+C,EAAO,CAAC,EAEdjE,EAAMw/B,aAAav7B,GAEfA,EAAKjE,EAAMkB,cAAa2zH,EAAY93H,MAAQkH,EAAKjE,EAAMkB,aAEvDV,EAASuvD,YAAW8kE,EAAYr5H,MAAQwE,EAAMxE,QAE9CwE,EAAMQ,SAAS21C,UAAYglD,EAAS36F,UAAU21C,YAC/C0+E,EAAY1+E,SAAW,GAES,IAA/BglD,EAAS36F,UAAUhB,UAAeq1H,EAAY5xF,UAAW,GAG7D4xF,EAAYr4H,GAAK,CACd+4E,gBACG,GAAIn7E,KAAKy+E,QAAS,CACf,MAAM/F,EAAQ14E,KAAKg/E,WAEnB,IAAKtG,EAAO,OAEZ14E,KAAKy+E,UAAU50E,KAAKy7E,MAAMC,IACvB,IAAKA,EAAQ,OAGb,MAAMhjF,EAAOm2E,EAAMhrE,MAAM6jE,cACtB,iBAAiBgU,GAAQ3kF,IAAM,IAC3BgU,WACAnB,WAAW,IAAK,YAGlBlR,GAELA,EAAKijF,aACF,UACA,GAAG5/E,EAAMvB,eAAekhF,EAAO3kF,MAAMgF,EAAMhF,MACxCsJ,GAAMtJ,IAAM,OAEjB,GAEP,CAEAZ,KAAK2nG,iBAAiBniB,eACnB,UACA,GAAG5/E,EAAMvB,OAAOuB,EAAMkB,cAAclB,EAAMhF,MACvCsJ,GAAMtJ,IAAM,OAGrB,GAMH65H,EAAY/8C,SAAW,CAACxnE,EAAKrM,EAAM2uB,KAChC,MAAMjxB,EAAYvH,KAAK+B,GAAGgc,WAAWxW,YAIrC,OAFA3B,EAAM4qB,YAAY3mB,EAAMtC,GAEjBA,EAAUmW,MAAM,CAE7B,CAEA,MAAMikF,EAAM7hG,MAAMW,GAAG,CAClB4T,OAAO6pC,OAAO,CAAC,EAAGu8E,EAAaD,KAKlC,cAFO74B,EAAI//F,KAEJ+/F,CACV,oBCnGH,MAAMgN,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAAsCivG,EACpDhvG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,kBAAkBkhG,EAASngG,KAAMV,GACjC,UAAtBF,KAAKoG,SAASxE,OACf5B,KAAK06H,UAAY16H,KAAK+B,GAAGgzB,iBACtB,GAAGgsE,EAASngG,mBACZ,CACGk4E,cAAc,EACd/3E,OAAQ,IACRY,YAAY,EACZ6tC,gBAAgB,IAI5B,CAEAmrF,eAAetwE,GACZ,GACGA,GAAUjkD,UAAUw0H,aACpBvwE,GAAU3pD,MAAMuU,QAAQ62F,eACzB,CACC,IAAI8uB,EAAc,GAClB,IAAK,MAAOv2H,EAAK1B,KAAU0R,OAAOwmH,QAC/BxwE,EAAS3pD,KAAKuU,OAAO62F,gBAEjBnpG,EAAMyD,SAASsE,SAAW2/C,EAASjkD,SAASw0H,cAC7CA,EAAcj4H,GAIpB,OAAIi4H,GAAa16H,KAAKi3H,SACZyD,EAAY16H,IAAIi3H,SAEhB,EAEb,CACG,MAAO,EAEb,CAEI2D,uBAED,IAAIt0G,EAAUxmB,KAAK+B,GAAGykB,UAGlBu0G,EAAe,GAKnB,OAJAv0G,EAAQviB,SAAS+T,IACd+iH,EAAaz2H,KAAK,CAAE1D,GAAIoX,EAAIpX,GAAIQ,MAAO4W,EAAI5W,OAAQ,IAG/C25H,CACV,CAEAC,cAAcr1H,GACX,GAAIA,EAAQ,CACT,IAAIs1H,EAAY,GAChBt1H,EAAO1B,SAAS+T,IACb,IACIjR,EADS/G,KAAK+B,GAAGkW,WAAWD,GACZjR,SAChBA,EAAOZ,QACRY,EAAO9C,SAAS+C,IACbi0H,EAAU32H,KAAK0C,EAAE,GAEvB,IAEHhH,KAAK06H,UAAU1lG,WAAWimG,GACtBt3H,GAAG3D,KAAKE,IAAIi3H,UAAUl1H,OAAOU,OAC9B3C,KAAK06H,UAAU71H,SAASlB,GAAG3D,KAAKE,IAAIi3H,UAAUl1H,OAAOU,MAC3D,MACG3C,KAAK06H,UAAU1lG,WAAW,IACtBrxB,GAAG3D,KAAKE,IAAIi3H,UAAUl1H,OAAOU,OAC9B3C,KAAK06H,UAAU71H,SAASlB,GAAG3D,KAAKE,IAAIi3H,UAAUl1H,OAAOU,MAE9D,CAEAsJ,WACG,OAAOjM,KAAK06H,UAAUzuH,UACzB,CAEApH,SAAS+mG,GACNjoG,GAAG3D,KAAKE,IAAIi3H,UAAUl1H,OAAOU,MAAQipG,CACxC,CAEAnrG,KACG,MAAMkhG,EAAM,CAAC,EAEb,OACG3hG,KAAKoG,SAASxE,MACd5B,KAAKU,KAAK0F,SAASxE,MACnB5B,KAAKU,KAAKf,YAAYwlC,gBAAgBvjC,MAEtC,IAAK,SACF+/F,EAAIjhG,KAAO,WACXihG,EAAI94D,UAAW,EACf84D,EAAI5gG,OAAS,IACb4gG,EAAInhF,OAAS,CACV/I,MAAO,SAAUyjH,GACd,IACGA,EAASnnH,KAAK0D,MAAMyjH,EAGvB,CAFE,MAAO/yH,GAET,CACA,OAAO+yH,CACV,EACAxuD,KAAM,SAAU14D,GACb,IACGA,EAAYD,KAAKC,UAAUA,EAG9B,CAFE,MAAO7L,GAET,CACA,OAAO6L,CACV,GAEH,MACH,IAAK,eACF2tF,EAAIjhG,KAAO,aACXihG,EAAIjmB,YAAc17E,KAAKoB,MAAM,qCAC7BugG,EAAI5e,QAAS,EACb4e,EAAIw5B,cAAe,EACnBx5B,EAAIxkB,QAAU,CACXg7C,WAAW,EACX12H,KAAM,CACHoI,KAAM7J,KAAK86H,iBACXx1D,SAAU7hE,MAAM6hE,SAAS,aAG/B,MACH,IAAK,SACFq8B,EAAIjhG,KAAO,YACXihG,EAAIzgG,IAAM,kBACVygG,EAAIlgG,KAAOzB,KAAK06H,UAAUj6H,GAIhC,OAAOX,MAAMW,GAAGkhG,EACnB,CAEAr+F,OAIA,CAEAkH,SAEG,GADYxK,KAAKS,KACW,UAAxBT,MAAMoG,UAAUxE,KAAkB,CACnC,IAAIg5H,EAAc56H,KAAK26H,eAAe36H,MACtC,IAAK2D,GAAGi3H,GAAc,OACtBj3H,GAAGi3H,GAAa3rD,YAAY,YAC5BtrE,GAAGi3H,GAAatrG,YAAY,YAAa3pB,IACtC3F,KAAKg7H,cAAcr1H,EAAO,IAE7B3F,KAAK06H,UAAUp3H,KAAK,CAAEksC,gBAAgB,IACtCxvC,KAAK06H,UAAUt4H,GAAG,WAAY8T,IAC3BlW,KAAK6E,SAASqR,EAAI,IAEjBvS,GAAG3D,KAAKE,IAAIi3H,UAAUl1H,OAAOU,MAC9B3C,KAAK06H,UAAU71H,SAASlB,GAAG3D,KAAKE,IAAIi3H,UAAUl1H,OAAOU,OAErD3C,KAAK06H,UAAU71H,SAAS,GAE9B,CACH,oBCpKH,MAAM8pG,EAA0B,EAAQ,OAClCysB,EAAkB,EAAQ,OAEhC37H,EAAOC,QAAU,cAAwC,EAGtDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,oBAAoBkhG,EAASngG,KAAMV,GAE7DF,KAAKq7H,oBAAsB,IAC9B,CAEIC,yBACD,OAAQt7H,KAAKq7H,oBACVr7H,KAAKq7H,qBAAuB,IAAID,EAAgBp7H,KAAK+B,GAAG85B,MAAMx3B,GACpE,CAEA5D,KACG,OAAOX,MAAMW,GAAG,CACbC,KAAMV,KAAKoG,SAASg8D,UAAY,UAAYpiE,KAAKs7H,mBACjD15H,KAAM,SACN87E,SAAWxnE,IAAS2sC,MAAY,EAAN3sC,IAEhC,oBCvBH,MAAMy4F,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAA0C,EAGxDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,sBAAsBkhG,EAASngG,KACzCyT,OAAO6pC,OACJ,CACGonB,SAAU,IAEbplE,GAGT,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QAEjB+7F,EAAM,CACTjhG,KAAM,YACNoB,WAAY,EACZ6sH,SAAU,EACVD,SAAU,EACV6M,UAAU,EACVr6H,IAAK,oBAKLO,KAAM,CACHb,GAAIZ,KAAKE,IAAIolE,SACb5kE,KAAM,QACNiB,YAAY,EACZT,IAAK,CAAE,mBAAoB,QAC3BE,MAAO,KAIPgF,EAAW26F,EAASvlC,sBAAsBp1D,UAAY,CAAC,EAQ7D,OAN0B,GAAtBA,EAASuvD,WAA+C,OAA1BvvD,EAASuxD,cACxCgqC,EAAIlgG,KAAKV,OAAS,GACV6E,EAAMQ,SAAS46C,UACvB2gD,EAAIlgG,KAAKV,OAAS4kB,SAAS/f,EAAMQ,SAAS66C,cAAgB,GACtD0gD,EAAIlgG,KAAKV,OAAS,GAElBjB,MAAMW,GAAGkhG,EACnB,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMu2H,EAAY30H,GAAG3D,KAAKE,IAAIi3H,UAC9B,IAAKmB,EAAW,OAEhB,MAAMh4C,EAAQg4C,EAAUx6C,cAClBrvD,EAAU6xD,GAAOsP,aAAe,CAAC,EAEvC5vF,KAAK0E,QAAQ+pB,GACb6xD,GAAOhxD,YAAY,YAAY,CAACjkB,EAAMC,KACnC,MAAMmjB,EAAU6xD,GAAOsP,aAAe,CAAC,EAEvC5vF,KAAK0E,QAAQ+pB,EAAQ,GAE3B,CAEAjkB,SACG,MAAM8tH,EAAY30H,GAAG3D,KAAKE,IAAIi3H,UAC9B,IAAKmB,EAAW,OAEhB,MACM7pG,EADQ6pG,EAAUx6C,eACD8R,aAAe,CAAC,EAEvC5vF,KAAK0E,QAAQ+pB,EAChB,CAEAxiB,SAASwiB,GACN,MAAM7oB,EAAQ5F,KAAKU,KAAKkF,QACxB,OAAKA,EAEE6oB,EAAQ7oB,EAAMkB,YAFF,IAGtB,CAEApC,QAAQ+pB,GACL,MAAMsyE,EAAW/gG,KAAKU,KAChBwJ,EAAO62F,EAASvlC,sBACnB51D,EAAQm7F,EAASn7F,QAEdmyH,EAAe7tH,EAAK9D,UAAY,CAAC,EAEvC,IAAIqqH,EAAgB,GAEhBsH,EAAapiE,YAEX86D,EADgC,QAA/BsH,EAAapgE,cACE,gLAAgL/xD,EAAMxE,gBAEtL,wBAAwB22H,EAAaj2H,0KAA0K8D,EAAMxE,iBAG3O,IAAIuyE,EAAWokD,EAAaj2H,WAExB9B,KAAKoG,SAAS+3D,SAAUwV,GAAY,GAC/BokD,EAAapiE,WAA4C,QAA/BoiE,EAAapgE,gBAC7Cgc,EAAW,GAEd,MAAMrO,EACH,8BAA8BmrD,oBAAgCv9G,QAC3D,cACAtN,EACIouE,aAAa,CACXhzE,MAAO2yE,EACPvrB,UAAU,IAEZkd,SAAS72C,IAInB9qB,GAAG3D,KAAKE,IAAIolE,WAAWk2D,QAAQl2D,EAClC,oBC1HH,MAAMqpC,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAAyD,EAGvEC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,4BAA4BkhG,EAASngG,KAAMV,EACxE,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QACpBQ,EAAWpG,KAAKoG,SACbjE,EAAU,GAEG,SAAfyD,GAAOvB,IAAgBlC,EAAQmC,QAAQsB,EAAMkzD,YACxClzD,GACNzD,EAAQmC,QAASsB,EAAMQ,SAASjE,SAAWiE,EAASjE,SAAW,IAElE,MAAMjC,EAAMF,KAAKE,IACXyhG,EAAM,CACT/gG,GAAIV,EAAIi3H,SACRz2H,KAAM0F,EAASxE,MAAQm/F,EAASphG,YAAYwlC,gBAAgBvjC,KAC5DO,QAASA,EAAQgM,KAAKuzC,IACZ,CACJ9gD,GAAI8gD,EAAI9gD,GACR+B,MAAO++C,EAAIrzC,KACXuzC,IAAKF,EAAIE,SAKlB,OAAQ+/C,EAAIjhG,MACT,IAAK,aACFihG,EAAI85B,SAAU,EACd95B,EAAIzgG,IAAM,yBACVygG,EAAI+5B,YAAe/1H,IAChB,MAAMg2H,EAAkB,GAClBrD,EAAY30H,GAAGzD,EAAIi3H,WAAaxzH,GAAGg+F,EAAI/gG,IAE7C+E,EAAO1B,SAASiS,IACbylH,EAAgBr3H,KAAKg0H,EAAU75C,UAAUtxD,QAAQjX,GAAK,IAGzD,IAAIzQ,EAAOk2H,EAEP/1H,EAAMolF,qBACPvlF,EAAOG,EAAMolF,mBAAmBplF,EAAO+1H,IAE1C,MAAM5vC,EAAQ,GAkBd,OAhBAtmF,EAAKxB,SAASiS,IACX,IAAIy0E,EAAiB,GACjBC,EAAY,GAEZhlF,EAAMQ,SAASm7C,WAAarrC,EAAI0rC,MACjC+oC,EAAiB,iBACjBC,EAAY,eAAe10E,EAAI0rC,QAGlC,MAAMvzC,EAAO6H,EAAI7H,KAAO6H,EAAI7H,KAAO6H,EAAIvT,MAEvCopF,EAAMznF,KACH,uCAAuCqmF,aAA0BC,gBAAwB10E,EAAItV,aAAayN,sGAC5G,IAGG09E,EAAMz9E,KAAK,GAAG,EAGxB,MAEH,IAAK,WAEFqzF,EAAIx/F,QAAQmC,KAAK,CACd1D,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,YAM3B,OAAOtB,MAAMW,GAAGkhG,EACnB,CAEA11F,SAASwiB,GACN,MAAM7oB,EAAQ5F,KAAKU,KAAKkF,QACrB0yH,EAAY30H,GAAG3D,KAAKE,IAAIi3H,UAE3B,OAAOvxH,EAAMqG,SAASqsH,EAAW7pG,EACpC,oBC1FH,MAAMkgF,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAAuD,EAGrEC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,0BAA0BkhG,EAASngG,KAAMV,EACtE,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QACpBQ,EAAW26F,EAAS36F,SACjBjE,EAAU,GAEG,SAAfyD,GAAOvB,IAAgBlC,EAAQmC,QAAQsB,EAAMkzD,YACxClzD,EACNzD,EAAQmC,QAASsB,EAAMQ,SAASjE,SAAWiE,EAASjE,SAAW,IAC7DA,EAAQmC,QAAS8B,EAASjE,SAAW,IAE1C,MAAMw/F,EAAM,CACTjhG,KAAM0F,EAASxE,MAAQm/F,EAASphG,YAAYwlC,gBAAgBvjC,MAkD/D,OA/CIgE,GAAOQ,SAASm7C,WACjBogD,EAAIzgG,IAAM,kBACVygG,EAAIx/F,QAAU,CACXzB,KAAM,UACNe,KAAM,CACHf,KAAM,OACNmJ,KAAM1H,EAAQgM,KAAKuzC,IACT,CACJ9gD,GAAI8gD,EAAI9gD,GACR+B,MAAO++C,EAAIrzC,MAAQqzC,EAAI/+C,MACvBi/C,IAAKh8C,EAAMQ,SAASm7C,UAAYG,EAAIE,IAAM,OAGhD0jB,SAAU,SAAU3iE,GACjB,MAAMopF,EAAQ,GAEd,IAAIpB,EAAiB,GACjBC,EAAY,GAWhB,OATIjoF,EAAMi/C,MACP+oC,EAAiB,iBACjBC,EAAY,eAAejoF,EAAMi/C,QAGpCmqC,EAAMznF,KACH,uCAAuCqmF,aAA0BC,gBAAwBjoF,EAAM/B,aAAa+B,EAAMA,uBAG9GopF,EAAMz9E,KAAK,GACrB,KAINqzF,EAAIx/F,QAAUA,EAAQgM,KAAKuzC,IACjB,CACJ9gD,GAAI8gD,EAAI9gD,GACR+B,MAAO++C,EAAIrzC,MAAQqzC,EAAI/+C,UAKf,UAAbg/F,EAAIjhG,MAAoBihG,EAAIx/F,QAAQgE,OAAS,GAC9Cw7F,EAAIx/F,QAAQmC,KAAK,CACd1D,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,YAGjBtB,MAAMW,GAAGkhG,EACnB,oBCxEH,MAAMgN,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAAyC,EAGvDC,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,qBAAqBkhG,EAASngG,KAAMV,EACjE,CAEAO,KACG,MAAMkhG,EAAM,CAAC,EAEb,OACG3hG,KAAKoG,SAASxE,MACd5B,KAAKU,KAAK0F,SAASxE,MACnB5B,KAAKU,KAAKf,YAAYwlC,gBAAgBvjC,MAEtC,IAAK,SACF+/F,EAAIjhG,KAAO,OACX,MACH,IAAK,WACFihG,EAAIjhG,KAAO,WACXihG,EAAI5gG,OAAS,IACb,MACH,IAAK,OACF4gG,EAAIjhG,KAAO,YACXihG,EAAI5gG,OAAS,IACb4gG,EAAIzgG,IAAM,eACVygG,EAAIlgG,KAAO,CACRf,KAAM,iBACNiC,MAAO,GACPu3G,IAAK,2BACLj4G,OAAQ,CACL6f,QAAS,OACT85G,QAAS,cACTxlB,QACG,mJAMf,OAAOt2G,MAAMW,GAAGkhG,EACnB,CAEAn3F,SACG,MAAMpE,EAAWpG,KAAKU,KAAK0F,UAAY,CAAC,EAElCq0H,EADMz6H,KAAKS,KACOoB,KAAK,GAC7B,IAAIy2H,EAAY30H,GAAG82H,EAAY75H,IAI/B,GAAsB,SAAlBwF,EAASxE,MAAmB02H,EAAW,CAExCA,EAAYt4H,KAAK+B,GAAG4Y,MAAMla,GAAGg6H,EAAanC,GAG1C,MAAMv3B,EAAW/gG,KAAKU,KAEtB43H,EACIxtH,gBAAgB,GAChB+wH,WAAU,GACVnnH,MAAMpP,IACJ,MAAMwmF,EAAS,GAAGiV,EAAS18F,YAAYo2H,EAAYtzH,QAChD45F,EAASngG,IAAM,MACdmgG,EAAS9rF,QAAQrU,IAAM,KAE3B0E,EAAOw2H,qBAAqBt2C,aAAa,UAAWsG,EAAO,GAEpE,CACH,mBCvEH,MAAM6iB,EAA0B,EAAQ,OAExClvG,EAAOC,QAAU,cAAsCivG,EACpDhvG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,kBAAkBkhG,EAASngG,KAAMV,EAC9D,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAChBkF,EAAQm7F,EAASn7F,QAEjB+7F,EAAM,CAAC,EAGb,IAAK/7F,EAAO,OAAO9F,MAAMW,GAAGkhG,GAE5B,MAAMo2B,EAAeh3B,EAASvlC,sBAAsBp1D,UAAY,CAAC,EAE3Di0H,EACyB,IAA5Bz0H,EAAMQ,SAAS21C,SAAiB,iBAAmB,GAEtD,IAAI00E,EAAgB,GAEhBsH,EAAapiE,YAEX86D,EADgC,QAA/BsH,EAAapgE,cACE,+KAA+K0iE,qBAE/K,mMAAmMA,sBAGzN,IAAI1mD,EAAWokD,EAAaj2H,WAExB9B,KAAKoG,SAAS+3D,WAAUwV,GAAY,IAExC,MAAMrO,EAAW,GAAGmrD,cAChBv9G,QAAQ,WAAY6kH,EAAaj2H,YACjCoR,QAAQ,WAAYtN,EAAMxE,OAC1B8R,QACE,cACAtN,EAAMouE,aAAa,CAChBhzE,MAAO2yE,IACPrO,UAuBT,OApBAq8B,EAAIjhG,KAAO,WACXihG,EAAIzgG,IAAM,eACVygG,EAAI5gG,OAC4B,IAA7B6E,EAAMQ,SAAS46C,UACVr7B,SAAS/f,EAAMQ,SAAS66C,aACxB,GACR0gD,EAAIhgG,YAAa,EAEjBggG,EAAIr8B,SAAW,4BAA4BA,UAE3Cq8B,EAAIoiB,QAAU,CACXqU,YAAa,CAACx3H,EAAIyJ,EAAGguH,KAClB,MAAM5pG,EAAU,CAAC,EACdlsB,EAAOoB,GAAG3D,KAAKE,IAAIi3H,UAAUzpH,MAEhC+gB,EAAQ7oB,EAAMkB,YAAc9G,KAAKiM,WACjCrG,EAAMs8E,WAAWzzD,EAASzuB,KAAK+B,GAAG85B,KAAMt5B,EAAMvC,KAAK,GAIlDF,MAAMW,GAAGkhG,EACnB,CAEA11F,SAASwiB,GACN,IAAIhpB,EAAO9B,GAAG3D,KAAKE,IAAIi3H,UAAUvnC,YAKjC,OAFIziF,MAAMC,QAAQ3H,IAAyB,IAAhBA,EAAKU,SAAcV,EAAO,IAE9CA,CACV,oBC1EH,MAAM86F,EAAkB,WAExB9gG,EAAOC,QAAU,cAAmC6gG,EACjD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,eAAekhG,EAASngG,KAClCyT,OAAO6pC,OAAO,CAAE+a,MAAO,IAAM/4D,GAEnC,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBu7F,EAAM7hG,MAAMW,GAAG,CAClB,CACGU,KAAM,CACH,CACGP,GAAIZ,KAAKE,IAAI+4D,MACbv4D,KAAM,WACN4kE,SAAU,GACVvkE,OAAQqF,EAASrF,OACjBC,MAAOoF,EAASpF,OAEnB,CAAC,MAOV,cAFO2gG,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMg6H,EAASp4H,GAAG3D,KAAKE,IAAI+4D,OAC3B,IAAK8iE,EAAQ,OAEb,MAAM31H,EAAWpG,KAAKoG,SAElBA,EAASo5C,SACVu8E,EAAOt3H,OACJ,WACA,mBAAmB2B,EAASo5C,qBAAqBp5C,EAASrF,kBAAkBqF,EAASpF,WAEtF+6H,EAAOt3H,OAAO,WAAY,IAE/Bs3H,EAAOr3H,SACV,oBCjDH,MAAM67F,EAAkB,WAClBy7B,EAAkB,EAAQ,OAEhCv8H,EAAOC,QAAU,cAAoC6gG,EAClD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,gBAAgBkhG,EAASngG,KACnCyT,OAAO6pC,OACJ,CACG+9E,WAAY,GAEZC,OAAQ,GACRC,QAAS,GACTC,cAAe,IAElBl8H,IAINF,KAAKq8H,SAAW,IAAIL,EACjBh8H,KACAA,KAAKE,IAAIk8H,cACTp8H,KAAKoG,SAAS8+D,YAGjBllE,KAAKs8H,qBAAuB,KAC5Bt8H,KAAKu8H,uBAAyB,KAC9Bv8H,KAAKw8H,kBAAoB,KAEzBx8H,KAAKwlE,aAAeu7B,EAASv7B,aAE7BxlE,KAAKy8H,oBAAsB,KAC3Bz8H,KAAK08H,gBAAkB,KACvB18H,KAAK28H,aAAe,KACpB38H,KAAK48H,aAAe,IACvB,CAEI30E,qBACD,OAAQjoD,KAAK08H,gBACV18H,KAAK08H,iBACL18H,KAAK+B,GAAG0c,MAAMjf,eAAeq9H,WAAW,gBAC9C,CAEIC,kBACD,OAAQ98H,KAAK28H,aACV38H,KAAK28H,cAAgB38H,KAAK+B,GAAG0c,MAAMjf,eAAeq9H,WAAW,OACnE,CAEIztE,kBACD,OAAQpvD,KAAK48H,aACV58H,KAAK48H,cAAgB58H,KAAK+B,GAAG0c,MAAMjf,eAAeq9H,WAAW,OACnE,CAEAp8H,KACG,MAAMP,EAAMF,KAAKE,IACX6/E,EAAO//E,KACbA,KAAKyhG,SAAWzhG,KAAKU,KAAKghG,eAAevhG,YAEzC,MAAMwhG,EAAM7hG,MAAMW,GAAG,CAClB,CACGG,GAAIV,EAAI+7H,WACR96H,KAAM,CACH,CACGP,GAAIV,EAAIg8H,OACRx7H,KAAM,SACNS,KAAM,GACN0P,SAAU,CACPnQ,KAAM,OAGN4kE,SAAU,qCACVtkE,MAAO,IACPoB,GAAI,CACD26H,eAAgB,WAEb,IAAKh9C,EAAK08C,oBAAqB,OAE/B,MAAMO,EAASh9H,KAAKi9H,eAAc,GAC7BD,GAELj9C,EAAKm9C,YAAYn9C,EAAK08C,oBAAqBO,EAC9C,IAGN13H,QAAQ,EACR8J,MAAO,GACP+tH,KAAM,GACNtzH,KAAM,GACNzH,GAAI,CACDg7H,kBAAmB,CAACtwG,EAAQ7iB,KACzBjK,KAAK4xG,uBAAuB/kF,UAAUC,GACtC9sB,KAAKwP,KAAK,SAAUsd,GAGpB,MAAMopC,EAAWl2D,KAAKoG,SAAS8vD,SAC3BA,GACDl2D,KAAKyhG,SAAShB,WAAWvqC,EAAUppC,GAEtC,MAAMkpC,EAAch2D,KAAKoG,SAAS4vD,YAC9BA,GACDh2D,KAAKyhG,SAAShB,WAAWzqC,EAAalpC,EAAO,EAEnDuwG,oBAAqB,CAACruG,EAAOzX,KAC1BvX,KAAKs9H,aAAatuG,EAAOzX,EAAO,EAEnCgmH,cAAgBvuG,IAEbhvB,KAAKy8H,oBAAsBztG,CAAK,IAIzC,CACGpuB,GAAIV,EAAIi8H,QACRz7H,KAAM,UACNQ,IAAK,UACLF,MAAO,GACP63E,QAAQ,GAEX74E,KAAKq8H,SAAS57H,SAOvB,cAFOkhG,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMihG,EAAUhjG,KAAK+B,GAAG4Y,MAEpB3a,KAAKw9H,KAAKx6B,EAAQt/F,OAAO1D,KAAKw9H,IAAKx6B,EAAQp/F,aAE/C5D,KAAKq8H,SAAS/4H,KAAKvB,GACnB/B,KAAKq8H,SAASj6H,GAAG,OAAQk/G,IACtBthH,KAAK8sH,SAASxL,EAAQ,IAEzBthH,KAAKq8H,SAASj6H,GAAG,UAAWi/G,IACzBrhH,KAAK8sH,SAASzL,EAAW,IAG5B,IAAIh0F,EAAKrtB,KAAKU,KAAK2rB,eACfgB,GAAIrtB,KAAKsyG,mBAAmBjlF,GAEhCrtB,KAAKyhG,SAASn+F,KAAK,CAChB5C,KAAMV,KAAKU,KACX2rB,eAAgBgB,IAGnBrtB,KAAK4E,MACR,CAEI44H,UACD,OAAQx9H,KAAKy9H,IAAMz9H,KAAKy9H,KAAO95H,GAAG3D,KAAKE,IAAIg8H,OAC9C,CAEAwB,qBACG,MAAO,CACJpgH,MAAO,CAEJ,CACG/R,KAAM,gBACNhK,MAAQytB,IACLhvB,KAAK29H,WAAW3uG,EAAM,IAK/B4uG,eAAiB5lH,GAEXhY,KAAKw8H,mBACLxkH,EAAIhY,KAAKw8H,kBAAkB11H,YAEpB9G,KAAKw8H,kBAAkBh8G,OAAOxI,GAC5B,8CAIf6lH,aAAeh0H,GAEP7J,KAAKwlE,aAAan3D,KAIhBrO,KAAKwlE,aAAawE,YAAYngE,GAH3B7J,KAAKyK,eAAeg7B,YAAY57B,GAMnD,CAOAlF,OACGhB,GAAG3D,KAAKE,IAAI+7H,aAAat3H,MAC5B,CAMAQ,aACG,MAAMjF,EAAMF,KAAKE,IAEjByD,GAAGzD,EAAI+7H,aAAar3H,OAEpB5E,KAAKq8H,SAAS13H,OAEdhB,GAAGzD,EAAIi8H,UAAUx3H,OAEjB,IAAI8F,EAAgBzK,KAAKyK,cAIzB,GAHKA,IACFA,EAAgBzK,KAAKqsB,gBAAgBD,aAEnC3hB,EAAe,OAIpB,MAAM6xH,EAAuB7xH,EAAcsD,UACxC/N,KAAKoG,SAAS++D,uBAEjB,IAAKm3D,EAAsB,OAE3Bt8H,KAAKs8H,qBAAuBA,EAE5B,IAAIwB,EAAoB,GAExB,MAAMvB,EAAyB9xH,EAAcsD,UAC1C/N,KAAKoG,SAASg/D,yBAGjBplE,KAAKu8H,uBAAyBA,EAG3BA,GACAA,aAAkCv8H,KAAKioD,iBAGvC61E,QAA0BvB,EAAuBt7C,cAGpD,MAAM88C,GAAmBzB,EAAqBl2H,SAASjE,SAAW,IAAIgM,KAClEuzC,IAEE,GAAI46E,GAAwBC,EAAwB,CACjD,IAAI16H,EAAO,GAKRm8H,EAAiB,GAiDpB,OA9CIzB,aAAkCv8H,KAAKovD,YAExC4uE,GACGzB,EAAuBn2H,SAASjE,SAAW,IAC5CgM,KAAKgY,GAAMA,IACLo2G,aAAkCv8H,KAAK88H,YAC/CkB,EAAiBzB,EAAuBzjE,WAAW3qD,KAC/CqtE,IACS,CACJ56E,GAAI46E,EAAE56E,GACNyN,KAAMmtE,EAAEntE,MAAQmtE,EAAE74E,UAInB45H,aAAkCv8H,KAAKioD,iBAC/C+1E,EAAiBF,EAAkB3vH,KAAI,EAAGvN,KAAIyN,WAAW,CACtDzN,KACAyN,YAGN2vH,EAAe15H,KAAK,CACjB1D,GAAI,KACJyN,KAAMrO,KAAKoB,MAAM,WAGpB48H,EAAe/5H,SAASiS,IACrB,MAAM+nH,EAAY,CAAC,EAEnBA,EAAU3B,EAAqBx1H,YAAc46C,EAAI9gD,GACjDq9H,EAAU1B,EAAuBz1H,YAAcoP,EAAItV,GAGnDiB,EAAKyC,KAAK,CACPghE,SAAUpvD,EAAI7H,KACdtN,OAAQ,GACRG,IAAK,oBAIRW,EAAKyC,KAAK,CACP5D,KAAM,aACN6W,OAAQ0mH,EACRr8H,KAAM5B,KAAK09H,sBACZ,IAGE,CACJ3pD,OAAQryB,EAAIrzC,KACZ5M,KAAM,CACH44E,OAAQ,EACRx4E,KAAMA,GAGf,CAEK,GAAIy6H,EAAsB,CAC5B,MAAM2B,EAAY,CAAC,EAInB,OAFAA,EAAU3B,EAAqBx1H,YAAc46C,EAAI9gD,GAE1C,CACJmzE,OAAQryB,EAAIrzC,KACZ5M,KAAM,CACHf,KAAM,aACN6W,OAAQ0mH,EACRr8H,KAAM5B,KAAK09H,sBAGpB,KAIA36B,EAAK/iG,KAAK+B,GACAghG,EAAGpoF,MAIXla,GAAGs9H,EAAiBp6H,GAAGzD,EAAIg8H,SACnCv4H,GAAGzD,EAAIg8H,QAAQgC,cAGf,MAAM1B,EAAoB/xH,EAAcsD,UACrC/N,KAAKoG,SAASi/D,YAKjB,GAFArlE,KAAKw8H,kBAAoBA,EAErBA,EAAmB,CACpB,MAAM2B,EAAYx6H,GAAGzD,EAAIg8H,QAAQkC,cAIjC,GAFAD,EAAUnjH,WAENwhH,aAA6Bx8H,KAAK88H,YAAa,CAChD,MAAM1tH,EAAQ2zF,EAAGjwF,QAAQjC,WAAW1C,KAAKqtE,IAC/B,CACJ56E,GAAI46E,EAAE5qE,SACNjO,MAAO64E,EAAE5qE,aAIfutH,EAAU1mH,MAAMrI,EACnB,MAAO,GAAIotH,aAA6Bx8H,KAAKioD,eAAgB,CAC1D,MAAM9lD,QAAgBq6H,EAAkBv7C,aAExC,IACGk9C,EAAU1mH,MACPtV,EAAQgM,KAAKuzC,IACH,CACJ9gD,GAAI8gD,EAAI9gD,GACR+B,MAAO++C,EAAIrzC,SASvB,CALE,MAAOhE,GAGN7B,QAAQ+G,MAAMlF,GACd7B,QAAQC,KAAKtG,EAChB,CACH,CACH,CACH,CAEA6+E,OACGhhF,KAAKw9H,KAAKn4H,eAAe,CAAEzD,KAAM,QACpC,CAEAw/E,QACGphF,KAAKw9H,KAAK71H,gBACb,CAEA3C,WAAWC,GACRnF,MAAMkF,WAAWC,GAEjBjF,KAAKwlE,aAAaxgE,WAAWC,GAC7BjF,KAAKq8H,SAASr3H,WAAWC,EAC5B,CAOAqtG,mBAAmBjmF,GAChBvsB,MAAMwyG,mBAAmBjmF,GAEzB,MAAMuE,EAAK5wB,KAAK4xG,uBAAyBvlF,EAEzC,GAAIuE,EAAJ,CACGA,EAAG8D,KAAK10B,KAAKw9H,KAEb,MAAMxlH,EAAM4Y,EAAGxE,WAEXpU,GAAKhY,KAAKgF,WAAWgT,EAG5B,MAEAhY,KAAKw9H,IAAI7oG,QACZ,CAEAxvB,mBAAmB6pB,EAAOzX,GACvB,IAAKvX,KAAKs8H,qBAAsB,OAGhCt8H,KAAKghF,OAEL,IAAIqxB,EAAQ,CAAC,EAGT96F,aAAkBlD,OAAQg+F,EAAQ96F,EAEjC86F,EAAMryG,KAAKs8H,qBAAqBx1H,YAAcyQ,EAGnD,IAAI8mH,GAAc,EAElB,IAAK,MAAMh6H,KAAOguG,EACVA,EAAMhuG,KACRguG,EAAMhuG,GAAO,GAIbg6H,GAAc,GAGpB,IAQG,SAPMr+H,KAAKyK,eAAezC,QAAQirE,OAAOjkD,EAAOqjF,IAEhDryG,KAAKohF,QAEDi9C,GAAar+H,KAAK4E,OAGlB5E,KAAKq8H,SAASz7C,YAAa,CAC5B,MAAM/2E,EAAOlG,GAAG3D,KAAKE,IAAIg8H,QAAQ/uG,QAAQ6B,GAEzChvB,KAAKq8H,SAAS33H,QAAQmF,EACzB,CAOH,CANE,MAAO1B,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kDACT0f,QACAqjF,SAEN,CACH,CAEAltG,kBAAkB6pB,EAAO9Y,GACtB,IAAKlW,KAAKw8H,kBAAmB,OAG7Bx8H,KAAKghF,OAEL,MAAMqxB,EAAQ,CAAC,EAEfA,EAAMryG,KAAKw8H,kBAAkB11H,YAAcoP,EAE3C,IACG,MAAM85G,QAAmBhwH,KAAKyK,eAAezC,QAAQirE,OAClDjkD,EACAqjF,IAOH,GAHAryG,KAAKw9H,KAAKlsG,WAAWtC,EAAOghG,GAGxBhwH,KAAKq8H,SAASz7C,YAAa,CAC5B,MAAM/2E,EAAO7J,KAAKw9H,IAAIrwG,QAAQ6B,GAE9BhvB,KAAKq8H,SAAS33H,QAAQmF,EACzB,CAEA7J,KAAKohF,OASR,CARE,MAAOj5E,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,iDACT0f,QACA9Y,QAGHlW,KAAKohF,OACR,CACH,CAEA0rC,SAASjjH,GAEFA,EAAKjJ,IAAMZ,KAAKw9H,IAAIlwG,OAAOzjB,EAAKjJ,IACjCZ,KAAKw9H,IAAIlsG,WAAWznB,EAAKjJ,GAAIiJ,GAE3B7J,KAAKw9H,IAAIp8G,IAAIvX,EACrB,CAEA40G,WACOz+G,KAAKw9H,KACNx9H,KAAKw9H,IAAIc,UAAUr0H,IAChBA,GAAMw0G,YAAY,GAE3B,CAEA8f,UACGv+H,KAAKy+G,WAGLz+G,KAAKq8H,SAASz3H,OACdjB,GAAG3D,KAAKE,IAAIi8H,SAASv3H,MACxB,CAEAO,iBAAiB6pB,GACd,MAAM+zE,EAAK/iG,KAAK+B,GACVihG,EAAUD,EAAGpoF,MAEnBqoF,EAAQpxF,QAAQ,CACbR,MAAOpR,KAAKoB,MAAM,eAClBiN,KAAMrO,KAAKoB,MAAM,oCACjByQ,SAAU1M,MAAO2I,IACd,GAAKA,EAAL,CAEA9N,KAAKghF,OAEL,WAC0BhhF,KAAKyK,eAAezC,QAAQsO,OAAO0Y,KAE7CisF,QAAU,EACpBj7G,KAAKw9H,IAAIziH,OAAOiU,GAEhBg0E,EAAQ7xF,MAAM,CACX9C,KAAMrO,KAAKoB,MACR,qDASZ,CALE,MAAO+G,GACN46F,EAAG36F,OAAOC,UAAUF,EAAK,CACtBmJ,QAAS,kDACT0d,SAEN,CAEAhvB,KAAKohF,OAvBc,CAuBP,GAGrB,CAWAo9C,UAAUr8H,GACPnC,KAAKs8H,qBAAuBn6H,EAAQs8H,iBACpCz+H,KAAKu8H,uBAAyBp6H,EAAQu8H,mBACtC1+H,KAAKw8H,kBAAoBr6H,EAAQkjE,UACpC,oBC/jBH,MAAMk7B,EAAkB,WAExB9gG,EAAOC,QAAU,cAAmC6gG,EACjD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,eAAekhG,EAASngG,KAAMV,EAC3D,CAEAO,KACG,MAAMsgG,EAAW/gG,KAAKU,KAEhBihG,EAAM7hG,MAAMW,GAAG,CAClBT,KAAK2+H,aAAa,CACfj+H,KAAM,QAENU,MAAO2/F,EAAS1yF,MAAQ,IACxBhN,MAAOrB,KAAKoG,SAAS+5D,UACrBv+D,KAAM,CACHb,OAAQ,YAOjB,cAFO4gG,EAAI//F,KAEJ+/F,CACV,CASAg9B,aAAal+H,GAGV,OAAQklB,SAAS3lB,KAAKoG,SAASoa,SAE5B,KAAK,EACF/f,EAAGS,IAAM,sCACT,MAGH,KAAK,EACFT,EAAGS,IAAM,uCACT,MAGH,KAAK,EACFT,EAAGS,IAAM,4CAIf,OAAOT,CACV,oBCvDH,MAAM8/F,EAAkB,WAExB9gG,EAAOC,QAAU,cAAoC6gG,EAClD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MAAMihG,EAAUlhG,GAAU,gBAAgBkhG,EAASngG,KAAMV,GAEzD,MAAM4rG,EAAiB9rG,KAAK8rG,gBAAkB,CAAC,EAE/C/K,EAASp5E,QAAQ1jB,SAASqP,IACvBw4F,EAAex4F,EAAE1S,IAAM0S,EAAEnT,WAAW,IAGvCH,KAAK8rG,eAAiBA,CACzB,CAEArrG,KACG,MAAMqrG,EAAiB9rG,KAAK8rG,eACtBmhB,EAAe54G,OAAOC,KAAKw3F,GAC7B39F,KAAKywH,GAAQ9yB,EAAe8yB,GAAKn+H,OACjCqI,QAAQrI,GAAOA,IAEQ,GAAvBwsH,EAAa9mH,SACd8mH,EAAa3oH,KAAK,CAAC,GACnB2oH,EAAa3oH,KAAK,CACf5D,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,gBAErB6rH,EAAa3oH,KAAK,CAAC,IAGtB,MAAMq9F,EAAM7hG,MAAMW,GAAG,CAClB,CACGC,KAAM,SACNS,KAAM8rH,KAMZ,cAFOtrB,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,EAAIs5D,SACNv7D,MAAMwD,KAAKvB,GAEjB,MAAMg/F,EAAW/gG,KAAKU,KAGtBqgG,EAASp5E,QAAQ1jB,SAASqP,IACLtT,KAAK8rG,eAAex4F,EAAE1S,KAG7B0C,KAAKvB,EAAIs5D,GAGpB0lC,EAASxuE,SAAS,CACfC,QAASlf,EACTmf,UAAW,aACXC,SAAWu0C,IACR85B,EAASN,WAAWx5B,EAAO,GAE/B,GAER,CAEAz8D,SAEGxK,KAAKU,KAAKinB,QAAQ1jB,SAASqP,IACNtT,KAAK8rG,eAAex4F,EAAE1S,KAC7B4J,QAAQ,GAEzB,oBCvEH,MAAM+1F,EAAkB,WAExB9gG,EAAOC,QAAU,cAAkC6gG,EAChD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,cAAckhG,EAASngG,KACjCyT,OAAO6pC,OAAO,CAAEj0C,KAAM,IAAM/J,GAElC,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBy4H,EAAU,CACbj+H,GAAIZ,KAAKE,IAAI+J,KACbvJ,KAAM,WACNkB,KAAM,CACHZ,MAAO,IACPD,OAAQ,IAEXukE,SAAWl3D,IACR,MAAMxI,EAAQ5F,KAAKU,KAAKkF,QAExB,OAAKA,EAEEA,EAAM4a,OAAOpS,GAFD,EAEM,GAKP,IAApBhI,EAASrF,OAAc89H,EAAQ99H,OAASqF,EAASrF,OAChD89H,EAAQC,YAAa,EAE1B,MAAMn9B,EAAM7hG,MAAMW,GAAG,CAACo+H,IAItB,cAFOl9B,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMsrB,EAAKrtB,KAAKqsB,eAEXgB,GAGLA,EAAGqH,KAAK/wB,GAAG3D,KAAKE,IAAI+J,MAEvB,oBClDH,MAAMs2F,EAAkB,WAExB9gG,EAAOC,QAAU,cAAkC6gG,EAChD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,cAAckhG,EAASngG,KACjCyT,OAAO6pC,OACJ,CACG4xD,KAAM,IAET5vG,GAGT,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBu7F,EAAM7hG,MAAMW,GAAG,CAClBklB,SAASvf,EAASkgE,eAAiBtmE,KAAK05G,YAAc15G,KAAK++H,WAK9D,cAFOp9B,EAAI//F,KAEJ+/F,CACV,CAEAo9B,SACG,MAAMh+B,EAAW/gG,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAChBklF,EAAkByV,EAASphG,YAAYwlC,gBACvCjkC,EAAM,GAAGkF,EAASggE,aAAeklB,EAAgBllB,eACpDhgE,EAASigE,eAAiBilB,EAAgBjlB,iBAG7C,MAAO,CACJzlE,GAAIZ,KAAKE,IAAI4vG,KACbpvG,KAAM,OACN6zG,YAAY,EACZjzG,WAAW,EACX09H,SAAU,OACV99H,IAAKA,EACLigF,OAAQ/6E,EAAS+/D,aAAemlB,EAAgBnlB,YAChD/jE,GAAI,CACD68H,gBAAkBr+H,IACfZ,KAAK+jH,QAAQnjH,EAAG,EAEnBu6E,cAAe,KACZn7E,KAAKk/H,eAAe,GAG1Bt9H,KAAM,CACHu9H,SAAS,GAGlB,CAEAzlB,YACG,MAAMtzG,EAAWpG,KAAKoG,SAChB26F,EAAW/gG,KAAKU,KAChB4qF,EAAkByV,EAASphG,YAAYwlC,gBACvCi6F,EAAUp/H,KAAK++H,SAErB,IAAIM,EAAQ,GACRC,GAAe,EAGnB,MAAM54D,EAAeq6B,EAASr6B,cAAgBtgE,EAASsgE,aACjDE,EAAiBm6B,EAASn6B,gBAAkBxgE,EAASwgE,eACrDD,EAAgBo6B,EAASp6B,eAAiBvgE,EAASugE,cAEzD,GAA8B,SAA1BvgE,EAASqgE,aACV64D,GAAe,EACfD,EAAM/6H,KAAK86H,QACP,GAAI14D,GAAcvgE,OAAQ,CAC9B,MAAMnF,EAA8B,GAAtB0lE,EAAavgE,OAE3Bk5H,EAAM/6H,KAAK,CACR5D,KAAM,QACNU,MAAOslE,EACPrlE,MAAO,OACPL,MAAOA,GAEb,MACGq+H,EAAM/6H,KAAK,CACR5D,KAAM,QACNU,MAAO,GACPE,WAAW,IAGjB,GAA+B,WAA3B8E,GAAUqgE,aACX64D,GAAe,EAEfD,EAAM/6H,KAAK86H,QACP,GAAIx4D,GAAgBzgE,OAAQ,CAChC,MAAMnF,EAA8B,GAAtB0lE,EAAavgE,OAE3Bk5H,EAAM/6H,KACH,CAAC,EACD,CACG5D,KAAM,QACNU,MAAOwlE,EACPvlE,MAAO,SACPL,MAAOA,GAEV,CAAC,EAEP,MACGq+H,EAAM/6H,KAAK,CACR5D,KAAM,QACNU,MAAO,GACPE,WAAW,IAGjB,GAA+B,UAA3B8E,GAAUqgE,aACX64D,GAAe,EAEfD,EAAM/6H,KAAK86H,QACP,GAAIz4D,GAAexgE,OAAQ,CAC/B,MAAMnF,EAA8B,GAAtB0lE,EAAavgE,OAE3Bk5H,EAAM/6H,KAAK,CACR5D,KAAM,QACNU,MAAOulE,EACPtlE,MAAO,QACPL,MAAOA,GAEb,MACGq+H,EAAM/6H,KAAK,CACR5D,KAAM,QACNU,MAAO,GACPE,WAAW,IAKjB,OAFqB,IAAjBg+H,IAAwBD,EAAQ,CAACD,IAE9B,CACJ1+H,KAAM,UACNQ,IAAKkF,EAASogE,WAAa8kB,EAAgB9kB,UAC3ChkE,QAAS4D,EAASmgE,YACb5gD,SAASvf,EAASmgE,aAClB+kB,EAAgB/kB,YACrBr9D,SAAUm2H,EAEhB,CAEAl6H,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMmwG,EAAQvuG,GAAG3D,KAAKE,IAAI4vG,MACpB/O,EAAW/gG,KAAKU,KAEtB,GAAIwxG,EAAO,CACR,MAAM9rG,EAAWpG,KAAKoG,SAEtB26F,EAAS75B,iBAAiBgrC,GAEtB9rG,EAASygE,OAAO1gE,SACjB46F,EAAS55B,eAAe+qC,EAAO9rG,EAASygE,OAExCqrC,EAAMxtG,UAEZ,CACH,CAEAq/G,QAAQj3F,GACL,MACMyyG,EADQ57H,GAAG3D,KAAKE,IAAI4vG,MACNpoC,YAAY56C,GAC1Bi0E,EAAW/gG,KAAKU,KAGtB,GAAmB,QAAf6+H,EAAM39H,KAAgB,CACvBm/F,EAASN,WAAW8+B,EAAMt4D,QAE1B,MAAMu4D,EAAez+B,EAASh8F,YAAY+gB,OACtC9D,GAAMA,EAAEphB,KAAO2+H,EAAMt4D,SACtB,GACD,GAEF,IAAKu4D,EAAc,OAEnB,MAAMx3D,EAAUw3D,EAAa73G,OAAOrU,GAAMA,EAAE1S,KAAO2+H,EAAM3+H,KAAI,GAAM,GAEnE,IAAKonE,EAAS,OAEd,MAAM42C,EAAM52C,EAAQ/yD,OAEpB,IAAK2pG,EAAK,OAEV5+G,KAAKy/H,aAAa7gB,GAGlB,MAAM8gB,EAASC,aAAY,KACpBh8H,GAAGqkE,EAAQpnE,KAAO+C,GAAGqkE,EAAQpnE,IAAIggF,YAClCg/C,cAAcF,GAKjB9gB,EAAIpvG,KAAK,YAAaw4D,EAAQpnE,GAAG,GACjC,IAEN,MAEKmgG,EAASN,WAAW3zE,EAC5B,CAEA2yG,aAAankG,GACV,IAAKA,EAAQrmB,OAAQ,OAAO,EAE5B,MAAM4qH,EAAavkG,EAAQrmB,OAE3B,IAAK4qH,GAAY5qH,OAAQ,OAAO,EAEhC4qH,EAAW5qH,OAAOzF,KAAK,YAAaqwH,EAAWj/H,IAC/CZ,KAAKy/H,aAAaI,EAAW5qH,OAChC,CAEAiqH,gBACG,MAAMhtB,EAAQvuG,GAAG3D,KAAKE,IAAI4vG,MAErBoC,GAELA,EAAMroG,KAAKy7E,MAAMl3E,IACd,MAAM7L,EAAO2vG,EAAM19B,YAAYpmE,EAAKxN,IAEpC,IAAK2B,EAAM,OAGX,MAAMu9H,EAAW9/H,KAAK+B,GAAG2iB,eAAetW,EAAKxN,IAE7C2B,EAAKijF,aACF,UACA,aAAas6C,GAAU34H,QAAQiH,EAAKxN,MAAMZ,KAAKU,KAAKE,KACtD,GAEP,mBC5OH,MAAM2/F,EAAkB,WAClBw/B,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OACzBC,EAAgB,EAAQ,OACxBnwG,EAAgB,EAAQ,OAE9BrwB,EAAOC,QAAU,cAAmC6gG,EACjD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,eAAekhG,EAASngG,KAClCyT,OAAO6pC,OAAO,CAAEgiF,MAAO,IAAMhgI,GAEnC,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBu7F,EAAM7hG,MAAMW,GAAG,CAClB,CACGG,GAAIZ,KAAKE,IAAIggI,MACbx/H,KAAM,QACN66H,UAAU,EACV1yD,aAAcziE,EAASyiE,aACvBC,YAAa1iE,EAAS0iE,YACtBC,cAAe3iE,EAAS2iE,cACxBpoB,IAAKv6C,EAASu6C,IACdD,IAAKt6C,EAASs6C,IACd3/C,OAAQqF,EAASrF,OACjByf,OAAS7d,IACN,MAAMk3C,EAAgBzzC,EAASyzC,eAAiB,EAEhD,OAAOl3C,GAAkB,KAATA,EACX82C,WAAW92C,GAAO03C,QAAQR,GAAiB,GAC3Cl3C,CAAK,KAOnB,cAFOg/F,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IAEXmtB,EAAKrtB,KAAKqsB,eAChB,IAAKgB,EAAI,OAET,MAAMpoB,EAASooB,EAAGjB,WAClB,IAAKnnB,EAAQ,OAEb,MAAMk7H,EAASx8H,GAAGzD,EAAIggI,OAEtB,GAAIC,GAAUl7H,aAAkB6qB,EAAe,CAC5C,MAAMswG,EAAe,CAAC,EAEtBn7H,EAAO8B,SAAS9C,SAAS+C,IACtBo5H,EAAap5H,EAAEF,YAAcE,EAAE5F,KAAK,IAGvC++H,EAAO17H,OAAO,WAAY27H,EAC7B,CAEA,MAAMC,EAAe,KAClB,MACMC,EADOjzG,EAAGkH,UACQpmB,KAAK6iB,IAC1B,MAAMljB,EAAS,CAAC,EAYhB,OAVA7I,EAAO8B,SAAS9C,SAAS+C,IAMnB8G,EAAO9G,EAAEF,YAJTE,aAAa+4H,GACb/4H,aAAag5H,GACbh5H,aAAai5H,EAEUjvG,EAAEhqB,EAAEF,YACFE,EAAEwZ,OAAOwQ,EAAE,IAGnCljB,CAAM,IAGhBqyH,EAAO1oH,MAAM6oH,GAEb,MAAMl6H,EAAWpG,KAAKoG,SAGlBA,EAAS4iE,WAAWm3D,EAAOI,aAAan6H,EAAS4iE,UAAU,EAWlE,OARAhpE,KAAKU,KAAK6xB,SAAS,CAChBC,QAASnF,EACToF,UAAW,kBACXC,SAAU,KACP2tG,GAAc,IAIZhzG,EAAGT,YACR,KAAKS,EAAGpC,eAAeC,WACpBmC,EAAGwF,WACH,MAEH,KAAKxF,EAAGpC,eAAe0B,YACpB0zG,IAGT,oBC7GH,MAAM9/B,EAAkB,WAExB9gG,EAAOC,QAAU,cAA4C6gG,EAC1D5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,uBAAuBkhG,EAASngG,KAC1CyT,OAAO6pC,OAAO,CAAEsiF,cAAe,IAAMtgI,GAE3C,CAEAO,KACG,MAAMs/E,EAAO//E,KACP+gG,EAAW/gG,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAChB28F,EAAK/iG,KAAK+B,GACVihG,EAAUD,EAAGpoF,MAEb8lH,EAAmB,CACtB7/H,GAAIZ,KAAKE,IAAIsgI,cACb9/H,KAAM,UACN01G,SAAS,EACT5E,SAAU,IAAIC,IAAI,CACf,CACGivB,QAAQhvB,SAASC,QACjB,cAAwB+uB,QAAQhvB,SAASC,QACtCxsG,mBACG,OAAOiB,EAAS8iE,YAAc,EACjC,CAEAy3D,WAAW//H,EAAKoiG,EAAQ93F,MAAOrB,GAC5BzD,EAAS8iE,WAAa9iE,EAAS8iE,YAAc,GAE7C,IAAI03D,EAAgB,KAepB,OAbex6H,EAAS8iE,WAAWpgE,QAAO,CAAC+3H,EAAG90H,KAC3C,MAAMylB,EAAWqvG,EAAEjgI,KAAOA,EAI1B,OAFI4wB,IAAUovG,EAAgB70H,GAEvBylB,CAAQ,IACf,GAGSprB,EAAS8iE,WAAW03D,GAAiB/2H,EAE5CzD,EAAS8iE,WAAW5kE,KAAKuF,GAEvB,IAAI4F,SAAQ,CAACC,EAASmH,KACT1R,WACd,UACS47F,EAASn5F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACN0O,EAAO1O,EACV,GAGH24H,EAAU,GAEhB,CAEAC,aAAangI,GAOV,OANAwF,EAAS8iE,WAAa9iE,EAAS8iE,YAAc,GAE7C9iE,EAAS8iE,WAAa9iE,EAAS8iE,WAAWpgE,QACtC+3H,GAAMA,EAAEjgI,KAAOA,IAGZ,IAAI6O,SAAQ,CAACC,EAASmH,KACT1R,WACd,UACS47F,EAASn5F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACN0O,EAAO1O,EACV,GAGH24H,EAAU,GAEhB,CAEA37H,kBACG,MAAM67H,EAAe,CAAC,EA+CtB,OA5CGjgC,EAASh8F,YAAYqhB,2BAA6B,IACnDniB,SAASopB,IAER,IADYA,EAAGjB,WACL,OAEV,MAAM60G,EAAelhD,EAAKmhD,gBAAgB7zG,GA+B1C2zG,EAAa3zG,EAAGzsB,IAAM,CACnBA,GAAIysB,EAAGzsB,GACPuG,KAAMkmB,EAAGjsB,MACTyI,KAAMo3H,EACNE,KAAM,GACR,IAGGH,CACV,CAEA77H,mBACG,OAAOiB,EAAS+iE,WAAa,EAChC,CAEAi4D,UAAUxgI,EAAKoiG,EAAQ93F,MAAOrB,GAC3BzD,EAAS+iE,UAAY/iE,EAAS+iE,WAAa,GAE3C,IAAIk4D,EAAe,KAenB,OAbcj7H,EAAS+iE,UAAUrgE,QAAO,CAAC+3H,EAAG90H,KACzC,MAAMylB,EAAWqvG,EAAEjgI,KAAOA,EAI1B,OAFI4wB,IAAU6vG,EAAet1H,GAEtBylB,CAAQ,IACf,GAGQprB,EAAS+iE,UAAUk4D,GAAgBx3H,EAEzCzD,EAAS+iE,UAAU7kE,KAAKuF,GAEtB,IAAI4F,SAAQ,CAACC,EAASmH,KACT1R,WACd,UACS47F,EAASn5F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACN0O,EAAO1O,EACV,GAGH24H,EAAU,GAEhB,CAEAQ,YAAY1gI,GAMT,OALAwF,EAAS+iE,UAAY/iE,EAAS+iE,WAAa,GAC3C/iE,EAAS+iE,UAAY/iE,EAAS+iE,UAAUrgE,QACpC+3H,GAAMA,EAAEjgI,KAAOA,IAGZ,IAAI6O,SAAQ,CAACC,EAASmH,KACT1R,WACd,UACS47F,EAASn5F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACN0O,EAAO1O,EACV,GAGH24H,EAAU,GAEhB,CAEA37H,cAAclD,GACX,IAAI6L,EAAS,GACTyzH,EAAgB,GAChBC,EAAQ,GACRC,EAAS,CAAC,EACVR,EAAe,GAGnBO,EAAMl9H,KAAKrC,EAAO4H,OACjB5H,EAAO0kC,OAAS,IAAI1iC,SAAS8/B,IAC3By9F,EAAMl9H,KAAKy/B,EAAE29F,KACbF,EAAMl9H,KAAKy/B,EAAEunB,IAAI,IAEpBk2E,EAAQz+B,EAAGrgF,KAAK8+G,GAChBA,EAAMv9H,SAAS09H,IACZJ,EAAcj9H,KACX,IAAImL,SAAQ,CAACC,EAASmH,KACH1R,WACb,IACGs8H,EAAOE,SACG5hD,EAAKxrD,QAAQotG,IAAU,GAEjCjyH,GAGH,CAFE,MAAOvH,GACN0O,EAAO1O,EACV,GAGHosB,EAAS,IAEd,IAGJitG,EAAMv9H,SAAS09H,IACZ,MAAMC,EAAU7+B,EAAGv2E,mBAAmBm1G,GAEjCC,IAELX,EAAeA,EAAaj5G,OACzB+3D,EAAKmhD,gBAAgBU,GAASzzH,KAAKnH,IAEhCA,EAAEpG,GAAK,GAAG+gI,KAAQ36H,EAAEpG,KACboG,MAEZ,UAGEyI,QAAQ8R,IAAIggH,GAGlBzzH,EAAS2zH,EAAOx/H,EAAO4H,OAAS,GAE5B5H,EAAO0kC,OAAOxgC,SACdlE,EAAO0kC,OAAS,IAAI1iC,SAAS8/B,IAC3B,MAAM89F,EAAW9+B,EAAGv2E,mBAAmBuX,EAAE29F,KACzC,IAAKG,EAAU,OAEf,MAAMC,EAAYD,EAASz1G,WAC3B,IAAK01G,EAAW,OAEhB,MAAMC,EAAWh/B,EAAGv2E,mBAAmBuX,EAAEunB,KACzC,IAAKy2E,EAAU,OAEf,MAAMC,EAAYD,EAAS31G,WAC3B,IAAK41G,EAAW,OAEhB,MAAMC,EAAkBH,EAAU/zH,UAAUg2B,EAAEm+F,IACxCC,EAAkBH,EAAUj0H,UAAUg2B,EAAEq+F,IAC9C,IAAKH,IAAoBE,EAAiB,OAE1C,MAAME,EAAaZ,EAAO19F,EAAE29F,MAAQ,GAC9BY,EAAab,EAAO19F,EAAEunB,MAAQ,GAEpC+2E,EAAWp+H,SAASs+H,IACjBD,EAAWr+H,SAASu+H,IACjB,IAAIC,EACDF,EACGN,EACK,GAAGl+F,EAAE29F,OAAOO,EAAgBn7H,gBAC5B,GAAGi9B,EAAE29F,WACR,GAEJgB,EACDF,EACGL,EACK,GAAGp+F,EAAEunB,OAAO62E,EAAgBr7H,gBAC5B,GAAGi9B,EAAEunB,WACR,GAWR,GATKn+C,MAAMC,QAAQq1H,KAAOA,EAAO,CAACA,IAE7Bt1H,MAAMC,QAAQs1H,KAAOA,EAAO,CAACA,IAGfD,EAAK35H,QACpBoN,GAAQwsH,EAAKr1H,QAAQ6I,IAAQ,KAGjB/P,OAAQ,CACrB,MAAMw8H,EACH70H,EAAOhF,QACH8G,GACEA,EAAE,GAAGm0B,EAAE29F,YACJa,EAAM,GAAGx+F,EAAE29F,YACb9xH,EAAE,GAAGm0B,EAAEunB,aACT,GAEJq3E,GAAYx8H,QACZw8H,GAAc,IAAI1+H,SAAS2L,IACzB,IAAK,MAAMvL,KAAOm+H,EACH,OAARn+H,IACDuL,EAAEvL,GAAOm+H,EAAMn+H,GAAI,IAG5ByJ,EAAOxJ,KACJ+P,OAAO6pC,OACJ6kD,EAAGr9F,UAAU68H,GACbx/B,EAAGr9F,UAAU88H,IAGzB,IACD,GACH,IAIR,MAAMI,EAAW7uH,KAAK0D,MAAMxV,EAAOynB,OAAS,MAExCk5G,GAAUvhH,OAAOlb,QAClBy8H,EAASvhH,MAAMpd,SAAS2L,IACrB,GAAKA,GAAMA,EAAEhO,MAASgO,EAAEg9B,UAExB,OAAQh9B,EAAEhO,MACP,IAAK,OACL,IAAK,WAEEgO,EAAEg9B,UAAU9jC,SACTi6F,EAAG//E,SAASpT,EAAEg9B,UAAU9jC,UACzB8G,EAAEg9B,UAAU9jC,OAASi6F,EAAG1hF,MAAMhB,OAC3BzQ,EAAEg9B,UAAU9jC,SAIf8G,EAAEg9B,UAAU9jC,OAAOiqB,OACnBgwE,EAAG//E,SAASpT,EAAEg9B,UAAU9jC,OAAOiqB,SAE/BnjB,EAAEg9B,UAAU9jC,OAAOiqB,MAChBgwE,EAAG1hF,MAAMhB,OACNzQ,EAAEg9B,UAAU9jC,OAAOiqB,QAIzBnjB,EAAEg9B,UAAU9jC,OAAOy+C,KACnBw7C,EAAG//E,SAASpT,EAAEg9B,UAAU9jC,OAAOy+C,OAE/B33C,EAAEg9B,UAAU9jC,OAAOy+C,IAAMw7C,EAAG1hF,MAAMhB,OAC/BzQ,EAAEg9B,UAAU9jC,OAAOy+C,OAKlC,IAIN,MAAMs7E,EAAa7/B,EAAQviG,GAAG,CAC3BC,KAAM,QACNqG,OAAQk6H,EACRt+H,MAAOigI,IAIJE,EAAS,IAAI9/B,EAAQ5zB,eAK3B,IAAIxT,EAHJknE,EAAOrrH,MAAM3J,GAKb,IACG8tD,EAAWinE,EAAWvpD,mBAGzB,CAFE,MAAO/pE,GAET,CA8EA,OA5EIqsD,GAAUknE,EAAOh6H,OAAO8yD,IAG3B35D,EAAO0L,MAAQ,IAAI1J,SAAS0J,IACtBA,EAAK/M,IACNkiI,EAAOn1H,KAAK,CACTo1H,GAAI,SACJp4H,IAAKgD,EAAKq1H,KAAO,MACjBh1H,GAAI,IAAIL,EAAK/M,OACd,IAGRkN,EAASg1H,EAAO/0G,YAGhB80G,EAAW3kB,aACX4kB,EAAO5kB,aAGHj8G,GAAQ46G,OAAO12G,UACflE,EAAO46G,OAAS,IAAI54G,SAASg/H,IAC3Bn1H,EAASo1H,EAAEp1H,GAAQ02D,QAAQy+D,EAAU,IAGxCn1H,EAASA,EACLK,KAAI,CAACg1H,EAAaviI,KAChB,MAAMwiI,EAAgB,CAAC,EA6CvB,OA3CCnhI,EAAO+3D,SAAW,IAAI/1D,SAASq7E,IAC7B,MAAM+jD,EAAM/jD,EAAI52D,MAAM,KAAK,GACrB46G,EAAShkD,EAAIpsE,QAChB,8BACA,IAGH,OAAQmwH,GACL,IAAK,MACFD,EAAc9jD,GAAOyjB,EAAGngF,MACrBugH,EACAG,GAEH,MACH,IAAK,MACFF,EAAc9jD,GAAOyjB,EAAGlgF,OACrBsgH,EACAG,GAEH,MACH,IAAK,QACFF,EAAc9jD,IACX6jD,GAAe,IAChBh9H,OACF,MACH,IAAK,MACFi9H,EAAc9jD,IACVyjB,EAAGjgF,MAAMqgH,EAAaG,IAAW,CAAC,GAChCA,IACE,GACR,MACH,IAAK,MACFF,EAAc9jD,IACVyjB,EAAGhgF,MAAMogH,EAAaG,IAAW,CAAC,GAChCA,IACE,GACR,MACH,QACGF,EAAc9jD,GAAO6jD,EAAY,GAAG7jD,GAE1C,IAGI8jD,CAAa,IAEtBzgI,SAGAmL,CACV,CACAmzE,WAAWl6E,GACR,OAAO0I,QAAQC,QAAQ,GAC1B,CACA6zH,aAAa74H,GACV,OAAO+E,QAAQC,QAAQ,GAC1B,IAGN,CACGgxH,QAAQ/4G,MAAMwuF,MACd,cAAsBuqB,QAAQ/4G,MAAMwuF,MAEjCqtB,gBAAgB51H,GACb,MAAe,SAAXA,EAAEhM,KACI,CACJhB,GAAIgN,EAAEhN,GACNmzE,OACInmE,EAAE61H,KAAK1vD,QAA4B,SAAlBnmE,EAAE61H,KAAK1vD,OAEpB,CACGnmE,EAAE61H,KAAKt8H,MAAQyG,EAAEzG,KACjB,CACGitE,QACgB,SAAbxmE,EAAEmmE,OACG,aACA,qBAPdnmE,EAAE61H,KAAKt8H,MAAQyG,EAAEzG,KAUzBvF,KAAMgM,EAAEhM,KACR+L,KAAM,OACN3M,MAAO4M,EAAE5M,OAAS,IAClBwf,OAAStK,GAEFA,GAAK8iC,UAAY6J,MAAM3sC,EAAI8iC,WACrBgqD,EAAQ7oB,KAAKC,cAAclkE,GACzB,IAGPpW,MAAM0jI,gBAAgB51H,EACvC,OAMN+zF,EAAM7hG,MAAMW,GAAG,CAACggI,IAKtB,cAHO9+B,EAAI//F,YACJ+/F,EAAI5gG,OAEJ4gG,CACV,CAEAu/B,gBAAgB7zG,GACb,IAAKA,EAAI,MAAO,GAEhB,MAAMpoB,EAASooB,EAAGjB,WAClB,IAAKnnB,EAAQ,MAAO,GAEpB,MAAM8B,EAAS,GAqCf,OAnCA9B,EAAO8B,SAAS9C,SAAS+C,IACtB,MAAM08H,EAAe18H,EAAEgtE,eAEvBjtE,EAAOzC,KAAK,CACT1D,GAAIoG,EAAEF,WACNK,KAAMH,EAAE5F,MACR0H,OAAQ9B,EAAEqoC,oBACVq9B,MAAM,EACN9qE,KAAM8hI,EAAap+H,QAAU,OAC7Bkb,OAAQkjH,EAAaljH,OACrBre,QAASuhI,EAAavhI,QACtBwhI,IAAK,GACLt/H,KAAK,EACLO,MAAM,EACNg/H,QAAS58H,IAGRA,EAAEq8B,cAAgBr8B,EAAEZ,SAASM,WACZ1G,KAAK+B,GAAGyqB,mBAAmBxlB,EAAEZ,SAASO,aAE1C,IAAI1C,SAASwvB,IACxB1sB,EAAOzC,KAAK,CACT1D,GAAIoG,EAAEpG,GACNuG,KAAMH,EAAE5F,MACR0H,QAAQ,EACR4jE,MAAM,EACN9qE,KAAM,YACN+hI,IAAKlwG,EAAO7yB,GACZyD,KAAK,EACLO,MAAM,GACP,GAER,IAGImC,CACV,CAEA5B,cAAcqpE,GACX,MAAMniD,EAAiBrsB,KAAK+B,GAAGyqB,mBAAmBgiD,GAClD,IAAKniD,EAAgB,MAAO,GAE5B,MAAMpnB,EAASonB,EAAeD,WAC9B,IAAKnnB,EAAQ,MAAO,GAGjBonB,EAAeO,aAAeP,EAAepB,eAAeC,kBAEtDmB,EAAewG,WAExB,MAAMouG,EAAejhI,KAAKkhI,gBAAgB70G,GACpCw3G,EAAa,GAyDnB,OAxDgBx3G,EAAekI,WAEnB,IAAItwB,SAASmb,IACtB,MAAM0kH,EAAY,CAAEljI,GAAIwe,EAAIxe,IAE5BkjI,EAAU,GAAGz3G,EAAezrB,SAAWwe,EAAIxe,GAE3CqE,EAAO8B,SAAS9C,SAAS2B,IACtB,MAAMkB,EAAalB,EAAMkB,WACnBw4E,EAAM,GAAGjzD,EAAezrB,MAAMkG,IAKpC,GAHAg9H,EAAUxkD,GAAO15E,EAAQA,EAAM4a,OAAOpB,GAAOA,EAAItY,GAG7ClB,GAASA,EAAMy9B,aAAc,CAC9B,IAAI0gG,EAAMn+H,EAAMgB,eAAe8oB,KAC3BviB,MAAMC,QAAQgS,EAAItY,IACnBg9H,EAAU,GAAGxkD,QAAYlgE,EAAItY,GAAYqH,KACrCk6B,GAASA,EAAK07F,IAAQ17F,EAAKznC,IAAMynC,IAE/BjpB,EAAItY,KACVg9H,EAAU,GAAGxkD,QACVlgE,EAAItY,GAAYi9H,IAChB3kH,EAAItY,GAAYlG,IAChBwe,EAAItY,GACb,CAEA,MAAMk9H,EAAS/C,EAAan4H,QAAQ9B,GAAMA,EAAEpG,KAAOkG,IAAY,GAC/D,GAAKk9H,EAEL,OAAQA,EAAOpiI,MACZ,IAAK,OACL,IAAK,YACFkiI,EAAUxkD,IAAQwkD,EAAUxkD,IAAQ,IAAI1qE,WACxC,MAEH,IAAK,SACFkvH,EAAUxkD,GAAO7lC,YACbqqF,EAAUxkD,IAAQ,GAAG1qE,WAAW1B,QAAQ,WAAY,KAExD,MAEH,IAAK,OACL,IAAK,WACF4wH,EAAUxkD,GAAOlgE,EAAItY,GACjBg9H,EAAUxkD,GACLwkD,EAAUxkD,aAAgB7+D,OAC7BqjH,EAAUxkD,GAAOt/E,KAAK+B,GAAGsf,MAAMhB,OAAOjB,EAAItY,KACzCg9H,EAAUxkD,GAAO,GAE9B,IAGHukD,EAAWv/H,KAAKw/H,EAAU,IAGtBD,CACV,oBCnnBH,MAAMtjC,EAAkB,WAExB9gG,EAAOC,QAAU,cAAiC6gG,EAC/C5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,aAAakhG,EAASngG,KAChCyT,OAAO6pC,OACJ,CACG0gE,IAAK,GAELqlB,QAAS,GACTC,WAAY,GACZC,aAAc,GAEdC,gBAAiB,GACjBC,oBAAqB,GACrBC,0BAA2B,IAE9BpkI,IAINF,KAAK8rG,eACF9rG,KAAK8rG,gBACL/K,EACIp5E,OAAOrU,GAAMA,EAAE8nD,kBACfjtD,KAAKmF,IACI,CACJ5S,KAAM4S,KAIrB,CAEA7S,KACG,MAAMP,EAAMF,KAAKE,IACX6gG,EAAW/gG,KAAKU,KAChBqiG,EAAK/iG,KAAK+B,GACVihG,EAAUD,EAAGpoF,MAEnB,IAAIgnF,EAAM,KAIVqB,EAAQphG,KAAKohG,EAAQviG,GAAG0vF,KAAM,CAC3Bo0C,SAAU,UACVp9H,KAAM,cACNoE,KAAM,CAACyM,EAAKy0B,IACLz0B,EAAIzM,KAAKpF,OACH,CACJ,0DACA6R,EAAIzM,KACJ,aACD+C,KAAK,IAEH,CACJ,iEACA0J,EAAIrV,MAAMwkD,OAAO,GAAGD,cACpB,WACD54C,KAAK,MAIb,MAAMw9F,EAAiB9rG,KAAK8rG,eACtB1lG,EAAWpG,KAAKoG,SAEtB,GAAI0lG,EAAe3lG,OAAS,EACzB,GAAIC,EAASkjE,UAAW,CAErB,MAAMk7D,EAAY14B,EAAe39F,KAAK2rH,IACnC,MAAMp5H,EAAOo5H,EAAGp5H,KAEhB,MAAO,CACJE,GAAI,GAAGF,EAAKE,UACZ+B,MAAOjC,EAAKU,MACZmK,KAAM7K,EAAK25D,QAAU35D,EAAK25D,QAAU,GACtC,IAGJ,GAAImqE,EAAUr+H,OAAQ,CAEnB,MAAMg+H,EAAe,CAClBvjI,GAAIV,EAAIikI,aACRxhI,MAAO3C,KAAKoB,MAAM,iBAClBmK,KAAM,uBAIH24H,EAAa,CAChBtjI,GAAIV,EAAIgkI,WACRvhI,MAAO3C,KAAKoB,MAAM,eAClBmK,KAAM,uBACNstE,QAAQ,GAIX,IAAI4rD,EAAe,GAAG34B,EAAe,GAAGprG,KAAKE,UAE7C,MAAM8jI,EAAY3hC,EAAGjpF,QACfmqH,EAAU,CACbvjI,KAAM,UACNkB,KAAM,cACNhB,GAAIV,EAAI+jI,QACRjjI,MAAOoF,EAASojE,aAAepjE,EAASojE,aAAe,EACvD9nE,QAAQ,EACRf,SAAUyF,EAASqjE,WAAarjE,EAASqjE,WAAa,OACtDvoE,IAAKkF,EAASmjE,UAAY,aAAe,GACzC1/D,KAAM26H,EAAUx8G,OAAOm8G,GACvB/hI,GAAI,CACDgI,YAAcxJ,IAEX,GAAIA,IAAOV,EAAIikI,aAEZtvH,YAAW,KACR,MAAM8vH,EAAWhhI,GAAGzD,EAAI+jI,SAGxBU,EAAS5pH,OAAO7a,EAAIikI,cAEpBQ,EAASvjH,IAAI8iH,GAEbS,EAASC,SAGTD,EAASrnC,OAAOmnC,GAGhBC,EAAU3qH,IACP,GAAG7Z,EAAI0+G,YACP+lB,EAAS1rD,WACX,GACD,QACC,GAAIr4E,IAAOV,EAAIgkI,WACnBrvH,YAAW,KACR,MAAM8vH,EAAWhhI,GAAGzD,EAAI+jI,SAGxBU,EAAS5pH,OAAO7a,EAAIgkI,YAEpBS,EAASvjH,IAAI+iH,GAEbQ,EAASC,SAGTD,EAASrnC,OAAOmnC,GAGhBC,EAAU3qH,IACP,GAAG7Z,EAAI0+G,YACP+lB,EAAS1rD,WACX,GACD,OACC,CAEJwrD,EAAe7jI,EAIfA,EAAKA,EAAGsS,QAAQ,QAAS,IACzB,IAAI3Q,EAAOoB,GAAG/C,GACd,GAAI2B,EACDA,EAAKqC,MAAK,GAAO,OACb,CAEJ,IAAIqa,EAAM,sBAAsBjf,KAAKmH,SAASnH,KAAKY,qDAAqD6jI,MACxGzkI,KAAK+B,GAAGqG,OAAO,YAAa6W,EAAK,CAAC,EACrC,CAIH,GAEH89G,eAAgB,KACb8H,GAAW,EAEd1pD,cAAe,KACZ0pD,GAAW,IAKdC,EAAY,CACfpkI,KAAM,YACNE,GAAIV,EAAI0+G,IACRmmB,WAAW,EACX17D,SAAUjjE,EAASijE,SACnB5mE,MAAOqpG,EAAe39F,KAAKzN,IACV,CACXE,GAAIF,EAAKA,KAAKE,GAEdF,KAAM,SACNmB,KAAM,OAKZO,GAAI,CACD4iI,aAAc,CAACC,EAAQC,KACpBllI,KAAKwK,OAAO06H,EAAO,IAKtBL,EAAY,WACf,MAAMF,EAAWhhI,GAAGzD,EAAI+jI,SAGlBkB,EAAeR,EAASj3H,MAAM6jE,cACjC,iBAAiBrxE,EAAIikI,kBAGpBgB,GACDA,EAAa3/C,aACV,UACA,oBAAoBtlF,EAAIikI,gBAG9B,MAAMiB,EAAaT,EAASj3H,MAAM6jE,cAC/B,iBAAiBrxE,EAAIgkI,gBAGpBkB,GACDA,EAAW5/C,aACR,UACA,kBAAkBtlF,EAAIgkI,cAG5BnjC,EAASp5E,OAAOjnB,IACb,MAAM6B,EAAOoiI,EAASj3H,MAAM6jE,cACzB,iBAAiB7wE,EAAKE,aAGpB2B,GAILA,EAAKijF,aACF,UACA,OAAO9kF,EAAKyG,KAAK+L,QAAQ,IAAK,OAAOxS,EAAKE,MACvCmgG,EAASngG,KAEd,GAEP,EAEA,IAAIo5D,EAAU,CAACiqE,EAASa,GAEI,UAAxB1+H,EAASqjE,aACVzP,EAAU,CAAC8qE,EAAWb,IAGzBtiC,EAAM,CACHxgG,KAAM64D,EAEZ,MACG2nC,EAAM,CACHjhG,KAAM,SAEf,KAAO,CACJ,MAAM+B,EAAQs+F,EACVp5E,OAAOjnB,IAGL,GAFoBA,EAAK06D,gBAEP,EACf,OAAO16D,CACV,IAEFyN,KAAKzN,IACH,MAAM2kI,EAAQ,CACXzkI,GAAIF,EAAKE,GAETF,KAAM,SACNmB,KAAM,IAGT,IAAIyjI,EAAc,GAwBlB,OAnBMA,EAFF5kI,EAAK25D,QACFj0D,EAASsjE,UACI,CACX,mEACAhpE,EAAK25D,QACL,iBACA35D,EAAKU,MACL,UACDkN,KAAK,IAEO,CACX,kCACA5N,EAAK25D,QACL,aACA35D,EAAKU,OACNkN,KAAK,IAIM5N,EAAKU,MAEjB,CACJ2yE,OAAQuxD,EACR7jI,KAAM4jI,EACR,IAKJ1jC,EADCl/F,EAAM0D,OACD,CACHtE,KAAM,CACH,CACGnB,KAAM,UACNE,GAAIV,EAAI0+G,IACRv1C,SAAUjjE,EAASijE,SACnBy1C,OAAQ,CACL/9G,OAAQ,GACRa,KAAM,SACNV,IAAKkF,EAASmjE,UAAY,aAAe,GACzCnnE,GAAI,CACD+4E,cAAe,KACZ4lB,EAASp5E,OAAOjnB,IACb,MAAM6B,EAAOoB,GACVzD,EAAI0+G,KACLlxG,MAAM6jE,cACL,eAAe7wE,EAAKE,QAGlB2B,GAELA,EAAKijF,aACF,UACA,OAAO9kF,EAAKyG,QAAQzG,EAAKE,MAAMmgG,EAASngG,KAC1C,GACF,IAIXkkI,UAAW,CACR1iI,GAAI,CACD4iI,aAAc,CAACC,EAAQC,KACpBllI,KAAKwK,OAAO06H,EAAO,IAI5BziI,MAAOA,KAOV,CACH/B,KAAM,SAEf,MAEAihG,EAAM,CACHjhG,KAAM,UAOZ,OAJAihG,EAAM7hG,MAAMW,GAAG,CAACkhG,WAETA,EAAI//F,KAEJ+/F,CACV,CAEAx8F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IACXqlI,EAAO5hI,GAAGzD,EAAI0+G,KACd7b,EAAK/iG,KAAK+B,GACVihG,EAAUD,EAAGpoF,MAEf4qH,GAAMviC,EAAQt/F,OAAO6hI,EAAMviC,EAAQp/F,aAEvC,MAAMm9F,EAAW/gG,KAAKU,KACCV,KAAK8rG,eAEb7nG,SAAS61H,IAIrB95H,KAAKuyB,SAAS,CACXC,QAASsnG,EAAGp5H,KACZ+xB,UAAW,aACXC,SAAU,IAAI1Q,IAAMhiB,KAAKygG,cAAcz+E,IACxC,IAILhiB,KAAKuyB,SAAS,CACXC,QAASuuE,EACTtuE,UAAW,YACXC,SAAU,IAAI1Q,IAAMhiB,KAAKwlI,aAAaxjH,KAIzC,MAAM2iH,EAAWhhI,GAAGzD,EAAI+jI,SAExB,IAAKU,EAAU,OAEf,MAAMz6E,QAAc64C,EAAGjpF,QAAQjE,IAAI,GAAG3V,EAAI0+G,aAE1C,IAAK10D,EAAO,OAGZ,MAAMi6E,EAAe,CAClBvjI,GAAIV,EAAIikI,aACRxhI,MAAO3C,KAAKoB,MAAM,iBAClBmK,KAAM,uBAIH24H,EAAa,CAChBtjI,GAAIV,EAAIgkI,WACRvhI,MAAO3C,KAAKoB,MAAM,eAClBmK,KAAM,uBACNstE,QAAQ,GAIX8rD,EAASc,SAASv7E,GAElB,MAAMw7E,EAAoBf,EAASx3G,QAAQjtB,EAAIikI,eAAiB,KAC1DwB,EAAkBhB,EAASx3G,QAAQjtB,EAAIgkI,aAAe,KAGxDh6E,EAAM07E,UACHF,GAAqBC,GAEtBhB,EAASvjH,IAAI8iH,GACRwB,GAAqBC,GAE7BhB,EAASvjH,IAAI+iH,EACnB,CAEA1jC,WAAWx5B,GACR,MAAMs+D,EAAO5hI,GAAG3D,KAAKE,IAAI0+G,KAEzB2mB,GAAMhmD,aACNv/E,KAAKU,KAAK+/F,WAAWx5B,GACrBs+D,GAAM/lD,cACT,CAEAgmD,UAAUK,GACP,MAAM9kC,EAAW/gG,KAAKU,KAChBolI,EAAaniI,GAAGkiI,GAKtB,GAFA7lI,KAAKy/H,aAAa1+B,EAAS9rF,QAEvBjV,KAAKoG,SAASkjE,UACf,GAAKw8D,EAAWllD,YAMTj9E,GAAG3D,KAAKE,IAAI0+G,KAAK/5G,SAASghI,OANJ,CAC1B,MAAMnG,EAASC,aAAY,KACpBmG,EAAWllD,aAAag/C,cAAcF,GAE1CoG,EAAWlhI,MAAK,GAAO,EAAM,GAC7B,IACN,CACN,CAEA66H,aAAa/+H,GACV,MAAMqlI,EAAUpiI,GAAGjD,EAAKE,IAEP,QAAbF,EAAK2D,KAA8B,kBAAb3D,EAAK2D,KAC5B0hI,GAASnhI,MAAK,GAAO,GAEpBlE,EAAKuU,QACNjV,KAAKy/H,aAAa/+H,EAAKuU,OAE7B,CAEAzK,OAAOiyD,GACJ,MAAMv8D,EAAMF,KAAKE,IAEjB,IAAI8lI,GAAmB,EAEvB,MAAMrB,EAAWhhI,GAAGzD,EAAI+jI,UAGnBxnE,GAAUkoE,IACZloE,EAASkoE,EAAS1H,gBAAgB/pH,QAAQ,QAAS,KAEtD,MAAM6tF,EAAW/gG,KAAKU,KACCV,KAAK8rG,eAEb7nG,SAAS61H,IAErB,MAAMj1F,EAAWk8D,EAASp5E,OAAOjnB,GACvBA,EAAKE,KAAOk5H,EAAGp5H,KAAKE,KAG9B,IAAIy6D,EAAc,EAEdx2B,EAAS1+B,SAAQk1D,EAAcx2B,EAAS,GAAGu2B,kBAG1CqB,IAAWupE,GAAoB3qE,EAAc,IAC/CoB,EAASq9D,EAAGp5H,KAAKE,GAEjBolI,GAAmB,GAItB,MAAMT,EAAO5hI,GAAGzD,EAAI0+G,KACdx4G,EAAWpG,KAAKoG,SAEtB,IAAK0zH,GAAI35H,WAAa25H,GAAIp5H,MAAME,KAAO67D,EAAQ,CAExC8oE,GAAMlgI,cAAckgI,EAAKlgI,aAAa,CAAEzD,KAAM,SAElDk4H,EAAG35H,UAAY25H,EAAGp5H,KAAKP,YAEvB,MAAM4lI,EAAUpiI,GAAGm2H,EAAGp5H,KAAKE,IACrBmiG,EAAK/iG,KAAK+B,GACVihG,EAAUD,EAAGpoF,MAEfvU,EAASkjE,UAEV05B,EAAQviG,GACL,CAEGG,GAAIk5H,EAAGp5H,KAAKE,GACZF,KAAM,aACNQ,IAAK,0BACLO,KAAMq4H,EAAG35H,UAAUM,MAEtBslI,GAIH/iC,EAAQviG,GACL,CAEGG,GAAIk5H,EAAGp5H,KAAKE,GACZF,KAAM,aACNQ,IAAK,wBACLO,KAAMq4H,EAAG35H,UAAUM,MAEtBslI,GAKN1qE,EAAcy+D,EAAGp5H,KAAK06D,gBAEtB0+D,EAAG35H,UAAUmD,KAAKy/F,EAAI1nC,GAGtBxmD,YAAW,KAGR0wH,GAAM59H,gBAAgB,GAOtB,GACN,CAGImyH,GAAIp5H,MAAME,KAAO67D,GAAUq9D,GAAI35H,WAAWqK,QAC3CsvH,EAAG35H,UAAUqK,SAEZpE,EAASkjE,WAAawwD,GAAIp5H,MAAME,KAAO67D,IACxC94D,GAAG84D,GAAQ73D,MAAK,GAAO,GACvB+/H,EAASrnC,OAAO,GAAG7gC,UACtB,GAEN,oBC7jBH,MAAM8jC,EAAkB,WAExB9gG,EAAOC,QAAU,cAAkC6gG,EAChD5gG,YAAYohG,EAAUlhG,EAAQK,GAC3BJ,MACGihG,EACAlhG,GAAU,cAAckhG,EAASngG,KACjCyT,OAAO6pC,OACJ,CACG7vC,KAAM,IAETnO,GAGT,CAEAO,KACG,MAAMP,EAAMF,KAAKE,IACXkG,EAAWpG,KAAKoG,SAEhB6/H,EAAU,CACbrlI,GAAIV,EAAImO,KACR3N,KAAM,WACNyjH,UAAW,GACXjjH,IAAK,qBACLS,YAAY,GAGXyE,EAASrF,OAAQklI,EAAQllI,OAASqF,EAASrF,OAC1CklI,EAAQ1xB,YAAa,EAE1B,MAAM5S,EAAM7hG,MAAMW,GAAG,CAACwlI,IAItB,cAFOtkC,EAAI//F,KAEJ+/F,CACV,CAEA33B,YAAYrnE,GACT,MAAMzC,EAAMF,KAAKE,IACX4N,EAAS9N,KAAKU,KAAKspE,YAAYrnE,EAAOzC,EAAImO,MAE1C63H,EAAQviI,GAAGzD,EAAImO,MAEhB63H,IAELA,EAAMzhI,OAAO,WAAYqJ,GACzBo4H,EAAMxhI,UACT,CAEA8F,SACG1K,MAAM0K,SAGN,MAAMuzD,EAAW/9D,KAAKqsB,eAChB00E,EAAW/gG,KAAKU,KAElBq9D,GAAoC,aAAxBgjC,EAAS9rF,OAAO5Q,KAC7B08F,EAASxuE,SAAS,CACfC,QAASurC,EACTtrC,UAAW,eACXC,SAAU,IAAI1Q,IAAMhiB,KAAKgqE,eAAehoD,KAG9ChiB,KAAKgqE,aACR,iEC/DY,MAAMm8D,UAAuB,IAS9B35F,qBACR,MAAO,CAAC,CACX,CAaAphB,2BACG,IAYIi0D,EAAQ,CACT77E,UAAW,CAAC,GAGf,MAAO,CACJ/C,GAjBM,CACNC,KAAM,WACN4kE,SAAU,SAgBVhiE,KAbSnB,IAET,IAAK,IAAIoB,KAAK87E,EAAM77E,UACjB67E,EAAM77E,UAAUD,GAAKpB,EAAQoB,IAAM87E,EAAM77E,UAAUD,EACtD,EAUA87E,MAAOA,EAEb,CAEAhqB,aAAajvD,GACVpG,KAAKoG,SAAWA,CACnB,CAEAggI,aACG,OAAOpmI,KAAKoG,UAAY,CAAC,CAC5B,CAiBAjG,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEd,IAYIw/E,EAAQ,CACT77E,UAAW,CAAC,GAGf,MAAO,CACJ/C,GAjBM,CACNC,KAAM,WACN4kE,SAAU,SAgBVhiE,KAbSnB,IAET,IAAK,IAAIoB,KAAK87E,EAAM77E,UACjB67E,EAAM77E,UAAUD,GAAKpB,EAAQoB,IAAM87E,EAAM77E,UAAUD,EACtD,EAUA87E,MAAOA,EAEb,qFC/FH,IAAIt/E,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEjC,MAAMszF,UAA8B,IAOrC58D,qBACR,MAAO,CACJ2xB,SAAU,OAEhB,CAEA/yC,yBAAyBxrB,EAAKC,GAC3B,IAAIK,EAAM,CACPi+D,SAAU,GAAGt+D,cAGZY,EAAK,CACNG,GAAIV,EAAIi+D,SACRh3D,KAAM,WACNzG,KAAM,aACNU,MAAOrB,EAAE,gBACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS+a,iBACxC5a,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KACZD,GAAUj9E,EAAE,sBACb4D,GAAGzD,EAAIi+D,UAAUt5D,SAAS,IAG7BrD,EAAOgC,UAAUsE,QAAQ,IAW9BtG,EAAS,CACVgC,UAAW,CACRsE,OAAQ,WACLU,QAAQC,KAAK,eAChB,GAGH2D,YAAa,CAAC1L,EAAM0F,EAAW,CAAC,KAC7B,GAAY,MAAR1F,EAAc,OAGlB,IAAI2lI,EAAY,CACb,CACGzlI,GAAI,OACJ+B,MAAO5C,EAAE,uBAIXumI,EAAe5lI,EACfo7D,WACAh2C,OAAO9D,GACEA,EAAE2F,OAAOrU,GAEVA,GACS,QAATA,EAAEjP,KACFiP,EAAE+Y,gBACF/Y,EAAE+Y,eAAeD,YACjB9Y,EAAE+Y,eAAeD,WAAWxrB,IACzBF,EAAKkF,QAAQQ,SAASO,aAE5B,GAAMR,SACT,GACFgI,KAAK6T,IACI,CACJphB,GAAIohB,EAAEphB,GACN+B,MAAOqf,EAAE5gB,UAIlBilI,EAAYA,EAAUr+G,OAAOs+G,GAE7B,IAAI9e,EAAY7jH,GAAGzD,EAAIi+D,UACnBqpD,IACDA,EAAU/iH,OAAO,UAAW4hI,GAC5B7e,EAAU/iH,OACP,QACA2B,EAAS+3D,UAAYn+D,KAAKwsC,QAAQ2xB,UAErCqpD,EAAU9iH,UACb,EAGH4H,YAAc5L,IACX,IAAI0F,EAAW1F,EAAK0F,UAAY,CAAC,EAIjC,OAFAA,EAAS+3D,SAAWx6D,GAAGzD,EAAIi+D,UAAUlyD,WAE9B7F,CAAQ,GAIrB,MAAO,CACJ3F,GAAIA,EACJ6C,KArEUnB,IACV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAmEA6I,YAAa5K,EAAO4K,YACpBE,YAAa9K,EAAO8K,YAE1B,CAEA+oD,aAAajvD,EAAW,CAAC,GACtBpG,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAClCpG,KAAKoG,SAAS+3D,SACX/3D,EAAS+3D,UAAYn+D,KAAKL,YAAY6sC,QAAQ2xB,QACpD,CAEAooE,OAAO1mI,EAAQD,GACZ,MAAO,CACJ84E,MAAO94E,EAAIi8B,KAAKz7B,OAAO,GAAGP,mBAC1B+F,MAAO/F,EAAO6oB,MAAM,KAAK,GACzBq6D,OAAQnjF,EAAIi8B,KAAKz7B,OAAO,GAAGP,0BAEjC,CAEAM,UAAUP,EAAKC,GAEZ,IAAIK,EAAMF,KAAKumI,OAAO1mI,EAAQD,GAE1Ba,EAAK,GAET,GACGT,KAAKoG,SAAS+3D,UACdn+D,KAAKoG,SAAS+3D,UAAYn+D,KAAKL,YAAY6sC,QAAQ2xB,SACpD,CAGC,MAAM2tB,EAAS,qBAAqB9rF,KAAKoG,SAAS+3D,YAAYj+D,EAAI0F,QAIlEnF,EAAK,CACFG,GAAIV,EAAI6iF,OACRriF,KAAM,SACNkB,KAAM,OACN2J,KAAM,aACNvK,MAAO,GACPD,OAAQ,GACRG,IAAK,wCACLkB,GAAI,CACD+4E,cAAe,KACZx3E,GAAGzD,EAAI6iF,SACFr1E,MAAM6jE,cAAc,UACrBiU,aAAa,UAAWsG,EAAO,GAI/C,CAEA,IAAItqF,EAAS,CACVgC,UAAW,CACRo1H,WAAa9L,IACNnpH,GAAGzD,EAAIw4E,QAAQ/0E,GAAGzD,EAAIw4E,OAAOxL,OAAO,EAE3C3kE,SAAU,KACH5E,GAAGzD,EAAIw4E,QAAQ/0E,GAAGzD,EAAIw4E,OAAOxL,SAE1B,GAEVs5D,cAAe,KACL,EAEVzlE,YAAa,KACH,GAIbj8D,gBAAkBC,IACf/E,KAAKymI,aAAe1hI,CAAW,EAGlCg/G,QAAU12F,IACP,IAAI45C,EAASjnE,KAAKoG,SAAS+3D,SACvB4I,EAAO/mE,KAAKymI,aAAa3gH,OAAO9D,GAAMA,EAAEphB,IAAMqmE,IAAQ,GAAM,GAEhE,OAAOzlE,EAAOklI,cAAc3/D,EAAM15C,EAAG,EASxCq5G,cAAe,CAAC3/D,EAAM15C,IACZ,IAAI5d,SAAQ,CAACC,EAASmH,KAC1B,GAAyB,MAArB7W,KAAKymI,aAAsB,OAAO/2H,IAEtC,GAAI/L,GAAGzD,EAAIw4E,OAER,OADA/0E,GAAGzD,EAAIw4E,OAAO9zE,OACP8K,IAIV,IAAIi3H,EAAY5/D,EAAK9wC,MAAM,KAAM,KAAM,CAAE6mC,gBAAgB,IACzD6pE,EAAU/lI,GAAKZ,KAAKymI,aAAa1kI,GAAG8N,OAEpC,IAAI+2H,EAAYD,EAAUxmI,YACtBM,EAAKmmI,EAAUnmI,KAGnB,MAAMsiF,EAAS4jD,EAAUh/G,OACrBrU,GAAMA,aAAa,MACpB,GACD,GACEyvE,GACDA,EAAO9tE,OAAO7S,GAAG,SAAUykI,IACxBrlI,GAAQgC,WAAWo1H,WAAWiO,GAI1BljI,GAAGzD,EAAIw4E,OACR/0E,GAAGzD,EAAIw4E,OAAOxL,QAEFltE,KAAK6+G,mBACX3xC,OACT,IAIN,IAAI45D,EAAgB,CACjBpmI,KAAM,SACNE,GAAIV,EAAIw4E,MACR53E,OAAO,EACPH,SAAU,SAKVE,QAAQ,EACRG,MAAO2kB,SAAS3lB,KAAKoG,SAASq6D,aAAe,IAC7C1/D,OAAQ4kB,SAAS3lB,KAAKoG,SAASs6D,aAAe,IAAM,IACpDx/D,IAAK,oBACLD,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAO2lE,EAAK3lE,MACZF,IAAK,cACLG,MAAO,UAEV,CACGX,KAAM,SACNU,MAAOrB,EAAE,SACTuB,WAAW,EACXD,MAAO,SACPE,MAAO,WACQvB,KAAK6+G,mBACX3xC,OACT,KAITzrE,KAAM,CACHf,KAAM,aACNgB,QAAQ,EACRD,KAAMhB,IAKZgD,MAAMhD,GAAGqmI,GAAeliI,OAIxBgiI,EAAUtjI,KAAKtD,KAAKymI,aAAa1kI,GADb,EAC8B,CAC/C62H,WAAYp3H,EAAOgC,UAAUo1H,WAC7BE,cAAet3H,EAAOgC,UAAU+E,SAChCw4D,YAAav/D,EAAOgC,UAAUu9D,YAC9BylE,cAAehlI,EAAOgC,UAAUgjI,gBAGnCI,EAAUp8H,SAEVqK,YAAW1P,UACR3D,EAAOulI,gBAAgB15G,EAAIs5G,GAE3Bj3H,GAAS,GACT,IAAI,IAIbq3H,gBAAiB,CAAC15G,EAAI05C,KACnB,IAAK15C,EAAI,OAET,IAAIrV,EAAMqV,EAAGjB,WACb,IAAKpU,EAAK,OAEV,IAAIgvH,EAAa35G,EAAGJ,YACf+5G,GAELjgE,EAAKp/C,QAAQ1jB,SAASqP,IACdA,GAAc,QAATA,EAAEjP,KAEZiP,EAAEqU,QAAQ1jB,SAASgjI,IAChB,GAAiB,WAAbA,EAAM5iI,KAAsC,MAAlB4iI,EAAM7gI,SAAkB,OAEtD,IAAIR,EAAQqhI,EAAMrhI,QAClB,GAAa,MAATA,EAAe,OAEnB,IAAIshI,EAAUthI,EAAMgB,eACpB,GAAe,MAAXsgI,GAAmBA,EAAQtmI,IAAMoX,EAAIpX,GAAI,OAE7C,IAAIiJ,EAAO,CAAC,EACRsnB,EAAevrB,EAAMurB,eAezB,GAdAtnB,EAAKsnB,GAAgB,CAClBvwB,GAAIomI,EAAWpmI,KAIJoX,EAAIkrB,WAAa,IACvBj/B,SAASqgC,KACbA,EAAIv9B,QAAU,IAAI9C,SAAS+C,IACzB6C,EAAKsnB,GAAcnqB,EAAEF,YAClBkgI,EAAWhgI,EAAEF,WAAW,GAC5B,IAIDkgI,EAAW34H,KACZxE,EAAKsnB,GAAc9iB,KAAO24H,EAAW34H,KACrCxE,EAAKsnB,GAAcxuB,MAAQkH,EAAKsnB,GAAc9iB,SAC1C,CACJ,IAAI84H,EAAU,CAAC,EACfA,EAAQh2G,GAAgB61G,EACxBn9H,EAAKsnB,GAAc9iB,KAAOzI,EAAM4a,OAAO2mH,GACvCt9H,EAAKsnB,GAAcxuB,MAAQkH,EAAKsnB,GAAc9iB,IACjD,CAEA,IAAIwhD,EAAOv8C,EAAEw4F,eAAem7B,EAAMrmI,IAClC,IAAKivD,EAAM,OAEX,MAAMpvD,EAAuB,mBAAXovD,EAAKpvD,GAAmBovD,EAAKpvD,KAAOovD,EAAKpvD,GACrD+3H,EAAU/3H,GAAI+3H,SAAW/3H,GAAIoB,OAAO,IAAI22H,QAE1CA,GAAS5yH,EAAMf,SAASlB,GAAG60H,GAAU3uH,EAAK,GAC/C,GACH,GAeR,MAAO,CACJpJ,GAAIA,EACJ6C,KAbSnB,IACT,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAExD,GAAI9C,EACD,IAAK,IAAI8C,KAAKpB,EACX1B,EAAG2B,GAAGmB,GAAKpB,EAAQoB,EAEzB,EAOAuB,gBAAiBtD,EAAOsD,gBACxBi/G,QAASviH,EAAOuiH,QAChB2iB,cAAellI,EAAOklI,cAE5B,iECtXH,IAAI3mI,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEjC,MAAMi4F,UAA+B,IAOtCvhE,qBACR,MAAO,CACJ00B,SAAU,OAEhB,CAEA91C,yBAAyBxrB,EAAKC,GAC3B,IAAIK,EAAM,CACPknI,SAAU,GAAGvnI,cAGZY,EAAK,CACNG,GAAIV,EAAIknI,SACRjgI,KAAM,WACNzG,KAAM,aACNU,MAAOrB,EAAE,aACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS+a,iBACxC5a,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KACZD,GAAUj9E,EAAE,sBACb4D,GAAGzD,EAAIknI,UAAUviI,SAAS,IAG7BrD,EAAOgC,UAAUsE,QAAQ,IAW9BtG,EAAS,CACVgC,UAAW,CACRsE,OAAQ,WACLU,QAAQC,KAAK,eAChB,EACAs4D,YAAa,KACH,GAIb30D,YAAa,CAAC1L,EAAM0F,EAAW,CAAC,KAC7B,GAAY,MAAR1F,EAAc,OAClB0F,EAAS26D,aAAc,EAGvB,IAAIslE,EAAY,CACb,CACGzlI,GAAI,OAEJ+B,MAAO5C,EAAE,wBAIdW,EAAKo7D,WAAWh2C,OAAM,KAAM,IAAM,IAAS,IAAI7hB,SAAS+d,IACjDA,GAELA,EAAE2F,OAAM,KAAM,IAAM,GAAM1jB,SAASqP,IAE7BA,GACS,QAATA,EAAEjP,KACFiP,EAAE+Y,gBACF/Y,EAAE+Y,eAAeD,YACjB9Y,EAAE+Y,eAAeD,WAAWxrB,IACzBF,EAAKkF,QAAQQ,SAASO,YAEzB0/H,EAAU/hI,KAAK,CACZ1D,GAAI0S,EAAEuV,aACNlmB,MAAO,GAAGqf,EAAE5gB,WAAWkS,EAAElS,SAE/B,GACD,IAGL,IAAIomH,EAAY7jH,GAAGzD,EAAIknI,UACnB5f,IACDA,EAAU/iH,OAAO,UAAW4hI,GAC5B7e,EAAU/iH,OACP,QACA2B,EAAS86D,UAAYlhE,KAAKwsC,QAAQ00B,UAErCsmD,EAAU9iH,UACb,EAGH4H,YAAc5L,IACX,IAAI0F,EAAW1F,EAAK0F,UAAY,CAAC,EAE7BohH,EAAY7jH,GAAGzD,EAAIknI,UAEnB3C,GADejd,EAAUxoC,WACI/8E,OAAOR,KAAKoI,MAAQ,IAAIf,QACrD44C,GAAQA,EAAI9gD,IAAM4mH,EAAUv7G,aAC9B,GAKF,OAJIw4H,IACDr+H,EAAS86D,SAAWujE,EAAa7jI,IAG7BwF,CAAQ,GAIrB,MAAO,CACJ3F,GAAIA,EACJ6C,KA9EUnB,IACV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EA4EA6I,YAAa5K,EAAO4K,YACpBE,YAAa9K,EAAO8K,YAE1B,CAEA+oD,aAAajvD,EAAW,CAAC,GACtBpG,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAClCpG,KAAKoG,SAAS86D,SACX96D,EAAS86D,UAAYlhE,KAAKL,YAAY6sC,QAAQ00B,QACpD,CAEA/gE,UAAUP,EAAKC,GAQZG,KAAKumI,OANL,SAAgB1mI,EAAQD,GACrB,MAAO,CACJ84E,MAAO94E,EAAIi8B,KAAKz7B,OAAO,GAAGP,qBAC1B+F,MAAO/F,EAAO6oB,MAAM,KAAK,GAE/B,EAIA,IAAImnC,EAAO/vD,MAAMK,UAAUP,EAAKC,GAmBhC,OAjBAgwD,EAAKk0D,QAAU,KACZ,IACI/jH,KAAKymI,eACLzmI,KAAKoG,SAAS86D,UACflhE,KAAKoG,SAAS86D,UAAYlhE,KAAKL,YAAY6sC,QAAQ00B,SAEnD,OAAOzxD,QAAQC,UAElB,IAAIxF,EAAOlK,KAAKymI,aAAal+G,WAAWvoB,KAAKoG,SAAS86D,UACtD,IAAKh3D,EAAM,OAAOuF,QAAQC,UAE1B,IAAIq3D,EAAO78D,EAAKyxD,aAChB,OAAKoL,EAEElX,EAAK62E,cAAc3/D,GAFRt3D,QAAQC,SAEK,EAG3BmgD,CACV,iEChJH,MAAM5sC,EAAY,EAAQ,OAM1B,IAAIljB,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhD,MAAMuxH,UAA2BpkH,EAC9BtjB,cACGG,MAAM,CAAC,SAAUiC,GACpB,CAEAszD,aAAajvD,GACVtG,MAAMmG,WAAWG,GACjBpG,KAAKs2B,QAAUlwB,EAASkwB,OAC3B,CAEA8vG,aACG,IAAIpuH,EAAMlY,MAAMgG,QAEhB,OADAkS,EAAIse,QAAUt2B,KAAKs2B,QACZte,CACV,EAUY,MAAM0rF,UAAiC,IACnD/jG,YAAYoC,EAAIlC,GACbC,MAAMD,EAAQ,CACXynI,gBAAiB,GACjBC,YAAa,GACbC,0BAA2B,GAC3BC,iBAAkB,GAClBC,kBAAmB,GACnBC,kBAAmB,KAGtB3nI,KAAK+B,GAAKA,EACV/B,KAAKH,OAASA,EACdG,KAAKiF,OAAS,KAGdjF,KAAK4nI,qBAAuB,KAI5B5nI,KAAK06H,UAAY16H,KAAK+B,GAAGgzB,iBAAiB,GAAG/0B,KAAKE,IAAIC,oBAKtDH,KAAK6nI,cAAgB7nI,KAAK+B,GAAGgzB,iBAC1B,GAAG/0B,KAAKE,IAAIC,yBAMfH,KAAK8nI,0BAA6BnlI,IAC/B,IAAI0+F,EAAc1+F,EAAM0e,OAAS,GAQjCrhB,KAAK+nI,iBAAiBt5G,GACZzuB,KAAK06H,UAAUn1H,QAAQkpB,IAC9B4yE,EAAY,EAGlBrhG,KAAKgoI,8BAAgC,KAClChoI,KAAK+nI,iBAAiB,EAGzB/nI,KAAK2sB,aAAc,CAGtB,CAQW6f,qBACR,MAAO,CACJ03B,aAAc,EAQdC,mBAAoB,UAOpBC,gBAAiB,EAmBvB,CAOA/O,aAAajvD,IACVA,EAAWA,GAAY,CAAC,GAEf89D,kBAC0B,IAAzB99D,EAAS89D,aACX99D,EAAS89D,aACTw/B,EAAyBl3D,QAAQ03B,aAEzC99D,EAASg+D,qBAC6B,IAA5Bh+D,EAASg+D,gBACXh+D,EAASg+D,gBACTs/B,EAAyBl3D,QAAQ43B,gBAEzCpkE,KAAKoG,SAAWA,CACnB,CASApB,WAAWC,GACRjF,KAAKiF,OAASA,EAEVjF,KAAK06H,WAEN16H,KAAK06H,UAAU1lG,WAAW/vB,EAAO8B,UAGhC/G,KAAK6nI,eAEN7nI,KAAK6nI,cAAc7yG,WAAW/vB,EAAO8B,SAE3C,CAEAk7F,SAASvhG,GACNV,KAAKU,KAAOA,CACf,CAGAD,KACG,IAAIs/E,EAAO//E,KACPE,EAAMF,KAAKE,IAEf,MAAO,CACJU,GAAIV,EAAIqnI,YACR3lI,KAAM,QACND,YAAY,EACZa,QAAS,EACTq2E,QAAQ,EACRh3E,KAAM,CACH,CACGjB,GAAIV,EAAIsnI,0BACR3uD,QAAQ,EACR13E,KAAM,CACH,CACGP,GAAIV,EAAIunI,iBACR/mI,KAAM,OACNg7E,YAAa37E,EAAE,2CACfqC,GAAI,CACDw7E,gBAAiB,KACd59E,KAAK+nI,iBAAiB,IAI/B,CACGrnI,KAAM,SACNQ,IAAK,gBACLF,MAAO,GACPY,KAAM,OACN2J,KAAM,cACNhK,MAAO,WACJ,IAAI++E,EAAQ38E,GAAGzD,EAAIunI,kBACnBnnD,EAAMz7E,SAAS,IACfy7E,EAAMnhE,QACNmhE,EAAM2nD,UAAU,kBACnB,KAIT,CACGrnI,GAAIV,EAAIonI,gBACR5mI,KAAM,SACNQ,IAAK,gBACLyB,MAAO5C,EAAE,cACTwB,MAAO,KACJvB,KAAK6nI,cAAchsD,MAAMl4E,GAAGzD,EAAIonI,iBAAiBpkC,UAAW,CACzDvyE,IAAK,UACN,GAGR,CACGjwB,KAAM,UACNE,GAAIV,EAAIwnI,kBACRxmI,IAAK,kBACL23E,QAAQ,EACR13E,KAAM,CACH,CACGT,KAAM,SACNQ,IAAK,gBACLN,GAAIV,EAAIynI,kBACRvmI,MAAOrB,EAAE,gBACTwL,KAAM,YACN3J,KAAM,OAENN,WAAW,EACXC,MAAO,WACJw+E,EAAKmoD,aACR,MAMlB,CAEA/iI,WAAWpD,GACJA,IACD/B,KAAK+B,GAAKA,GAGb,IAAI7B,EAAMF,KAAKE,IA+Bf,OArBAF,KAAK06H,UAAUp3H,OACftD,KAAK06H,UAAUhkG,eAAe,UAAW12B,KAAK8nI,2BAC9C9nI,KAAK06H,UAAUt4H,GAAG,UAAWpC,KAAK8nI,2BAElC9nI,KAAK6nI,cAAcvkI,OACnBtD,KAAK6nI,cAAcnxG,eAChB,UACA12B,KAAKgoI,+BAERhoI,KAAK6nI,cAAczlI,GAAG,UAAWpC,KAAKgoI,+BACtChoI,KAAK6nI,cAAcnxG,eAChB,OACA12B,KAAKgoI,+BAERhoI,KAAK6nI,cAAczlI,GAAG,OAAQpC,KAAKgoI,+BAEnCrkI,GAAGzD,EAAIqnI,cAAc5iI,OACrBhB,GAAGzD,EAAIonI,kBAAkB3iI,OACzBhB,GAAGzD,EAAIwnI,oBAAoB/iI,OAC3BhB,GAAGzD,EAAIsnI,4BAA4B7iI,OAE3B3E,KAAKoG,SAAS89D,cACnB,KAAK,EACF,MACH,KAAK,EACF,OAAQlkE,KAAKoG,SAAS+9D,oBACnB,IAAK,OACFxgE,GAAGzD,EAAIonI,kBAAkB1iI,OACzBjB,GAAGzD,EAAIqnI,cAAc3iI,OACrB,MACH,IAAK,UACFjB,GAAGzD,EAAIqnI,cAAc5iI,OAG3B,MACH,KAAK,EACFhB,GAAGzD,EAAIqnI,cAAc3iI,OACrB,IAAIujI,EAAqBxkI,GAAGzD,EAAIwnI,mBAC5BS,IACDA,EAAmBvjI,OAGf5E,KAAKoG,UAAUgiI,aACfpoI,KAAKoG,SAASgiI,YAAc,IAAInkI,SAASokI,IACvC,IAAIC,EAAO,IAAIjB,EACfiB,EAAKjzE,aAAagzE,GAClB,IAAIE,EAAmB,CACpB7nI,KAAM,SACNQ,IAAK,gBACLE,MAAOknI,EAAKlnI,MACZmK,KAAM,eACN3J,KAAM,OAENN,WAAW,EACXC,MAAO,KACJvB,KAAKwP,KAAK,cAAe,KAAM84H,EAAKhyG,QAAQ,GAIlD6xG,EAAmBl9H,QAAQs9H,EAAiB,KAIrD,MACH,KAAK,EACF5kI,GAAGzD,EAAIsnI,4BAA4B5iI,OACnCjB,GAAGzD,EAAIqnI,cAAc3iI,OAG9B,CAEAy8F,cACG,IAAImnC,EAAiB,KAErB,OAAQxoI,KAAKoG,SAAS+9D,oBACnB,IAAK,OACFqkE,EAAiBxoI,KAAK6nI,cAAc57H,WACpC,MACH,IAAK,UACFu8H,EAAiBxoI,KAAK06H,UAAUzuH,WAItC,OAAOu8H,CACV,CAOA9lC,YAkBG,OAhB4B,MAAxB1iG,KAAKyoI,kBAG2B,GAA9BzoI,KAAKoG,SAAS89D,cACwB,UAAtClkE,KAAKoG,SAAS+0G,qBAEdn7G,KAAKyoI,gBAAkB,KACb,EAIVzoI,KAAKyoI,gBAAkB,KACb,GAITzoI,KAAKyoI,eACf,CAOAV,kBACG,IAAIW,EAAc1oI,KAAKqlB,WAAWrlB,KAAK4nI,sBACnCY,EAAiBxoI,KAAKqhG,cAEtBsnC,EAAa,EACbH,GAAgBnnH,OAAOlb,QACxBwiI,EAAaH,GAAgBnnH,OAAOlb,OAChCuiI,IACDC,IACAH,EAAiB,CACdv+G,KAAM,MACN5I,MAAO,CAACmnH,EAAgBE,MAI9BF,EAAiBE,EAGpB1oI,KAAKwP,KAAK,cAAe,KAAMg5H,GAEb,GAAdG,IAAiBA,GAAa,GAClC,MAAMC,EAAUjlI,GAAG3D,KAAKE,IAAIonI,iBACxBsB,IACDA,EAAQ3mI,OAAOksF,MAAQw6C,EACvBC,EAAQlkI,UAEd,CAEAwjI,cACGloI,KAAK+nI,iBAAgB,KAAM,GAAM,GACpC,CAUAlgC,mBAAmB5xF,EAAS,MACzBjW,KAAK4nI,qBAAuB3xH,EAC5BjW,KAAK+nI,iBACR,CAUA1iH,WAAWwjH,GACR,IAAI5yH,EAMJ,KAJGA,EADC4yH,IAGSllI,GAAG3D,KAAKE,IAAIunI,mBAAmBx7H,YAAc,IAAI45B,QAEjD,OAAO,KAGpB,IAAIijG,EAAQ7yH,EAAO4vB,OAAOxtB,cAAcqQ,MAAM,KAG9C,IAAIqgH,EAAW,GAEXjlI,EAAY9D,KAAKiF,QAAQ8B,UAAY,GA6CzC,OA3CA+hI,EAAM7kI,SAASq7B,IACZ,IAAI0pG,EAAa,GAIjBllI,EAAUG,SAAS+C,IAChB,GAAIA,EAAEqoC,oBACH,OAAQroC,EAAE3C,KACP,IAAK,SACL,IAAK,SACL,IAAK,WACL,IAAK,QACF2kI,EAAW1kI,KAAK,CACbD,IAAK2C,EAAEpG,GACPwvB,KAAM,WACNztB,MAAO28B,IAEV,MAEH,IAAK,OACYt4B,EAAE7E,UACR8B,SAASkiB,IACVA,EAAE9X,KAAKhB,QAAQiyB,IAAM,GACtB0pG,EAAW1kI,KAAK,CACbD,IAAK2C,EAAEpG,GACPwvB,KAAM,SACNztB,MAAOwjB,EAAEvlB,IAEf,IAIZ,IAGCooI,EAAW7iI,OAAS,GACrB4iI,EAASzkI,KAAK,CACX2lB,KAAM,KACN5I,MAAO2nH,GAEb,IAGCD,EAAS5iI,OAAS,EACD,CACf8jB,KAAM,MACN5I,MAAO0nH,GAIH,IAEb,CAEAzlC,UAAU51F,GAEP1N,KAAK06H,UAAU7+C,MAAMnuE,EAAO,KAAM,CAAEijB,IAAK,UAC5C,4EC5gBH,MAAMs4G,UAAwC,IAC3CtpI,YAAY+hG,EAAgB7hG,GAEzBC,MADWD,GAAU,6BACT,CAAC,GAEbG,KAAK0hG,eAAiBA,EACtB1hG,KAAK+B,GAAK2/F,EAAe3/F,GAEzB/B,KAAKU,KAAO,KAIZV,KAAKqsB,eAAiB,IAKzB,CAEA5rB,KACG,MAAO,CAAC,CACX,CAEA6C,KAAKnB,GACEA,EAAQzB,OAAMV,KAAKU,KAAOyB,EAAQzB,MAElCyB,EAAQkqB,iBAAgBrsB,KAAKqsB,eAAiBlqB,EAAQkqB,eAC7D,CAEAo0E,WAAWx5B,EAAQj4C,GACZhvB,KAAKqsB,gBAAgBrsB,KAAKqsB,eAAeQ,UAAUmC,GAEnDhvB,KAAKU,MAAMV,KAAKU,KAAK+/F,WAAWx5B,EACvC,EAGY,MAAM28B,UAA+B,IAYjDzjG,UAAU6hH,GAAQ,GACf,IAAI7hH,EAAY,IAAI8oI,EAAgCjpI,MAGpD,GAAIgiH,EAAO,CACR,IAAIC,EAAe9hH,EACnBA,EAAY,CACTM,GAAIwhH,EAAaxhH,KACjB6C,KAAM,IAAIwS,IACAmsG,EAAa3+G,QAAQwS,GAE/BtL,OAAQ,IAAIsL,IACFmsG,EAAaz3G,YAAYsL,GAEnC2qF,WAAY,IAAI3qF,IACNmsG,EAAaxhB,cAAc3qF,GAG3C,CAEA,OAAO3V,CACV,cCtEHV,EAAOC,QAAU,MACdC,YAAYujB,EAAYje,EAAQikI,GAC7BlpI,KAAKkpI,aAAeA,GAAgB,eASpClpI,KAAKiF,OAASA,EAEdjF,KAAKszE,QAAQpwD,GAAc,CAAC,GAG5BljB,KAAKiF,OAAO85B,UAAU/+B,KAAMA,KAAM,CAAC,SAItC,CAMAorB,cACG,MAAO,MACV,CAQAkoD,QAAQzpE,GACL7J,KAAKY,GAAKiJ,EAAKjJ,IAAMZ,KAAKiF,OAAOlD,GAAG8N,OACpC7P,KAAKmpI,cAAgBp1H,KAAK0D,MAAM5N,EAAKs/H,gBAAiB,GACtDnpI,KAAKwlB,aACF3b,EAAK2b,cACLxlB,KAAKiF,OAAO+5B,oBAAoB,CAAC,SAAU,CACxC59B,MAAOpB,KAAKkpI,cAErB,CAOApjI,QAEG,OADA9F,KAAKiF,OAAOk6B,YAAYn/B,KAAMA,KAAM,CAAC,UAC9B,CACJY,GAAIZ,KAAKY,GACT4kB,aAAcxlB,KAAKwlB,aACnB2jH,cAAenpI,KAAKmpI,cAE1B,CAEAl2D,OAAOvyE,GACJ,IAAK,IAAI2D,KAAO3D,EACbV,KAAKqE,GAAO3D,EAAK2D,EAEvB,oBChEH,MAAM+kI,EAA4B,EAAQ,OACpCC,EAA8B,EAAQ,OACtCC,EAA6B,EAAQ,OAE3C,IAAIC,EAAY,CAAC,EACjBA,EAAUH,EAA0BxnI,QAAUwnI,EAC9CG,EAAUF,EAA4BznI,QAAUynI,EAChDE,EAAUD,EAA2B1nI,QAAU0nI,EAE/C,MAAME,EAAoB,CACvBC,mBAAep+G,EACfphB,KAAM,IAGTxK,EAAOC,QAAU,MACdC,YAAYujB,EAAYje,EAAQlD,GAE7B/B,KAAKiF,OAASA,EACdjF,KAAK+B,GAAKA,EAEV/B,KAAKszE,QAAQpwD,EAChB,CAQAowD,QAAQzpE,GAUL,GARAA,EAAKi9B,qBACFj9B,EAAKi9B,sBAAwBj9B,EAAKi9B,qBAAqB78B,KAClDJ,EAAKi9B,qBACL0iG,EAOU,IADf3/H,EAAKi9B,qBAAqB78B,KAAKnB,QAAQwK,GAAMA,EAAE61H,gBAC3ChjI,OACL,MAKoC,IAAxB0D,EAAKkgB,uBACiC,IAAnClgB,EAAKkgB,gBAAgBxd,aAC7B1C,EAAKkgB,gBAAgBxd,WAAa,SACe,IAAzC1C,EAAKkgB,gBAAgBC,mBAC7BngB,EAAKkgB,gBAAgBC,iBAAmB,SACO,IAAvCngB,EAAKkgB,gBAAgB4Y,iBAC7B94B,EAAKkgB,gBAAgB4Y,eAAiB,SACO,IAArC94B,EAAKkgB,gBAAgB6Y,eAC7B/4B,EAAKkgB,gBAAgB6Y,aAAe,KAI1C,IAAI8mG,EAAiB7/H,EAAKkgB,iBAAmB,CAC1Cxd,WAAY,GACZyd,iBAAkB,GAClB2Y,eAAgB,GAChBC,aAAc,IAEjB8mG,EAAeP,eAAgB,EAE/B,IAAIQ,EAAc,IAAIP,EACnBM,EACA1pI,KAAKiF,QAER4E,EAAKi9B,qBAAqB78B,KAAKspB,QAAQo2G,EAC1C,CAEA3pI,KAAK4pI,YAAY//H,EAAKi9B,sBAEtB9mC,KAAKypI,cAAgB5/H,EAAKi9B,qBAAqB2iG,cAC1CzpI,KAAKypI,gBACPzpI,KAAKypI,cAAgBzpI,KAAKiK,OAAO,GAAGrJ,GAE1C,CAaAkF,QACG,MAAO,CACJ2jI,cAAezpI,KAAKypI,cACpBx/H,KAAMjK,KAAK6pI,cAEjB,CAEA5/H,KAAKyG,EAAK,MAAM,IACb,OAAO1Q,KAAK4nB,OAAO9e,OAAO4H,EAC7B,CAEAk5H,YAAYE,GACT9pI,KAAK4nB,OAAS,GACdkiH,EAAa7/H,KAAKhG,SAASvD,IACxBV,KAAKiL,QAAQvK,GAAM,EAAM,GAE/B,CAEAmpI,cACG,IAAIliH,EAAQ,GAKZ,OAJA3nB,KAAK4nB,OAAO3jB,SAASvD,IAClBinB,EAAMrjB,KAAK5D,EAAKoF,QAAQ,IAGpB6hB,CACV,CAEAoiH,eAAe5sG,GACZn9B,KAAKypI,cAAgBtsG,CACxB,CAEA2H,iBACG,OAAO9kC,KAAKiK,MAAMqJ,GACRA,EAAE1S,IAAMZ,KAAKypI,gBACpB,EACN,CAEAx+H,QAAQvK,EAAMkH,GAAO,GAClB,IAAI0hB,EAAU,IAAIigH,EAAU7oI,EAAKkB,MAAMlB,EAAMV,KAAKiF,QAKlD,OAJAjF,KAAK4nB,OAAOtjB,KAAKglB,GACb1hB,GACD5H,KAAKiF,OAAO2C,OAER0hB,CACV,CAEA9d,WAAW9K,GACR,IAAIspI,EAAgBhqI,KAAK4nB,OAAOva,QAAQ3M,GACxCV,KAAK4nB,OAAOzb,OAAO69H,EAAe,GAC9BtpI,EAAKE,KAAOZ,KAAKypI,gBAClBzpI,KAAKypI,cAAgBzpI,KAAK4nB,OAAO,GAAGhnB,IAEvCZ,KAAKiF,OAAO2C,MACf,CAEAqiI,WAAWC,EAAcxpI,GACtB,IAAI4oB,EACJ,GAAI5oB,EAAKkB,OAASsoI,EAAatoI,KAC5BsoI,EAAaj3D,OAAOvyE,GACpB4oB,EAAU4gH,MACN,CACJ5gH,EAAU,IAAIigH,EAAU7oI,EAAKkB,MAAMlB,EAAMV,KAAKiF,QAC9C,IAAI+kI,EAAgBhqI,KAAK4nB,OAAOva,QAAQ68H,GACxClqI,KAAK4nB,OAAOzb,OAAO69H,EAAe,EAAG1gH,GACjCtpB,KAAKypI,gBAAkBS,EAAatpI,KACrCZ,KAAKypI,cAAgBngH,EAAQ1oB,GAEnC,CAEA,OADAZ,KAAKiF,OAAO2C,OACL0hB,CACV,cCpKH7pB,EAAOC,QAAU,MACdC,YAAYwC,GACTnC,KAAKkJ,SACF/G,EAAQ+G,UACR,WACG,MAAO,EACV,EACHlJ,KAAKsD,KAAOnB,EAAQmB,MAAQ,WAAa,EACzCtD,KAAK09E,SACFv7E,EAAQu7E,UACR,WACG,OAAO,CACV,EACH19E,KAAK2F,OACFxD,EAAQwD,QACR,WACG,MAAO,CAAC,CACX,EACH3F,KAAKq/E,MAAQl9E,EAAQk9E,OAAS,CAAC,CAClC,oBClBH,MAAM8qD,EAAwB,EAAQ,OAChCC,EAAiC,EAAQ,OAEzCC,EAAsB,EAAQ,OAE9BC,EAAc,EAAQ,OACtBrK,EAAgB,EAAQ,OACxBsK,EAAgB,EAAQ,OACxBC,EAAkB,EAAQ,OAEhC,IAAIzqI,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhD,IAAIqvB,EAAgB,CACjBh+B,KAAM,gBACN6iB,iBAAkB,GAClBzd,WAAY,GACZ6E,MAAO,OACP2rC,UAAW,KACXC,QAAS,OACTytF,SAAU,OACVC,SAAU,OACVC,MAAO,QAGVlrI,EAAOC,QAAU,MAAM4pI,UAAmC,EAGvD3pI,YAAYujB,EAAYje,GACrBnF,MAAMojB,EAAYje,EAAQ,QAU7B,CAMAmmB,cACG,MAAO,OACV,CAKAA,cACG,MAAO,aACV,CAEAA,iBAAiBxrB,EAAKC,GACnB,IAAIK,EAAM,CACPkR,MAAOxR,EAAIQ,OAAO,GAAGP,qBACrBk9C,UAAWn9C,EAAIQ,OAAO,GAAGP,yBACzBm9C,QAASp9C,EAAIQ,OAAO,GAAGP,uBACvB4qI,SAAU7qI,EAAIQ,OAAO,GAAGP,wBACxB6qI,SAAU9qI,EAAIQ,OAAO,GAAGP,wBACxB8qI,MAAO/qI,EAAIQ,OAAO,GAAGP,sBAGpB+qI,EAAiB,CAAC3lI,EAAQvE,KAC3B,IAAIghC,EAAaz8B,EACb8B,QAAQC,GAAMA,aAAasjI,IAC3Bn8H,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzCuC,GAAGzD,EAAI68C,WAAWt4C,OAAO,UAAWi9B,GAGpCA,EAAWnO,QAAQ,CAChB3yB,GAAI,OACJ+B,MAAO5C,EAAE,yBAIZ4D,GAAGzD,EAAI88C,SAASv4C,OAAO,UAAWi9B,GAGlC,IAAImpG,EAAe5lI,EACf8B,QAAQC,GAAMA,aAAai5H,IAC3B9xH,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzCypI,EAAat3G,QAAQ,CAClB3yB,GAAI,OACJ+B,MAAO5C,EAAE,2BAEZ4D,GAAGzD,EAAIuqI,UAAUhmI,OAAO,UAAWomI,GAGnC,IAAIC,EAAgB7lI,EAChB8B,QAAQC,GAAMA,aAAai5H,IAC3B9xH,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzC0pI,EAAcv3G,QAAQ,CACnB3yB,GAAI,OACJ+B,MAAO5C,EAAE,2BAEZ4D,GAAGzD,EAAIwqI,UAAUjmI,OAAO,UAAWqmI,GAGnC,IAAIC,EAAe9lI,EACf8B,QACGC,GAAMA,aAAaujI,GAAiBvjI,aAAawjI,IAEpDr8H,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzC2pI,EAAax3G,QAAQ,CAClB3yB,GAAI,OACJ+B,MAAO5C,EAAE,2BAEZ4D,GAAGzD,EAAIkR,OAAO3M,OAAO,UAAWsmI,GAChCpnI,GAAGzD,EAAIyqI,OAAOlmI,OAAO,UAAWsmI,GAG5BrqI,GAAQA,EAAK0Q,QACdzN,GAAGzD,EAAIkR,OAAO3M,OAAO,QAAS/D,EAAK0Q,OACnCzN,GAAGzD,EAAIkR,OAAO1M,WAGbhE,GAAQA,EAAKq8C,YACdp5C,GAAGzD,EAAI68C,WAAWt4C,OAAO,QAAS/D,EAAKq8C,WACvCp5C,GAAGzD,EAAI68C,WAAWr4C,WAGjBhE,GAAQA,EAAKs8C,UACdr5C,GAAGzD,EAAI88C,SAASv4C,OACb,QACA/D,EAAKs8C,SAAW7X,EAAc6X,SAEjCr5C,GAAGzD,EAAI88C,SAASt4C,WAGfhE,GAAQA,EAAK+pI,WACd9mI,GAAGzD,EAAIuqI,UAAUhmI,OACd,QACA/D,EAAK+pI,UAAYtlG,EAAcslG,UAElC9mI,GAAGzD,EAAIuqI,UAAU/lI,WAGhBhE,GAAQA,EAAKgqI,WACd/mI,GAAGzD,EAAIwqI,UAAUjmI,OAAO,QAAS/D,EAAKgqI,UACtC/mI,GAAGzD,EAAIwqI,UAAUhmI,WAGhBhE,GAAQA,EAAKiqI,QACdhnI,GAAGzD,EAAIyqI,OAAOlmI,OAAO,QAAS/D,EAAKiqI,OACnChnI,GAAGzD,EAAIyqI,OAAOjmI,UACjB,EAGH,IAAIsmI,EAA6B,IAAIX,EAClCzqI,EACA,GAAGC,WAkPN,OA/OoB,IAAIuqI,EAA+B,CACpDlhI,SAAU,KACA,CACJkpC,MAAO,QACPvwC,KAAM,CACH,CACGV,KAAM,CACH,CACGP,GAAIV,EAAIkR,MACR1Q,KAAM,aACNU,MAAO,mDAAmDrB,EACvD,WAEH27E,YAAa37E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,QACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJypI,EAA2BpmI,KACxB,KACA2lI,EAAcnmI,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAI68C,UACRr8C,KAAM,aACNU,MAAO,mDAAmDrB,EACvD,gBAEH27E,YAAa37E,EAAE,uBACf+B,WAAY,IACZqF,KAAM,YACN40C,UAAU,EACV55C,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJypI,EAA2BpmI,KACxB,KACA0lI,EAAYlmI,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAI88C,QACRt8C,KAAM,aACNU,MAAO,mDAAmDrB,EACvD,cAEH27E,YAAa37E,EAAE,uBACf+B,WAAY,IACZqF,KAAM,UACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJypI,EAA2BpmI,KACxB,KACA0lI,EAAYlmI,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAIuqI,SACR/pI,KAAM,aACNU,MAAO,kDAAkDrB,EACtD,cAEH27E,YAAa37E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,WACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJypI,EAA2BpmI,KACxB,KACAq7H,EAAc77H,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAIwqI,SACRhqI,KAAM,aACNU,MAAO,kDAAkDrB,EACtD,cAEH27E,YAAa37E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,WACN40C,UAAU,EACV55C,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJypI,EAA2BpmI,KACxB,KACAq7H,EAAc77H,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAIyqI,MACRjqI,KAAM,aACNU,MAAO,sDAAsDrB,EAC1D,WAEH27E,YAAa37E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,QACN40C,UAAU,EACV55C,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJypI,EAA2BpmI,KACxB,KACA4lI,EAAgBpmI,WAAWC,IAC7B,QAStBf,KAAM,CAAC2B,EAAQvE,KACPuE,IAEL2lI,EAAe3lI,EAAQvE,GAEvBsqI,EAA2BlmI,gBAAgBG,EAAOF,aAClDimI,EAA2BhmI,WAAWC,GACtC+lI,EAA2B1nI,KAAK,CAC7BwE,OAAQ,KAGL8iI,EAAe3lI,EAAQvE,EAAK,IAEhC,EAGLg9E,SAAU,SAAU4C,GACjB,IAAItjC,EAAUr5C,GAAGzD,EAAI88C,SAAS/wC,YAAck5B,EAAc6X,QACvDytF,EAAW9mI,GAAGzD,EAAIuqI,UAAUx+H,YAAck5B,EAAcslG,SAE3D,OACGztF,GAAW7X,EAAc6X,SACzBytF,GAAYtlG,EAAcslG,WAE1BnqD,EAAMphE,YAAY,UAAW,YAC7BohE,EAAMphE,YAAY,WAAY,aAEvB,EAIb,EAEAvZ,OAAQ,WACL,IAAImI,EAAS,CAAC,EAad,OAXAA,EAAOsD,MAAQzN,GAAGzD,EAAIkR,OAAOnF,YAAck5B,EAAc/zB,MACzDtD,EAAOivC,UACJp5C,GAAGzD,EAAI68C,WAAW9wC,YAAck5B,EAAc4X,UACjDjvC,EAAOkvC,QACJr5C,GAAGzD,EAAI88C,SAAS/wC,YAAck5B,EAAc6X,QAC/ClvC,EAAO28H,SACJ9mI,GAAGzD,EAAIuqI,UAAUx+H,YAAck5B,EAAcslG,SAChD38H,EAAO48H,SACJ/mI,GAAGzD,EAAIwqI,UAAUz+H,YAAck5B,EAAculG,SAChD58H,EAAO68H,MAAQhnI,GAAGzD,EAAIyqI,OAAO1+H,YAAck5B,EAAcwlG,MAElD78H,CACV,EAEAuxE,MAAO,CAAC,GAId,CAQA/L,QAAQzpE,GAGL,IAAK,IAAIyJ,KAFTxT,MAAMwzE,QAAQzpE,GAEAs7B,EACXnlC,KAAKsT,GAAKzJ,EAAKyJ,IAAM6xB,EAAc7xB,GAGtCtT,KAAK4B,KAAO0nI,EAA2B1nI,MAC1C,CAOAkE,QACG,IAAIkS,EAAMlY,MAAMgG,QAEhB,IAAK,IAAIwN,KAAK6xB,EACXntB,EAAI1E,GAAKtT,KAAKsT,GAIjB,OADA0E,EAAIpW,KAAO0nI,EAA2B1nI,OAC/BoW,CACV,CAEIizH,iBAID,OAHqBjrI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKoR,MAChC,CAEI85H,qBAID,OAHqBlrI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAK+8C,UAChC,CAEIouF,mBAID,OAHqBnrI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKg9C,QAChC,CAEIouF,oBAID,OAHqBprI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKyqI,SAChC,CAEIY,oBAID,OAHqBrrI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAK0qI,SAChC,CAEIY,iBAID,OAHqBtrI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAK2qI,MAChC,oBC9dH,MAAMR,EAAwB,EAAQ,OAEtC,IAAIhlG,EAAgB,CACjBh+B,KAAM,eACNoF,WAAY,GACZyd,iBAAkB,GAClB2Y,eAAgB,GAChBC,aAAc,IAGjBnjC,EAAOC,QAAU,MAAM0pI,UAAkCe,EACtDxqI,YAAYujB,EAAYje,GACrBnF,MAAMojB,EAAYje,EAAQ,OAa7B,CAMAmmB,cACG,MAAO,MACV,CAKAA,cACG,MAAO,aACV,CAQAkoD,QAAQzpE,GAGL,IAAK,IAAIyJ,KAFTxT,MAAMwzE,QAAQzpE,GAEAs7B,EACXnlC,KAAKsT,GAAKzJ,EAAKyJ,IAAM6xB,EAAc7xB,GAGtCtT,KAAK4B,KAAOwnI,EAA0BxnI,MACzC,CAOAkE,QACG,IAAIkS,EAAMlY,MAAMgG,QAEhB,IAAK,IAAIwN,KAAK6xB,EACXntB,EAAI1E,GAAKtT,KAAKsT,GAIjB,OADA0E,EAAIpW,KAAO,OACJoW,CACV,oBCxEH,MAAMmyH,EAAwB,EAAQ,OAChCC,EAAiC,EAAQ,OAEzCC,EAAsB,EAAQ,OAE9BpiF,EAAiB,EAAQ,OACzBmH,EAAc,EAAQ,OACtB0tE,EAAc,EAAQ,OAE5B,IAAI33F,EAAgB,CACjBh+B,KAAM,iBACN6iB,iBAAkB,GAClBzd,WAAY,GACZ44D,sBAAuB,KACvBC,wBAAyB,KACzBC,WAAY,MAGf,IAAItlE,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,MAAM2pI,UAAoC,EAGxD1pI,YAAYujB,EAAYje,GACrBnF,MAAMojB,EAAYje,EAAQ,SAU7B,CAMAmmB,cACG,MAAO,QACV,CAKAA,cACG,MAAO,eACV,CAEAA,iBAAiBrpB,EAAIlC,GAClB,IAAIK,EAAM,CACPqrI,YAAa,GAAG1rI,uBAChB2rI,YAAa,GAAG3rI,uBAChB4rI,WAAY,GAAG5rI,uBAqBd+qI,EAAiB,CAAC3lI,EAAQvE,EAAMyB,EAAU,CAAC,KAE5C,MAAMupI,EAAa,CAChBC,EACAhjF,EACA7/C,EAAS,CAAC9B,GAAMA,EAAE3C,MAAQ+qD,EAAYhrD,WAAWC,KACjDunI,KAEA,GAAe,MAAXD,GAA6B,MAAV1mI,EAAvB,CAGA,IAAI9C,EAAU8C,EACV8B,SACA+B,OAAOA,GACPqF,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,OACpCwqI,GAAczpI,EAAQgE,QACxBhE,EAAQoxB,QAAQ,CACb3yB,GAAI,EACJ+B,MAAO5C,EAAE,UAGf4rI,EAAQlnI,OAAO,UAAWtC,GAGtBzB,EACGA,EAAKioD,GACNgjF,EAAQlnI,OAAO,QAAS/D,EAAKioD,KACpBijF,GAAczpI,EAAQ,IAC/BwpI,EAAQlnI,OAAO,QAAStC,EAAQ,GAAGvB,IAES,IAAvCuB,EAAQ2G,QAAQqd,GAAMA,EAAEvlB,KAAIuF,QAEpCwlI,EAAQlnI,OAAO,QAAStC,EAAQ,GAAGvB,IAGtC+qI,EAAQjnI,SA3BqC,CA2B5B,EAepBgnI,EACGvpI,EAAQopI,aAAe5nI,GAAGzD,EAAIqrI,aAC9B,yBAdkC3lI,GAClC,CAACwpD,EAAYhrD,WAAWC,IAAKy4H,EAAY14H,WAAWC,KAAKosC,SACtD7qC,EAAMvB,OAcT,GAEHqnI,EACGvpI,EAAQqpI,aAAe7nI,GAAGzD,EAAIsrI,aAC9B,2BAfoC5lI,GACpC,CACGqiD,EAAe7jD,WAAWC,IAC1B+qD,EAAYhrD,WAAWC,IACvBy4H,EAAY14H,WAAWC,KACxBosC,SAAS7qC,EAAMvB,OAYjB,GAEHqnI,EACGvpI,EAAQspI,YAAc9nI,GAAGzD,EAAIurI,YAC7B,cACCzkI,GAGKA,EAAE3C,MAAQy4H,EAAY14H,WAAWC,KAEhC2C,EAAE3C,MAAQ4jD,EAAe7jD,WAAWC,KACX,OAAvB2C,EAAEZ,SAASa,UACe,QAA1BD,EAAEZ,SAASc,cAGpB,EACF,EAGJ,IAAI8jI,EAA6B,IAAIX,EAClCtoI,EACA,GAAGlC,YAGN,OAAO,IAAIuqI,EAA+B,CACvClhI,SAAU,KACA,CACJkpC,MAAO,SACPvwC,KAAM,CACH,CACGV,KAAM,CACH,CACGT,KAAM,aACNU,MAAO,kDAAkDrB,EACtD,uBAEHa,GAAIV,EAAIqrI,YACR7vD,YAAa37E,EAAE,kBACf+B,WAAY,IACZqF,KAAM,SACN40C,UAAU,EACV55C,QAAS,GACTC,GAAI,CACDC,SAAU,SAAUzB,GACjB+C,GAAGzD,EAAIqrI,aAAa7tD,WACpB/5E,GAAGzD,EAAIsrI,aAAa9tD,UACvB,GAEHtQ,eAAgBrtE,EAAE,aAErB,CACGW,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJypI,EAA2BpmI,KACxB,KACAwqD,EAAYhrD,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGT,KAAM,aACNU,MAAO,+CAA+CrB,EACnD,yBAEHa,GAAIV,EAAIsrI,YACR9vD,YAAa37E,EAAE,kBACf+B,WAAY,IACZqF,KAAM,SACN40C,UAAU,EACV55C,QAAS,GACTirE,eAAgBrtE,EACb,iDAEH29E,SAAW/6E,IACR,IAAIkpI,EAAcloI,GAAGzD,EAAIqrI,aAAat/H,WACtC,OACI4/H,IAAgBlpI,GAASkpI,IAAgBlpI,CAC5C,EAEJP,GAAI,CACDC,SAAU,SAAUzB,GACjB+C,GAAGzD,EAAIsrI,aAAa9tD,UACvB,IAGN,CACGh9E,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJypI,EAA2BpmI,KACxB,KACAwqD,EAAYhrD,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGT,KAAM,aACNU,MAAO,sDAAsDrB,EAC1D,gBAEH27E,YAAa37E,EAAE,uBACfa,GAAIV,EAAIurI,WACR3pI,WAAY,IACZqF,KAAM,QACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJypI,EAA2BpmI,KACxB,KACAqjD,EAAe7jD,WAAWC,IAC5B,QAStBf,KAAM,CAAC2B,EAAQvE,KACZkqI,EAAe3lI,EAAQvE,GAEvBsqI,EAA2BlmI,gBAAgBG,EAAOF,aAClDimI,EAA2BhmI,WAAWC,GACtC+lI,EAA2B1nI,KAAK,CAC7BwE,OAAQ,KAGL8iI,EAAe3lI,EAAQvE,EAAK,GAEhC,EAGLiF,OAAQ,WACL,IAAImI,EAAS,CAAC,EAQd,OANAA,EAAOq3D,sBACJxhE,GAAGzD,EAAIqrI,aAAat/H,YAAc,KACrC6B,EAAOs3D,wBACJzhE,GAAGzD,EAAIsrI,aAAav/H,YAAc,KACrC6B,EAAOu3D,WAAa1hE,GAAGzD,EAAIurI,YAAYx/H,YAAc,KAE9C6B,CACV,EAEAuxE,MAAO,CACJurD,eAAgBA,IAGzB,CAQAt3D,QAAQzpE,GAGL,IAAK,IAAIyJ,KAFTxT,MAAMwzE,QAAQzpE,GAEAs7B,EACXnlC,KAAKsT,GAAKzJ,EAAKyJ,IAAM6xB,EAAc7xB,GAGtCtT,KAAK4B,KAAOynI,EAA4BznI,MAC3C,CAOAkE,QACG,IAAIkS,EAAMlY,MAAMgG,QAEhB,IAAK,IAAIwN,KAAK6xB,EACXntB,EAAI1E,GAAKtT,KAAKsT,GAIjB,OADA0E,EAAIpW,KAAOynI,EAA4BznI,OAChCoW,CACV,CAEA8zH,6BAIG,OAHqB9rI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKolE,wBAChC,CAEA2mE,2BAIG,OAHqB/rI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKmlE,sBAChC,CAEA6mE,gBAIG,OAHqBhsI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKqlE,WAChC,cCrWH5lE,EAAOC,QAAU,MAOdC,YAAYyB,GACTpB,KAAKoB,MAAQA,EACbpB,KAAKS,GAAK,IACb,CAUAwrI,WAAW5qH,EAAOta,EAAQ42C,QACI,IAAhBA,IAA6BA,GAAe,GAIvD,SAASuuF,EAAiB97G,GAEvB,GAAIA,EACD,GAAIA,EAAKnG,MAAQmG,EAAK/O,MACnB+O,EAAK/O,MAAMpd,SAAS2L,IACjBs8H,EAAiBt8H,EAAE,QAElB,CAGJ,IAAIhK,EAAQmB,EAAO+B,QAAQ9B,GACjBA,EAAEpG,IAAMwvB,EAAK/rB,MACpB,GACH,GAAIuB,EACD,OAAQA,EAAMhE,MACX,IAAK,SACL,IAAK,UAIuB,iBAAdwuB,EAAKztB,SACmB,GAA5BytB,EAAKztB,MAAM0K,QAAQ,KACpB+iB,EAAKztB,MAAQgjB,SAASyK,EAAKztB,OAE3BytB,EAAKztB,MAAQ82C,WAAWrpB,EAAKztB,QAGnC,MACH,IAAK,OAGEg7C,EAGGvtB,EAAKztB,iBAAiB8d,OACvB2P,EAAKztB,MAAQc,MAAM02E,KAAKC,cAAchqD,EAAKztB,QAKrB,iBAAdytB,EAAKztB,QACbytB,EAAKztB,MAAQ,IAAI8d,KAAK2P,EAAKztB,QAO7C,CAEN,CACAupI,CAAiB7qH,EACpB,CAIAlhB,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEd,IAAIE,EAAIH,EAAIK,MAER6uG,EAAmBrrG,MAAMyH,MACzBihI,EAAY9nI,GAEN,GAAGxE,KAAUwE,KAAOyqG,IAI1B5uG,EAAOF,KAAKE,IAAM,CACnBC,UAAWgsI,EAAS,2BACpBC,aAAcD,EAAS,YACvBE,sBAAuBF,EAAS,qBAChCG,mBAAoBH,EAAS,kBAC7BI,aAAcJ,EAAS,iBAI1BnsI,KAAKS,GAAK,CACPC,KAAM,SACNE,GAAIV,EAAIosI,mBACRzzD,QAAQ,EACRj3E,KAAM,OACNC,KAAM,CACH,CACGjB,GAAIV,EAAIqsI,aACRprI,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNQ,IAAK,gBACLiG,KAAM,QACNxE,MAAO5C,EAAE,yBACTuB,WAAW,EACXC,MAAO,WACJoC,GAAGzD,EAAImsI,uBAAuBznI,OAC9BjB,GAAGzD,EAAIqsI,cAAc5nI,MAExB,GAEH,CAAEjC,WAAW,KAGnB,CACGm2E,QAAQ,EACRj4E,GAAIV,EAAImsI,sBACRlrI,KAAM,CACH,CACGT,KAAM,eACNE,GAAIV,EAAIksI,aACRrlI,OAAQ/G,KAAKwsI,uBAQxBxsI,KAAKoB,OACNpB,KAAKS,GAAGoB,KAAK,GAAGV,KAAKoyB,QAAQ,CAC1B7yB,KAAM,QACNQ,IAAK,eACLE,MAAOpB,KAAKoB,MACZJ,MAAOhB,KAAK+B,GAAGC,WAAWC,SAASC,kBAKzClC,KAAKsD,KAAQnB,IAIV,IAAK,IAAIoB,KAHTpB,EAAUA,GAAW,CAAC,EAGRX,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAIH,IAAI/B,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACR+E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAWHwjI,WAAY,CAAC5qH,EAAOta,EAAQ42C,KACzB39C,KAAKisI,WAAW5qH,EAAOta,EAAQ42C,EAAa,EAG/C1xC,SAAU,KACP,IAAItG,EAAS,KACT8mI,EAAK9oI,GAAGzD,EAAIksI,cAahB,OAZIK,IACD9mI,EAAS8mI,EAAGxgI,YAOXtG,GACDnE,EAAOyqI,WAAWtmI,EAAO,GAAIA,EAAO,IAAI,GAGpCA,CAAM,EAGhBd,SAAWc,IACRA,EAASA,GAAU,GACdwH,MAAMC,QAAQzH,KAASA,EAAS,CAACA,IACjB,GAAjBA,EAAOQ,QACRR,EAAOrB,KAAK,CAAC,GAEZqB,EAAOQ,OAAS,GACjBR,EAAOrB,KAAKtE,KAAKwsI,mBAKpBhrI,EAAOyqI,WAAWtmI,EAAO,GAAIA,EAAO,IAAI,GAExC,IAAI8mI,EAAK9oI,GAAGzD,EAAIksI,cACZK,GACG9mI,EAAO,IAAMA,EAAO,GAAG0b,OAAS1b,EAAO,GAAG0b,MAAMlb,SACjDsmI,EAAG5nI,SAASc,EAAO,IACnBhC,GAAGzD,EAAImsI,uBAAuBznI,OAC9BjB,GAAGzD,EAAIqsI,cAAc5nI,OAE3B,GAIN3E,KAAKiM,SAAWzK,EAAOyK,SACvBjM,KAAK4E,KAAOpD,EAAOoD,KACnB5E,KAAK6E,SAAWrD,EAAOqD,QAC1B,CAEAG,WAAWC,GACRjF,KAAK2lH,cAAgB1gH,CACxB,CAWAunI,kBACG,IAAIE,EAAa,CACd,SACA,WACA,SACA,OACA,QACA,UACA,aAGC9kG,EAAa,GA2BjB,OAzBI5nC,KAAK2lH,eACN3lH,KAAK2lH,cAAc5+G,SAAS9C,SAAS+C,IAClC,IAAkC,GAA9B0lI,EAAWr/H,QAAQrG,EAAE3C,KAAY,CAUlC,IAAIzC,EAAOoF,EAAE3C,IACA,WAAT2C,EAAE3C,KAA6B,aAAT2C,EAAE3C,IAAoBzC,EAAO,SACrC,YAAToF,EAAE3C,MAAmBzC,EAAO,UAErCgmC,EAAWtjC,KAAK,CACb1D,GAAIoG,EAAEF,WACNnE,MAAOqE,EAAE5F,MACTQ,KAAMA,GAEZ,KAICgmC,CACV,CAMAlgB,QAAQvlB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASmH,KAC1B,IAAI0zE,EAAU,EACVoiD,EAAS,OACVpiD,GACevqF,KAAK4sI,UAAUzmI,QAC3BuJ,GACH,EAGH1P,KAAK4sI,UAAU3oI,SAASmsB,IACrBA,EACI1I,QAAQvlB,GACRuS,MAAK,WACHi4H,GACH,IACCh4H,OAAOxM,IACL0O,EAAO1O,EAAI,GACZ,IAGqB,GAAzBnI,KAAK4sI,UAAUzmI,QAChBuJ,GACH,GAEN,CAEAm9H,4BACGlpI,GAAG3D,KAAKE,IAAIosI,oBAAoB1nI,OAChCjB,GAAG3D,KAAKE,IAAImsI,uBAAuBznI,OACnCjB,GAAG3D,KAAKE,IAAIqsI,cAAc5nI,MAC7B,oBCrTH,MAAMmoI,EAAqB,EAAQ,OAEnC,IAAI/sI,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,MAOdC,YAAYotI,GACT/sI,KAAK+sI,YAAcA,GAAe,GAElC/sI,KAAKgtI,eAAiB,GACtBhtI,KAAK+sI,YAAY9oI,SAAS2J,IACvB5N,KAAKgtI,eAAe1oI,KAAK,CAAE1D,GAAIgN,EAAEvJ,IAAK1B,MAAOiL,EAAExM,OAAQ,IAG1DpB,KAAKitI,eAAiB,KAClBjtI,KAAKgtI,eAAe7mI,OAAS,IAC9BnG,KAAKitI,eAAiBjtI,KAAKgtI,eAAe,GAAGpsI,IAGhDZ,KAAK25D,WAAY,EAEjB35D,KAAK2lH,cAAgB,KAGrB3lH,KAAKktI,SAAW,KAEhBltI,KAAKmtI,YAAc,IACtB,CAEAhtI,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAId,IAAIivG,EAAmBrrG,MAAMyH,MACzBihI,EAAY9nI,GAEN,GAAGxE,KAAUwE,KAAOyqG,IAI1B5uG,EAAOF,KAAKE,IAAM,CAEnBC,UAAWgsI,EAAS,aAEpBiB,aAAcjB,EAAS,gBAEvBC,aAAcD,EAAS,gBAEvBkB,aAAclB,EAAS,cAG1BnsI,KAAKktI,SAAS9rI,MAAQrB,EAAE,QACxBC,KAAKktI,SAAS/sI,UAAUH,KAAKJ,IAAKI,KAAKH,QACvCG,KAAKS,GAAKT,KAAKstI,cAGfttI,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDvD,KAAKktI,SAAS5pI,OAGd,IAAIiqI,EAASvtI,KAAKwtI,gBAClB,GAAID,EAAQ,CACTA,EAAOptI,UAAUH,KAAKJ,IAAKI,KAAKH,QAChC,IAAIgwD,EAAO09E,EAAOF,aAAantI,EAAImtI,cAEnC7rI,EAAOisI,oBAAoB59E,GAG3BA,EAAKvsD,MACR,GAIH,IAAI9B,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACRkqI,SAAU,WACPllI,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGHglI,oBAAsBttI,IAEnB,IAAIwtI,EAAgBhqI,GAAG3D,KAAKE,IAAImtI,cAChC,GAAKM,EAAL,CAEA,IAAIz8C,EAAWy8C,EAAc7iI,gBACzB8iI,EAAgB,GACpB18C,EAASjtF,SAASV,IACfqqI,EAActpI,KAAKf,EAAE,IAExBqqI,EAAc3pI,SAASV,IACpBoqI,EAAcniI,WAAWjI,EAAE,IAG9BoqI,EAAc1iI,QAAQ9K,EAAUM,GAXN,CAWS,EAGtC2sI,aAAc,CAACpvC,EAAU/gB,KAClB+gB,GACDr6F,GAAG3D,KAAKE,IAAIC,WACR2K,gBACA7G,SAAS0jB,IACPA,EAAM/iB,MAAM,IAIrB,IAAIipI,EAAa7tI,KAAK8tI,UAAU7wD,GAC5B4wD,GACDA,EAAWE,eAAe/tI,KAAKktI,SAASjhI,YAI3CjM,KAAKitI,eAAiBjvC,EACtB,IAAIgwC,EAAahuI,KAAKwtI,gBACtB,GAAIQ,EAAY,CAEbhuI,KAAKktI,SAASroI,SAASmpI,EAAWphG,aAGlCohG,EAAW7tI,UAAUH,KAAKJ,IAAKI,KAAKH,QACpC,IAAIM,EAAY6tI,EAAWX,aAAantI,EAAImtI,cAC5C7rI,EAAOisI,oBAAoBttI,GAC3BA,EAAUmD,MAEb,GAGT,CAGAgqI,cACG,MAAO,CACJ1sI,GAAIZ,KAAKE,IAAIC,UACbO,KAAM,SACNQ,IAAK,0BACLsB,QAAS,GAKTZ,KAAM,OACNC,KAAM,CACH,CACGnB,KAAM,WACNQ,IAAK,iCACLokE,SAAU,kDACVvkE,OAAQ,GACRY,YAAY,EACZssI,iBAAoC,GAAlBjuI,KAAK25D,UACvBoqD,QAAS,CACN,sBAAuB,CAAC15G,EAAGzJ,EAAIy3H,KAC5Br4H,KAAKwB,OAAOgC,UAAUkqI,SAAS1tI,KAAK,IAK7C,CACGY,GAAIZ,KAAKE,IAAIktI,aACb1sI,KAAM,aACNU,MAAOrB,EAAE,UACT27E,YAAa37E,EAAE,oBACf+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCC,QAASnC,KAAKgtI,eACd5qI,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KAChBj9E,KAAKwB,OAAO4rI,aAAapwD,EAAQC,EAAO,IAMjD,CACGixD,IAAK,SACLr1D,QAAQ,EACRp2E,MAAO,CACJ,CACG/B,KAAM,SACNS,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,UACTmB,IAAK,eACLF,MAAOhB,KAAK+B,GAAGC,WAAWC,SAASC,iBAEtC,CACGtB,GAAIZ,KAAKE,IAAImtI,aACb3sI,KAAM,SACNmB,KAAM,CACH,CACGT,MAAOrB,EACJ,4CAEHmB,IAAK,eACLH,OAAQ,UAU7Bf,KAAKktI,SAASzsI,IAGvB,CAGA+rI,kBACG,IAAIzlI,EAAS,GAETkmI,EAAiBjtI,KAAKwtI,gBAK1B,OAJIP,IACDlmI,EAASkmI,EAAeT,mBAGpBzlI,CACV,CAEAymI,gBACG,OAAOxtI,KAAK8tI,UAAU9tI,KAAKitI,eAC9B,CAEAa,UAAUzpI,GACP,OAAOrE,KAAK+sI,YAAYjkI,QAAQ8E,GACtBA,EAAEvJ,KAAOA,IAChB,EACN,CAEAW,WAAWC,GACRjF,KAAK2lH,cAAgB1gH,EACrBjF,KAAK+sI,YAAY9oI,SAAS2J,IACvBA,EAAE5I,WAAWC,EAAO,IAGvB,IAAI7D,EAAQrB,EAAE,QAEdC,KAAKktI,SAAW,IAAIJ,EAAmB1rI,GACvCpB,KAAKktI,SAASloI,WAAWC,GAGrBjF,KAAKE,MACNF,KAAKS,GAAKT,KAAKstI,cAErB,CAEAl4E,SAASlrD,GACNlK,KAAKmtI,YAAcjjI,EACnBlK,KAAK+sI,YAAY9oI,SAAS2J,IACvBA,EAAEwnD,SAASlrD,EAAK,GAEtB,CAEAsrD,WAAWrzD,EAAU,CAAC,GAEnB,IADcnC,KAAKuF,QAAQpD,EAAQ0H,MACrB,OAEd,IAAI2jI,EAAgBxtI,KAAKwtI,gBACpBA,GAELA,EAAcW,oBAAoB,CAAC,EAAGhsI,EAAQ0H,KACjD,CAMA6d,QAAQvlB,GACL,IAAIqrI,EAAgBxtI,KAAKwtI,gBACzB,OAAKA,EAESxtI,KAAKuF,QAAQpD,EAAQ0H,MAEzB2jI,EAAc9lH,QAAQvlB,GAGtB,IAAIsN,SAAQ,CAACC,EAASmH,KAC1BnH,GAAS,IARYD,QAAQC,SAWtC,CAEA2lD,aAAajvD,GAGV,IAFAA,EAAWA,GAAY,CAAC,GAEX6mI,eAAgB,CAE1BjtI,KAAKitI,eAAiB7mI,EAAS6mI,eAC/B,IAAIA,EAAiBjtI,KAAKwtI,gBAC1B,IAAKP,EAAgB,OACrBA,EAAec,eAAe3nI,EAASgiI,YAAc,CAAC,GAGlDpoI,KAAKE,KAGNyD,GAAG3D,KAAKE,IAAIktI,cAAcvoI,SAAS7E,KAAKitI,gBAK3CA,EAAe53E,aAAajvD,EAASwwH,eACxC,CACH,CAEAwP,aACG,IAAIhgI,EAAW,CAAC,EAEhB,GAAIpG,KAAKitI,eAAgB,CACtB7mI,EAAS6mI,eAAiBjtI,KAAKitI,eAC/B7mI,EAASgiI,WAAapoI,KAAKktI,SAASjhI,WACpC,IAAIuhI,EAAgBxtI,KAAKwtI,gBACrBA,IACDpnI,EAASwwH,eAAiB4W,EAAcpH,aAE9C,CAEA,OAAOhgI,CACV,CAOAgoI,iBACG,IAAIJ,EAAahuI,KAAKwtI,gBAClBQ,GAAchuI,KAAKktI,WACpBltI,KAAKktI,SAASroI,SAASmpI,EAAWphG,aAClCohG,EAAWI,iBAEjB,CAOAjpI,gBACG,IAAIqoI,EAAgBxtI,KAAKwtI,gBACzB,OAAIA,EACMA,EAAca,UAEjB5+H,QAAQC,SAClB,CAEAnK,QAAQsE,EAAO,CAAC,GACb,IAGIpJ,EAAK,CACNG,GAJM,YAAc6C,MAAMyH,MAK1B2tE,QAAQ,EACRn4E,KAAM,gBAEL4tI,EAAW7qI,MAAMhD,GAAGA,GAGpB8tI,EADgBvuI,KAAKwtI,gBACO5gG,YAE5B5sC,KAAKktI,UACNltI,KAAKktI,SAASjB,WAAWsC,EAAY,GAAIA,EAAY,IAAI,GAG5D,IAAI7kH,EAAQ6kH,EAAY,IAAM,CAAC,EAC5BxnI,EAASwnI,EAAY,IAAM,GAE1BC,EAAkB,CAACngI,EAAO,KAER,iBAARA,EAAyBA,EAE7BorC,WAAWprC,EAAK6E,QAAQ,YAAa,KAK/CnM,EACI+B,QACG9B,GACY,UAAVA,EAAEpF,MACQ,aAAVoF,EAAEpF,MACQ,WAAVoF,EAAEpF,OAEPqC,SAAS+C,IACP,IAEO0iB,GAASA,EAAMrI,OAASlU,MAAMC,QAAQsc,EAAMrI,QAC7CqI,EAAMrI,MAAMpd,SAAS2L,IACdA,EAAEvL,KAAO2C,EAAEpG,KAEfgP,EAAEjN,MAAQ6rI,EAAgB5+H,EAAEjN,OAAM,IAKpCkH,EAAK7C,EAAEpG,KAA6B,iBAAfiJ,EAAK7C,EAAEpG,MAC7BiJ,EAAK7C,EAAEpG,IAAM4tI,EAAgB3kI,EAAK7C,EAAEpG,KAI1C,CAFE,MAAOyJ,GAET,KAINikI,EAASzpI,SAAS,CACf6kB,MAAOA,EACP3iB,OAAQA,IAGX,IACIxB,EADW+oI,EAASvwB,iBACV0wB,CAAS5kI,GAIvB,OAFAykI,EAASpwB,aAEF34G,CACV,CAEImpI,mBAED,OADoB1uI,KAAKwtI,gBACJkB,eAAgB,CACxC,cCnbHjvI,EAAOC,QAAU,MAQdC,YAAYC,EAAKC,EAAQstI,GACtBntI,KAAKqE,IAAM,mBAEXrE,KAAK2uI,YAAc,KAEnB3uI,KAAKmtI,YAAc,KAEnBntI,KAAKooI,WAAa,CAAC,EAEnBpoI,KAAK62H,WAAa,CAAC,EAGnB72H,KAAKmtI,YAAcA,CACtB,CAEAhtI,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEdG,KAAKoB,MA7BH,KAAI0U,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GA6B7B/V,CAAE,4BAOJC,KAAKE,IAAM,CAEnBC,UAAW,GAAY,YANhBP,EAAIQ,OAAO,GAAGP,kBAMkB4D,MAAMyH,SAGhDlL,KAAK2hG,IAAM,KAGX3hG,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAIH,IAAI/B,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACRkqI,SAAU,WACPllI,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGT,CASAmkC,YACG,MAAO,CAAC5sC,KAAK4uI,iBAAkB5uI,KAAKwsI,kBACvC,CAWAuB,eAAe1sH,GAGRlU,MAAMC,QAAQiU,KACfA,EAAQA,EAAM,IAIbA,IAEiB,MAAdA,EAAM4I,OAAc5I,EAAM4I,KAAO,OAErCjqB,KAAKooI,WAAa/mH,EAExB,CAWAmrH,kBACG,IAAIE,EAAa,CAAC,SAAU,SAAU,OAAQ,UAAW,aAErD9kG,EAAa,GAsBjB,OApBI5nC,KAAK2uI,aACN3uI,KAAK2uI,YAAY5nI,SAAS9C,SAAS+C,KACE,GAA9B0lI,EAAWr/H,QAAQrG,EAAE3C,MAStBujC,EAAWtjC,KAAK,CACb1D,GAAIoG,EAAEF,WACNnE,MAAOqE,EAAE5F,MACTQ,KAAMoF,EAAE3C,KAEd,IAICujC,CACV,CAKAgnG,iBACG,OAAO5uI,KAAKooI,UACf,CAIApjI,WAAWC,GAERjF,KAAK6uI,gBAAgB5pI,EACxB,CAIA4pI,gBAAgB5pI,GACbjF,KAAK2uI,YAAc1pI,CACtB,CAEAmwD,SAASlrD,GACNlK,KAAKmtI,YAAcjjI,CACtB,CAMAwd,QAAQvlB,GAIL,OAHAqG,QAAQ+G,MACL,2EAEI,IAAIE,SAAQ,CAACC,EAASmH,KAC1BA,EACG,IAAIvO,MACD,uEAEL,GAEP,CAKA+kI,aAAayB,GACV,OAAO9uI,KAAK+uI,sBAAsBD,EACrC,CAKAC,sBAAsBlvI,GACnB,OAAQG,KAAK2hG,IAAM,CAChBlhG,GAAI,CACD6kE,SAAU,0CAEbhiE,KAAOuG,IACJrB,QAAQ+G,MACL,sEAEH/G,QAAQC,KAAK,0BAAwBoB,EAAK,EAGnD,CAKAwrD,aAAajvD,GAIVA,EAAWA,GAAY,CAAC,EACxBpG,KAAK62H,WAAazwH,EAASywH,YAAc,CAAC,CAC7C,CAKAuP,aAIG,MAHe,CAAC,CAInB,CAOAiI,UACG,OAAO5+H,QAAQC,SAClB,CAOA0+H,iBAGA,cCpOH,IAAIruI,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,MAOdC,YAAYqvI,GACThvI,KAAK4sI,UAAY,GACjB5sI,KAAK2lH,cAAgB,MAGrBqpB,EAAgBA,GAAiB,CAAC,GACpBx8H,OAASw8H,EAAcx8H,QAAU,CAAC,EAChDw8H,EAAcx8H,OAAOuhE,OAClBi7D,EAAcx8H,OAAOuhE,QAAU,8BAClCi7D,EAAcx8H,OAAOy8H,cAClBD,EAAcx8H,OAAOy8H,eAAiB,aACzCjvI,KAAKgvI,cAAgBA,CACxB,CAQA7uI,UAAUP,EAAKC,GACZG,KAAKJ,IAAMI,KAAKJ,KAAOA,EACvBI,KAAKH,OAASA,EAEdD,EAAMA,GAAOI,KAAKJ,IAElBI,KAAKmtI,YAAc,KAGnB,IAAIjtI,EAAOF,KAAKE,IAAM,CACnBC,UAAW,GAAGN,cACdwhB,MAAO,GAAGxhB,UACVqvI,gBAAiB,GAAGrvI,oBAEpBiwD,OAAQ,GAAGjwD,WACXsvI,KAAM,GAAGtvI,SAET8F,OAAQ,GAAG9F,WACXka,IAAK,GAAGla,SAIXG,KAAKS,GAAK,CACPC,KAAM,SACNE,GAAIV,EAAIC,UACRW,OAAO,EACPH,SAAU,SACVE,QAAQ,EACRG,MAAO,IACPD,OAAQ,IACRG,IAAK,oBACLD,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAOpB,KAAKgvI,cAAcx8H,OAAOy8H,eAEpC,CACGvuI,KAAM,SACNQ,IAAK,gBACLqK,KAAM,aACN3J,KAAM,aACNR,MAAOrB,EAAE,gBACTiB,MAAO,IACPO,MAAO,KACJvB,KAAKovI,UACL5mI,QAAQ6O,IAAI1T,GAAGzD,EAAImhB,OAAOmrF,SAC1B7oG,GAAGzD,EAAIgvI,iBAAiBxiB,SAAS,EAAG/oH,GAAGzD,EAAImhB,OAAOmrF,QAAQ,KAKtE/qG,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGnB,KAAM,aACNE,GAAIV,EAAIgvI,gBACRxtI,OAAQ,KACRD,KAAM,CACHf,KAAM,SACNE,GAAIV,EAAImhB,MACRg5D,OAAQ,GACR73E,QAAS,GACTX,KAAM,KAmBZ,CACGX,IAAK,CAAE,mBAAoB,QAC3BC,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNyG,KAAM,SACNxE,MAAO5C,EAAE,UACTmB,IAAK,mBACLI,WAAW,EACXC,MAAO,WACJC,EAAOhB,cACV,GAEH,CACGE,KAAM,SACNQ,IAAK,gBACLiG,KAAM,OACN/F,MAAOrB,EAAE,QACT6B,KAAM,OACNN,WAAW,EACXC,MAAO,WACJC,EAAOjB,YACV,GAEH,CAAEmC,WAAW,QAW5B1C,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDE,MAAMhD,GAAGT,KAAKS,GAAG,EAIpB,IAAIe,EAAUxB,KAAKwB,OAAS,CACzBhB,aAAc,WACXmD,GAAGzD,EAAIC,WAAWwE,MACrB,EAEApE,WAAY,KACT,IAAI+gC,EAAUthC,KAAKomI,aAEnB5kI,EAAOgC,UAAUsE,OAAOw5B,GACxB9/B,EAAOmD,MAAM,EAGhBnB,UAAW,CACR+E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGH9D,KAAM,WACHhB,GAAGzD,EAAIC,WAAWwE,MACrB,EAEAC,KAAM,WACHjB,GAAGzD,EAAIC,WAAWyE,MACrB,GAGH5E,KAAK4E,KAAOpD,EAAOoD,KACnB5E,KAAK6E,SAAWrD,EAAOqD,QAC1B,CAOAuqI,QAAQhpI,GACL,IAAIkiI,EAAOtoI,KAAKqvI,UAChB,GAAK/G,EAAL,CAKA,GAHAtoI,KAAK4sI,UAAUtoI,KAAKgkI,GAGhBtoI,KAAKE,IAAK,CAEX,IAAIovI,EAAU3rI,GAAG3D,KAAKE,IAAImhB,OACtBiuH,IAEDhH,EAAKnoI,UAAUH,KAAKJ,IAAKI,KAAKH,QACjByvI,EAAQrkI,QAAQq9H,EAAK7nI,IAElC6nI,EAAKhlI,KAAK,CACPoqI,SAAW6B,IACR5rI,GAAG3D,KAAKE,IAAImhB,OAAO7V,WAAW88H,EAAKpoI,IAAIC,WAEvC,IAAI4L,EAAQ/L,KAAK4sI,UAAUv/H,QAAQkiI,IACpB,IAAXxjI,GACD/L,KAAK4sI,UAAUzgI,OAAOJ,EAAO,EAChC,IAIZ,CAEI3F,GACDkiI,EAAKjzE,aAAajvD,EA3BJ,CA6BpB,CAOAivD,aAAajvD,GAOVpG,KAAK4sI,UAAU3oI,SAASmsB,IAElBpwB,KAAKE,KACLF,KAAKE,IAAImhB,OACT+O,GACAA,EAAKlwB,KACLkwB,EAAKlwB,IAAIC,WAETwD,GAAG3D,KAAKE,IAAImhB,OAAO7V,WAAW4kB,EAAKlwB,IAAIC,UAC1C,IAEHH,KAAK4sI,UAAY,GAEbxmI,GACDA,EAASnC,SAASurI,IACfxvI,KAAKovI,QAAQI,EAAa,GAGnC,CASAxqI,WAAWC,GACRjF,KAAK2lH,cAAgB1gH,EAGrBjF,KAAK4sI,UAAU3oI,SAAS2L,IACrBA,EAAE5K,WAAWC,EAAO,GAE1B,CAEAuwD,WAAWrzD,IACPnC,KAAK4sI,WAAa,IACf9jI,QAAQsnB,GAA8B,GAArBA,EAAKs+G,eACtBzqI,SAASmsB,IACPA,EAAKolC,WAAWrzD,EAASA,EAAQ0H,KAAK,GAE/C,CAQA6d,QAAQvlB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASmH,KAC1B,IAAI+1H,GAAa5sI,KAAK4sI,WAAa,IAAI9jI,QACnCsnB,IAAUA,EAAKs+G,eAGnB,IAAInkD,EAAU,EAQdqiD,EAAU3oI,SAASmsB,IAChBA,EACI1I,QAAQvlB,GACRuS,MAAK,aATT61E,GACeqiD,EAAUzmI,QACtBuJ,GASA,IACCiF,OAAOxM,IACL0O,EAAO1O,EAAI,GACZ,IAGgB,GAApBykI,EAAUzmI,QACXuJ,GACH,GAEN,CAOA02H,aACG,IAAIhgI,EAAW,GAIf,OAHApG,KAAK4sI,UAAU3oI,SAAS2L,IACrBxJ,EAAS9B,KAAKsL,EAAEw2H,aAAa,IAEzBhgI,CACV,CAEAipI,UAIG,OAHA7mI,QAAQ+G,MACL,wEAEI,IACV,CAEA6lD,SAASlrD,GACNlK,KAAKmtI,YAAcjjI,EACnBlK,KAAKJ,IAAMI,KAAKJ,KAAOsK,EAAKtK,GAC/B,CAOAgtG,aAGG,OAAOn9F,QAAQC,SAClB,CAOA0+H,iBACGpuI,KAAK4sI,UAAU3oI,SAAS2L,IACrBA,EAAEw+H,gBAAgB,GAExB,oBC7YH,MAAMqB,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,OAErBC,EAAqB,EAAQ,MAC7BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,MAEpCrwI,EAAOC,QAAU,cAA4C+vI,EAO1D9vI,cAOGG,MANe,CACZ0S,OAAQ,CACLuhE,OAAQ,iCACRk7D,cAAe,kBAIxB,CAGAI,UACG,IAAItC,EAAc,CACf,IAAI4C,EACD3vI,KAAKJ,IACL,GAAGI,KAAKH,0BACRG,KAAKmtI,aAER,IAAIyC,EACD5vI,KAAKJ,IACL,GAAGI,KAAKH,0BACRG,KAAKmtI,aAER,IAAI0C,EACD7vI,KAAKJ,IACL,GAAGI,KAAKH,mCACRG,KAAKmtI,aAER,IAAI2C,EACD9vI,KAAKJ,IACL,GAAGI,KAAKH,mCACRG,KAAKmtI,cAIP7E,EAAO,IAAIoH,EAAW3C,GAI1B,OAHI/sI,KAAK2lH,eACN2iB,EAAKtjI,WAAWhF,KAAK2lH,eAEjB2iB,CACV,CAQAnjI,mBACG,IAAI4qI,GAAY/vI,KAAK4sI,WAAa,IAAIz+H,KAAKyB,GAAMA,EAAEy+H,kBAC7C5+H,QAAQ8R,IAAIwuH,EACrB,oBClEH,MAAMN,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,OAErBM,EAAqB,EAAQ,OAC7BC,EAAgB,EAAQ,OACxBC,EAAiB,EAAQ,OACzBC,EAAiB,EAAQ,OACzBC,EAAc,EAAQ,OACtBC,EAAY,EAAQ,MAE1B5wI,EAAOC,QAAU,cAA4C+vI,EAO1D9vI,cAOGG,MANe,CACZ0S,OAAQ,CACLuhE,OAAQ,+BACRk7D,cAAe,kBAIxB,CAGAI,UACG,IAAItC,EAAc,CACf,IAAIiD,EACDhwI,KAAKJ,IACL,GAAGI,KAAKH,mCAEX,IAAIowI,EAAcjwI,KAAKJ,IAAK,GAAGI,KAAKH,8BACpC,IAAIqwI,EAAelwI,KAAKJ,IAAK,GAAGI,KAAKH,+BACrC,IAAIswI,EAAenwI,KAAKJ,IAAK,GAAGI,KAAKH,+BACrC,IAAIuwI,EAAYpwI,KAAKJ,IAAK,GAAGI,KAAKH,4BAClC,IAAIwwI,EAAUrwI,KAAKJ,IAAK,GAAGI,KAAKH,2BAG/ByoI,EAAO,IAAIoH,EAAW3C,GAG1B,OAFAzE,EAAKtjI,WAAWhF,KAAK2lH,eACrB2iB,EAAKlzE,SAASp1D,KAAKmtI,aACZ7E,CACV,oBC1CH,MAAMgI,EAAkB,EAAQ,OAIhC7wI,EAAOC,QAAU,cAA4D,EAS1EC,YAAYC,EAAKC,EAAQstI,GACtBrtI,MAAMF,EAAKC,EAAQstI,GAEnBntI,KAAKqE,IAAM,gDACXrE,KAAKoB,MAfH,KAAI0U,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAe7B/V,CAAE,0BAClB,CAQAwwI,oBAAoB1wI,GACjB,IAAI2wI,EAAY1wI,MAAMywI,oBAAoB1wI,GAM1C,OAFA2wI,EAAUhvI,OAAOivI,eAAiB,WAAa,EAExCD,CACV,CAOAE,sBACG,OAAO,IACV,CAUAhpH,QAAQvlB,GAEL,IAAIwuI,EAAU3wI,KAAK4wI,kBACf5oI,EAAQ2oI,EAAQ3oI,QAEhB6oI,EAAkB7wI,KAAK8wI,gBASvBC,EAAkB,CAAC,EAKvB,GAFA/wI,KAAKmuI,oBAAoB,CAAC,EAAG4C,IAEzBA,EAAgBC,WAcb,CAEJ,IAAIC,EAAuBN,EAAQ5iI,UAChC8iI,EAAgBzqI,SAAS6B,YAG5B,OAAKgpI,GAGLF,EAAgBE,EAAqBnqI,YAAc3E,EAAQ0H,KAAKjJ,GAGzDoH,EAAMykE,OAAOskE,IALVthI,QAAQoH,OAAO,4BAM5B,CA3BgC,CAE7B,IAAIo6H,EAAuBN,EAAQ5iI,UAChC8iI,EAAgBzqI,SAAS6B,YAG5B,IAAKgpI,EACF,OAAOxhI,QAAQoH,OAAO,6BAEzBk6H,EAAgBC,WAAW/sI,SAAS2L,IACjCA,EAAEqhI,EAAqBnqI,YAAc3E,EAAQ0H,KAAKjJ,GAE3CoH,EAAMykE,OAAO78D,KAE1B,CAcH,CAOAw2H,aAOG,IAAIhgI,EAAWtG,MAAMsmI,aAKrB,cAFOhgI,EAAS8qI,YAET9qI,CACV,mBC1HH,MAAM+qI,EAAgD,EAAQ,OAI9D1xI,EAAOC,QAAU,cAA4D,EAG1EC,YAAYC,EAAKC,EAAQstI,GACtBrtI,MAAMF,EAAKC,EAAQstI,GAEnBntI,KAAKqE,IAAM,gDACXrE,KAAKoB,MATH,KAAI0U,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAS7B/V,CAAE,2BAEfC,KAAKoxI,uBAAwB,CAChC,CAUA1pH,QAAQvlB,GACL,IAAI2uI,EAAgB9wI,KAAK8wI,gBAGzB,OAFA9wI,KAAKqxI,UAAYlvI,EAAQ0H,KAElB,IAAI4F,SAAQ,CAACC,EAASmH,KAE1B,IAAIwW,EAAKlrB,EAAQ+H,KAAKmiB,eACtB,IAAKgB,EAAI,OAAO3d,IAEhB,IAAI1H,EAAQqlB,EAAGrlB,MACf,IAAKA,EAAO,OAAO0H,IAEnB,IAAIkgB,EAAc,CAAC,EACnBA,EAAYkhH,EAAchqI,YAAc,GAExCkB,EACIirE,OAAO9wE,EAAQ0H,KAAKjJ,GAAIgvB,GACxBlb,KAAKhF,GACLiF,OAAOxM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,oEACHzH,KAAM1H,EAAQ0H,OAEjBgN,EAAO1O,EAAI,GACZ,GAEX,mBCnDH,MAAMmpI,EAAgC,EAAQ,OAI9C7xI,EAAOC,QAAU,cAAmD,EASjEC,YAAYC,EAAKC,EAAQstI,GACtBrtI,MAAMF,EAAKC,EAAQstI,GAEnBntI,KAAKqE,IAAM,uCACXrE,KAAKoB,MAfH,KAAI0U,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAe7B/V,CAAE,gBAClB,CAEI2uI,mBACD,OAAO,CACV,oBCtBH,MAAM4C,EAAgC,EAAQ,OACxCrpF,EAAiB,EAAQ,OACzB6kF,EAAqB,EAAQ,OAEnC,IAAI/sI,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,cAA4D,EAG1EC,YAAYC,EAAKC,EAAQstI,GACtBrtI,MAAMF,EAAKC,EAAQstI,GAEnBntI,KAAKqE,IAAM,gDACXrE,KAAKoB,MAAQrB,EAAE,2BAEfC,KAAKuoC,WAAa,KAGlBvoC,KAAKuxI,gBAAkB,KAGvBvxI,KAAKwxI,cAAgB,GAErBxxI,KAAKktI,SAAW,KAChBltI,KAAKkxI,YAAc,IACtB,CAgBAlsI,WAAWC,GACRjF,KAAK6uI,gBAAgB5pI,GACrBjF,KAAKuoC,WAAatjC,EAGKjF,KAAKyxI,qBACXxtI,SAASytI,IACvB1xI,KAAKwxI,cAAcltI,KAAK,CACrB1D,GAAI8wI,EAAG9wI,GACP+B,MAAO+uI,EAAGtwI,OACX,GAER,CAOAqwI,qBACG,IAAIE,EAAa1pF,EAAe7jD,WAAWC,IAC3C,OAAIrE,KAAKuoC,YAAcvoC,KAAKuoC,WAAWxhC,OAC7B/G,KAAKuoC,WAAWxhC,QAAQC,GACrBA,EAAE3C,KAAOstI,IAGZ,EAEb,CAOAf,kBACG,GAAI5wI,KAAKuxI,gBAAiB,CACvB,IAAIT,EAAgB9wI,KAAK8wI,gBACzB,GAAIA,EACD,OAAOA,EAAclqI,cAE3B,CAEA,OAAO,IACV,CAOAkqI,gBACG,OAAO9wI,KAAKyxI,qBAAqB3oI,QAAQ9B,GAC/BA,EAAEpG,IAAMZ,KAAKuxI,kBACpB,EACN,CAOAxC,sBAAsBlvI,GAKnB,OAJuB,MAAnBG,KAAK4xI,aACN5xI,KAAK4xI,WAAa5xI,KAAKuwI,oBAAoB1wI,IAGvCG,KAAK4xI,UACf,CAQArB,oBAAoB1wI,GACjB,IAAIivG,EAAmBrrG,MAAMyH,MACzBihI,EAAY9nI,GAENA,EAAM,IAAMyqG,EAGlB5uG,EAAM,CACPC,UAAWgsI,EAAS,yBACpB1kI,WAAY0kI,EAAS,iBACrB0F,qBAAsB1F,EAAS,gBAC/B2F,iBAAkB3F,EAAS,eAG1BxqC,EAAM,CACP/gG,GAAIV,EAAIC,UACRO,KAAM,SACNQ,IAAK,yBACLW,KAAM,CACH,CACGjB,GAAIV,EAAI2xI,qBACRnxI,KAAM,aACNU,MAAOrB,EAAE,4CACT+B,WAAY,IACZa,MAAO3C,KAAK8wI,cACZ3uI,QAASnC,KAAKwxI,cACdpvI,GAAI,CACDC,SAAU,CAAC26E,EAAQC,KAChBz7E,EAAO4rI,aAAapwD,EAAQC,EAAO,MAmB9Cz7E,EAAUxB,KAAKwB,OAAS,CACzBuwI,WAAarxI,IACViD,GAAGzD,EAAIC,WAAW8K,QAAQvK,EAAK,EAMlCsxI,uBAAwB,KACrB,IAAI9pH,EAAWvkB,GAAGzD,EAAIC,WAAW2K,gBAC7BmnI,EAAgB,GACpB/pH,EAASjkB,SAASqP,IACf2+H,EAAc3tI,KAAKgP,EAAE,IAExB2+H,EAAchuI,SAASqP,IAEhBA,EAAErR,OAAOrB,IAAMV,EAAI2xI,sBACpBluI,GAAGzD,EAAIC,WAAWqL,WAAW8H,EAChC,GACD,EAGL85H,aAAc,CAACpwD,EAAQC,KACpBz7E,EAAOwwI,yBAEPhyI,KAAKuxI,gBAAkBv0D,EACvB,IAAI4zD,EAAkB5wI,KAAK4wI,kBAE3B,GAAIA,GAcD,GAZA5wI,KAAKkyI,iBAAiBtB,GAEtB5wI,KAAKmyI,gBAAkBryI,MAAMivI,sBAC1B7uI,EAAI4xI,kBAGPtwI,EAAOivI,iBAGPjvI,EAAOuwI,WAAW/xI,KAAKmyI,gBAAgB1xI,IACvCT,KAAKmyI,gBAAgB7uI,OAEjBtD,KAAKoxI,sBAAuB,CAC7B,IAAIgB,EAAczuI,GAAG3D,KAAKmyI,gBAAgB1xI,GAAGG,IACzCwxI,IACDA,EAAYhtI,UACZgtI,EAAYztI,OAElB,OAEA3E,KAAK+B,GAAGqG,OAAOuuB,QAAQ,IAAIruB,MAAM,6BAA8B,CAC5D6zB,QAASn8B,KAAKuxI,iBAEpB,EAGHd,eAAgB,KAab,IAAI4B,EAAcryI,KAAK0wI,sBAEvB2B,EAAYlyI,UAAUH,KAAKJ,IAAKI,KAAKH,QACrC2B,EAAOuwI,WAAWM,EAAY5xI,IAC9B4xI,EAAY/uI,KAAK,CAAC,EAAE,EAKvB+xD,aAAejvD,IAMZzC,GAAGzD,EAAI2xI,sBAAsBhtI,SAASuB,EAASmrI,iBAE3CvxI,KAAKktI,UACNltI,KAAKktI,SAASroI,SAAS7E,KAAKkxI,aAG3BlxI,KAAKmyI,iBACNnyI,KAAKmyI,gBAAgB98E,aAAajvD,EACrC,EAGHggI,WAAY,KAMT,IAAIhgI,EAAW,CAAE0wH,gBAAiB,IAUlC,OAPA92H,KAAKsyI,SAASruI,SAASsuI,IACpB,IAAIC,EAAcD,EAAGnM,aACjBoM,GACDpsI,EAAS0wH,gBAAgBxyH,KAAKkuI,EACjC,IAGIpsI,CAAQ,GAIrB,MAAO,CACJ3F,GAAIkhG,EACJr+F,KAjISuzH,IAIT,GAHAA,EAAaA,GAAc72H,KAAK62H,WAG5B72H,KAAKuxI,gBAAiB,CACvB,IAAIj0C,EAAS35F,GAAGzD,EAAI2xI,sBAChBv0C,GACDA,EAAOz4F,SAAS7E,KAAKuxI,gBAE3B,GAyHAl8E,aAAejvD,IACZ5E,EAAO6zD,aAAajvD,EAAS,EAEhCggI,WAAY,IACF5kI,EAAO4kI,aAEjB5kI,OAAQA,EAEd,CAQAkvI,sBACG,IAAK1wI,KAAKktI,SAAU,CACjBltI,KAAKktI,SAAW,IAAIJ,EACjB/sI,EAAE,gCAGL,IAAI4wI,EAAU3wI,KAAK4wI,kBACfD,GAAS3wI,KAAKktI,SAASloI,WAAW2rI,EACzC,CACA,OAAO3wI,KAAKktI,QACf,CAUAxlH,QAAQvlB,GACLnC,KAAKqxI,UAAYlvI,EAAQ0H,KAGzB,IAAI8mI,EAAU3wI,KAAK4wI,kBACf5oI,EAAQ2oI,EAAQ3oI,QAEhB6oI,EAAkB7wI,KAAK8wI,gBAEvBlkG,EAAY,KAOZ6lG,EAAmBt4H,IAGJna,KAAKuoC,WAAWvgC,QAE5Bq5B,cAAcwvG,EAAgB/pI,WAAY3E,EAAQ0H,MAClD6K,MAAMq3E,IAGJ,GAAKA,GAAyB,GAAhBA,EAAM5lF,OAApB,CAQA,IAAIjG,EAAM6rF,EAAM59E,KAAKoF,GACXA,EAAE3S,KAIZgsC,EAAY,CACT3iB,KAAM,MACN5I,MAAO,CACJ,CACGhd,IAAKssI,EAAQjhH,KACbU,KAAM,KACNztB,MAAOzC,KAOZmU,OAAOC,KAAKtU,KAAKkxI,aAAa/qI,OAAS,GACxCymC,EAAUvrB,MAAM/c,KAAKtE,KAAKkxI,aAG7B/2H,GA3BA,MAFGA,GA6BC,IAENxF,MAAMwF,EAAG,EAIhB,OAAO,IAAI1K,SAAQ,CAACC,EAASmH,KAK1B,IAAI67H,EAAW,CAACtkI,EAAM+L,KACHna,KAAKmuI,oBAAoB,CAAC,EAAG//H,GAI1CpG,EACIirE,OAAO7kE,EAAKxN,GAAIwN,GAChBsG,MAAK,KACHyF,GAAI,IAENxF,OAAOxM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,6EACHzH,KAAM1H,EAAQ0H,OAEjBsQ,EAAGhS,EAAI,IAbbgS,GAeH,EAKHs4H,GAAiBtqI,IACVA,EACD0O,EAAO1O,GAIQ,OAAdykC,EAKDl9B,IAGA1H,EACIqoB,QAAQ,CAAEL,MAAO4c,IACjBl4B,MAAMzK,IACJ,IAAI0oI,EAAO,EAGP1oI,GAAQA,EAAKJ,OACdI,EAAOA,EAAKJ,MAIfI,EAAKhG,SAASmK,IACXskI,EAAStkI,GAAOjG,IACb,GAAIA,EACD,OAAO0O,EAAO1O,KAEjBwqI,GACY1oI,EAAK9D,QAEduJ,GACH,GACD,IAIc,GAAfzF,EAAK9D,QACNuJ,GACH,IAEFiF,MAAMkC,EACb,GACD,GAER,CAOAw+C,aAAajvD,GACVA,EAAWA,GAAY,CAAC,EAExBpG,KAAKuxI,gBAAkBnrI,EAASmrI,iBAAmB,KACnDvxI,KAAKkxI,YAAc9qI,EAAS8qI,aAAe,CAAC,EAE5CpxI,MAAMu1D,aAAajvD,GAGfpG,KAAK4xI,YACN5xI,KAAKwB,OAAO6zD,aAAajvD,EAE/B,CAOAggI,aAQG,IAAIhgI,EAAWtG,MAAMsmI,aAErBhgI,EAASmrI,gBAAkBvxI,KAAKuxI,gBAEhC,IAAIqB,EAAS,KAmBb,OAlBI5yI,KAAKktI,WACN0F,EAAS5yI,KAAKktI,SAASjhI,WACnBkB,MAAMC,QAAQwlI,KACfA,EAASA,EAAO,IAIfA,IACDA,EAAO3oH,KAAO2oH,EAAO3oH,MAAQ,QAGnC7jB,EAAS8qI,YAAc0B,EAGnB5yI,KAAK4xI,aACNxrI,EAASywH,WAAa72H,KAAKwB,OAAO4kI,cAG9BhgI,CACV,CAOAgoI,iBACOpuI,KAAKktI,UACNltI,KAAKktI,SAASroI,SAAS7E,KAAKkxI,YAElC,oBC7gBH,MAAM2B,EAAmB,EAAQ,OAIjCpzI,EAAOC,QAAU,cAAuD,EASrEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,2CACXrE,KAAKoB,MAhBH,KAAI0U,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAgB7B/V,CAAE,2BAEfC,KAAK2lH,cAAgB,KAErB3lH,KAAKsyI,SAAW,EAInB,CAiCAvD,sBAAsBlvI,GAUnB,OATAG,KAAK2hG,IAAM,CACRlhG,GAAI,CACDC,KAAM,SACNmB,KAAM,IAGTyB,KAAM,QAGFtD,KAAK2hG,GACf,CAKAj6E,QAAQvlB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASmH,KAC1B,IAAI3M,EAAO/H,EAAQ+H,KACnB,IAAKA,EAAM,OAEX,IAAIwuE,EAAQxuE,EAAKyxD,YAAY35C,GAAyB,SAAnBA,EAAE5b,SAASxE,OAC9C,IAAK82E,EAAO,OAQZ,IAAIsuC,EAASrjH,GAAG+0E,EAAM93E,IAClBomH,GAAQA,EAAOriH,OAGnBxC,EAAQ+H,KAAKu2F,WAAW,MAExB/wF,GAAS,GAEf,oBCjGH,MAAMmjI,EAAmB,EAAQ,OAIjCpzI,EAAOC,QAAU,cAA2D,EASzEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,+CACXrE,KAAKoB,MAhBH,KAAI0U,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAgB7B/V,CAAE,+BAEfC,KAAK2lH,cAAgB,KAErB3lH,KAAKsyI,SAAW,EAInB,CAiCAvD,sBAAsBlvI,GACnB,IAAIK,EAAM,CACPoR,QAAS,GAAGzR,aAGfG,KAAK2hG,IAAM,CACRlhG,GAAI,CACDG,GAAIV,EAAIoR,QACR5Q,KAAM,WAGNK,OAAQ,KAGXuC,KAAM,OAEN9B,OAAQA,EAER6zD,aAAewhE,IACZr1H,EAAO6zD,aAAawhE,EAAW,EAElCuP,WAAY,IACF5kI,EAAO4kI,cAIpB,IAAI5kI,EAAS,CACV6zD,aAAewhE,IACZA,EAAaA,GAAc,CAAC,EAE5BlzH,GAAGzD,EAAIoR,SAASzM,SAASgyH,EAAWvlH,SAAW,GAAG,EAGrD80H,WAAY,KAEF,CACJ90H,QAAS3N,GAAGzD,EAAIoR,SAASrF,YAAc,MAKhD,OAAOjM,KAAK2hG,GACf,CAKAj6E,QAAQvlB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASmH,KAC1B,IAAIi8H,EAAiB9yI,KAAK62H,WAAWvlH,SAAW,GAEhD7N,MAAM6N,QAAQ,CACXjD,KAAMykI,EACNlxI,KAAM,SAGT8N,GAAS,GAEf,CAKA2lD,aAAajvD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAMu1D,aAAajvD,GAGfpG,KAAK2hG,KAGN3hG,KAAK2hG,IAAItsC,aAAajvD,EAASywH,WAErC,CAKAuP,aAMG,IAAIhgI,EAAWtG,MAAMsmI,aAIrB,OAFAhgI,EAASywH,WAAa72H,KAAK2hG,IAAIykC,aAExBhgI,CACV,mBCpJH,MAAMysI,EAAmB,EAAQ,OAC3B5qF,EAAiB,EAAQ,OACzB8qF,EAAe,EAAQ,OAE7B,IAAIhzI,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhDrW,EAAOC,QAAU,cAAkD,EAShEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,sCACXrE,KAAKoB,MAAQrB,EAAE,uBAEfC,KAAK2uI,YAAc,KAEnB3uI,KAAKsyI,SAAW,EAInB,CAiCAvD,sBAAsBlvI,GACnB,IAAIK,EAAM,CACPgK,KAAM,GAAGrK,SACT64E,MAAO,GAAG74E,UACVoK,KAAM,GAAGpK,cACTmzI,kBAAmB,GAAGnzI,sBACtBozI,SAAU,GAAGpzI,aACbyR,QAAS,GAAGzR,aAGfG,KAAK2hG,IAAM,CACRlhG,GAAI,CACDG,GAAIV,EAAIgK,KACRxJ,KAAM,OACNM,MAAO,IACPq2F,eAAgB,CACb1/B,cAAe,MACf71D,WAAY,KAEfX,KAAM,CAEH,CACGH,MAAO,IACPa,KAAM,CACH,CACGnB,KAAM,OACNyG,KAAM,WACN/F,MAAOrB,EAAE,cAEZ,CACGW,KAAM,OACNyG,KAAM,YACN/F,MAAOrB,EAAE,cACT29E,SAAUj6E,MAAM4d,MAAM6xH,QACtB9wI,GAAI,CACDC,SAAU,SAAU26E,EAAQC,GACrBj9E,KAAKiM,aAAejM,KAAK09E,WAC1B/5E,GAAGzD,EAAIgK,MAAMgV,YACV,YACA,oBAGHvb,GAAGzD,EAAIgK,MAAMgV,YAAY,aAAa,EAE5C,IAGN,CACGte,GAAIV,EAAI8yI,kBACRtyI,KAAM,YACNyG,KAAM,WACN/F,MAAOrB,EAAE,QACTmB,IAAK,eACLF,MAAO,IACPS,KAAM,CACHT,MAAO,IACPa,KAAM,CACH,CACGd,OAAQ,IAEX,CACGH,GAAIV,EAAI+yI,SACRjyI,MAAO,IACPN,KAAM,SACNmB,KAAM,IAET,CACGnB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAOrB,EAAE,mBACTiB,MAAO,IACPO,MAAO,KACJC,EAAO2xI,YAAY,MAMlC,CACGzyI,KAAM,OACNyG,KAAM,UACN/F,MAAOrB,EAAE,YAEZ,CACGW,KAAM,WACNE,GAAIV,EAAIoR,QACRnK,KAAM,UACN/F,MAAOrB,EAAE,WACTiB,MAAO,IACPD,OAAQ,OAsBjB,CACGc,KAAM,CACH,CACGnB,KAAM,WACNkB,KAAM,SACN0jE,SAAU,UAEb,CACG1kE,GAAIV,EAAI+J,KACRvJ,KAAM,OACNM,MAAO,IACPE,IAAK,CAAE,mBAAoB,oBAC3BokE,SAAU,SAAUttD,EAAKy0B,GACtB,OAAOjrC,EAAO4xI,cAAcp7H,EAAKy0B,EACpC,EACArqC,GAAI,CACDgI,YAAa,SAAUxJ,EAAIyJ,EAAG9H,GAC3B,IAAIpC,EAAYH,KAAKmtB,QAAQvsB,GAE7BY,EAAO6xI,WAAWlzI,EACrB,QAQlBmD,KAAM,KACCtD,KAAK2uI,cACNhrI,GAAGzD,EAAI+J,MAAMwN,MACVzX,KAAK2uI,YAAY5nI,QAAQC,GAAMA,EAAE4+B,qBAEpCjiC,GAAGzD,EAAI+J,MAAMvF,WAGhBlD,EAAO8xI,WAAW,EAGrB9xI,OAAQA,EAER6zD,aAAewhE,IACZr1H,EAAO6zD,aAAawhE,EAAW,EAElCuP,WAAY,IACF5kI,EAAO4kI,cAIpB,IAAI5kI,EAAS,CACV6zD,aAAewhE,IACZA,EAAaA,GAAc,CAAC,EAE5BlzH,GAAGzD,EAAIgK,MAAMsmF,UAAUqmC,IAGNA,EAAWoc,UAAY,IAC7BhvI,SAAS2L,IACjBpO,EAAO2xI,WAAW,CACfvxI,KAAMgO,EAAEhO,KACR2xI,UAAW3jI,EAAE2jI,UACb5wI,MAAOiN,EAAEjN,OACV,IAGLnB,EAAO8xI,WAAW,EAGrBlN,WAAY,KACT,IAAIx6B,EAAWjoG,GAAGzD,EAAIgK,MAAM0lF,aAAe,CAAC,EAGxC4jD,EAAa,GAiBjB,OAhBA7vI,GAAGzD,EAAI+yI,UACHnoI,gBACA7G,SAASoG,IAEP,IACIkpI,EAAYlpI,EAAE+wE,UAAU,CAAEj0E,KAAM,cAAe8E,WAC/CtJ,EAAQ0H,EAAE+wE,UAAU,CAAEj0E,KAAMosI,IAAatnI,WAE7CunI,EAAWlvI,KAAK,CACb1C,KALQ,KAMR2xI,UAAWA,EACX5wI,MAAOA,GACR,IAID,CACJ8wI,SAAU7nC,EAAmB,SAC7B8nC,UAAW9nC,EAAoB,UAC/BqnC,SAAUO,EACV1mF,QAAS8+C,EAAkB,QAC3Bt6F,QAASs6F,EAAkB,QAC7B,EAYJ+nC,gBAAkBvtI,IAGR,CACJpF,MAAO,IACPG,KAAM,CAcH,CACGT,KAAM,aACNyG,KAAM,YACNxE,OArBTyD,EAAWA,GAAY,CAAC,GAqBCmtI,WAAa,QAC7BvyI,MAAO,IACPmB,QAAS,CACN,CACGvB,GAAI,QACJ+B,MAAO5C,EAAE,2BAEZ,CAAEa,GAAI,QAAS+B,MAAO5C,EAAE,mBACxB,CAAEa,GAAI,QAAS+B,MAAO5C,EAAE,gBAE3BqC,GAAI,CACDC,SAAU,SAAU26E,EAAQC,GACzBz7E,EAAOoyI,gBAAgB52D,EAAQh9E,KAClC,IAGN,CACGgB,MAAO,IACPmG,KAAM,aACN0sI,aAAcztI,EAASmtI,WAAa,QACpCpyI,KAAM,CACH,CACGT,KAAM,OACNyG,KAAM,QACNirC,MAAO,QACPzvC,MACyB,SAAtByD,EAASmtI,UACJntI,EAASzD,MACT,GACR+6E,SAAUj6E,MAAM4d,MAAM6xH,QACtBlyI,MAAO,IACPoB,GAAI,CACDC,SAAU,SAAU26E,EAAQC,GACzBz7E,EAAOsyI,iBACV,IAGN,CACGpzI,KAAM,aACNyG,KAAM,QACNirC,MAAO,QACPzvC,MACyB,SAAtByD,EAASmtI,UACJntI,EAASzD,MACT,GACR3B,MAAO,IACPm8E,QAAS,CACN/6E,GAAI,CACDg7E,aAAc,WACXp9E,KAAKyE,OAAO,QAAS,KACrBzE,KAAKa,QACR,GAEHgJ,KAAMrI,EAAOuyI,sBAGnB,CACGrzI,KAAM,aACNyG,KAAM,QACNirC,MAAO,QACPzvC,MACyB,SAAtByD,EAASmtI,UACJntI,EAASzD,MACT,GACR3B,MAAO,IACPm8E,QAAS,CACN/6E,GAAI,CACDg7E,aAAc,WACXp9E,KAAKyE,OAAO,QAAS,KACrBzE,KAAKa,QACR,GAEHgJ,KAAMrI,EAAOwyI,mBAKzB,CACGtzI,KAAM,SACNQ,IAAK,eACLU,KAAM,OACN2J,KAAM,gBACNvK,MAAO,GACPO,MAAO,WACJ,IAAI0yI,EAAUj0I,KAAKyL,gBAEnBjK,EAAO0yI,cAAcD,EACxB,MAMZd,WAAa/sI,IACV,IAAIyrB,EAAQluB,GAAGzD,EAAI+yI,UAAUnoI,gBAAgB3E,OAE7CxC,GAAGzD,EAAI+yI,UAAUhoI,QAAQzJ,EAAOmyI,gBAAgBvtI,GAAWyrB,GAE3DrwB,EAAO8xI,WAAW,EAGrBM,gBAAiB,CAAChyI,EAAMi9F,KACrB,IACIs1C,EADat1C,EAAQpzF,gBACI2vE,UAAU,CAAEj0E,KAAM,eAE/C,OAAQvF,GACL,IAAK,QACFuyI,EAAY/1D,UAAU,SACtB,MACH,IAAK,QACF+1D,EAAY/1D,UAAU,SACtB,MACH,QACG+1D,EAAY/1D,UAAU,SAI5Bz6E,GAAGzD,EAAI8yI,mBAAmB9+D,QAAQ,EAGrCggE,cAAgBD,IACbtwI,GAAGzD,EAAI+yI,UAAUznI,WAAWyoI,GAE5BzyI,EAAO8xI,WAAW,EAGrBQ,gBAAiB,KACd,IAAIM,GAAa,EAEjBzwI,GAAGzD,EAAI+yI,UACHnoI,gBACA7G,SAASqP,IACP,IAAI+gI,EAAY/gI,EAAE8nE,UAAU,CAAEj0E,KAAM,UAChCktI,EAAUpoI,aAAeooI,EAAU32D,aACpC02D,GAAa,EAChB,IAGFA,EAAYzwI,GAAGzD,EAAIgK,MAAMgV,YAAY,YAAY,GAChDvb,GAAGzD,EAAIgK,MAAMgV,YAAY,WAAY,mBAAmB,EAGhEk0H,cAAe,CAACxtI,EAAO6mC,IACb,mBAAmB7mC,EAAM2F,gDAAgD3F,EAAMxE,QAGzF2yI,kBAAmB,KAChB,IAAIO,EAAiB,GACjBnyI,EAAU,GAEVoyI,EAAe,CAAC1iD,EAAS2iD,KAC1B,IAAIC,EAAc5iD,EACd9qF,QAAQC,GAAMA,aAAa+rI,IAC3B5kI,KAAKnH,IACH,IAAI0tI,EAAQ,GACTC,EAAW,GAUd,OARIH,GACDE,EAAQ,GAAGF,EAAM5zI,MAAMoG,EAAE6hB,eACzB8rH,EAAW,GAAG9iD,EAAQzwF,SAAS4F,EAAE5F,UAAUozI,EAAMpzI,WAEjDszI,EAAQ,IAAI1tI,EAAE6hB,eACd8rH,EAAW,GAAG9iD,EAAQzwF,SAAS4F,EAAE5F,SAG7B,CACJR,GAAI8zI,EACJ/xI,MAAOgyI,EACT,IAKPxyI,EAAUA,EAAQ6lB,OAAOysH,EAAY,EAsBxC,OAnBAF,EAAav0I,KAAK2uI,aAElB3uI,KAAK2uI,YAAY3nH,gBAAgB/iB,SAAS+C,IAMpCstI,EAAejnI,QAAQrG,EAAEpG,KAAO,IAKnC0zI,EAAehwI,KAAK0C,EAAEpG,IAGtB2zI,EAAavtI,EAAEJ,eAAgBI,GAAE,IAG7B7E,CAAO,EAGjB6xI,aAAc,KACX,IAAI7xI,EAAU,GAyBd,OAtBgBnC,KAAKmtI,YAAYprI,GAAGmkB,iBAAiBmH,IAClD,IAAIrV,EAAMqV,EAAGjB,WACb,OACGiB,EAAGjnB,SAAS+jB,SACZnS,GACAA,EAAIjR,QAAQC,GAAe,SAATA,EAAE3C,MAAgB8B,OAAS,CAC/C,IAGMlC,SAAS0vB,IACZA,EAAGvH,YACJuH,EAAGvH,WACCrlB,QAAQC,GAAe,SAATA,EAAE3C,MAChBJ,SAAS+C,IACP7E,EAAQmC,KAAK,CACV1D,GAAI,GAAG+yB,EAAG/yB,MAAMoG,EAAEpG,KAClB+B,MAAO,GAAGgxB,EAAGvyB,SAAS4F,EAAE5F,SACzB,GAEX,IAGIe,CAAO,EAGjBkxI,WAAaztI,IACV,IAAIgvI,EAAYnxI,MAAMoxI,UAAUC,WAC5B5+H,EAAM,GAGkB,QAAzB0+H,EAAU3yI,OAAOvB,MACQ,YAAzBk0I,EAAU3yI,OAAOvB,OAEbk0I,EAAU3oI,WAAUiK,EAAM0+H,EAAU3oI,YAEpC2oI,EAAU/vI,UACX+vI,EAAU/vI,SAAS,GAAGqR,IAAMtQ,EAAMxE,SAErCqC,MAAMoxI,UAAUE,SAASH,GAC5B,EAGHtB,UAAW,KACR3vI,GAAGzD,EAAI8yI,mBAAmB9+D,SAC1BvwE,GAAGzD,EAAIoR,SAAS4iE,QAAQ,GAI9B,OAAOl0E,KAAK2hG,GACf,CAQAj6E,QAAQvlB,GAEL,IAAKsB,MAAM4d,MAAM6xH,QAAQlzI,KAAK62H,WAAW6c,WACtC,OAAOjkI,QAAQC,UAGlB,IAAI8jI,EAAa,GAEjB,OAAO/jI,QAAQC,UACXgF,MAAK,IAEI,IAAIjF,SAAQ,CAACC,EAASmH,KAC1B,IAAI8yC,EAAQ,GAEZ3pD,KAAK62H,WAAWoc,SAAShvI,SAAS+wI,IAC/BrrF,EAAMrlD,KACH,IAAImL,SAAQ,CAACoc,EAAM1jB,KAIhB,GAAqB,SAAjB6sI,EAAIzB,UAAsB,CAC3B,IAAI0B,EAAgBD,EAAIryI,MAAM+lB,MAAM,KAAK,GACrCwsH,EAAal1I,KAAK2uI,YAAY5pI,YAAYwjB,WAC3C0sH,GAEH,GAAIC,EAAY,CAEb,GAAIA,EAAWjwI,OAAOrE,IAAMZ,KAAK2uI,YAAY/tI,GAAI,CAC9C,IAAIu0I,EACDhzI,EAAQ0H,KAAKqrI,EAAWpuI,YACvBquI,IACD3B,EAAaA,EAAWxrH,OAAOmtH,GACrC,KAEK,CACF,IAAIC,EAAcJ,EAAIryI,MAAM+lB,MAAM,KAAK,GACtB1oB,KAAK2uI,YAAY5nI,QAC9BC,GACEA,aAAaihD,GACbjhD,EAAEpG,IAAMw0I,IAEHnxI,SAAS+C,IACjB,IAAIggI,EACD7kI,EAAQ0H,KAAK7C,EAAEmqB,iBAAmB,GAIlC61G,IACC75H,MAAMC,QAAQ45H,KAEfA,EAAa,CAACA,IAGjBA,EAAW/iI,SAAS+sB,IACjB,IAAI/gB,EAAQ+gB,EAAEkkH,EAAWpuI,YACrBmJ,IACDujI,EAAaA,EAAWxrH,OAAO/X,GAAM,GACzC,GAER,CAEA4b,GACH,MACGA,GAEN,MAGK,GAAqB,SAAjBmpH,EAAIzB,UAAsB,CAChC,IAAI8B,EAAiBL,EAAIryI,MACzB,IAAK0yI,EAAgB,OAAOxpH,IAE5B,IAAI81G,EAAO0T,EAAe3sH,MAAM,KAAK,GACjChe,EAAU2qI,EAAe3sH,MAAM,KAAK,GAEpC4sH,EAAUt1I,KAAKmtI,YAAYprI,GAAGyqB,mBAC/Bm1G,GAEH,IAAK2T,EAAS,OAAOzpH,IAErB,IAAIjmB,EAAQ0vI,EAAQlpH,WAAWre,UAAUrD,GACzC,IAAK9E,EAAO,OAAOimB,IAGnBypH,EAAQ/gH,UAAUtwB,SAAS4F,IACxB,IAAI0rI,EAAY1rI,EAAKjE,EAAMkB,YACvByuI,GAAW/B,EAAWlvI,KAAKixI,EAAU,IAG5C1pH,GACH,MAIG2nH,EAAWlvI,KAAK0wI,EAAIryI,OACpBkpB,GACH,IAEL,IAGJpc,QAAQ8R,IAAIooC,GAAOh1C,MAAMkC,GAAQnC,KAAKhF,EAAQ,MAGnDgF,MAAK,IAEI,IAAIjF,SAAQ,CAACC,EAASmH,KAG1B,KAFA28H,EAAaxzI,KAAK+B,GAAG2gB,KAAK8wH,GAAY1qI,QAAQ8G,GAAMA,MAEjC4jI,EAAWrtI,OAAS,EAAG,OAAOuJ,IAGjD,IAAI+jI,EAAWzzI,KAAK62H,WAAW4c,SAC5B3mF,EAAU9sD,KAAK62H,WAAW/pE,QAC1Bx7C,EAAUtR,KAAK62H,WAAWvlH,QAE7BtR,KAAK2uI,YACD5nI,QAAQC,GAAMA,EAAE4+B,oBAChB3hC,SAAS+C,IACP,IAAIs+D,EAAW,IAAIhjD,OAAO,IAAItb,EAAE5F,SAAU,KACvCyI,EAAO7C,EAAEwZ,OAAOre,EAAQ0H,MAE3B4pI,EAAWA,EAASvgI,QAAQoyD,EAAUz7D,GACtCijD,EAAUA,EAAQ55C,QAAQoyD,EAAUz7D,GACpCyH,EAAUA,EAAQ4B,QAAQoyD,EAAUz7D,EAAK,IAI/C7J,KAAK+B,GAAGsN,QAAQgB,KAAK,CAClBC,IAAK,qBACLwF,OAAQ,CACL29H,SAAUA,EACVC,UAAW1zI,KAAK62H,WAAW6c,UAC3B5mF,QAASA,EACTx7C,QAASA,EACTkiI,WAAYxzI,KAAK+B,GAAG2gB,KAAK8wH,MAG3B9+H,MAAK,KACHhF,GAAS,IAEXiF,MAAMkC,EAAO,KAG7B,CAKAw+C,aAAajvD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAMu1D,aAAajvD,GAGfpG,KAAK2hG,KAGN3hG,KAAK2hG,IAAItsC,aAAajvD,EAASywH,WAErC,CAKAuP,aAMG,IAAIhgI,EAAWtG,MAAMsmI,aAIrB,OAFAhgI,EAASywH,WAAa72H,KAAK2hG,IAAIykC,aAExBhgI,CACV,oBCjuBH,MAAMysI,EAAmB,EAAQ,OAIjCpzI,EAAOC,QAAU,cAAsD,EASpEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,0CACXrE,KAAKoB,MAhBH,KAAI0U,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAgB7B/V,CAAE,gCAEfC,KAAK2lH,cAAgB,KAErB3lH,KAAKsyI,SAAW,EAInB,CAiCAvD,sBAAsBlvI,GACnB,IAAIK,EAAM,CACPs1I,aAAc,GAAG31I,kBAGpBG,KAAK2hG,IAAM,CACRlhG,GAAI,CAAEG,GAAIV,EAAIs1I,aAAc90I,KAAM,aAAcyB,QAAS,IAEzDmB,KAAM,KACH9B,EAAO2jF,iBAAiB,EAG3B3jF,OAAQA,EAER6zD,aAAewhE,IACZr1H,EAAO6zD,aAAawhE,EAAW,EAElCuP,WAAY,IACF5kI,EAAO4kI,cAIpB,IAAI5kI,EAAS,CACV2jF,gBAAiB,KAEd,IAAIswD,EAAe,GAQfC,EAAU,CAACC,EAAWC,EAAQh0I,EAAMqlE,KACrC2uE,EAASA,GAAU,GAEnB,IAAIrqI,EAAO,eACC,OAAR3J,IAAe2J,EAAO,yBAE1B,IAAIowD,EAAag6E,EAAUh6E,aAE3B85E,EAAanxI,KAAK,CACf1D,GAAI+0I,EAAU/0I,GACd+B,MAAOizI,EAASD,EAAUv0I,MAC1BQ,KAAMA,EACNqlE,OAAQtL,EAAaA,EAAW/6D,GAAK,KAErC2K,KAAMA,IAGG,QAAR3J,GAA0B,OAARA,IACf+zI,EAAU7vH,OACX6vH,EAAU7vH,QAAQ7hB,SAAQ,SAAU+d,GACjC0zH,EAAQ1zH,EAAG4zH,EAAS,IAAK,OAC5B,IAICD,EAAUhuH,OACXguH,EACIhuH,OAAOrU,GAAe,OAATA,EAAEjP,MACfJ,SAAS26G,IAEPA,EAAIj3F,QAAQ1jB,SAAS+jE,IAClB0tE,EACG1tE,EACA4tE,EAAS,IACT,MACAD,EAAU/0I,GACZ,GACF,IAGd,EAGH80I,EAAQ11I,KAAKmtI,YAAYrxE,WAAY,GAAI,QAEzCn4D,GAAGzD,EAAIs1I,cAAc/wI,OAAO,UAAWgxI,GACvC9xI,GAAGzD,EAAIs1I,cAAc9wI,SAAS,EAGjC2wD,aAAewhE,IACZA,EAAaA,GAAc,CAAC,EAE5BlzH,GAAGzD,EAAIs1I,cAAc3wI,SAClBgyH,EAAWvvD,OAASuvD,EAAW5vD,QAAU,GAC3C,EAGJm/D,WAAY,KACT,IAAIt4H,EAAS,CAAC,EAEV+nI,EAAalyI,GAAGzD,EAAIs1I,cAAcvpI,WAClCw4H,EAAe9gI,GAAGzD,EAAIs1I,cACtBx2D,WACAP,UACAx8E,OAAO4H,KAAKf,QAAQ44C,GAAQA,EAAI9gD,IAAMi1I,IAAY,GAiBtD,OAhBIpR,IAGE32H,EAFsB,OAArB22H,EAAa7iI,KAEL,CACNqlE,OAAQw9D,EAAax9D,OACrBK,MAAOuuE,GAID,CACN5uE,OAAQ4uE,IAMV/nI,CAAM,GAInB,OAAO9N,KAAK2hG,GACf,CAKAj6E,QAAQvlB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASmH,KAE1B,GAAI7W,KAAK62H,WAAW5vD,SACjB9kE,EAAQ+H,KAAKu2F,WAAWzgG,KAAK62H,WAAW5vD,QAEpCjnE,KAAK62H,WAAWvvD,OAAO,CACxB,IAAIwuE,EAAU3zI,EAAQ+H,KAAKnF,YAAY+gB,OACnC9D,GAAMA,EAAEphB,IAAMZ,KAAK62H,WAAW5vD,SAC/B,GACD,GACF,IAAK6uE,EAAS,OAAOpmI,IAGrB,IAAIs4D,EAAU8tE,EAAQnuH,OAClBrU,GAAMA,EAAE1S,IAAMZ,KAAK62H,WAAWvvD,QAC/B,GACD,GACF,IAAKU,EAAS,OAAOt4D,IAErB,IAAIkvG,EAAM52C,EAAQ/yD,OAClB,IAAK2pG,EAAK,OAAOlvG,IAEjB,IAAI+vH,EAAgBnkG,IACjB,IAAKA,EAAQrmB,OAAQ,OAAO,EAC5B,IAAI4qH,EAAavkG,EAAQrmB,OACzB,IAAK4qH,EAAW5qH,OAAQ,OAAO,EAC/B4qH,EAAW5qH,OAAOzF,KAAK,YAAaqwH,EAAWj/H,IAC/C6+H,EAAaI,EAAW5qH,OAAO,EAGlCwqH,EAAa7gB,GACb,IAAI8gB,EAASC,aAAY,WAClBh8H,GAAGqkE,EAAQpnE,KAAO+C,GAAGqkE,EAAQpnE,IAAIggF,YAClCg/C,cAAcF,GAGjB9gB,EAAIpvG,KAAK,YAAaw4D,EAAQpnE,GACjC,GAAG,IACN,CAGH8O,GAAS,GAEf,CAKA2lD,aAAajvD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAMu1D,aAAajvD,GAGfpG,KAAK2hG,KAGN3hG,KAAK2hG,IAAItsC,aAAajvD,EAASywH,WAErC,CAKAuP,aAMG,IAAIhgI,EAAWtG,MAAMsmI,aAIrB,OAFAhgI,EAASywH,WAAa72H,KAAK2hG,IAAIykC,aAExBhgI,CACV,oBClQH,MAAMysI,EAAmB,EAAQ,OAIjCpzI,EAAOC,QAAU,cAAuD,EASrEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,2CACXrE,KAAKoB,MAhBH,KAAI0U,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAgB7B/V,CAAE,+BAEfC,KAAK2lH,cAAgB,KAErB3lH,KAAKsyI,SAAW,EAInB,CAiCAvD,sBAAsBlvI,GACnBG,KAAK2hG,IAAM,CACRlhG,GAAI,CACDC,KAAM,QACNU,MAAOpB,KAAKoB,OAGfkC,KAAM,OAEN9B,OAAQA,GAGX,IAAIA,EAAS,CAAC,EAEd,OAAOxB,KAAK2hG,GACf,CAKAj6E,QAAQvlB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASmH,KAC1B,IACI8kD,EADcx5D,EAAQ+H,KAAKyxD,aACFA,aAG7Bx5D,EAAQ+H,KAAKu2F,WAAW9kC,EAAW/6D,IAEnC8O,GAAS,GAEf,oBCzFH,MAAMmjI,EAAmB,EAAQ,OAIjCpzI,EAAOC,QAAU,cAAoD,EASlEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,wCACXrE,KAAKoB,MAhBH,KAAI0U,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAgB7B/V,CAAE,mCAEfC,KAAK2lH,cAAgB,KAErB3lH,KAAKsyI,SAAW,EAInB,CAiCAvD,sBAAsBlvI,GACnB,IAAIK,EAAM,CACP61I,QAAS,GAAGl2I,aAGfG,KAAK2hG,IAAM,CACRlhG,GAAI,CACDG,GAAIV,EAAI61I,QACRr1I,KAAM,QAGT4C,KAAM,OAEN9B,OAAQA,EAER6zD,aAAewhE,IACZr1H,EAAO6zD,aAAawhE,EAAW,EAElCuP,WAAY,IACF5kI,EAAO4kI,cAIpB,IAAI5kI,EAAS,CACV6zD,aAAewhE,IACZA,EAAaA,GAAc,CAAC,EAE5BlzH,GAAGzD,EAAI61I,SAASlxI,SAASgyH,EAAWkf,SAAW,GAAG,EAGrD3P,WAAY,KAEF,CACJ2P,QAASpyI,GAAGzD,EAAI61I,SAAS9pI,YAAc,MAKhD,OAAOjM,KAAK2hG,GACf,CAKAj6E,QAAQvlB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASmH,KAEtB7W,KAAK62H,WAAWkf,SACjB78H,OAAO6pG,KACJ,UAAU/iH,KAAK62H,WAAWkf,QAAQ7iI,QAAQ,UAAW,MACrD,UAGNxD,GAAS,GAEf,CAKA2lD,aAAajvD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAMu1D,aAAajvD,GAGfpG,KAAK2hG,KAGN3hG,KAAK2hG,IAAItsC,aAAajvD,EAASywH,WAErC,CAKAuP,aAMG,IAAIhgI,EAAWtG,MAAMsmI,aAIrB,OAFAhgI,EAASywH,WAAa72H,KAAK2hG,IAAIykC,aAExBhgI,CACV,oBCjJH,MAAMysI,EAAmB,EAAQ,OAEjC,IAAI9yI,EAAI,IAAI+V,IAAW/T,GAAGsP,aAAajQ,SAAS0U,GAEhD,IAAIkgI,EAAwC,CACzChsH,iBAAkB,CAEfC,KAAM,MACN5I,MAAO,KAIb5hB,EAAOC,QAAU,cAA4CmzI,EAO1DlzI,YAAYC,EAAKC,EAAQstI,GACtBrtI,MAAMF,EAAKC,EAAQstI,GAEnBntI,KAAKqE,IAAM,uCACXrE,KAAKoB,MAAQrB,EAAE,iBAEfC,KAAKi2I,aAAe,KAEpBj2I,KAAKsyI,SAAW,GAKhBtyI,KAAKk2I,WAAa,CAAC,CACtB,CAKAnH,sBAAsBlvI,GAKnB,OAJuB,MAAnBG,KAAKm2I,aACNn2I,KAAKm2I,WAAan2I,KAAKo2I,iBAAiBv2I,IAGpCG,KAAKm2I,UACf,CAKAC,iBAAiBv2I,GACd,IAAIivG,EAAmBrrG,MAAMyH,MAKzBhL,EAAM,CACPuH,YAAqB,aAHd,GAAG5H,gBAAiBivG,MAiB1BttG,EAAS,CACV60I,aAAc,KAEX,IAAIC,EAAa90I,EAAO+0I,UACxB,GAAKD,EAAL,CAGA,IAEIE,EAFOF,EAAWxrI,gBAEJhC,QAAQ8G,GAChBA,EAAEwrE,WAAU,SAAU16E,GAC1B,MAA2B,SAApBA,EAAKuB,OAAOkF,OAAoBzG,EAAKuL,UAC/C,MACA,GACEuqI,GAELF,EAAW9qI,WAAWgrI,EAZC,CAYM,EAMhCA,OAAS3sI,IAEN,IAAIysI,EAAa90I,EAAO+0I,UACxB,GAAKD,EAAL,CAGA,IAAIz0I,EAAOy0I,EAAWxrI,gBACtB,KACW,MAARjB,GACAhI,EAAKiH,QAAQ8G,GACHA,EAAEwrE,WAAU,SAAU16E,GAC1B,MAA2B,SAApBA,EAAKuB,OAAOkF,OAAoBzG,EAAKuL,UAC/C,MACA9F,OAAS,GANf,CAWA,IAAIiZ,EAAMpf,KAAKy2I,gBAAgB52I,GAG/By2I,EAAWrrI,QAAQmU,EAAI3e,IAGvB2e,EAAI9b,KAAK,CACNozI,MAAO,KAEJl1I,EAAOg1I,QAAQ,EAElB9I,SAAW1+G,IAERxtB,EAAOm1I,OAAO3nH,EAAM,EAEvBnlB,KAAMA,IAIT7J,KAAKsyI,SAAShuI,KAAK8a,EAtBV,CAZc,CAkCA,EAG1Bu3H,OAAS3nH,IAENhvB,KAAKsyI,SAASruI,SAAQ,CAAC2L,EAAG7D,KACnB6D,EAAEnP,GAAGG,IAAMouB,GAAOhvB,KAAKsyI,SAASnmI,OAAOJ,EAAO,EAAE,IAIvD,IAAIuqI,EAAa90I,EAAO+0I,UACnBD,GAGLA,EAAW9qI,WAAW7H,GAAGqrB,GAAO,EAGnCg2F,UAAW,KACR,IAAIsxB,EAAa90I,EAAO+0I,UACxB,GAAKD,EAAL,CAEA,IAAIplD,EAAWolD,EAAWxrI,gBAQtB8iI,EAAgB,GACpB18C,EAASjtF,SAASV,IACfqqI,EAActpI,KAAKf,EAAE,IAExBqqI,EAAc3pI,SAASV,IACpB+yI,EAAW9qI,WAAWjI,EAAE,IAI3BvD,KAAKsyI,SAAW,EAnBO,CAmBL,EAGrBiE,QAAS,IACW5yI,GAAGzD,EAAIuH,cAGrBzH,KAAKmtI,YAAYprI,GAAGqG,OAAOC,UACxB,IAAIC,MAAM,iBACV,CACGgH,QACG,mEACH1O,GAAIV,EAAIuH,aAGP,MAMb+oF,UAAYqmC,KAOTA,EAAaA,GAAc,CAAC,GACjBC,gBAAkBD,EAAWC,iBAAmB,GAG1Ct1H,EAAO+0I,YAIxB/0I,EAAOwjH,YAGH6R,EAAWC,gBAAgB3wH,OAAS,GACrC0wH,EAAWC,gBAAgB7yH,SAAS2L,IACjCpO,EAAOg1I,OAAO5mI,EAAE,IAQtBpO,EAAO60I,eAGP70I,EAAOg1I,SAAQ,EAGlBnhF,aAAejvD,IAEZ,IAAIwwI,EAAaxwI,EAASywH,YAAczwH,EAExC5E,EAAOgvF,UAAUomD,EAAW,EAG/BxQ,WAAY,KAMT,IAAIhgI,EAAW,CAAE0wH,gBAAiB,IAUlC,OAPA92H,KAAKsyI,SAASruI,SAASsuI,IACFA,EAAGnM,cAElBhgI,EAAS0wH,gBAAgBxyH,KAAKiuI,EAAGnM,aACpC,IAGIhgI,CAAQ,GAIrB,MAAO,CACJ3F,GA/LO,CACPC,KAAM,OACNE,GAAIV,EAAIuH,WACRyB,SAAU,IA6LV5F,KA1LSuzH,IACTA,EAAaA,GAAc72H,KAAK62H,WAChCr1H,EAAOgvF,UAAUqmC,EAAW,EAyL5BxhE,aAAejvD,IACZ5E,EAAO6zD,aAAajvD,EAAS,EAEhCggI,WAAY,IACF5kI,EAAO4kI,aAEjB5kI,OAAQA,EAEd,CAEAi1I,gBAAgB52I,GACb,IAmBIg3I,EAnBA/nC,EAAmBrrG,MAAMyH,MACzBihI,EAAY9nI,GAENA,EAAM,IAAMyqG,EAGlB5uG,EAAM,CACPkf,IAAK+sH,EAAS,OACd1kI,WAAY0kI,EAAS,iBACrBvmI,MAAOumI,EAAS,SAChBxpI,MAAOwpI,EAAS,SAChB2K,SAAU3K,EAAS,YACnB4K,SAAU5K,EAAS,YACnB6K,WAAY7K,EAAS,cACrBrH,UAAWqH,EAAS,aACpB8K,UAAW9K,EAAS,OACpB+K,aAAc/K,EAAS,WAKtB3qI,EAAS,CACVgC,UAAW,CACRkzI,MAAO,OACPhJ,SAAU,QAGbyJ,cAAe,KACZxzI,GAAGzD,EAAIkf,KAAKtU,gBAAgB,GAAGA,gBAAgB,GAAGnG,OAClDhB,GAAGzD,EAAIkf,KAAKtU,gBAAgB,GAAGA,gBAAgB,GAAGlG,MAAM,EAG3DoG,aAAeosI,IACZ,IAAIj1I,EAAU,GACd,GAAInC,KAAKi2I,eACN9zI,GAAWnC,KAAKi2I,aAAalvI,UAAY,IAAIoH,KAAKnH,IACxC,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,UA6BXg2I,GAAc,CAEf,IAAIC,EAAW,CAAC,EAChBr3I,KAAKsyI,SAASruI,SAASmb,IACpB,IAAIugF,EAAUh8F,GAAGyb,EAAI3e,GAAGG,IACxB,GAAI++F,EAAS,CACV,IAAI/5F,EAAQ+5F,EACR70F,gBAAgB,GAChBA,gBAAgB,GACpBusI,EAASzxI,EAAMqG,aAAc,CAChC,KAEH9J,EAAUA,EAAQ2G,QAAQqd,IACfkxH,EAASlxH,EAAEvlB,KAEzB,CAEH,OAAOuB,CAAO,EAGjBoD,QAAS,KACN,IAAIgC,EAAYvH,KAAKmtI,YAAYprI,GAAGgc,WAAWxW,YAC3CywD,EAAar0D,GAAGzD,EAAIkf,KAAKtU,gBAAgB,GAAGA,gBAAgB,GAC5DwsI,EAAWt/E,EAAWvsD,gBAAgBA,gBAEtC7F,EAAQ5F,KAAKu3I,qBAAqB5zI,GAAGzD,EAAI0F,OAAOqG,YACpD,GAAIrG,EAAO,CACR,IAAIjD,EAAQiD,EAAMqG,SAAS+rD,EAAY,CAAC,GAWpChgD,EAAM,CAAC,EAsBX,OArBAA,EAAIpS,EAAMkB,YAAcnE,EAExBiD,EAAM4qB,YAAYxY,EAAKzQ,IAIX,IAAT5E,GACS,MAATA,GACCwK,MAAMC,QAAQzK,IAA0B,GAAhBA,EAAMwD,SAE/BoB,EAAUkW,SACP7X,EAAMkB,WACN/G,EAAE,wBAMRu3I,EAASzqC,kBACTtlG,EAAUE,WAAW6vI,GAEd/vI,EAAUmW,MACpB,CAMG,IAAI85H,EAAa7zI,GAAGzD,EAAIkf,KACpBtU,gBAAgB,GAChBA,gBAAgB,GAKpB,OAJA0sI,EAAW/yI,OAAO,iBAAkB1E,EAAE,wBACtCy3I,EAAW/yI,OAAO,WAAW,GAC7B+yI,EAAW9yI,WAEJ,CACV,EAGH44E,YAAcm6D,IACX,IAAI7xI,EAAQ5F,KAAKu3I,qBAAqBE,GACtC,GAAK7xI,EAAL,CAEA,IAIG8xI,EAFA52D,EAFkBl7E,EAAM47D,gBACAhD,YAAY54D,EAAMX,OAAOF,aACrB5E,UAAUH,KAAKJ,KAC3C+3I,EAAiB72D,EAAmBrgF,GAGvCk3I,EAAe/2I,GAAKV,EAAIyC,MAGxB,IAAIi1I,EAAc53I,KAAKmtI,YAAYprI,GAAGmkB,iBAClCmH,GAAOA,EAAGjB,aAIVyrH,EAAqB,GACzBD,EAAY3zI,SAASopB,IAClBwqH,EAAmBvzI,KAAK,CAAE1D,GAAIysB,EAAGzsB,GAAI+B,MAAO0qB,EAAGjsB,OAAQ,IAI1D,IAAI02I,EAAkB,CACnB,CAAEl3I,GAAI,aAAc+B,MAAO5C,EAAE,sBAC7B,CACGa,GAAI,oBACJ+B,MAAO5C,EAAE,qCAIXg4I,EAAsB,CACvBn2I,KAAM,QACNC,KAAM,CACH,CACGV,KAAM,CACH,CACGP,GAAIV,EAAI42I,SACRp2I,KAAM,QACNyB,QAAS01I,EACTn8D,YAAa37E,EAAE,wBACfqC,GAAI,CACDC,SAAU,CAACgJ,EAAMC,KACd,IAAI0sI,EACDh4I,KAAKmtI,YAAYprI,GAAGyqB,mBACjBnhB,GAEN,IACG2sI,GAC0B,SAAzBA,EAAW1rH,YACR1mB,EAAMy9B,aAkBV1/B,GAAGzD,EAAI82I,YAAYryI,WAjBpB,CACC,IAAIi4E,EAAoB,GACxBo7D,EAAW5rH,WACPrlB,SACA9C,SAAS+C,IACP41E,EAAkBt4E,KAAK,CACpB1D,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,OACV,IAERuC,GAAGzD,EAAI82I,YAAYvyI,OAChB,UACAm4E,GAEHj5E,GAAGzD,EAAI82I,YAAYtyI,UACnBf,GAAGzD,EAAI82I,YAAYpyI,MACtB,CAEA,IAKT,CACGhE,GAAIV,EAAI82I,WACRt2I,KAAM,QACNm4E,QAAQ,EACR6C,YAAa37E,EAAE,wBACfoC,QAAS,CAAC,CAAEvB,GAAI,EAAG+B,MAAO,uBAInC,CACG/B,GAAIV,EAAI62I,SACRr2I,KAAM,QACNyB,QAAS21I,EACTp8D,YAAa37E,EAAE,wBACfqC,GAAI,CACDC,SAAU,CAACgJ,EAAMC,KACd,IAAI2sI,EAAOt0I,GAAGzD,EAAIkf,KAElB,GADA64H,EAAKzsI,WAAWysI,EAAKntI,gBAAgB,IACzB,cAARO,EACD4sI,EAAKhtI,QAAQ,CAAC,EAAG,OACb,CACJ,IAAI9I,EACDnC,KAAKmtI,YAAY9gH,eAAeD,WAC5BrlB,SACAoH,KAAI,SAAUnH,GACZ,MAAO,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,MAEf,KAENy1I,EAAkB72I,KAAK+B,GAAGgzB,iBACvB,GAAGl1B,aAKUyD,KAAK,CAClBgtC,cAAc,EACdsoC,uBAAwBz2E,IAE3B00I,EAAgBz0I,GAAG,UAAW8T,IAC3B1U,EAAOqhH,eAAe3sG,EAAI,IAG7B+hI,EAAKhtI,QAAQ4rI,EAAgBp2I,GAAI,GAEjC,IAAIkhI,EAAOh+H,GAAGzD,EAAI42I,UAAU7qI,WACxBuwE,EACDx8E,KAAKmtI,YAAYprI,GAAGyqB,mBAAmBm1G,GACtCnlD,GACDh7E,EAAO02I,gBAAgB17D,EAE7B,OAsBf,GAdiB,QAAb52E,EAAMvB,MACPszI,EAAex1I,QAAUw1I,EAAex1I,SAAW,GACnDw1I,EAAex1I,QAAQoxB,QAAQ,CAC5B3yB,GAAI,kBACJ+B,MAAO5C,EAAE,qBAUX6F,EAAMy9B,aAAc,CAErB,IAAIutG,EAAkBhrI,EAAMgB,eAI5BgxI,EAAcA,EAAY9uI,QAAQukB,GACxBA,EAAGjB,WAAWxrB,IAAMgwI,EAAgBhwI,KAG9C,IAAIu3I,EAAYn4I,KAAKmtI,YAAYprI,GAAGmkB,iBAAiBmH,GAE9B,SAAjBA,EAAGf,YACHe,EAAGjB,YACHiB,EAAGjB,WAAWsc,gBAAgBkoG,KAKpCgH,EAAcA,EAAY5vH,OAAOmwH,GAGjCN,EAAqB,GACrBD,EAAY3zI,SAASopB,IAClBwqH,EAAmBvzI,KAAK,CAAE1D,GAAIysB,EAAGzsB,GAAI+B,MAAO0qB,EAAGjsB,OAAQ,IAI1D02I,EAAgBxzI,KAAK,CAClB1D,GAAI,oBACJ+B,MAAO5C,EAAE,mCAGZ23I,EAAaK,EAIbj3D,EAAqB,CAClBx9E,KAAM,WAAa,EAKzB,MACGo0I,EAAa,CACV92I,GAAIV,EAAI4kI,UACRpkI,KAAM,YACN+B,MAAO,CACJ,CACG2vC,MAAO,SACPvwC,KAAM,CACH81I,EACA,CACGj3I,KAAM,QACNU,MAAO,MAAMrB,EAAE,yBACfqC,GAAI,CACDgI,YAAa,WACOpK,KAAKyL,gBACKA,gBAEhB2yE,UAAU,QACxB,MAKZ,CAEGhsC,MAAO,QACPvwC,KAAM,CACHk2I,EACA,CACGr3I,KAAM,QACNU,MAAO,MAAMrB,EAAE,yBACfqC,GAAI,CACDgI,YAAa,WACV,IACGguI,EADcp4I,KAAKyL,gBACKA,gBAG3B9H,GAAGzD,EAAI62I,UAAUlyI,SAAS,cAE1BuzI,EAAWh6D,UAAU,SACxB,QAUrB,IAAI65D,EAAOt0I,GAAGzD,EAAIkf,KAAKtU,gBAAgB,GAOvC,GANAmtI,EAAKzsI,WAAWysI,EAAKntI,gBAAgB,IACrCmtI,EAAKhtI,QAAQysI,EAAY,GAEzB52D,EAAmBx9E,QAGdsC,EAAMy9B,cAAgBz9B,EAAM8uE,cAAe,CAG7C,IAAI2jE,EAAe10I,GAAGg0I,EAAe/2I,IAAI8M,MAGzCmH,YAAW,KACRjP,EAAM8uE,cAAc9uE,EAAO5F,KAAKJ,IAAKy4I,EAAc,CAChDjwF,UAAU,EAGV0mC,QAAQ,GACT,GACF,GACN,CAGoBmpD,EAAKntI,gBAAgB,GAC3BlG,OAGV6yI,GAAUj2I,EAAOgC,UAAUkzI,OA7Qb,CA6QoB,EAGzC7xI,SAAWgF,IACRlG,GAAGzD,EAAI0F,OAAOf,SAASgF,EAAKsyB,SAE5B,IAAIv2B,EAAQ5F,KAAKu3I,qBAAqB1tI,EAAKsyB,SAC3C,GAAIv2B,EAAO,CACR,IAAI0yI,EAAa,KACd30I,GAAGzD,EAAI42I,UAAUjyI,SAASgF,EAAKlH,OAC3BkH,EAAKmtI,YACNrzI,GAAGzD,EAAI82I,YAAYnyI,SAASgF,EAAKmtI,YAEpC,IAAID,EAAWltI,EAAKktI,UAAY,aAGhC,GAFApzI,GAAGzD,EAAI62I,UAAUlyI,SAASkyI,GAEV,cAAZA,EAA0B,CAC3B,IAAIwB,EAAe1uI,EAAKlH,MACpB65E,EACDx8E,KAAKmtI,YAAYprI,GAAGyqB,mBAAmB+rH,GACtC/7D,GAAkB3yE,EAAKmgB,kBACxBxoB,EAAO02I,gBACJ17D,EACA3yE,EAAKmgB,iBAGd,GAICpkB,EAAMy9B,aACPi1G,IAEsB,SAAlBzuI,EAAKktH,WACNpzH,GAAGzD,EAAI4kI,WAAW1mD,UAAU,SAE5Bk6D,MAEA30I,GAAGzD,EAAI4kI,WAAW1mD,UAAU,UAG5BvpE,YAAW,WAER,IAAI4Z,EAAU,CAAC,EACfA,EAAQ7oB,EAAMkB,YAAc+C,EAAKlH,MACjCiD,EAAMf,SAASlB,GAAGzD,EAAIyC,OAAQ8rB,EACjC,GAAG,IAGZ,GAGHypH,gBAAiB,CAACrpB,EAAU7kG,KACzBA,EACGA,GACAgsH,EAAsChsH,iBAIzC6sH,EAAgB7hH,WACb65F,EAASziG,WAAayiG,EAASziG,WAAWrlB,SAAW,IAExD8vI,EAAgBhyI,SAASmlB,EAAiB,EAG7Co8G,WAAY,KAGT,IAAI8Q,EAAevzI,GAAGzD,EAAIg3I,cAC1B,GAAIA,GAAgBA,EAAat2D,YAAa,CAC3C,IAAI/2E,EAAO,CAAC,EACZA,EAAKsyB,QAAUx4B,GAAGzD,EAAI0F,OAAOqG,WAE7B,IAAIusI,EAAc70I,GAAGzD,EAAIyC,OACrBiD,EAAQ5F,KAAKu3I,qBAAqB1tI,EAAKsyB,SA4B3C,OAbIv2B,EAAMy9B,cAGsC,SAAzC1/B,GAAGzD,EAAI4kI,WAAW7iI,OAAO4xI,cAf7BhqI,EAAKlH,MAAQgB,GAAGzD,EAAI42I,UAAU7qI,WAC9BpC,EAAKmtI,WAAarzI,GAAGzD,EAAI82I,YAAY/qI,WACrCpC,EAAK4gB,GAAK,MACV5gB,EAAKjI,KAAOgE,EAAMvB,IAClBwF,EAAKktI,SAAWpzI,GAAGzD,EAAI62I,UAAU9qI,WACjCpC,EAAKktH,UAAY,QACb8f,IACDhtI,EAAKmgB,iBAAmB6sH,EAAgB5qI,cAWxCpC,EAAKlH,MAAQiD,EAAMqG,SAASusI,EAAa,CAAC,GAC1C3uI,EAAK4gB,GAAK,MACV5gB,EAAKjI,KAAOgE,EAAMvB,IAClBwF,EAAKktH,UAAY,UAIhBltH,CACV,CACG,OAAO,IACV,GA0EN,MAAO,CACJpJ,GAvEO,CACPG,GAAIV,EAAIkf,IACR1e,KAAM,SACNmB,KAAM,CACH,CACGV,KAAM,CACH,CAEGT,KAAM,QACNM,MAAOhB,KAAKmtI,YAAYprI,GAAG+M,OAAOgO,gBAClC1b,MAAOrB,EAAE,QAEZ,CAEGW,KAAM,QACNyG,KAAM,QACNu0E,YAAa37E,EAAE,kBACfa,GAAIV,EAAI0F,MACR7E,OAAQ,GACRoB,QAASX,EAAOwJ,cAAa,GAC7B5I,GAAI,CACDC,SAAU,SAAU8I,GACjB3J,EAAO87E,YAAYnyE,EACtB,IAGN,CAEGzK,KAAM,QACNM,MAAOhB,KAAKmtI,YAAYprI,GAAG+M,OAAOgO,gBAClC1b,MAAOrB,EAAE,OAMZ,CAAC,EAED,CAEGW,KAAM,SACNQ,IAAK,eACLN,GAAIV,EAAIg3I,aACR3rI,KAAM,cACN3J,KAAM,OACNZ,MAAO,GACP63E,QAAQ,EACRt3E,MAAO,WACJC,EAAOgC,UAAUkqI,SAASxtI,EAAIkf,IACjC,KAIT,CAAC,IAmBJ9b,KAfSnB,IACT,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGpDpB,EAAQ0H,MAETrI,EAAOqD,SAAS1C,EAAQ0H,KAG3B,EAMAu8H,WAAY,IACF5kI,EAAO4kI,aAEjB5kI,OAAQA,EAEd,CAEA+1I,qBAAqBp7G,GAClB,OACGn8B,KAAK2uI,aAAa5gI,UAAUouB,IAC5Bn8B,KAAKi2I,cAAcloI,UAAUouB,IAC7Bn8B,KAAKmtI,YAAYprI,GAAGmE,SACjBlG,KAAKmtI,YAAYprI,GAAG2iB,eAAeyX,IAAY,CAAC,EAChDn8B,KAAKmtI,YAAYprI,GAAGk4B,UAAU,CAAC,GAGxC,CASAk0G,oBAAoBhsI,EAASs2I,GAC1Bz4I,KAAKqxI,UAAYoH,EAEjB,IAAIC,GAAY,EAsThB,OApTA14I,KAAK62H,WAAa72H,KAAK62H,YAAc,CAAC,EACtC72H,KAAK62H,WAAWC,gBAAkB92H,KAAK62H,WAAWC,iBAAmB,GAKrE92H,KAAK62H,WAAWC,gBAAgB7yH,SAASwmB,IAetC,IAAI7kB,EAAQ5F,KAAKu3I,qBAAqB9sH,EAAG0R,SACzC,GAAKv2B,EAAL,CAEA,IAAIjD,EAAQ8nB,EAAG9nB,MAEf,GAAa,mBAATA,EACDA,EAAQ3C,KAAKmtI,YAAYprI,GAAG+Q,QAAQlC,gBAIhC,GAAIhL,EAAMy9B,cAAgC,SAAhB5Y,EAAGssG,UAAsB,CAUvD,MAAMv6C,EAAiBx8E,KAAKmtI,YAAYprI,GAAGyqB,mBACxC/B,EAAG9nB,OAEN,IAAK65E,EAAgB,OASrB,IAAIxyD,EAAmBhqB,KAAKmtI,YAAYprI,GAAG2D,UACxC+kB,EAAGT,kBAEFA,GAAoBA,EAAiB3I,OACtC2I,EAAiB3I,MACbvY,QAAQ8G,GAEO,iBAAVA,EAAEwgB,MACQ,qBAAVxgB,EAAEwgB,OAGPnsB,SAASmK,IACP,IAAI4pD,EACDh4D,KAAKmtI,YAAY9gH,eAAeD,WAAWre,UACxCK,EAAKzL,OAEPq1D,EAAW30B,aACZj1B,EAAKzL,MAAQq1D,EAAWx3C,OAAOxgB,KAAKqxI,WAEpCjjI,EAAKzL,MAAQ3C,KAAKqxI,UAAUr5E,EAAWlxD,YAGzB,qBAAbsH,EAAKgiB,KACNhiB,EAAKgiB,KAAO,aAEZhiB,EAAKgiB,KAAO,QACf,IAIT,IAAIuoH,EACDn8D,EAAenmD,cAAcrM,GAEhC,OAAQS,EAAGssH,UAIR,IAAK,aACL,QAqBG,QApBAp0I,EAAQg2I,EAAqB1rH,eAMN,SAAhBxC,EAAGssG,WACA6hB,EACDD,EAAqBvsH,WAAWre,UAC7B0c,EAAGusH,eAINr0I,EAAQA,EAAMi2I,EAAe9xI,aACxBnE,EAAM/B,KACd+B,EAAQA,EAAM/B,KAKZ6pB,EAAGA,IACR,IAAK,MACF,IAAK9nB,EAAO,MAERiD,EAAMy9B,cAGPo1G,EAAe7yI,EAAMkB,YAAc,CAAC,EACpC2xI,EAAe7yI,EAAMkB,YAAYlG,GAC9B+B,EAAMiD,EAAMgB,eAAe8oB,MAC9B+oH,EAAe7yI,EAAMkB,YAClBlB,EAAMgB,eAAe8oB,MACpB/sB,EAAMiD,EAAMgB,eAAe8oB,MAG3B9pB,EAAMQ,SAASgB,aACZxB,EAAMyB,aACPoxI,EAAe7yI,EAAMkB,YAClBlB,EAAMyB,WAAWP,YAChBnE,EAAMiD,EAAMyB,WAAWP,aAE1BlB,EAAM0B,cACPmxI,EAAe7yI,EAAMkB,YAClBlB,EAAM0B,YAAYR,YACjBnE,EAAMiD,EAAM0B,YAAYR,cAIlClB,EAAMgB,eACFG,QACGC,GACW,YAATA,EAAE3C,KAA8B,aAAT2C,EAAE3C,MAE9BJ,SAAS+C,IACPyxI,EAAe7yI,EAAMkB,YAClBE,EAAEF,YACDnE,EAAMqE,EAAEF,WAAW,KAG7B2xI,EAAe7yI,EAAMkB,YAAcnE,EAK5C,MAGH,IAAK,oBAIF,IAHA,IAAIk2I,EAAY,GAEZC,EAAUH,EAAqB1qH,iBAC5B6qH,GAAS,CAGb,OAAQH,EAAqBrsH,YAG1B,IAAK,SACFusH,EAAUv0I,KAAKw0I,EAAQl4I,IACvB,MAKH,IAAK,QACF,IAAIg4I,EAKA56C,EAAW86C,GALXF,EACDD,EAAqBvsH,WAAWre,UAC7B0c,EAAGusH,aAG6BlwI,iBAEf,IAAZk3F,IACRA,EAAW86C,EAAQF,EAAeznH,gBAE9BhkB,MAAMC,QAAQ4wF,GACfA,EAAWA,EAAS7vF,KAAKmF,GACfA,EAAE1S,GAAK0S,EAAE1S,GAAK0S,IAEhB0qF,EAASp9F,KACjBo9F,EAAWA,EAASp9F,KAI1Bi4I,EAAY74I,KAAKmtI,YAAYprI,GAAG2gB,KAC7Bm2H,EAAU7wH,OAAOg2E,IAM1B86C,EAAUH,EAAqBxqH,cAAc2qH,EAChD,CAGA,GACQ,QADAruH,EAAGA,GAEL,GAAwB,OAApB7kB,EAAMqB,WAAqB,CAC5B,IAAI8xI,EAAU,GACdF,EAAU50I,SAASqP,IAChB,IAAI0lI,EACDh5I,KAAKmtI,YAAYprI,GAAG2D,UAAU+yI,GACjCO,EAAoBpzI,EAAMkB,YAAcwM,EACxCylI,EAAQz0I,KAAK00I,EAAoB,IAEpCP,EAAezH,WAAa+H,CAC/B,MACGN,EAAe7yI,EAAMkB,YAAc+xI,EAI5C,MAEH,IAAK,oBAKF,GAJAA,EAAY,GAEZl2I,EAAQg2I,EAAqB1qH,iBAM1B,GACsC,SAAnC0qH,EAAqBrsH,YACJ,SAAhB7B,EAAGssG,WAAwBtsG,EAAGusH,WAE/B4B,EACGD,EAAqBvsH,WAAWre,UAC7B0c,EAAGusH,iBAKc,KAFvBh5C,EAAWr7F,EAAMi2I,EAAe9xI,eAG7Bk3F,EAAWr7F,EAAMi2I,EAAeznH,gBAC5BhkB,MAAMC,QAAQ4wF,KACfA,EAAWA,EAAS,IAEnBA,EAASp9F,KAAIo9F,EAAWA,EAASp9F,KAGxC+B,EAAQq7F,OAIN,GAAuC,UAAnC26C,EAAqBrsH,WAAwB,CAMnD,IAAI2sH,EACArzI,EAAMyB,WACP4xI,EAASrzI,EAAMyB,WAAWP,WAClBlB,EAAM0B,cACd2xI,EAASrzI,EAAM0B,YAAYR,YAE1BmyI,GAAUt2I,EAAMs2I,GACjBt2I,EAAQA,EAAMs2I,GACNt2I,EAAM/B,KACd+B,EAAQA,EAAM/B,GAEpB,CAKK,QADA6pB,EAAGA,KAELguH,EAAe7yI,EAAMkB,YAAcnE,GAM/C+1I,GAAY,CAGf,KAGW,QADAjuH,EAAGA,KAELguH,EAAe7yI,EAAMkB,YAAcnE,GAIzC+1I,GAAY,CAnRG,CA2RlB,IAGIA,CAKV,CAMAhxH,QAAQvlB,GAGL,OAFAnC,KAAKqxI,UAAYlvI,EAAQ0H,KAElB,IAAI4F,SAAQ,CAACC,EAASmH,KAE1B,GADgB7W,KAAKmuI,oBAAoB,CAAC,EAAGhsI,EAAQ0H,MAG9C,CAEJ,IAAI8pB,EAAKxxB,EAAQ+H,KAAKmiB,eACtB,IAAKsH,EAAI,OAAOjkB,IAEJikB,EAAG3rB,MAEXirE,OAAO9wE,EAAQ0H,KAAKjJ,GAAIuB,EAAQ0H,MAChC6K,KAAKhF,GACLiF,OAAOxM,IACLnI,KAAKmtI,YAAYprI,GAAGqG,OAAOC,UAAUF,EAAK,CACvCmH,QACG,sDACH1O,GAAIuB,EAAQ0H,KAAKjJ,GACjBiJ,KAAM1H,EAAQ0H,OAEjBgN,EAAO1O,EAAI,GAEpB,MAnBGuH,GAmBH,GAEN,CAIA1K,WAAWC,GACRnF,MAAMkF,WAAWC,GACjBjF,KAAKkyI,iBAAiBjtI,EACzB,CAIAitI,iBAAiBjtI,GAEVjF,KAAKi2I,eACNj2I,KAAKk2I,WAAWl2I,KAAKi2I,aAAar1I,IAAMZ,KAAK62H,YAGhD72H,KAAKi2I,aAAehxI,EAGpBjF,KAAKm2I,WAAa,KAGlBn2I,KAAK62H,WAAa72H,KAAKk2I,WAAWl2I,KAAKi2I,aAAar1I,KAAO,CAAC,CAC/D,CAKAy0D,aAAajvD,GAOV,GANAA,EAAWA,GAAY,CAAC,EAExBtG,MAAMu1D,aAAajvD,GAIfA,EAAS8yI,gBAAiB,CAC3B,IAAIjD,EAAej2I,KAAKmtI,YAAYpoI,YAAYwjB,WAC7CniB,EAAS8yI,iBAEZl5I,KAAKi2I,aAAeA,CACvB,CAGIj2I,KAAKm2I,YAGNn2I,KAAKm2I,WAAW9gF,aAAajvD,EAEnC,CAKAggI,aAMG,IAAIhgI,EAAWtG,MAAMsmI,aAKrB,OAHAhgI,EAASywH,WAAa72H,KAAKm2I,WAAW/P,aACtChgI,EAAS8yI,gBAAkBl5I,KAAKi2I,aAAaptH,aAEtCziB,CACV,CASAioI,UACG,IAAI0B,EAAW,GAoBf,OAnBe/vI,KAAK62H,YAAYC,iBAAmB,IAC1C7yH,SAASwmB,IACf,IAAI7kB,EAAQ5F,KAAKu3I,qBAAqB9sH,EAAG0R,SACzC,IAAKv2B,EAAO,OACZ,IAAKA,EAAMy9B,cAAiC,UAAjB5Y,EAAGssG,UAAuB,OAGrD,IAAInmG,EAAK5wB,KAAKmtI,YAAYprI,GAAGyqB,mBAAmB/B,EAAG9nB,OAC/CiuB,GAAIhE,aAAegE,GAAI3F,eAAe0B,aAG1CojH,EAASzrI,KACN,IAAImL,SAASC,IACVkhB,EAAGxuB,GAAG,mBAAmB,KACtBsN,GAAS,GACV,IAEP,IAEGD,QAAQ8R,IAAIwuH,EACtB,cC3zCqEtwI,EAAOC,QAAkS,SAAS2K,EAAEi1B,EAAEsjB,EAAEhzC,GAAG,SAAShD,EAAEuZ,EAAEq1D,GAAG,IAAI54B,EAAEz8B,GAAG,CAAC,IAAImZ,EAAEnZ,GAAG,CAAmE,GAAG5S,EAAE,OAAOA,EAAE4S,GAAE,GAAI,IAAInf,EAAE,IAAIsB,MAAM,uBAAuB6d,EAAE,KAAK,MAAMnf,EAAE2P,KAAK,mBAAmB3P,CAAC,CAAC,IAAIwN,EAAEouC,EAAEz8B,GAAG,CAACzmB,QAAQ,CAAC,GAAG4/B,EAAEnZ,GAAG,GAAG02B,KAAKroC,EAAE9U,SAAQ,SAAS2K,GAAoB,OAAOuC,EAAlB0yB,EAAEnZ,GAAG,GAAG9b,IAAgBA,EAAE,GAAEmK,EAAEA,EAAE9U,QAAQ2K,EAAEi1B,EAAEsjB,EAAEhzC,EAAE,CAAC,OAAOgzC,EAAEz8B,GAAGzmB,OAAO,CAA2C,IAA1C,IAAI6T,OAAE,EAA4C4S,EAAE,EAAEA,EAAEvW,EAAEzJ,OAAOggB,IAAIvZ,EAAEgD,EAAEuW,IAAI,OAAOvZ,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAASgtE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIy5I,EAASv/D,EAAQ,iBAAiBu/D,SAASA,EAASC,oBAAoB,SAASC,GAAO,OAAO9yI,KAAKiyC,MAAY,KAAN6gG,EAAW,EAAE55I,EAAOC,QAAQy5I,CAAQ,EAAE,CAACG,cAAc,IAAI,EAAE,CAAC,SAAS1/D,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAASv/D,EAAQ,cAAkBqgE,EAAe,iBAAqBC,EAAK,CAACC,UAAU,SAAmB96F,GAAU,MAAkB,SAAXA,EAAkB,OAAO,KAAK,EAAE+6F,gBAAgB,SAAyB/6F,GAAU,MAAkB,SAAXA,EAAkB,WAAW,cAAc,EAAEg7F,gBAAgB,SAAyB7kC,GAAU,OAAOA,EAAStiG,QAAQ,2BAA2B,MAAM,WAAW,EAAEonI,gBAAgB,SAAyB9kC,EAASn2D,GAA2G,OAA3B,SAAXA,EAAkB,aAAa,QAAqB,UAA9F66F,EAAKG,gBAAgB7kC,EAA+F,GAAG/1G,EAAOC,QAAQ,WAAW,SAAS66I,EAAW9mB,EAAIje,EAASglC,EAAan7F,IAA3xB,SAAyBgL,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAspBC,CAAgB16I,KAAKu6I,GAAYv6I,KAAKw1G,SAASA,EAASx1G,KAAK6a,OAAOq/H,EAAKC,UAAU96F,GAAUr/C,KAAKyzH,IAAIA,EAAIzzH,KAAKw6I,aAAaA,EAAax6I,KAAK26I,aAAaT,EAAKE,gBAAgB/6F,GAAUr/C,KAAK46I,YAAuB,SAAXv7F,EAAkB,WAAW,QAAQ,IAAIw7F,EAAaX,EAAKI,gBAAgB9kC,EAASn2D,GAAUr/C,KAAK86I,QAAQN,EAAaK,IAAe76I,KAAK+6I,mBAAmBP,EAAaK,EAAa,CAAqiF,OAApiFtB,EAAagB,EAAW,CAAC,CAACl2I,IAAI,qBAAqB1B,MAAM,SAA4B63I,EAAaQ,GAAc,IAAIC,EAASj7I,KAAK6a,OAAO,UAAU7a,KAAK26I,aAAa,YAAgBjnB,EAAI8mB,EAAaS,GAAU,IAAIvnB,EAAI,CAAC,IAAIvrH,EAAI,IAAIG,MAAM,qCAAoI,MAA/FH,EAAIkqF,WAAW,CAAC4oD,SAASA,EAASD,aAAaA,EAAaE,MAAM7mI,OAAOC,KAAKtU,KAAKyzH,IAAIynB,QAAc/yI,CAAG,CAAkM,IAAjM,IAAI2yI,EAAQ3B,EAASgC,QAAQhC,EAASiC,QAAQ1nB,IAAU2nB,EAAcP,EAAQvkE,qBAAqB,iBAAiB,GAAO+kE,EAAmBD,EAAc9kE,qBAAqB,gBAAwBhjE,EAAE,EAAEiB,EAAE8mI,EAAmBn1I,OAAOoN,EAAEiB,EAAEjB,IAAK8nI,EAAcztD,YAAY0tD,EAAmB/nI,IAAuC,OAAnCinI,EAAaQ,GAAcF,EAAeA,CAAO,GAAG,CAACz2I,IAAI,gBAAgB1B,MAAM,WAAyB,IAAI44I,EAASv7I,KAAK86I,QAAQvkE,qBAAqB,gBAAgB,OAAOppE,MAAMyvC,UAAU4+F,OAAO3+F,KAAK0+F,GAAS,SAAS76F,EAAI+6F,GAAc,IAAI76I,EAAG66I,EAAa1zD,aAAa,MAAM,MAAG,cAAcxlE,KAAK3hB,GAAY2F,KAAKm6C,IAAIA,EAAI/6B,SAAS/kB,EAAGkjD,OAAO,GAAG,KAAYpD,CAAG,GAAE,EAAE,GAAG,CAACr8C,IAAI,mBAAmB1B,MAAM,SAA0B+4I,EAAYC,GAAW,IAAIC,EAAe57I,KAAKw6I,aAAa,uBAA2BqB,EAAYD,EAAerlE,qBAAqB,WAA0I,IAAvGppE,MAAMyvC,UAAUk/F,KAAKj/F,KAAKg/F,GAAY,SAASvnB,GAAK,OAAOA,EAAIvsC,aAAa,eAAe4zD,CAAS,IAAG,CAA+B,IAAIt7I,EAAMu7I,EAAerlE,qBAAqB,SAAS,GAAOwlE,EAAOH,EAAe1uG,cAAc,WAAW6uG,EAAOC,aAAa,KAAKD,EAAOv2D,aAAa,cAAck2D,GAAaK,EAAOv2D,aAAa,YAAYm2D,GAAWt7I,EAAMkuF,YAAYwtD,EAAnP,CAA0P,GAAG,CAAC13I,IAAI,eAAe1B,MAAM,SAAsBs5I,EAAU/xD,EAAU32E,GAAS,MAAHA,IAASA,EAAE,GAAE,IAAI2oI,EAAkB,IAAJ3oI,EAAM0oI,EAAUA,EAAW,IAAI1oI,EAAE,IAAS4oI,EAAUn8I,KAAK6a,OAAO,UAAUqhI,EAAc,GAA8B,MAA3Bl8I,KAAKyzH,IAAIynB,MAAMiB,GAAkB,OAAOn8I,KAAKo8I,aAAaH,EAAU/xD,EAAU32E,EAAE,GAAG,IAAI0lD,EAAM,CAAC9xD,KAAKg1I,EAAUtyI,KAAKqgF,EAAU/nF,QAAQ,CAACk6I,QAAO,IAAOr8I,KAAKyzH,IAAI58C,KAAK5d,EAAM9xD,KAAK8xD,EAAMpvD,KAAKovD,EAAM92D,SAAS,IAAIw5I,EAAUO,EAAchpI,QAAQ+mI,EAAe,MAAMj6I,KAAKs8I,iBAAiB,SAASX,EAAUA,GAAW,IAAIN,EAAcr7I,KAAK86I,QAAQvkE,qBAAqB,iBAAiB,GAAOwlE,EAAO/7I,KAAK86I,QAAQ5tG,cAAc,gBAAgB6uG,EAAOC,aAAa,KAAK,IAAIO,EAAOv8I,KAAKw8I,gBAAgB,EAAoP,OAAlPT,EAAOv2D,aAAa,KAAK,MAAM+2D,GAAQR,EAAOv2D,aAAa,OAAO,6EAA6Eu2D,EAAOv2D,aAAa,SAASxlF,KAAK46I,YAAY,IAAIsB,GAAeb,EAAc9sD,YAAYwtD,GAAeQ,CAAM,KAAYhC,CAAU,CAA7/F,EAAggG,EAAE,CAAC,aAAa,IAAI,EAAE,CAAC,SAAS3gE,EAAQn6E,EAAOC,GAAS,aAAaD,EAAOC,QAAQ,CAAC+8I,YAAY,SAAqBC,EAAIx1D,GAAM,OAAO,8FAA8FA,EAAK,GAAG,SAASA,EAAK,GAAG,m2BAAm2Bw1D,EAAI,6jBAA6jBx1D,EAAK,GAAG,SAASA,EAAK,GAAG,2WAA2Wh0E,QAAQ,SAAS,GAAG,EAAEypI,oBAAoB,SAA6BD,EAAIx1D,GAAM,OAAO,qNAAqNA,EAAK,GAAG,SAASA,EAAK,GAAG,yoBAAyoBw1D,EAAI,8PAA8Px1D,EAAK,GAAG,SAASA,EAAK,GAAG,2gBAA2gBh0E,QAAQ,SAAS,GAAG,EAAE0pI,gBAAgB,SAAyBF,EAAIx1D,EAAK21D,GAAQ,OAAO,kRAAkRH,EAAI,6cAA6cG,EAAO3vI,EAAE,QAAQ2vI,EAAOziF,EAAE,6BAA6B8sB,EAAK,GAAG,SAASA,EAAK,GAAG,86CAA86Ch0E,QAAQ,SAAS,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS0mE,EAAQn6E,EAAOC,GAAS,aAAgM,IAAIo9I,EAAQljE,EAAQ,aAAiB3D,EAAU2D,EAAQ,UAAU3D,UAAc8mE,EAAcnjE,EAAQ,UAAUmjE,cAAkBC,EAAOpjE,EAAQ,YAAgBu/D,EAAS,CAAC,EAA0HA,EAAS/0I,SAAS,CAAC64I,WAAW,SAAoBC,GAAM,OAAIA,EAAKz9I,QAA6By9I,EAAKz9I,OAAyB,IAA7C,WAAwD,EAAEy6E,OAAO4iE,GAAxQ,SAAgBxoB,GAAK,OAAnV3xH,EAAmX,SAAa4xH,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvbjwH,EAAiX,SAArX2T,EAAkX,CAAC,GAArV3D,OAAOwlI,eAAe7hI,EAAI3T,EAAI,CAAC1B,MAAMA,EAAM+2I,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAY5hI,EAAI3T,GAAK1B,EAAaqV,EAA/K,IAAyBA,EAAI3T,EAAI1B,CAAqb,IAAiK08C,SAAS,OAAO89F,WAAW,CAACpqH,MAAM,IAAIw0B,IAAI,MAAM4xF,EAASiE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAMrlI,OAAI,EAAO1D,OAAK,EAAef,EAAE,EAAEA,EAAEN,UAAU9M,OAAOoN,GAAG,EAAE,CAACyE,EAAI/E,UAAUM,GAAGe,EAAKD,OAAOC,KAAK0D,GAAK,IAAI,IAAI+rB,EAAE,EAAEA,EAAEzvB,EAAKnO,OAAO49B,GAAG,EAAGs5G,EAAO/oI,EAAKyvB,IAAI/rB,EAAI1D,EAAKyvB,GAAI,CAAC,OAAOs5G,CAAM,EAAElE,EAASiC,QAAQ,SAASkC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAEnE,EAASqE,WAAW,SAAS5wI,GAAG,IAAI,QAAOye,IAAJze,EAAe,OAAiB,OAAO6wI,mBAAmBC,OAAOvE,EAASwE,cAAc/wI,IAAmI,CAA9H,MAAMvC,GAAG,IAAIlC,EAAI,IAAIG,MAAM,OAA0F,MAAnFH,EAAIkqF,WAAWxoF,KAAK+C,EAAEzE,EAAIkqF,WAAWurD,YAAY,kCAAwCz1I,CAAG,CAAC,EAAEgxI,EAAS0E,WAAW,SAASjxI,GAAG,OAAOkxI,SAAS3nI,mBAAmBvJ,GAAG,EAAEusI,EAASgC,QAAQ,SAASxjE,EAAIomE,GAAoE,OAA3C,IAAI9nE,EAAU,CAAC8nE,aAAaA,IAA6B5nE,gBAAgBwB,EAAI,WAAW,EAAEwhE,EAAS6E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC9E,EAAS+E,aAAa,SAASvmE,GAAK,OAAOA,EAAIzkE,QAAQ+qI,EAAiB,OAAO,EAAE9E,EAASgF,eAAe9pI,OAAOC,KAAK6kI,EAAS6E,SAAS7vI,KAAI,SAASiwI,GAAS,IAAIC,EAAUlF,EAAS6E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAIh8H,OAAO62H,EAAS+E,aAAaG,GAAW,KAAKE,KAAK,IAAIj8H,OAAO62H,EAAS+E,aAAaE,GAAS,KAAKrrH,MAAMsrH,EAAU92F,IAAI62F,EAAQ,IAAGjF,EAASqF,WAAW,SAASn4F,GAAqB,IAAb,IAAIz2C,OAAE,EAAe2D,EAAE,EAAEiB,EAAE2kI,EAASgF,eAAeh4I,OAAOoN,EAAEiB,EAAEjB,IAAK3D,EAAEupI,EAASgF,eAAe5qI,GAAG8yC,EAAOA,EAAOnzC,QAAQtD,EAAE0uI,OAAO1uI,EAAE23C,KAAK,OAAOlB,CAAM,EAAE8yF,EAASsF,WAAW,SAASp4F,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOzxC,YAAwB,IAAb,IAAIhF,OAAE,EAAe2D,EAAE,EAAEiB,EAAE2kI,EAASgF,eAAeh4I,OAAOoN,EAAEiB,EAAEjB,IAAK3D,EAAEupI,EAASgF,eAAe5qI,GAAG8yC,EAAOA,EAAOnzC,QAAQtD,EAAE2uI,KAAK3uI,EAAEmjB,OAAO,OAAOszB,CAAM,EAAE8yF,EAASzzI,UAAU,SAASsS,GAAK,OAAOjE,KAAK0D,MAAM1D,KAAKC,UAAUgE,GAAK,EAAEmhI,EAASuF,aAAa,SAASC,GAAQ,OAAOA,EAAOnD,QAAO,SAAS1tI,EAAO8wI,GAAgD,OAAzCzxI,MAAMyvC,UAAUt4C,KAAK+nC,MAAMv+B,EAAO8wI,GAAc9wI,CAAM,GAAE,GAAG,EAAE,IAAI+wI,EAAY,IAAIv8H,OAAOlH,OAAO0jI,aAAa,KAAK,KAA8U,SAASC,EAAoB58I,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,WAAW78I,EAAQm5B,QAAQ,sBAAsBn5B,EAAQxB,UAAsN,MAA5MwH,EAAIkqF,WAAW,CAACzxF,GAAG,uBAAuBuB,EAAQxB,SAASi9I,YAAY,WAAWz7I,EAAQm5B,QAAQ,sBAAsBn5B,EAAQxB,SAASu6H,OAAO/4H,EAAQ+4H,OAAOnvH,MAAM5J,EAAQ4J,MAAMuvB,QAAQn5B,EAAQm5B,SAAenzB,CAAG,CAA1qBgxI,EAASwE,cAAc,SAAS/wI,GAAG,OAAOA,EAAEsG,QAAQ2rI,EAAY,IAAI,EAAE1F,EAAS8F,aAAa,SAASC,EAAM9qE,GAA4C,IAAnC,IAAI+qE,EAAW,GAAOn5G,OAAM,EAA0C,OAA5BA,EAAMk5G,EAAME,KAAKhrE,KAAiB+qE,EAAW76I,KAAK,CAACs6I,MAAM54G,EAAM62G,OAAO72G,EAAMj6B,QAAQ,OAAOozI,CAAU,EAAEhG,EAASkG,aAAa,SAASrnI,GAAK,OAAO3D,OAAOC,KAAK0D,GAAK7R,MAAM,EAAoWgzI,EAASh0F,SAAS,SAAS+1E,EAAO5/F,EAAQvvB,GAAO,IAAI,IAAIwH,EAAExH,EAAMyI,EAAE0mH,EAAO/0H,OAAOoN,EAAEiB,EAAEjB,IAAwB,GAAV2nH,EAAO3nH,GAAW5Q,QAAQ,KAAK24B,EAAQ,IAAK,OAAO/nB,EAAGwrI,EAAoB,CAACp+I,SAAS,QAAQ26B,QAAQA,EAAQ4/F,OAAOA,EAAOnvH,MAAMA,GAAO,EAAEotI,EAASj0F,QAAQ,SAASg2E,EAAO5/F,EAAQvvB,GAAuC,IAAhC,IAAI0c,EAAMyyG,EAAO9nH,MAAM,EAAErH,GAAewH,EAAEkV,EAAMtiB,OAAO,EAAEoN,GAAG,EAAEA,IAAI,CAAC,IAAI2pI,EAAKz0H,EAAMlV,GAAG,GAAqC,IAAlC2pI,EAAKv6I,MAAM0K,QAAQ,IAAIiuB,KAAiE,IAAnD,CAAC,IAAI,KAAKjuB,QAAQ6vI,EAAKv6I,MAAM24B,EAAQn1B,OAAO,IAAU,OAAOoN,CAAE,CAACwrI,EAAoB,CAACp+I,SAAS,OAAO26B,QAAQA,EAAQ4/F,OAAOA,EAAOnvH,MAAMA,GAAO,EAAEtM,EAAOC,QAAQy5I,EAASA,EAASmG,OAAO1lE,EAAQ,YAAYu/D,EAASoG,cAAc3lE,EAAQ,mBAAmB,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,mBAAmB,GAAG,WAAW,GAAG4lE,OAAO,KAAK,EAAE,CAAC,SAAS5lE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0e,SAASY,EAAgBrwF,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAC,IAAItB,EAASv/D,EAAQ,eAAmB6lE,EAAQtG,EAASoG,cAAkBvuB,EAAc,WAAW,SAASA,IAAoD,GAApC0pB,EAAgB16I,KAAKgxH,GAAkB/9G,UAAU9M,OAAO,EAAG,MAAM,IAAImC,MAAM,2GAA2GtI,KAAK0/I,SAAS,CAAC,EAAE1/I,KAAK2/I,QAAQ,GAAG3/I,KAAKksF,WAAW,CAAC,EAAE,CAAkyG,OAAjyGqtD,EAAavoB,EAAc,CAAC,CAAC3sH,IAAI,eAAe1B,MAAM,SAAsBlD,GAA2C,OAAnCO,KAAK2/I,QAAQr7I,KAAKm7I,EAAQhgJ,IAAgBO,IAAI,GAAG,CAACqE,IAAI,aAAa1B,MAAM,SAAoBR,GAAS,IAAIm0D,EAAMt2D,KAAkZ,OAA7YA,KAAKmC,QAAQA,EAAQkS,OAAOC,KAAK6kI,EAAS/0I,UAAUH,SAAQ,SAASI,GAAK,IAAI+gC,EAAa+zG,EAAS/0I,SAASC,GAAKiyD,EAAMjyD,GAAyB,MAApBiyD,EAAMn0D,QAAQkC,GAAWiyD,EAAMn0D,QAAQkC,GAAK+gC,CAAY,IAAsB,SAAhBplC,KAAKq/C,UAAmC,SAAhBr/C,KAAKq/C,WAAmBr/C,KAAK4/I,eAAe5uB,EAAc6uB,eAAe7/I,KAAKq/C,WAAUr/C,KAAK4/I,eAAe5/I,KAAKmC,QAAQy9I,gBAAgB5/I,KAAK4/I,eAAe5/I,KAAKmC,QAAQ29I,aAAa,GAAU9/I,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiB8wH,GAAK,GAAGA,EAAIssB,UAAW,MAAM,IAAIz3I,MAAM,iEAA8E,OAAbtI,KAAKyzH,IAAIA,EAAWzzH,IAAI,GAAG,CAACqE,IAAI,cAAc1B,MAAM,SAAqB6yG,GAAU,IAAIwqC,EAAYhgJ,KAAKigJ,oBAAoBzqC,GAAUwqC,EAAYvoI,QAAQzX,KAAK0/I,SAASlqC,GAAUwqC,CAAW,GAAG,CAAC37I,IAAI,UAAU1B,MAAM,WAAmB3C,KAAKkgJ,eAAelgJ,KAAK4/I,eAAeO,kBAAkBngJ,KAAKyzH,IAAI,GAAG,CAACpvH,IAAI,SAAS1B,MAAM,WAAkB,IAAIy9I,EAAOpgJ,KAAyyC,OAApyCA,KAAK2/I,QAAQ3/I,KAAK4/I,eAAeS,YAAYlyI,KAAI,SAASmyI,GAAgB,OAAOA,GAAgB,IAAGt4H,OAAOhoB,KAAK2/I,SAAS3/I,KAAKmC,QAAQnC,KAAK2/I,QAAQnE,QAAO,SAASr5I,EAAQ1C,GAAQ,OAAOA,EAAO8gJ,mBAAmBp+I,EAAQi+I,EAAO,GAAEpgJ,KAAKmC,SAASnC,KAAKw6I,aAAax6I,KAAKmC,QAAQ29I,aAAatE,QAAO,SAAShB,EAAahlC,GAAU,IAAIphC,EAAQgsE,EAAO3sB,IAAIynB,MAAM1lC,GAAUgrC,SAA0D,OAAjDhG,EAAahlC,GAAU2jC,EAASgC,QAAQ/mE,GAAgBomE,CAAY,GAAE,CAAC,GAAGx6I,KAAK2/I,QAAQ17I,SAAQ,SAASxE,GAAQA,EAAOsa,IAAI,CAAC05G,IAAI2sB,EAAO3sB,IAAI+mB,aAAa4F,EAAO5F,aAAa3wI,KAAKu2I,EAAOv2I,MAAM,IAAG7J,KAAKygJ,UAAUzgJ,KAAK2/I,QAAQ17I,SAAQ,SAASxE,GAAQA,EAAOsa,IAAI,CAAC2lI,SAASU,EAAOV,UAAU,IAAG1/I,KAAKkgJ,eAAej8I,SAAQ,SAASuxG,GAAyC,MAA5B4qC,EAAO3sB,IAAIynB,MAAM1lC,IAAiB4qC,EAAOM,YAAYlrC,EAAU,IAAGx1G,KAAK2gJ,OAAO3gJ,KAAK2/I,QAAQnE,QAAO,SAAS74I,EAAMlD,GAAQ,OAAOA,EAAOmhJ,eAAej+I,EAAM,GAAE,CAAC,GAAG0R,OAAOC,KAAKtU,KAAK2gJ,QAAQ18I,SAAQ,SAAS+lC,GAAI,IAAI62G,EAAOT,EAAOO,OAAO32G,GAAQE,EAAK22G,EAAO32G,KAAS81G,EAAYI,EAAOV,SAASx1G,GAAM81G,EAAYc,QAAQD,EAAOh3I,MAAMm2I,EAAYnwE,SAASuwE,EAAO3sB,IAAI58C,KAAK7sC,EAAGg2G,EAAY5rE,QAAQ,IAAG//D,OAAOC,KAAKtU,KAAKw6I,cAAcv2I,SAAQ,SAASuxG,GAAU4qC,EAAO3sB,IAAI14G,OAAOy6F,GAAU,IAAIphC,EAAQ+kE,EAAS0E,WAAW1E,EAASiC,QAAQgF,EAAO5F,aAAahlC,KAAY,OAAO4qC,EAAO3sB,IAAI58C,KAAK2+B,EAASphC,EAAQ,CAAC,EAAE,IAAUp0E,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBkH,GAAqB,OAAf7J,KAAK6J,KAAKA,EAAY7J,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAkB,OAAO3C,KAAKyzH,GAAG,GAAG,CAACpvH,IAAI,sBAAsB1B,MAAM,SAA6BgtD,GAAM,IAAIoxF,EAAS/gJ,KAAKyzH,IAAIynB,MAAMvrF,GAAM6wF,SAAS,OAAOxgJ,KAAKghJ,+BAA+BD,EAASpxF,EAAK,GAAG,CAACtrD,IAAI,iCAAiC1B,MAAM,SAAwCyxE,EAAQ6sE,GAAU,IAAIC,EAAOlhJ,KAASmhJ,EAAY,CAACF,SAASA,GAA8K,OAApK5sI,OAAOC,KAAK6kI,EAAS/0I,UAAUH,SAAQ,SAASI,GAAK88I,EAAY98I,GAAK68I,EAAO78I,EAAI,IAAG88I,EAAYvB,eAAe5/I,KAAK4/I,eAAeuB,EAAYxB,QAAQ3/I,KAAK2/I,QAAe,IAAI3uB,EAAcowB,aAAahtE,EAAQ+sE,EAAY,GAAG,CAAC98I,IAAI,cAAc1B,MAAM,SAAqBgtD,GAAM,OAAO3vD,KAAKigJ,oBAAoBtwF,GAAM3vD,KAAK4/I,eAAeyB,UAAUC,aAAa,GAAG,CAACj9I,IAAI,oBAAoB1B,MAAM,WAA4C,OAAf3C,KAAKygJ,UAAiBzgJ,KAAKkgJ,cAAc,KAAYlvB,CAAa,CAApkH,GAAwkHA,EAAcmoB,SAASv/D,EAAQ,eAAeo3C,EAAcgsB,OAAOpjE,EAAQ,YAAYo3C,EAAcowB,aAAaxnE,EAAQ,mBAAmBo3C,EAAc6uB,eAAejmE,EAAQ,sBAAsBo3C,EAAcuwB,WAAW3nE,EAAQ,iBAAiBn6E,EAAOC,QAAQsxH,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,gBAAgB,GAAG,kBAAkB,KAAK,EAAE,CAAC,SAASp3C,EAAQn6E,EAAOC,GAAS,aAAa,SAAS8hJ,EAAQlwI,GAAStR,KAAKmH,KAAK,eAAenH,KAAKsR,QAAQA,EAAQtR,KAAKyhJ,MAAM,IAAIn5I,MAAMgJ,GAASmwI,KAAK,CAAmC,SAASzC,EAAgB1tI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAKsR,QAAQA,EAAQtR,KAAKyhJ,MAAM,IAAIn5I,MAAMgJ,GAASmwI,KAAK,CAAuC,SAASC,EAAmBpwI,GAAStR,KAAKmH,KAAK,mBAAmBnH,KAAKsR,QAAQA,EAAQtR,KAAKyhJ,MAAM,IAAIn5I,MAAMgJ,GAASmwI,KAAK,CAA0C,SAASE,EAAgBrwI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAKqyF,WAAW,CAACurD,YAAY,iBAAiB59I,KAAKsR,QAAQA,EAAQtR,KAAKyhJ,MAAM,IAAIn5I,MAAMgJ,GAASmwI,KAAK,CAAngBD,EAAQ5kG,UAAUt0C,MAAMs0C,UAA+HoiG,EAAgBpiG,UAAU,IAAI4kG,EAAmIE,EAAmB9kG,UAAU,IAAI4kG,EAA2KG,EAAgB/kG,UAAU,IAAI4kG,EAAQ/hJ,EAAOC,QAAQ,CAAC8hJ,QAAQA,EAAQxC,gBAAgBA,EAAgB2C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS9nE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIkiJ,EAAWhoE,EAAQ,kBAAsBioE,EAAoBjoE,EAAQ,4BAAgCkoE,EAAaloE,EAAQ,oBAAwBmoE,EAAgBnoE,EAAQ,+BAAmC/J,EAAO+J,EAAQ,oBAAwBooE,EAAmB,CAAC7B,kBAAkB,SAA2B1sB,GAAkI,OAA1GA,EAAI58C,KAAK,2DAA2D1oE,KAAI,SAAS0oE,GAAM,OAAOA,EAAK1vE,IAAI,IAAyB6gB,OAAO,CAAC,wBAAwB,EAAEq5H,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAACxwE,EAAOkyE,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2B1sB,GAAwG,OAAhFA,EAAI58C,KAAK,iCAAiC1oE,KAAI,SAAS0oE,GAAM,OAAOA,EAAK1vE,IAAI,IAAyB6gB,OAAO,CAAC,qBAAqB,EAAEq5H,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAACxwE,EAAOgyE,EAAoBE,EAAgBD,EAAaF,IAAaniJ,EAAOC,QAAQ,CAAC4iJ,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAASpoE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIs9I,EAAOpjE,EAAQ,YAAgBu/D,EAASv/D,EAAQ,eAAe,SAAS4oE,EAAQC,EAAMz8G,GAAO,OAAOy8G,EAAM,IAAIz8G,EAAM62G,QAAQ72G,EAAM62G,OAAO4F,EAAM,EAAE,CAAC,SAASC,EAAgBxF,EAAKyF,GAAW,GAAe,QAAZzF,EAAKt7I,MAA8B,UAAhBs7I,EAAKv8I,UAAoBu8I,EAAK7uI,KAAK,CAAC,GAAGs0I,EAAW,MAAM,IAAIr6I,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZ40I,EAAKt7I,MAA8B,QAAhBs7I,EAAKv8I,UAAkBu8I,EAAK7uI,KAAK,CAAC,IAAIs0I,EAAW,MAAM,IAAIr6I,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAOq6I,CAAS,CAAC,SAASC,EAAWh1I,EAAEC,GAAG,OAAOD,EAAEivI,OAAOhvI,EAAEgvI,MAAM,CAAC,SAASgG,EAAOvuB,GAAK,IAAIvhG,EAAM,EAAc,MAATuhG,EAAI,KAAUvhG,EAAM,GAAE,IAAIhnB,EAAMuoH,EAAIjnH,QAAQ,KAASk6C,GAAa,IAATx7C,EAAWuoH,EAAInuH,OAAO,EAAE4F,EAAM,MAAM,CAACuoH,IAAIA,EAAIlhH,MAAM2f,EAAMw0B,GAAK5mD,SAAiB,IAARoyB,EAAU,QAAQ,MAAM,CAA6hC,SAAS+vH,EAA0B3gJ,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,gBAAmM,MAAnL72I,EAAIkqF,WAAW,CAAC0wD,KAAK5gJ,EAAQ4gJ,KAAKr6H,MAAM,KAAK,GAAGo7B,OAAO,GAAGljD,GAAG,eAAe0O,QAAQnN,EAAQ4gJ,KAAKnF,YAAY,2BAA2Bz7I,EAAQ4gJ,KAAKj/F,OAAO,EAAE,IAAI,iBAAuB37C,CAAG,CAAC,SAAS66I,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACvG,OAAO,GAAOkG,OAAK,EAAOE,EAAiBh/I,SAAQ,SAASo/I,GAAgBN,EAAKG,EAASp/F,OAAOs/F,EAAmBvG,OAAOwG,EAAexG,OAAOuG,EAAmBvG,SAAqC,UAA1BwG,EAAe1iJ,UAAoBwiJ,GAAuC,QAA1BE,EAAe1iJ,WAAmBwiJ,KAA0C,UAA1BE,EAAe1iJ,SAAoBmiJ,EAA0B,CAACC,KAAKA,IAA3+B,SAAmC5gJ,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,gBAAyL,MAAzK72I,EAAIkqF,WAAW,CAAC0wD,KAAK5gJ,EAAQ4gJ,KAAKr6H,MAAM,KAAK,GAAG9nB,GAAG,eAAe0O,QAAQnN,EAAQ4gJ,KAAKnF,YAAY,2BAA2Bz7I,EAAQ4gJ,KAAKj/F,OAAO,EAAE,IAAI,iBAAuB37C,CAAG,CAAsuBm7I,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAAS/8I,OAAQ48I,EAAKG,EAASp/F,OAAOs/F,EAAmBvG,OAAOwG,EAAsBD,EAAmBvG,QAAWsG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAIttI,EAAIvV,GAAU,IAAIuiC,EAAQ,GAAO25G,GAAQ,EAAE,IAAiD,KAA9CA,EAAO2G,EAAIn2I,QAAQ6I,EAAI2mI,EAAO,KAAmB35G,EAAQ5+B,KAAK,CAACu4I,OAAOA,EAAOl8I,SAASA,WAA4B,IAAVk8I,GAAa,OAAO35G,CAAO,CAAC,SAASugH,EAAOC,GAAmB,IAAIptF,EAAMt2D,KAAKA,KAAK0jJ,kBAAkBA,EAAkB1jJ,KAAK2jJ,KAAK,GAAG3jJ,KAAK4jJ,gBAAgB,SAASzG,GAAY7mF,EAAMqtF,KAAKrtF,EAAMotF,kBAAkBp1I,KAAK,IAAI,IAAIuuI,EAAO,EAAEvmF,EAAMutF,OAAOvtF,EAAMotF,kBAAkBv1I,KAAI,SAAS+uI,GAA0B,OAApBL,GAAQK,EAAK/2I,QAAqB+2I,EAAK/2I,MAAM,IAAG,IAAI88I,EAAiB9J,EAASuF,aAAa,CAAC6E,EAAcjtF,EAAMqtF,KAAKxG,EAAWpqH,MAAM,SAASwwH,EAAcjtF,EAAMqtF,KAAKxG,EAAW51F,IAAI,SAAS55C,KAAKi1I,GAAYI,EAAuBC,EAAiB3sF,EAAMqtF,MAAM,IAAIG,EAAgB,CAAC/wH,MAAMoqH,EAAWpqH,MAAM5sB,OAAOohD,IAAI41F,EAAW51F,IAAIphD,QAAY49I,EAAQ,EAAMC,EAAe,EAAE1tF,EAAM4kE,OAAO5kE,EAAMutF,OAAO11I,KAAI,SAAS0uI,EAAOtpI,GAAkI,IAA/H,IAAIkvI,EAAM,CAAC5F,EAAOA,EAAO78I,KAAK0jJ,kBAAkBnwI,GAAGpN,QAAY89I,EAAYjkJ,KAAK0jJ,kBAAkBnwI,GAAO2wI,EAAmB,GAASF,EAAef,EAAiB98I,QAAQq8I,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmB5/I,KAAK2+I,EAAiBe,IAAiBA,IAAiB,IAAIv7H,EAAM,GAAOk6E,EAAO,EAAKohD,EAAQ,IAAGphD,EAAOohD,EAAQA,EAAQ,GAAEG,EAAmBjgJ,SAAQ,SAASkgJ,GAAmB,IAAIxhJ,EAAMshJ,EAAYngG,OAAO6+C,EAAOwhD,EAAkBtH,OAAOA,EAAOl6C,GAAWhgG,EAAMwD,OAAO,GAAGsiB,EAAMnkB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQ8lB,EAAMnkB,KAAK,CAAC1C,KAAK,YAAYjB,SAASwjJ,EAAkBxjJ,WAAWgiG,EAAOwhD,EAAkBtH,OAAOA,EAAOiH,EAAgBK,EAAkBxjJ,SAAS,IAAGojJ,EAAQphD,EAAOshD,EAAY99I,OAAO,IAAIxD,EAAMshJ,EAAYngG,OAAO6+C,GAAoE,OAAzDhgG,EAAMwD,OAAO,GAAGsiB,EAAMnkB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe8lB,CAAK,GAAE6tC,EAAM,CAAC,CAAC72D,EAAOC,QAAQ,CAAC+X,MAAM,SAAe2sI,EAAUjH,GAAY,IAAIwF,GAAU,EAAUe,EAAkB,GAAGU,EAAUngJ,SAAQ,SAASi5I,IAAMyF,EAAUD,EAAgBxF,EAAKyF,KAAqC,YAAZzF,EAAKt7I,MAAkB8hJ,EAAkBp/I,KAAK44I,EAAKv6I,MAAO,IAAG,IAAIs0E,EAAO,IAAIwsE,EAAOC,GAAmBzsE,EAAO2sE,gBAAgBzG,GAAY,IAAIkH,EAAS,GAAOt4I,EAAM,EAAoW,OAAlWq4I,EAAUngJ,SAAQ,SAASi5I,GAAMyF,EAAUD,EAAgBxF,EAAKyF,GAA0B,YAAZzF,EAAKt7I,OAAkBs7I,EAAKv8I,SAASgiJ,EAAU,YAAY,cAAgBA,GAAuB,YAAZzF,EAAKt7I,MAAkBuL,MAAMyvC,UAAUt4C,KAAK+nC,MAAMg4G,EAASptE,EAAOikD,OAAOnvH,GAAOoC,KAAI,SAAS6T,GAAiD,MAAlC,YAATA,EAAEpgB,OAAkBogB,EAAErhB,SAAS,aAAmBqhB,CAAC,KAAIjW,KAAas4I,EAAS//I,KAAK44I,EAAM,IAAUmH,CAAQ,EAAEC,SAAS,SAAkBlwE,EAAQmwE,GAAS,IAAIC,EAApgJ,SAAoBpwE,EAAQqwE,EAAeC,GAAuU,IAArT,IAAI/hD,EAAO,EAAMgiD,EAAcvwE,EAAQjuE,OAAWy+I,EAAWzL,EAASuF,aAAa,CAAC+F,EAAet2I,KAAI,SAASmmH,GAAK,MAAM,CAACA,IAAIA,EAAIjmH,MAAK,EAAK,IAAGq2I,EAAiBv2I,KAAI,SAASmmH,GAAK,MAAM,CAACA,IAAIA,EAAIjmH,MAAK,EAAM,MAAKmtI,QAAO,SAASoJ,EAAWtlH,GAA4B,OAAzBslH,EAAWtlH,EAAEg1F,KAAKh1F,EAAEjxB,KAAYu2I,CAAU,GAAE,CAAC,GAAOC,EAAa,GAASliD,EAAOgiD,IAA+D,KAAhDhiD,EAAOvuB,EAAQ/mE,QAAQ,IAAIs1F,KAA5B,CAA0D,IAAIk6C,EAAOl6C,EAAOA,EAAOvuB,EAAQ/mE,QAAQ,IAAIs1F,GAAQ,IAAImiD,EAAQ1wE,EAAQhhE,MAAMypI,EAAOl6C,EAAO,GAAOoiD,EAAQlC,EAAOiC,GAASxwB,EAAIywB,EAAQzwB,IAAI3zH,EAASokJ,EAAQpkJ,SAAa0N,EAAKu2I,EAAWtwB,GAAc,MAANjmH,GAAqBw2I,EAAavgJ,KAAK,CAAC1C,KAAK,MAAMjB,SAASA,EAAS0N,KAAKA,EAAKwuI,OAAOA,EAAOl6I,MAAMmiJ,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAW5wE,EAAQmwE,EAAQl2I,KAAKk2I,EAAQU,OAAWtiD,EAAO,EAAMu4B,EAAOspB,EAAQhJ,QAAO,SAAStgB,EAAOl1F,GAAO,IAAIrjC,EAAMyxE,EAAQtwB,OAAO6+C,EAAO38D,EAAM62G,OAAOl6C,GAA4K,OAAjKhgG,EAAMwD,OAAO,GAAG+0H,EAAO52H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQggG,EAAO38D,EAAM62G,OAAO72G,EAAMrjC,MAAMwD,cAAc6/B,EAAM62G,OAAU72G,EAAMrjC,MAAMwD,OAAO,GAAG+0H,EAAO52H,KAAK0hC,GAAck1F,CAAM,GAAE,IAAQv4H,EAAMyxE,EAAQtwB,OAAO6+C,GAAqE,OAA1DhgG,EAAMwD,OAAO,GAAG+0H,EAAO52H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAeu4H,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAASthD,EAAQn6E,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiBwlJ,GAAM,IAAIC,EAAcpxI,KAAKC,UAAUoxI,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAIvtH,EAAKstH,EAAclyI,WAAW,OAAO4kB,KAAQutH,EAAMA,EAAMvtH,GAAMutH,EAAMvtH,GAAMqtH,EAAK74G,MAAMrsC,KAAKiT,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS2mE,EAAQn6E,EAAOC,GAAS,aAAa,SAAS2lJ,EAAiB1G,EAAOz0F,GAAuB,IAAhB,IAAIo7F,GAAU,EAAU/xI,EAAE,EAAEiB,EAAEmqI,EAAOx4I,OAAOoN,EAAEiB,EAAEjB,IAAQ22C,EAAM32C,IAAIorI,EAAOprI,GAAGpN,UAAgC,IAAZm/I,GAAe3G,EAAOprI,GAAG22C,EAAM32C,IAAIspI,OAAO8B,EAAO2G,GAAUp7F,EAAMo7F,IAAWzI,UAAQyI,EAAS/xI,GAAG,IAAe,IAAZ+xI,EAAe,MAAM,IAAIh9I,MAAM,qBAAqB,OAAOg9I,CAAQ,CAAC7lJ,EAAOC,QAAQ,SAASi/I,GAAQ,IAAI4G,EAAY5G,EAAOnD,QAAO,SAAS/6F,EAAIm+F,GAAO,OAAOn+F,EAAIm+F,EAAMz4I,MAAM,GAAE,GAAGw4I,EAAOA,EAAO71I,QAAO,SAAS81I,GAAO,OAAOA,EAAMz4I,OAAO,CAAC,IAA6F,IAA1F,IAAIq/I,EAAY,IAAIr4I,MAAMo4I,GAAiBr7F,EAAMy0F,EAAOxwI,KAAI,WAAW,OAAO,CAAC,IAAOoF,EAAE,EAAQA,GAAGgyI,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiB1G,EAAOz0F,GAAOs7F,EAAYjyI,GAAGorI,EAAO8G,GAAYv7F,EAAMu7F,IAAav7F,EAAMu7F,KAAclyI,GAAG,CAAC,OAAOiyI,CAAW,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS5rE,EAAQn6E,EAAOC,GAAS,aAAa,SAASgmJ,IAAW,CAAC,SAASC,EAASpyI,GAAG,OAAOA,CAAC,CAAC9T,EAAOC,QAAQ,SAASD,GAAQ,IAAI2E,EAAS,CAAC2V,IAAI2rI,EAASjuI,MAAMiuI,EAAS71E,OAAO61E,EAASE,UAAUF,EAASnF,mBAAmBoF,EAAS/E,eAAe+E,EAASE,UAAUF,GAAU,GAAGtxI,OAAOC,KAAKlQ,GAAU0hJ,OAAM,SAASzhJ,GAAK,OAAO5E,EAAO4E,EAAI,IAAI,MAAM,IAAIiE,MAAM,2FAAgL,OAArF+L,OAAOC,KAAKlQ,GAAUH,SAAQ,SAASI,GAAK5E,EAAO4E,GAAK5E,EAAO4E,IAAMD,EAASC,EAAI,IAAU5E,CAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASm6E,EAAQn6E,EAAOC,GAAS,aAAa,IAA+BqmJ,EAAUnsE,EAAQ,gBAAoBu/D,EAASv/D,EAAQ,gBAAoB6lE,EAAQ7lE,EAAQ,qBAAuDosE,EAArBpsE,EAAQ,aAAyCosE,mBAAuBhJ,EAAOpjE,EAAQ,aAA+V,SAASqsE,EAAkC9jJ,GAAS,IAAIg7H,EAAKh7H,EAAQg7H,KAASh1H,EAAI,IAAI60I,EAAOgC,gBAAgB,0CAA4O,MAAlM72I,EAAIkqF,WAAW,CAACzxF,GAAG,yCAAyCg9I,YAAY,YAAYzgB,EAAK,GAAGx6H,MAAM,2BAA2Bw6H,EAAK,GAAGx6H,MAAM,IAAIujJ,WAAW/oB,EAAK,GAAGx6H,MAAMwjJ,WAAWhpB,EAAK,GAAGx6H,OAAawF,CAAG,CAAC,SAASi+I,EAAmBlJ,GAAM,OAAOA,EAAKmJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAI/9I,MAAM,uDAAuD40I,EAAKmJ,SAAS,KAAK,CAAC,SAASC,EAAShH,GAAQ,GAAmB,IAAhBA,EAAOn5I,OAAY,MAAM,GAA4C,IAAzC,IAAIogJ,EAAU,EAAMC,EAAWlH,EAAO,GAAW/rI,EAAE,EAAEA,EAAE+rI,EAAOn5I,OAAOoN,IAAI,CAAC,IAAIkzI,EAAanH,EAAO/rI,GAAoD,GAAe,KAAhEgzI,GAAWH,EAAmBK,EAAavJ,OAAuB,CAAIuJ,EAAavJ,KAAKv6I,QAAQ6jJ,EAAWtJ,KAAKv6I,OAAiC,KAA1B8jJ,EAAavJ,KAAKv6I,OAAYsjJ,EAAkC,CAAC9oB,KAAK,CAACqpB,EAAWtJ,KAAKuJ,EAAavJ,QAAQ,IAAIwJ,EAAMJ,EAAShH,EAAOlsI,MAAMG,EAAE,IAC9v+B,MAAM,CAAC,CAACizI,EAAWC,IAAez+H,OAAO0+H,EAAM,CAAC,CAAC,IAAIxJ,EAAKsJ,EAAWtJ,MAD857B,SAAqC/6I,GAAS,IAAIkkJ,EAASlkJ,EAAQkkJ,SAAa/mH,EAAa,UAAX+mH,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAel+I,EAAI,IAAI60I,EAAOgC,gBAAgB2H,EAAE,SAAaryB,EAAInyH,EAAQ+6I,KAAKv6I,MAA2F,MAArFwF,EAAIkqF,WAAW,CAACzxF,GAAG0+B,EAAE,QAAQs+G,YAAY,qBAAqBtpB,EAAI,OAAOh1F,EAAEyjH,KAAKzuB,GAAWnsH,CAAG,CAC1u8By+I,CAA4B,CAAC1J,KAAKA,EAAKmJ,SAASnJ,EAAKmJ,UAAU,CAAC,IAAItE,EAAgB,CAAC56I,KAAK,kBAAkB0+I,UAAU,SAAmB3qB,EAAO2rB,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAAcvG,EAAOsG,EAD+86B,aAC376B1qB,GAAQokB,EAAOA,EAAOnxI,KAAI,SAAS44I,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnChH,EAAOyG,EAAUzG,IAAuC2H,EAAcD,EAAM74I,KAAI,SAAS+4I,GAAM,IAAIC,EAASD,EAAK,GAAGhK,KAAKiK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmB9qB,EAAO9nH,MAAM8zI,EAAK,GAAGrK,OAAOqK,EAAK,GAAGrK,UAAasK,EAA4K,CAAnHhO,EAASj0F,QAAQg2E,EAAOisB,EAASD,EAAK,GAAGrK,QAAkB1D,EAASh0F,SAAS+1E,EAAOisB,EAASD,EAAK,GAAGrK,SAA9I,CAACqK,EAAK,GAAGrK,OAAOqK,EAAK,GAAGrK,OAAgJ,IAAOuK,EAAiB,EAAMC,OAAW,EAAO,OAAOnsB,EAAOsgB,QAAO,SAAS8L,EAAUpK,EAAK3pI,GAAG,IAAIg0I,EAAOH,EAAiBJ,EAAM7gJ,QAAQ8gJ,EAAcG,GAAkB,IAAI7zI,EAAM2zI,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAUhjJ,KAAK44I,GAAaoK,EAAiH,GAApGE,EAAa,KAAKj0I,IAAG8zI,EAAW,IAAMH,EAAK,GAAGrK,SAAStpI,GAAG2zI,EAAK,GAAGrK,SAAStpI,GAAG8zI,EAAW/iJ,KAAK44I,GAASsK,EAAa,KAAKj0I,EAAE,CAAC,IAAIk0I,EAASvsB,EAAOgsB,EAAK,GAAGrK,eAAe4K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAUhjJ,KAAKmjJ,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAG7nJ,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQsC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,GAAG,oBAAoB,GAAG,YAAY,KAAK,GAAG,CAAC,SAASnoE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIy5I,EAASv/D,EAAQ,gBAAoB+tE,EAAe,oBAAwBlI,EAAQ7lE,EAAQ,qBAAyBguE,EAAW,OAAWhG,EAAW,CAACz6I,KAAK,aAAasQ,MAAM,SAAeowI,GAAoB,IAAIpoJ,EAAOmoJ,EAAehmJ,EAAK,cAAc,MAA2B,MAAxBimJ,EAAmB,GAAgB,CAACjmJ,KAAKA,EAAKe,MAAMklJ,EAAmB/jG,OAAO,GAAGqjG,SAAS,OAAO1nJ,OAAOA,EAAO4mJ,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAACjmJ,KAAKA,EAAKe,MAAMklJ,EAAmB/jG,OAAO,GAAGqjG,SAAS,OAAO1nJ,OAAOA,EAAO4mJ,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAACjmJ,KAAKA,EAAKe,MAAMklJ,EAAmB/jG,OAAO,GAAGrkD,OAAOA,EAAO4mJ,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAACjmJ,KAAKA,EAAKe,MAA9HklJ,EAAmB30I,QAAQy0I,EAAe,MAAgGR,SAA7EU,EAAmB30I,QAAQy0I,EAAe,MAAqDloJ,OAAOA,EAAO4mJ,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAU7sB,GAAQ,GAAe,eAAZ6sB,EAAiC,OAAO7sB,EAAOsgB,QAAO,SAASre,EAAK+f,EAAKL,GAAqG,MAA9E,gBAAZK,EAAKt7I,MAAsBs7I,EAAKz9I,SAASmoJ,GAAYzqB,EAAK74H,KAAK,CAAC44I,KAAKA,EAAKL,OAAOA,IAAgB1f,CAAI,GAAE,GAAG,EAAEttD,OAAO,SAAgBqtE,EAAK/6I,GAAS,GAAgB,iBAAZ+6I,EAAKt7I,MAAsBs7I,EAAKz9I,SAASmoJ,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjE7lJ,EAAQ8lJ,aAAaC,SAAShL,EAAKv6I,OAAzQ,SAAkB4xH,GAAO,IAAI0zB,EAAa9lJ,EAAQ8lJ,aAAaE,sBAAsB5zB,EAAM2oB,EAAKv6I,OAAOqlJ,EAAW1jJ,KAAKnC,EAAQ0tE,OAAOspE,EAASiE,aAAa,CAAC,EAAEj7I,EAAQ,CAACu9I,SAASxC,EAAKwK,UAAUvqB,KAAK,CAAC,EAAE8qB,aAAaA,KAAgB,GAAmD/K,EAAK4K,UAAgB,CAACnlJ,MAAMqlJ,EAAW15I,KAAK,IAAI,GAAG7O,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQmC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAAShoE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAASv/D,EAAQ,gBAAoBojE,EAAOpjE,EAAQ,aAAiBguE,EAAW,SAAanI,EAAQ7lE,EAAQ,qBAAkW,SAASwuE,EAASvB,GAAM,IAAI3J,EAAK2J,EAAK3J,KAAKtpC,EAAKizC,EAAKjzC,KAAK5L,EAAM6+C,EAAK7+C,MAAMqgD,EAAWxB,EAAKwB,WAAWt8I,EAAM86I,EAAK96I,MAAUu8I,EAAeD,EAAWj1I,MAAMwgG,EAAK,EAAE5L,GAAsO,OAA/NsgD,EAAerkJ,SAAQ,SAAS+d,EAAEzO,GAAMA,IAAIxH,EAAM6nG,EAAK,IAAsB,gBAAT5xF,EAAEpgB,MAA+B,YAATogB,EAAEpgB,MAA+B,cAAbogB,EAAErhB,WAAxmB,SAAgDwB,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,gDAAoD1qB,EAAInyH,EAAQ+6I,KAAKv6I,MAAkK,MAA5JwF,EAAIkqF,WAAW,CAACzxF,GAAG,+CAA+Cg9I,YAAY,WAAWtpB,EAAIyuB,KAAK5gJ,EAAQ+6I,KAAKv6I,MAAM2lJ,eAAenmJ,EAAQmmJ,gBAAsBngJ,CAAG,CAAoTogJ,CAAuC,CAACD,eAAeA,EAAepL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIsL,EAAa,WAAW,SAASA,KAA5hC,SAAyBn+F,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgB16I,KAAKwoJ,GAAcxoJ,KAAKmH,KAAK,cAAc,CAAyvB,OAAxvBoyI,EAAaiP,EAAa,CAAC,CAACnkJ,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQm3I,GAAgE,OAAjDt5I,KAAK4/I,eAAetG,EAAcsG,eAAsBz9I,CAAO,GAAG,CAACkC,IAAI,QAAQ1B,MAAM,SAAeklJ,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAACjmJ,KAAjE,cAA2Ee,MAAMklJ,EAAmB/jG,OAAO,GAAGrkD,OAAOmoJ,EAAW,GAAG,CAACvjJ,IAAI,YAAY1B,MAAM,SAAmBu4H,GAAQ,OAAOie,EAASmG,OAAOmJ,YAAYvtB,EAAO,CAAC0sB,WAAWA,EAAWQ,SAASA,EAASjB,SAASnnJ,KAAK4/I,eAAeuC,WAAW,GAAG,CAAC99I,IAAI,SAAS1B,MAAM,SAAgBu6I,EAAK/6I,GAAS,GAAG+6I,EAAKz9I,SAASmoJ,EAAY,OAAO,KAAK,IAAIjlJ,EAAMR,EAAQ8lJ,aAAah8I,SAASixI,EAAKv6I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQ86I,WAAWC,IAAY,CAACv6I,MAAMA,EAAM,KAAY6lJ,CAAY,CAA12B,GAA82B/oJ,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQ,IAAI+I,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAAS5uE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI2F,EAAQ7lE,EAAQ,qBAAyB8uE,EAAO,WAAW,SAASA,KAAxN,SAAyBr+F,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgB16I,KAAK0oJ,GAAQ1oJ,KAAKmH,KAAK,QAAQ,CAA4V,OAA3VoyI,EAAamP,EAAO,CAAC,CAACrkJ,IAAI,MAAM1B,MAAM,SAAaqV,GAAQA,EAAI0nI,WAAU1/I,KAAK0/I,SAAS1nI,EAAI0nI,UAAsB,MAAV1nI,EAAInO,OAAY7J,KAAK6J,KAAKmO,EAAInO,KAAK,GAAG,CAACxF,IAAI,iBAAiB1B,MAAM,SAAwBg+I,GAAQ,IAAIrqF,EAAMt2D,KAAK,OAAOqU,OAAOC,KAAKtU,KAAK0/I,UAAUlE,QAAO,SAASmF,EAAOz2G,GAA+C,OAAzCy2G,EAAOz2G,GAAM,CAACA,KAAKA,EAAKrgC,KAAKysD,EAAMzsD,MAAa82I,CAAM,GAAEA,EAAO,KAAY+H,CAAM,CAArb,GAAybjpJ,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQ,IAAIiJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAAS9uE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI+/I,EAAQ7lE,EAAQ,qBAAyB+uE,EAAc,CAACxhJ,KAAK,sBAAsB0+I,UAAU,SAAmB3qB,GAAQ,IAAIxzE,EAAM,GAAOkhG,GAAQ,EAAU96I,EAAOotH,EAAOsgB,QAAO,SAAStgB,EAAOgiB,GAA8X,MAAzW,QAAZA,EAAKt7I,MAA8B,UAAhBs7I,EAAKv8I,UAAoBu8I,EAAK7uI,MAAmB,UAAb6uI,EAAKv6I,QAAiBimJ,GAAQ,GAAQA,GAAwB,gBAAZ1L,EAAKt7I,MAAuBs7I,EAAKz9I,SAAQioD,EAAM,GAAG/kD,MAAM,8BAA6B+kD,EAAMpjD,KAAK44I,IAAWhiB,EAAO52H,KAAK44I,GAAqB,QAAZA,EAAKt7I,MAA8B,QAAhBs7I,EAAKv8I,UAAkBu8I,EAAK7uI,MAAmB,WAAb6uI,EAAKv6I,QAAkBwK,MAAMyvC,UAAUt4C,KAAK+nC,MAAM6uF,EAAOxzE,GAAOkhG,GAAQ,EAAMlhG,EAAM,IAAUwzE,CAAM,GAAE,IAA6C,OAAzC/tH,MAAMyvC,UAAUt4C,KAAK+nC,MAAMv+B,EAAO45C,GAAc55C,CAAM,GAAGrO,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQkJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAAS/uE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIy5I,EAASv/D,EAAQ,eAAmBM,EAAO,CAAC2rE,UAAU,SAAmB3qB,EAAOykB,GAAS,SAASiG,EAAUmC,EAAU7sB,GAAQ,OAAOykB,EAAQxxI,KAAI,SAAS1O,GAAQ,OAAOA,EAAOmmJ,UAAUmC,EAAU7sB,EAAO,GAAE,CAA6J,OAA5J,SAAS2qB,EAAU3qB,GAAQ,OAAOykB,EAAQnE,QAAO,SAAStgB,EAAOz7H,GAAQ,OAAOA,EAAOomJ,UAAU3qB,EAAO,CAAC2qB,UAAUA,EAAUD,UAAUA,GAAW,GAAE1qB,EAAO,CAAQ2qB,CAAU3qB,EAAO,EAAEzjH,MAAM,SAAeoxI,EAAMlJ,GAAyQ,IAAImJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMrN,QAAO,SAAStgB,EAAO8tB,GAAO,MAAgB,cAAbA,EAAMpnJ,MAAoBknJ,EAA+B,UAAjBE,EAAMroJ,SAAuC,QAAjBqoJ,EAAMroJ,UAA/b,SAAqBknJ,EAAmB3sB,GAAgC,IAAxB,IAAI+tB,OAAa,EAAe11I,EAAE,EAAEiB,EAAEmrI,EAAQx5I,OAAOoN,EAAEiB,EAAEjB,IAA2E,GAA/C01I,EAAXtJ,EAAQpsI,GAAwBkE,MAAMowI,GAA+D,OAA1B3sB,EAAO52H,KAAK2kJ,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmB1O,EAASqF,WAAWqJ,GAAuD3sB,IAASA,EAAO52H,KAAK,CAAC1C,KAAK,cAAce,MAAMklJ,IAAqB16I,MAAMyvC,UAAUt4C,KAAK+nC,MAAM6uF,EAAO6tB,GAAWA,EAAU,GAAU7tB,IAAO2sB,EAAmB,GAAU3sB,IAAU4tB,GAA+B,YAAbE,EAAMpnJ,MAAmC,cAAjBonJ,EAAMroJ,SAAwBknJ,GAAoBmB,EAAMrmJ,MAAWomJ,EAAUzkJ,KAAK0kJ,GAAc9tB,IAAOA,EAAO52H,KAAK0kJ,GAAc9tB,EAAM,GAAE,GAAG,GAAGz7H,EAAOC,QAAQw6E,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASN,EAAQn6E,EAAOC,GAAS,aAAa,IAAIypJ,EAAavvE,EAAQ,mBAAuBu/D,EAASv/D,EAAQ,eAAu1Bn6E,EAAOC,QAAjmB,SAASmwE,EAAO1tE,GAA2J,OAAlJA,EAAQ0tE,OAAOA,EAAO1tE,EAAQw9I,QAAQx9I,EAAQw9I,QAAYx9I,EAAQ8lJ,eAAc9lJ,EAAQ8lJ,aAAakB,EAAaC,uBAAuBjnJ,IAAgBA,EAAQu9I,SAASvxI,KAAI,SAAS+uI,GAAM,IAAImM,EAAxc,SAAsBnM,EAAK/6I,GAAmC,IAA1B,IAAIknJ,OAAe,EAAe91I,EAAE,EAAEiB,EAAErS,EAAQw9I,QAAQx5I,OAAOoN,EAAEiB,EAAEjB,IAAgF,GAA5C81I,EAAnBlnJ,EAAQw9I,QAAQpsI,GAA0Bs8D,OAAOqtE,EAAK/6I,GAA4B,OAAOknJ,EAAgB,OAAO,CAAK,CAA0OC,CAAapM,EAAK/6I,GAAS,GAAGknJ,EAAgB,OAAOA,EAAe1mJ,MAAM,GAAe,gBAAZu6I,EAAKt7I,KAAqB,CAAC,IAAIe,EAAMR,EAAQ8lJ,aAAah8I,SAASixI,EAAKv6I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQ86I,WAAWC,IAAa/D,EAASsF,WAAW97I,EAAM,CAAC,GAAe,YAAZu6I,EAAKt7I,MAA8B,QAAZs7I,EAAKt7I,KAAc,OAAOs7I,EAAKv6I,MAAM,MAAM,IAAI2F,MAAM,2BAA2B40I,EAAKt7I,KAAK,IAAI,IAAG0M,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASsrE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIkD,EAAOpjE,EAAQ,YAAgBuvE,EAAa,WAAW,SAASA,EAAahnJ,IAAjO,SAAyBkoD,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgB16I,KAAKmpJ,GAAcnpJ,KAAKupJ,UAAUpnJ,EAAQonJ,UAAUvpJ,KAAKm1B,UAAUhzB,EAAQgzB,UAAUn1B,KAAKk6E,OAAO/3E,EAAQ+3E,MAAM,CAAmmE,OAAlmEq/D,EAAa4P,EAAa,CAAC,CAAC9kJ,IAAI,WAAW1B,MAAM,SAAkB2xH,EAAIziH,EAASi2I,GAAmC,OAAzBA,EAASA,IAAU,EAAa9nJ,KAAKwpJ,cAAcxpJ,KAAKiM,SAASqoH,GAAKziH,EAASi2I,EAAS,GAAG,CAACzjJ,IAAI,oBAAoB1B,MAAM,SAA2BmlJ,EAAS2B,EAAQ9mJ,GAAUmlJ,GAAU2B,EAAQ9mJ,EAAO,GAAG,CAAC0B,IAAI,eAAe1B,MAAM,SAAsBA,EAAMf,GAAM,OAAc,MAAPe,IAAcA,GAAc,mBAAPf,GAAwC,IAAfe,EAAMwD,MAAU,GAAG,CAAC9B,IAAI,gBAAgB1B,MAAM,SAAuBA,EAAM8mJ,EAAQ3B,GAAU,IAAIlmJ,EAAKyS,OAAOuoC,UAAUhoC,SAASioC,KAAKl6C,GAAW+mJ,EAAa1pJ,KAAKm1B,UAAUn1B,KAAK2pJ,KAAK,GAAG3pJ,KAAK4pJ,aAAajnJ,EAAMf,GAAO,OAAO5B,KAAK6pJ,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAP9nJ,EAAqI,MAAU,oBAAPA,EAAiC5B,KAAK6pJ,mBAAmB/B,EAAS2B,EAAQ9mJ,IAAkB,IAARA,EAAqB3C,KAAK6pJ,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQn1B,EAAJhhH,EAAE,EAAQA,EAAE5Q,EAAMwD,OAAOoN,IAAKghH,EAAM5xH,EAAM4Q,GAAGvT,KAAK6pJ,mBAAmB/B,EAAS2B,EAAQl1B,EAAiL,GAAG,CAAClwH,IAAI,WAAW1B,MAAM,SAAkB2xH,EAAIq1B,GAAK3pJ,KAAK2pJ,IAAS,MAALA,EAAU3pJ,KAAKm1B,UAAUhvB,OAAO,EAAEwjJ,EAAI,IAAIxhJ,OAAI,EAAW+xE,OAAO,EAAWpsE,OAAO,EAAWymH,EAAMv0H,KAAKm1B,UAAUn1B,KAAK2pJ,KAAK,IAAIzvE,EAAOl6E,KAAKk6E,OAAOo6C,EAAkP,CAA7O,MAAM/kH,GAA8N,MAAvNpH,EAAI,IAAI60I,EAAO0E,mBAAmB,oCAAuCrvD,WAAW,CAACzxF,GAAG,iCAAiC0zH,IAAIA,EAAIspB,YAAY,gCAAgCtpB,EAAI,qBAAqBw1B,UAAUv6I,GAAapH,CAAG,CAAC,IAAI2F,EAAOosE,EAAOrkE,IAAI0+G,EAAM,CAACo1B,IAAI3pJ,KAAK2pJ,IAAIx0H,UAAUn1B,KAAKm1B,WAAiQ,CAArP,MAAM5lB,GAAsO,MAA/NpH,EAAI,IAAI60I,EAAO0E,mBAAmB,kCAAqCrvD,WAAW,CAACzxF,GAAG,+BAA+Bg9I,YAAY,gCAAgCtpB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAIw1B,UAAUv6I,GAAapH,CAAG,CAAC,OAAW,MAAR2F,GAAc9N,KAAK2pJ,IAAI,EAAU3pJ,KAAKiM,SAASqoH,EAAIt0H,KAAK2pJ,IAAI,GAAU77I,CAAM,GAAG,CAACzJ,IAAI,wBAAwB1B,MAAM,SAA+B4xH,EAAMD,GAAK,IAAInyH,EAAQ,CAAConJ,UAAUvpJ,KAAKupJ,UAAUn2I,MAAM,GAAG+hB,UAAUn1B,KAAKm1B,UAAU/hB,MAAM,IAA2H,OAAvHjR,EAAQ+3E,OAAOl6E,KAAKk6E,OAAO/3E,EAAQgzB,UAAUn1B,KAAKm1B,UAAUnN,OAAOusG,GAAOpyH,EAAQonJ,UAAUvpJ,KAAKupJ,UAAUvhI,OAAOssG,GAAY,IAAI60B,EAAahnJ,EAAQ,KAAYgnJ,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAI3sE,EAAO2sE,EAAK3sE,OAAOijD,EAAK0pB,EAAK1pB,KAASh7H,EAAQ,CAAC+3E,OAAOA,EAAOijD,KAAKA,EAAMh7H,UAAkB,IAA4B,OAAzBA,EAAQgzB,UAAU,CAACgoG,GAAa,IAAIgsB,EAAahnJ,EAAQ,EAAE1C,EAAOC,QAAQypJ,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAASvvE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIy5I,EAASv/D,EAAQ,eAAmBojE,EAAOpjE,EAAQ,YAAgR,SAASmwE,EAAiBnL,EAAMtqB,GAAK,GAAkB,IAAfsqB,EAAMz4I,OAAY,OAAO,EAAM,IAAsC6jJ,EAA1BpL,EAAMA,EAAMz4I,OAAO,GAA4BmuH,IAAIxwE,OAAO,GAAOmmG,EAAgB31B,EAAIxwE,OAAO,EAAEwwE,EAAInuH,OAAO,GAAG,OAA+C,IAAxC6jJ,EAAa38I,QAAQ48I,EAAoB,CAAC,SAASC,EAAOtL,EAAMtqB,GAA2B,OAAtBsqB,EAAMt6I,KAAK,CAACgwH,IAAIA,IAAasqB,CAAK,CAAqkB,SAASuL,EAAUjN,EAAKmL,EAAWlmJ,GAAS,IAAIglJ,EAASjK,EAAKiK,UAAUhlJ,EAAQglJ,SAAap7I,EAAMs8I,EAAWh7I,QAAQ6vI,GAAM,IAAIiK,EAAU,OAAOkB,EAAW,IAAIrgD,OAAM,EAAO4L,OAAK,EAAO,IAAI5L,EAAMmxC,EAASh0F,SAASkjG,EAAWlB,EAASp7I,GAAO6nG,EAAKulC,EAASj0F,QAAQmjG,EAAWlB,EAASp7I,EAAkF,CAA3E,MAAM+9I,IAA75C,SAAmC3nJ,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,4BAAgC1qB,EAAInyH,EAAQ+6I,KAAKv6I,MAA0H,MAApHwF,EAAIkqF,WAAW,CAACzxF,GAAG,2BAA2Bg9I,YAAY,YAAYtpB,EAAI,IAAIw1B,UAAU3nJ,EAAQ2nJ,UAAU/G,KAAKzuB,GAAWnsH,CAAG,CAAqqCiiJ,CAA0B,CAAClN,KAAKA,EAAK4M,UAAUA,GAAW,CAAC,IAAIO,EAAUhC,EAAWj1I,MAAMwgG,EAAK7nG,GAAWu+I,EAAWjC,EAAWj1I,MAAMrH,EAAM,EAAEi8F,EAAM,GAAOuiD,EAAMpoJ,EAAQimJ,SAAS,CAACr8I,MAAMA,EAAMmxI,KAAKA,EAAKmN,UAAUA,EAAUC,WAAWA,EAAW12C,KAAKA,EAAK5L,MAAMA,EAAMqgD,WAAWA,IAA2H,MAArD,mBAAhDh0I,OAAOuoC,UAAUhoC,SAASioC,KAAK0tG,KAAmCA,EAAMpR,EAASuF,aAAa6L,IAAcpR,EAASuF,aAAa,CAAC2J,EAAWj1I,MAAM,EAAEwgG,GAAM,CAAC22C,GAAOlC,EAAWj1I,MAAM40F,EAAM,IAAI,CAA4TvoG,EAAOC,QAAQ,CAAC+oJ,YAA3U,SAAqBJ,EAAWlmJ,GAAyQ,OAA3OkmJ,EAAW7M,QAAO,SAAStyI,EAASg0I,GAA0F,MAArE,gBAAZA,EAAKt7I,MAAsBs7I,EAAKz9I,SAAS0C,EAAQylJ,YAAY1+I,EAAS5E,KAAK44I,GAAah0I,CAAQ,GAAE,IAAqBjF,SAAQ,SAASi5I,GAAMmL,EAAW8B,EAAUjN,EAAKmL,EAAWlmJ,EAAQ,IAAUkmJ,CAAU,EAAyCrC,mBAAn1C,SAA4Bv9H,GAAiD,IAA1C,IAAI+hI,EAAvZ,SAA4B/hI,GAA4H,IAArH,IAAiI6rG,EAA7H6I,EAAK10G,EAAM3f,QAAO,SAASo0I,GAAM,MAAmB,QAAZA,EAAKt7I,IAAY,IAAGuM,KAAI,SAAS+uI,GAAM,OAAOA,EAAKv6I,KAAK,IAAOmL,EAAO,GAAWyF,EAAE,EAAMA,EAAE4pH,EAAKh3H,OAAOoN,IAA6B,OAAxB+gH,EAAI6I,EAAK5pH,IAAU,GAAaw2I,EAAiBj8I,EAAOwmH,GAAMxmH,EAAO6iC,MAAW7iC,EAAOo8I,EAAOp8I,EAAOwmH,GAAkC,MAApBA,EAAIA,EAAInuH,OAAO,KAAU2H,EAAOo8I,EAAOp8I,EAAOwmH,IAAM,OAAOxmH,CAAM,CAAoD28I,CAAmBhiI,GAAelV,EAAE,EAAEA,EAAEi3I,EAAYrkJ,OAAOoN,IAAmC,GAAqC,IAApDi3I,EAAYj3I,GAAiB+gH,IAAIjnH,QAAQ,SAAc,MAAM,OAAQ,OAAO,CAAK,EAAsqC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASusE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIy5I,EAASv/D,EAAQ,eAAo7C,IAAI8wE,EAA75C9wE,EAAQ,YAA85CkjE,EAAxe,SAAoB1oE,EAAQu2E,GAAc,IAAIrwI,EAAI,CAAC,EAAEA,EAAI85D,QAAQA,EAAQ95D,EAAIqwI,aAAaA,EAAarwI,EAAIswI,mBAAmBtwI,EAAIqwI,aAAar8I,KAAK,KAAK,IAAIu4C,EAAO,IAAIvkC,OAAO,QAAQhI,EAAIswI,mBAAmB,wBAAwBtwI,EAAIswI,mBAAmB,KAAK,KAAyL,OAApLtwI,EAAIkqI,QAAQrL,EAAS8F,aAAap4F,EAAOvsC,EAAI85D,SAAS95D,EAAIuwI,0BAA0BvwI,EAAIkqI,QAAQr2I,KAAI,WAAW,OAAO,CAAC,IAAGmM,EAAIwwI,gBAAgBxwI,EAAIkqI,QAAQr2I,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6BmM,GAAK,SAASywI,IAAkB,IAAIC,EAAG,CAACpM,MAAMzxI,MAAMyvC,UAAUxpC,MAAMypC,KAAK5pC,YAAY+3I,EAAGpM,MAAMnqI,QAAQ,IAAIuxB,EAAMglH,EAAGpM,MAAM,GAAGoM,EAAGpM,MAAM,GAAGoM,EAAGpM,MAAMrrH,QAAQyS,GAAOglH,EAAGpM,MAAMjuG,MAAM,IAAIksG,EAAOmO,EAAGpM,MAAMjuG,MAA4F,OAAtFq6G,EAAGnO,OAAOA,EAAOmO,EAAG3rH,OAAM,EAAK/kB,EAAIkqI,QAAQjxH,QAAQy3H,GAAI1wI,EAAIwwI,gBAAgBv3H,QAAQ,GAAUjZ,EAAIuwI,0BAA0Bt3H,QAAQ,EAAE,EAAgC,IAA5BjZ,EAAI85D,QAAQ/mE,QAAQ,OAAuC,IAA5BiN,EAAI85D,QAAQ/mE,QAAQ,MAAWiN,EAAI85D,QAAQlhE,QAAQ,eAAe63I,GAAiB,IAAIn7I,EAAE,IAAI0S,OAAO,kBAAkBhI,EAAIswI,mBAAmB,MAAmY,OAA7XtwI,EAAI85D,QAAQlhE,QAAQtD,EAAEm7I,GAAmQn7I,EAAE,IAAI0S,OAAO,QAAQhI,EAAIswI,mBAAmB,oBAAoBtwI,EAAI85D,QAAQlhE,QAAQtD,GAAtU,WAAwB,IAAIo7I,EAAG,CAACpM,MAAMzxI,MAAMyvC,UAAUxpC,MAAMypC,KAAK5pC,YAAY+3I,EAAGpM,MAAMjuG,MAAM,IAAIksG,EAAOmO,EAAGpM,MAAMjuG,MAAqF,OAA/Eq6G,EAAGnO,OAAOA,EAAOmO,EAAGC,MAAK,EAAK3wI,EAAIkqI,QAAQlgJ,KAAK0mJ,GAAI1wI,EAAIwwI,gBAAgBxmJ,KAAK,GAAUgW,EAAIuwI,0BAA0BvmJ,KAAK,EAAE,IAA4GgW,CAAG,CAAmc4wI,CAAoB5wI,EAAI,IAAkC7a,EAAOC,QAAQ,SAAS00E,EAAQu2E,GAAc,OAAOxR,EAASzzI,UAAUglJ,EAASt2E,EAAQu2E,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAAS/wE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAASv/D,EAAQ,eAAmBuvE,EAAavvE,EAAQ,mBAAuBuxE,EAAWvxE,EAAQ,iBAAqBojE,EAAOpjE,EAAQ,YAAgBwxE,EAAMxxE,EAAQ,WAAeyxE,EAAOzxE,EAAQ,eAAmB0xE,EAAQ1xE,EAAQ,eAAmPn6E,EAAOC,QAAQ,WAAW,SAAS0hJ,EAAahtE,EAAQjyE,IAArqB,SAAyBkoD,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgB16I,KAAKohJ,GAAcphJ,KAAKurJ,SAASppJ,GAASnC,KAAKwrJ,WAAW,CAACC,QAAQ,CAACxK,SAASjhJ,KAAKihJ,YAAYjhJ,KAAKi0B,KAAKmgD,EAAQ,CAAwsD,OAAvsDmlE,EAAa6H,EAAa,CAAC,CAAC/8I,IAAI,OAAO1B,MAAM,SAAcyxE,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAIjsE,EAAI,IAAI60I,EAAO2E,gBAAgB,4BAAoF,MAAxDx5I,EAAIkqF,WAAWzxF,GAAG,sCAA4CuH,CAAG,CAACnI,KAAKo0E,QAAQA,CAAO,GAAG,CAAC/vE,IAAI,UAAU1B,MAAM,SAAiBw6H,GAA8H,OAAxHn9H,KAAKm9H,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAEn9H,KAAKioJ,aAAakB,EAAaC,uBAAuB,CAACjsB,KAAKn9H,KAAKm9H,KAAKjjD,OAAOl6E,KAAKk6E,SAAgBl6E,IAAI,GAAG,CAACqE,IAAI,WAAW1B,MAAM,SAAkBR,GAASnC,KAAKihJ,SAAS9+I,EAAQ8+I,SAASjhJ,KAAK2/I,QAAQx9I,EAAQw9I,QAAQ3/I,KAAK4/I,eAAez9I,EAAQy9I,eAAevrI,OAAOC,KAAK6kI,EAAS/0I,UAAU+J,KAAI,SAAS9J,GAAKrE,KAAKqE,GAAmB,MAAdlC,EAAQkC,GAAWlC,EAAQkC,GAAK80I,EAAS/0I,SAASC,EAAI,GAAErE,KAAK,GAAG,CAACqE,IAAI,cAAc1B,MAAM,WAAuB,OAA/nCyxE,EAAmpCp0E,KAAKo0E,QAAhpCu2E,EAAwpC3qJ,KAAK4/I,eAAeqC,iBAA7mCn0I,EAArCq9I,EAAW/2E,EAAQu2E,GAAiCnG,QAAQr2I,KAAI,SAAS63B,GAAO,OAAOA,EAAM44G,MAAM,EAAE,IAAUzF,EAASqF,WAAWrF,EAASwE,cAAc7vI,EAAOQ,KAAK,MAA9N,IAAsB8lE,EAAQu2E,EAA+D78I,CAA8nC,GAAG,CAACzJ,IAAI,aAAa1B,MAAM,SAAoBqV,GAAKhY,KAAK2/I,QAAQ17I,SAAQ,SAASxE,GAAQA,EAAOsa,IAAI/B,EAAI,GAAE,GAAG,CAAC3T,IAAI,QAAQ1B,MAAM,WAAyc,OAAxb3C,KAAK0rJ,SAASN,EAAM9G,SAAStkJ,KAAKo0E,QAAQ,CAAC/lE,KAAKrO,KAAK4/I,eAAeqC,iBAAiBgD,MAAMjlJ,KAAK4/I,eAAesC,oBAAoBliJ,KAAKwrJ,WAAW,CAACC,QAAQ,CAACC,SAAS1rJ,KAAK0rJ,YAAY1rJ,KAAK6oJ,MAAMuC,EAAM3zI,MAAMzX,KAAK0rJ,SAAS1rJ,KAAKm9I,YAAYn9I,KAAKwrJ,WAAW,CAACC,QAAQ,CAAC5C,MAAM7oJ,KAAK6oJ,SAAS7oJ,KAAKk7H,OAAOmwB,EAAO5zI,MAAMzX,KAAK6oJ,MAAM7oJ,KAAK2/I,SAAS3/I,KAAKwrJ,WAAW,CAACC,QAAQ,CAACvwB,OAAOl7H,KAAKk7H,UAAUl7H,KAAKqoJ,WAAWgD,EAAOxF,UAAU7lJ,KAAKk7H,OAAOl7H,KAAK2/I,SAAgB3/I,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAsR,OAApQ3C,KAAKwrJ,WAAW,CAACC,QAAQ,CAACpD,WAAWroJ,KAAKqoJ,cAAcroJ,KAAKo0E,QAAQk3E,EAAQ,CAAC5L,SAAS1/I,KAAKqoJ,WAAWlrB,KAAKn9H,KAAKm9H,KAAKwiB,QAAQ3/I,KAAK2/I,QAAQzlE,OAAOl6E,KAAKk6E,OAAO+iE,WAAWj9I,KAAKi9I,WAAWgE,SAASjhJ,KAAKihJ,WAAWjhJ,KAAKwrJ,WAAW,CAACC,QAAQ,CAACr3E,QAAQp0E,KAAKo0E,WAAkBp0E,IAAI,KAAYohJ,CAAY,CAA74D,EAAg5D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAASxnE,EAAQn6E,EAAOC,GAAS,SAASu2E,EAAU9zE,GAASnC,KAAKmC,QAAQA,GAAS,CAACwpJ,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAa5rJ,KAAK6rJ,OAAM,CAAK,CAAC,SAASlrJ,EAASgrJ,EAAQppJ,GAAMA,EAAKupJ,WAAWH,EAAQG,WAAWvpJ,EAAKwpJ,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAASx3I,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAEy3I,UAAU,IAAI,UAAUz3I,EAAEs3I,WAAW,QAAQt3I,EAAEu3I,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMp5H,EAAM5sB,GAAQ,MAAiB,iBAAPgmJ,EAAwBA,EAAMroG,OAAO/wB,EAAM5sB,GAAgBgmJ,EAAMhmJ,QAAQ4sB,EAAM5sB,GAAQ4sB,EAAc,IAAIq5H,KAAKxkF,KAAKxsD,OAAO+wI,EAAMp5H,EAAM5sB,GAAQ,GAAUgmJ,CAAM,CAAiP,SAASE,EAAcC,EAAO/pJ,GAAU+pJ,EAAOC,eAAkDD,EAAOC,eAAeh+D,YAAYhsF,GAApE+pJ,EAAO54B,IAAInlC,YAAYhsF,EAAmD,CAA3/I0zE,EAAUr5B,UAAUu5B,gBAAgB,SAASq2E,EAAOr3B,GAAU,IAAIhzH,EAAQnC,KAAKmC,QAAYsqJ,EAAI,IAAIC,EAAcC,EAAWxqJ,EAAQwqJ,YAAY,IAAIf,EAAe7N,EAAa57I,EAAQ47I,aAAiB4N,EAAQxpJ,EAAQwpJ,QAAYiB,EAAazqJ,EAAQ0qJ,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAI1O,aAA2a,SAA2BsP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI5O,EAAa,CAAC,EAAMuP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMnpJ,GAAK,IAAIqM,EAAG28I,EAAUhpJ,IAASqM,GAAI48I,IAAY58I,EAAqB,GAAlB28I,EAAUlnJ,OAAU,SAAS8Y,GAAKouI,EAAUhpJ,EAAI4a,EAAI,EAAEouI,GAAUtP,EAAa15I,GAAKqM,GAAI,SAASuO,GAAKvO,EAAG,WAAWrM,EAAI,MAAM4a,EAAI+sI,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqBzP,CAAY,CAAj7B0P,CAAkB1P,EAAa4O,EAAWhB,GAASc,EAAIE,WAAWxqJ,EAAQwqJ,YAAYA,EAAc,aAAapqI,KAAK4yG,KAAW23B,EAAUY,KAAK,IAAIZ,EAAU5vF,KAAK,IAAI0vF,EAAa,IAAI,gCAA+BA,EAAajjH,IAAIijH,EAAajjH,KAAK,uCAA0C6iH,EAAQC,EAAIh1I,MAAM+0I,EAAOI,EAAaE,GAAgBL,EAAI1O,aAAaxuI,MAAM,sBAA6Bo9I,EAAWj5B,GAAG,EAAuqBk4B,EAAWhvG,UAAU,CAAC+wG,cAAc,WAAW3tJ,KAAK0zH,KAAI,IAAKk6B,GAAmBC,eAAe,KAAK,KAAK,MAAS7tJ,KAAK2rJ,UAAS3rJ,KAAK0zH,IAAIo6B,YAAY9tJ,KAAK2rJ,QAAQM,SAAS,EAAEv+F,aAAa,SAASsuF,EAAa+R,EAAUC,EAAMjvI,GAAO,IAAI20G,EAAI1zH,KAAK0zH,IAAQlnH,EAAGknH,EAAIu6B,gBAAgBjS,EAAagS,GAAOD,GAAeG,EAAInvI,EAAM5Y,OAAOkmJ,EAAcrsJ,KAAKwM,GAAIxM,KAAKusJ,eAAe//I,EAAGxM,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQn/I,GAAI,IAAI,IAAI+G,EAAE,EAAEA,EAAE26I,EAAI36I,IAAI,CAAKyoI,EAAaj9H,EAAMovI,OAAO56I,GAA9B,IAAqC5Q,EAAMoc,EAAM9S,SAASsH,GAAmCsK,GAA5BmwI,EAAMjvI,EAAMqvI,SAAS76I,GAAYmgH,EAAI26B,kBAAkBrS,EAAagS,IAAOhuJ,KAAK2rJ,SAAShrJ,EAASoe,EAAMuvI,WAAW/6I,GAAGsK,GAAMA,EAAKlb,MAAMkb,EAAK0wI,UAAU5rJ,EAAM6J,EAAGgiJ,iBAAiB3wI,EAAK,CAAC,EAAE4wI,WAAW,SAASzS,EAAa+R,EAAUC,GAAO,IAAIU,EAAQ1uJ,KAAKusJ,eAA2BmC,EAAQ36B,QAAQ/zH,KAAKusJ,eAAemC,EAAQ/gE,UAAU,EAAEghE,mBAAmB,SAAS9zI,EAAO+zI,GAAK,EAAEC,iBAAiB,SAASh0I,GAAQ,EAAEi0I,sBAAsB,SAAStlG,EAAO3/C,GAAM,IAAIklJ,EAAI/uJ,KAAK0zH,IAAIs7B,4BAA4BxlG,EAAO3/C,GAAM7J,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQoD,GAAK1C,EAAcrsJ,KAAK+uJ,EAAI,EAAEE,oBAAoB,SAASC,EAAGn8H,EAAM5sB,GAAQ,EAAEgpJ,WAAW,SAAShD,EAAMp5H,EAAM5sB,GAA8C,GAAtCgmJ,EAAMD,EAAU7/G,MAAMrsC,KAAKiT,WAAoB,CAAC,GAAGjT,KAAK6rJ,MAAO,IAAIuD,EAASpvJ,KAAK0zH,IAAI27B,mBAAmBlD,QAAgBiD,EAASpvJ,KAAK0zH,IAAIplC,eAAe69D,GAAUnsJ,KAAKusJ,eAAgBvsJ,KAAKusJ,eAAeh+D,YAAY6gE,GAAkB,QAAQ7sI,KAAK4pI,IAAQnsJ,KAAK0zH,IAAInlC,YAAY6gE,GAAUpvJ,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAASnoJ,GAAM,EAAEooJ,YAAY,WAAWvvJ,KAAK0zH,IAAI87B,WAAW,EAAEpC,mBAAmB,SAASzB,IAAY3rJ,KAAK2rJ,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAE7gC,QAAQ,SAASkhC,EAAMp5H,EAAM5sB,GAAQgmJ,EAAMD,EAAU7/G,MAAMrsC,KAAKiT,WAAW,IAAIw8I,EAAKzvJ,KAAK0zH,IAAIg8B,cAAcvD,GAAOnsJ,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQ8D,GAAMpD,EAAcrsJ,KAAKyvJ,EAAK,EAAEE,WAAW,WAAW3vJ,KAAK6rJ,OAAM,CAAI,EAAE+D,SAAS,WAAW5vJ,KAAK6rJ,OAAM,CAAK,EAAEgE,SAAS,SAAS1oJ,EAAK2oJ,EAAS7D,GAAU,IAAI8D,EAAK/vJ,KAAK0zH,IAAIs8B,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmB9oJ,EAAK2oJ,EAAS7D,GAAUjsJ,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQuE,GAAI7D,EAAcrsJ,KAAKkwJ,EAAG,CAAC,EAAEC,QAAQ,SAAS5gJ,GAAO/G,QAAQC,KAAK,qBAAqB8G,EAAMy8I,EAAShsJ,KAAK2rJ,SAAS,EAAEp8I,MAAM,SAASA,GAAO/G,QAAQ+G,MAAM,mBAAmBA,EAAMy8I,EAAShsJ,KAAK2rJ,SAAS,EAAEyE,WAAW,SAAS7gJ,GAA2E,MAApE/G,QAAQ+G,MAAM,wBAAwBA,EAAMy8I,EAAShsJ,KAAK2rJ,UAAgBp8I,CAAK,GAA8T,+JAA+J2D,QAAQ,QAAO,SAAS7O,GAAKunJ,EAAWhvG,UAAUv4C,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAIqoJ,EAAU9yE,EAAQ,SAAS8yE,UAAckB,EAAkBluJ,EAAQkuJ,kBAAkBh0E,EAAQ,SAASg0E,kBAAkBluJ,EAAQq9I,cAAcnjE,EAAQ,SAASmjE,cAAcr9I,EAAQu2E,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAAS2D,EAAQn6E,EAAOC,GAAS,SAASw9D,EAAKktB,EAAIimE,GAAM,IAAI,IAAIruI,KAAKooE,EAAKimE,EAAKruI,GAAGooE,EAAIpoE,EAAG,CAAC,SAASsuI,EAAS7xI,EAAM8xI,GAAO,IAAIC,EAAG/xI,EAAMm+B,UAAU,GAAGvoC,OAAOo4D,OAAO,CAAC,IAAIgkF,EAAIp8I,OAAOo4D,OAAO8jF,EAAM3zG,WAAW4zG,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAASjxH,IAAI,CAACA,EAAEsd,UAAU2zG,EAAM3zG,UAAkBsgB,EAAKszF,EAAblxH,EAAE,IAAIA,GAAa7gB,EAAMm+B,UAAU4zG,EAAGlxH,CAAC,CAAIkxH,EAAG7wJ,aAAa8e,IAAwB,mBAAPA,GAAmBjW,QAAQ+G,MAAM,gBAAgBkP,GAAO+xI,EAAG7wJ,YAAY8e,EAAM,CAAC,IAA8CkyI,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAaz7I,EAAKrF,GAAS,GAAGA,aAAmBhJ,MAAO,IAAIiH,EAAM+B,OAAa/B,EAAMvP,KAAKsI,MAAMu0C,KAAK78C,KAAKyxJ,EAAiB96I,IAAO3W,KAAKsR,QAAQmgJ,EAAiB96I,GAASrO,MAAM+pJ,mBAAkB/pJ,MAAM+pJ,kBAAkBryJ,KAAKoyJ,GAAgF,OAAlE7iJ,EAAMoH,KAAKA,EAAQrF,IAAQtR,KAAKsR,QAAQtR,KAAKsR,QAAQ,KAAKA,GAAe/B,CAAK,CAAyE,SAAS+iJ,IAAW,CAA+N,SAASC,EAAahwJ,EAAKmC,GAAS1E,KAAKwyJ,MAAMjwJ,EAAKvC,KAAKyyJ,SAAS/tJ,EAAQguJ,EAAgB1yJ,KAAK,CAAC,SAAS0yJ,EAAgBzoJ,GAAM,IAAI0oJ,EAAI1oJ,EAAKuoJ,MAAMI,MAAM3oJ,EAAKuoJ,MAAMK,cAAcD,KAAK,GAAG3oJ,EAAK2oJ,MAAMD,EAAI,CAAC,IAAIG,EAAG7oJ,EAAKwoJ,SAASxoJ,EAAKuoJ,OAAOO,GAAQ9oJ,EAAK,SAAS6oJ,EAAG3sJ,QAAQ+2D,EAAK41F,EAAG7oJ,GAAMA,EAAK2oJ,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAehpJ,EAAK1H,GAAwB,IAAlB,IAAIgR,EAAEtJ,EAAK9D,OAAaoN,KAAK,GAAGtJ,EAAKsJ,KAAKhR,EAAM,OAAOgR,CAAG,CAAC,SAAS2/I,EAAc1mJ,EAAGvC,EAAKkpJ,EAAQC,GAAiG,GAArFA,EAASnpJ,EAAKgpJ,EAAehpJ,EAAKmpJ,IAAUD,EAAalpJ,EAAKA,EAAK9D,UAAUgtJ,EAAW3mJ,EAAG,CAAC2mJ,EAAQE,aAAa7mJ,EAAG,IAAIknH,EAAIlnH,EAAGqmJ,cAAiBn/B,IAAK0/B,GAASE,EAAmB5/B,EAAIlnH,EAAG4mJ,GAChi2B,SAAyB1/B,EAAIlnH,EAAG2mJ,GAASz/B,GAAKA,EAAIk/B,OAA0C,iCAA5BO,EAAQnX,eAAqDxvI,EAAG+mJ,OAAOJ,EAAQt4I,OAAOs4I,EAAQpF,UAAU,IAAIoF,EAAQxwJ,MAAM,CAD+21B6wJ,CAAgB9/B,EAAIlnH,EAAG2mJ,GAAS,CAAC,CAAC,SAASM,EAAiBjnJ,EAAGvC,EAAK4T,GAAM,IAAItK,EAAE0/I,EAAehpJ,EAAK4T,GAAM,KAAGtK,GAAG,GAAgM,MAAM6+I,EAAaP,EAAc,IAAIvpJ,MAAMkE,EAAGunH,QAAQ,IAAIl2G,IAA3N,IAA5B,IAAI61I,EAAUzpJ,EAAK9D,OAAO,EAAQoN,EAAEmgJ,GAAWzpJ,EAAKsJ,GAAGtJ,IAAOsJ,GAAyB,GAAtBtJ,EAAK9D,OAAOutJ,EAAalnJ,EAAG,CAAC,IAAIknH,EAAIlnH,EAAGqmJ,cAAiBn/B,IAAK4/B,EAAmB5/B,EAAIlnH,EAAGqR,GAAMA,EAAKw1I,aAAa,KAAK,CAAwE,CAAioC,SAASzF,EAAkB+F,GAA4B,GAAlB3zJ,KAAK4zJ,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAU3zJ,KAAK4zJ,UAAUD,EAASE,EAAU,CACnm9B,SAASC,IAAO,CAA6kD,SAASC,EAAYxwJ,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAEywJ,aAAa,GAAG,CAAmD,SAASC,EAAW1xJ,EAAKsP,GAAU,GAAGA,EAAStP,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAKk9G,WAAY,GAAG,GAAGw0C,EAAW1xJ,EAAKsP,GAAW,OAAO,QAAYtP,EAAKA,EAAK2xJ,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmB5/B,EAAIlnH,EAAG2mJ,EAAQp4I,GAAQ24G,GAAKA,EAAIk/B,OAA0C,iCAA5BO,EAAQnX,qBAA4DxvI,EAAG+mJ,OAAOJ,EAAQt4I,OAAOs4I,EAAQpF,UAAU,GAAI,CAAC,SAASqG,EAAe1gC,EAAIlnH,EAAG6nJ,GAAU,GAAG3gC,GAAKA,EAAIk/B,KAAK,CAACl/B,EAAIk/B,OAAO,IAAI0B,EAAG9nJ,EAAG+nJ,WAAW,GAAGF,EAAUC,EAAGA,EAAGnuJ,UAAUkuJ,MAAa,CAAiC,IAAhC,IAAIljE,EAAM3kF,EAAGizG,WAAelsG,EAAE,EAAQ49E,GAAOmjE,EAAG/gJ,KAAK49E,EAAMA,EAAMA,EAAM+iE,YAAYI,EAAGnuJ,OAAOoN,CAAC,CAAC,CAAC,CAAC,SAASihJ,EAAa7mE,EAAWwD,GAAO,IAAIsjE,EAAStjE,EAAMujE,gBAAoB7oI,EAAKslE,EAAM+iE,YAAiN,OAAlMO,EAAUA,EAASP,YAAYroI,EAAU8hE,EAAW8xB,WAAW5zF,EAAQA,EAAMA,EAAK6oI,gBAAgBD,EAAc9mE,EAAWgnE,UAAUF,EAASL,EAAezmE,EAAWklE,cAAcllE,GAAmBwD,CAAK,CAAC,SAASyjE,EAAcjnE,EAAW0mE,EAASQ,GAAW,IAAIC,EAAGT,EAAS1mE,WAA2C,GAA7BmnE,GAAIA,EAAGlnE,YAAYymE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAAS50C,WAAW,GAAa,MAAVu1C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgB/mE,EAAWgnE,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAcrnE,EAAW8xB,WAAWu1C,EAAuB,MAAXH,EAAiBlnE,EAAWgnE,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAASrnE,WAAWA,QAAiBqnE,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAezmE,EAAWklE,eAAellE,EAAWA,GAAe0mE,EAASU,UAAUzD,IAAwB+C,EAAS50C,WAAW40C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUn1J,KAAKuzJ,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAAS/Y,IAAgB,CAAqL,SAASgZ,EAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfn2J,KAAK+0J,SAAY/0J,KAAKo2J,gBAAgBp2J,KAAS6a,EAAOs7I,EAAQt7I,OAAW+zI,EAAIuH,EAAQna,aAAa,GAAG4S,GAAa,MAAR/zI,GAA8D,OAA5CA,EAAOs7I,EAAQE,aAAazH,IAAsB,IAAI0H,EAAkB,CAAC,CAACC,UAAU3H,EAAI/zI,OAAO,OAAwE,OAAhE0iI,GAAkBv9I,KAAKk2J,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAI5nJ,KAAK,GAAG,CAAC,SAASkoJ,GAAoBj0J,EAAKk0J,EAAOH,GAAmB,IAAIz7I,EAAOtY,EAAKsY,QAAQ,GAAO+zI,EAAIrsJ,EAAKy5I,aAAa,IAAInhI,IAAS+zI,EAAK,OAAO,EAAM,GAAY,QAAT/zI,GAAsB,yCAAN+zI,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAIr7I,EAAE+iJ,EAAkBnwJ,OAAaoN,KAAI,CAAC,IAAImjJ,EAAGJ,EAAkB/iJ,GAAG,GAAGmjJ,EAAG77I,QAAQA,EAAQ,OAAO67I,EAAGH,WAAW3H,CAAI,CAAC,OAAO,CAAI,CAAC,SAASrR,GAAkBh7I,EAAK2zJ,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtB1zJ,EAAK0zJ,EAAW1zJ,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAf2zJ,EAAI5xJ,KAAK/B,EAA0B,CAAC,OAAOA,EAAKwyJ,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBnwJ,OAA7C,IAAwD4Y,EAAMxc,EAAK2gB,WAAegrI,EAAInvI,EAAM5Y,OAAWgrF,EAAM5uF,EAAKk9G,WAAeC,EAASn9G,EAAKwxH,QAAQ0iC,EAD4xZ,iCAC5wZl0J,EAAKy5I,cAAcya,EAAOP,EAAI5xJ,KAAK,IAAIo7G,GAAU,IAAI,IAAInsG,EAAE,EAAEA,EAAE26I,EAAI36I,IAA4C,UAAnCsK,EAAKkB,EAAM3Q,KAAKmF,IAAWsH,OAAiBy7I,EAAkBhyJ,KAAK,CAACuW,OAAOgD,EAAKkwI,UAAUwI,UAAU14I,EAAKlb,QAA+B,SAAfkb,EAAK6hG,UAAmB42C,EAAkBhyJ,KAAK,CAACuW,OAAO,GAAG07I,UAAU14I,EAAKlb,QAAS,IAAQ4Q,EAAE,EAAEA,EAAE26I,EAAI36I,IAAI,CAAC,IAAIsK,EAAmB,GAAG24I,GAAtB34I,EAAKkB,EAAM3Q,KAAKmF,GAA+BkjJ,EAAOH,GAAmB,CAAC,IAAIz7I,EAAOgD,EAAKhD,QAAQ,GAAO+zI,EAAI/wI,EAAKm+H,aAAiB0a,EAAG77I,EAAO,UAAUA,EAAO,SAASq7I,EAAI5xJ,KAAKoyJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBhyJ,KAAK,CAACuW,OAAOA,EAAO07I,UAAU3H,GAAK,CAACrR,GAAkB1/H,EAAKq4I,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoBj0J,EAAKk0J,EAAOH,KAAwBz7I,EAAOtY,EAAKsY,QAAQ,GAAO+zI,EAAIrsJ,EAAKy5I,aAAiB0a,EAAG77I,EAAO,UAAUA,EAAO,SAASq7I,EAAI5xJ,KAAKoyJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBhyJ,KAAK,CAACuW,OAAOA,EAAO07I,UAAU3H,KAASz9D,GAAOslE,IAAS,mCAAmCl0I,KAAKm9F,GAAU,CAAe,GAAdw2C,EAAI5xJ,KAAK,KAAQmyJ,GAAQ,YAAYl0I,KAAKm9F,GAAW,KAAMvuB,GAAUA,EAAMtnF,KAAMqsJ,EAAI5xJ,KAAK6sF,EAAMtnF,MAAW0zI,GAAkBpsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,iBAAkB,KAAM/iE,GAAOosD,GAAkBpsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,YAAagC,EAAI5xJ,KAAK,KAAKo7G,EAAS,IAAI,MAAMw2C,EAAI5xJ,KAAK,MAAM,OAAO,KAAK8sJ,EAAc,KAAKE,EAAiD,IAAtBngE,EAAM5uF,EAAKk9G,WAAiBtuB,GAAOosD,GAAkBpsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAI5xJ,KAAK,IAAI/B,EAAK4E,KAAK,KAAK5E,EAAKI,MAAMuQ,QAAQ,SAAS6gJ,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAI5xJ,KAAK/B,EAAKsH,KAAKqJ,QAAQ,QAAQ6gJ,IAAc,KAAKhD,EAAmB,OAAOmF,EAAI5xJ,KAAK,YAAY/B,EAAKsH,KAAK,OAAO,KAAKsnJ,EAAa,OAAO+E,EAAI5xJ,KAAK,UAAO/B,EAAKsH,KAAK,UAAO,KAAKwnJ,EAAmB,IAAIsF,EAAMp0J,EAAKutJ,SAAa8G,EAAMr0J,EAAK0pJ,SAA0C,GAAjCiK,EAAI5xJ,KAAK,aAAa/B,EAAK4E,MAASwvJ,EAAOT,EAAI5xJ,KAAK,YAAYqyJ,GAAUC,GAAc,KAAPA,GAAYV,EAAI5xJ,KAAK,MAAMsyJ,GAAOV,EAAI5xJ,KAAK,WAAW,GAAGsyJ,GAAc,KAAPA,EAAYV,EAAI5xJ,KAAK,YAAYsyJ,EAAM,UAAU,CAAC,IAAIpjJ,EAAIjR,EAAKs0J,eAAkBrjJ,GAAK0iJ,EAAI5xJ,KAAK,KAAKkP,EAAI,KAAK0iJ,EAAI5xJ,KAAK,IAAI,CAAC,OAAO,KAAK4sJ,EAA4B,OAAOgF,EAAI5xJ,KAAK,KAAK/B,EAAKinD,OAAO,IAAIjnD,EAAKsH,KAAK,MAAM,KAAKmnJ,EAAsB,OAAOkF,EAAI5xJ,KAAK,IAAI/B,EAAKm9G,SAAS,KAAK,QAAQw2C,EAAI5xJ,KAAK,KAAK/B,EAAKm9G,UAAU,CAAC,SAASo3C,GAAWpjC,EAAInxH,EAAK+kB,GAAM,IAAIyvI,EAAM,OAAOx0J,EAAKwyJ,UAAU,KAAKnE,GAAamG,EAAMx0J,EAAKy0J,WAAU,IAAanE,cAAcn/B,EAAI,KAAK49B,EAAuB,MAAM,KAAKT,EAAevpI,GAAK,EAAgG,GAAjFyvI,IAAOA,EAAMx0J,EAAKy0J,WAAU,IAAOD,EAAMlE,cAAcn/B,EAAIqjC,EAAMppE,WAAW,KAAQrmE,EAAgC,IAA1B,IAAI6pE,EAAM5uF,EAAKk9G,WAAiBtuB,GAAO4lE,EAAMxoE,YAAYuoE,GAAWpjC,EAAIviC,EAAM7pE,IAAO6pE,EAAMA,EAAM+iE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAUtjC,EAAInxH,EAAK+kB,GAAM,IAAIyvI,EAAM,IAAIx0J,EAAK5C,YAAY,IAAI,IAAIijD,KAAKrgD,EAAK,CAAC,IAAI+Q,EAAE/Q,EAAKqgD,GAAgB,iBAAHtvC,GAAgBA,GAAGyjJ,EAAMn0G,KAAIm0G,EAAMn0G,GAAGtvC,EAAG,CAA2E,OAAvE/Q,EAAKgyJ,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAcn/B,EAAWqjC,EAAMhC,UAAU,KAAKnE,EAAa,IAAI7xI,EAAMxc,EAAK2gB,WAAe+zI,EAAOF,EAAM7zI,WAAW,IAAI8vI,EAAiB9E,EAAInvI,EAAM5Y,OAAO8wJ,EAAOC,cAAcH,EAAM,IAAI,IAAIxjJ,EAAE,EAAEA,EAAE26I,EAAI36I,IAAKwjJ,EAAMvI,iBAAiBwI,GAAUtjC,EAAI30G,EAAM3Q,KAAKmF,IAAG,IAAO,MAAM,KAAKs9I,EAAevpI,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAI6pE,EAAM5uF,EAAKk9G,WAAiBtuB,GAAO4lE,EAAMxoE,YAAYyoE,GAAUtjC,EAAIviC,EAAM7pE,IAAO6pE,EAAMA,EAAM+iE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQ9tJ,EAAOZ,EAAI1B,GAAOsC,EAAOZ,GAAK1B,CAAK,CADonW6uJ,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAax1G,UAAUt0C,MAAMs0C,UAAUsgB,EAAKs0F,EAAcY,GAAmCE,EAAS11G,UAAU,CAACz2C,OAAO,EAAEiI,KAAK,SAASrC,GAAO,OAAO/L,KAAK+L,IAAQ,IAAI,EAAE6I,SAAS,SAAS6hJ,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAG3iJ,EAAE,EAAEA,EAAEvT,KAAKmG,OAAOoN,IAAKgqI,GAAkBv9I,KAAKuT,GAAG2iJ,EAAIO,EAAOR,GAAY,OAAOC,EAAI5nJ,KAAK,GAAG,GAA2SikJ,EAAa31G,UAAUxuC,KAAK,SAASmF,GAAyB,OAAtBm/I,EAAgB1yJ,MAAaA,KAAKuT,EAAE,EAAE+8I,EAASiC,EAAaD,GAAuuBU,EAAap2G,UAAU,CAACz2C,OAAO,EAAEiI,KAAKkkJ,EAAS11G,UAAUxuC,KAAKopJ,aAAa,SAASnzJ,GAAuB,IAAlB,IAAIkP,EAAEvT,KAAKmG,OAAaoN,KAAI,CAAC,IAAIsK,EAAK7d,KAAKuT,GAAG,GAAGsK,EAAK6hG,UAAUr7G,EAAK,OAAOwZ,CAAK,CAAC,EAAE45I,aAAa,SAAS55I,GAAM,IAAIrR,EAAGqR,EAAKw1I,aAAa,GAAG7mJ,GAAIA,GAAIxM,KAAKk3J,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQpzJ,KAAKw3J,aAAa35I,EAAK6hG,UAA8D,OAApDwzC,EAAclzJ,KAAKk3J,cAAcl3J,KAAK6d,EAAKu1I,GAAgBA,CAAO,EAAEsE,eAAe,SAAS75I,GAAM,IAAyBu1I,EAArB5mJ,EAAGqR,EAAKw1I,aAAqB,GAAG7mJ,GAAIA,GAAIxM,KAAKk3J,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQpzJ,KAAK23J,eAAe95I,EAAKm+H,aAAan+H,EAAKkwI,WAAWmF,EAAclzJ,KAAKk3J,cAAcl3J,KAAK6d,EAAKu1I,GAAgBA,CAAO,EAAEwE,gBAAgB,SAASvzJ,GAAK,IAAIwZ,EAAK7d,KAAKw3J,aAAanzJ,GAAoD,OAA/CovJ,EAAiBzzJ,KAAKk3J,cAAcl3J,KAAK6d,GAAaA,CAAI,EAAEg6I,kBAAkB,SAAS7b,EAAa+R,GAAW,IAAIlwI,EAAK7d,KAAK23J,eAAe3b,EAAa+R,GAA0D,OAA/C0F,EAAiBzzJ,KAAKk3J,cAAcl3J,KAAK6d,GAAaA,CAAI,EAAE85I,eAAe,SAAS3b,EAAa+R,GAA6B,IAAlB,IAAIx6I,EAAEvT,KAAKmG,OAAaoN,KAAI,CAAC,IAAIhR,EAAKvC,KAAKuT,GAAG,GAAGhR,EAAKwrJ,WAAWA,GAAWxrJ,EAAKy5I,cAAcA,EAAc,OAAOz5I,CAAK,CAAC,OAAO,IAAI,GAAuIqrJ,EAAkBhxG,UAAU,CAACk7G,WAAW,SAASjE,EAAQtwI,GAAS,IAAIw0I,EAAS/3J,KAAK4zJ,UAAUC,EAAQx7I,eAAe,SAAG0/I,GAAYx0I,KAASA,KAAWw0I,GAChv+B,EAAElK,eAAe,SAAS7R,EAAagc,EAAcC,GAAS,IAAIvkC,EAAI,IAAIygC,EAAsH,GAA7GzgC,EAAIs8B,eAAehwJ,KAAK0zH,EAAI6gC,WAAW,IAAIjC,EAAS5+B,EAAIukC,QAAQA,EAAWA,GAASvkC,EAAInlC,YAAY0pE,GAAYD,EAAc,CAAC,IAAIj4D,EAAK2zB,EAAIu6B,gBAAgBjS,EAAagc,GAAetkC,EAAInlC,YAAYwR,EAAK,CAAC,OAAO2zB,CAAG,EAAEu8B,mBAAmB,SAAS+H,EAAclI,EAAS7D,GAAU,IAAI1pJ,EAAK,IAAIkzJ,EAA+G,OAAlGlzJ,EAAK4E,KAAK6wJ,EAAcz1J,EAAKm9G,SAASs4C,EAAcz1J,EAAKutJ,SAASA,EAASvtJ,EAAK0pJ,SAASA,EAAgB1pJ,CAAI,GAAoBuxJ,EAAKl3G,UAAU,CAAC6iE,WAAW,KAAKk1C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAKhxI,WAAW,KAAKyqE,WAAW,KAAK4mE,WAAW,KAAK1B,cAAc,KAAKtE,UAAU,KAAKvS,aAAa,KAAKnhI,OAAO,KAAKkzI,UAAU,KAAKmK,aAAa,SAAS7D,EAAS8D,GAAU,OAAOvD,EAAc50J,KAAKq0J,EAAS8D,EAAS,EAAEC,aAAa,SAAS/D,EAASgE,GAAUr4J,KAAKk4J,aAAa7D,EAASgE,GAAaA,GAAUr4J,KAAK4tF,YAAYyqE,EAAU,EAAEzqE,YAAY,SAASyqE,GAAU,OAAO7D,EAAax0J,KAAKq4J,EAAS,EAAE9pE,YAAY,SAAS8lE,GAAU,OAAOr0J,KAAKk4J,aAAa7D,EAAS,KAAK,EAAEiE,cAAc,WAAW,OAAwB,MAAjBt4J,KAAKy/G,UAAgB,EAAEu3C,UAAU,SAAS1vI,GAAM,OAAO0vI,GAAUh3J,KAAK6yJ,eAAe7yJ,KAAKA,KAAKsnB,EAAK,EAAEkoI,UAAU,WAAqC,IAA1B,IAAIr+D,EAAMnxF,KAAKy/G,WAAiBtuB,GAAM,CAAC,IAAItlE,EAAKslE,EAAM+iE,YAAeroI,GAAMA,EAAKkpI,UAAUjE,GAAW3/D,EAAM4jE,UAAUjE,GAAW9wJ,KAAK4tF,YAAY/hE,GAAMslE,EAAMonE,WAAW1sI,EAAKhiB,QAAWsnF,EAAMq+D,YAAYr+D,EAAMtlE,EAAK,CAAC,EAAE2sI,YAAY,SAAS3E,EAAQtwI,GAAS,OAAOvjB,KAAK6yJ,cAAc7C,eAAe8H,WAAWjE,EAAQtwI,EAAQ,EAAEk1I,cAAc,WAAW,OAAOz4J,KAAKkjB,WAAW/c,OAAO,CAAC,EAAEkwJ,aAAa,SAASra,GAA0B,IAAZ,IAAIxvI,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAG+mJ,OAAO,GAAGplJ,EAAK,IAAI,IAAIy0C,KAAKz0C,EAAK,GAAGA,EAAIy0C,IAAIo5F,EAAc,OAAOp5F,EAAIp2C,EAAGA,EAAGuoJ,UAAUlE,EAAerkJ,EAAGqmJ,cAAcrmJ,EAAGmhF,UAAU,CAAC,OAAO,IAAI,EAAE+qE,mBAAmB,SAAS79I,GAAoB,IAAZ,IAAIrO,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAG+mJ,OAAO,GAAGplJ,GAAQ0M,KAAU1M,EAAK,OAAOA,EAAI0M,GAASrO,EAAGA,EAAGuoJ,UAAUlE,EAAerkJ,EAAGqmJ,cAAcrmJ,EAAGmhF,UAAU,CAAC,OAAO,IAAI,EAAEgrE,mBAAmB,SAAS3c,GAAyD,OAAe,MAA/Ch8I,KAAKq2J,aAAara,EAAiC,GAA6H9+E,EAAKyzF,EAASmD,GAAM52F,EAAKyzF,EAASmD,EAAKl3G,WAA02Eu3G,EAASv3G,UAAU,CAAC8iE,SAAS,YAAYq1C,SAAS3D,EAAc6G,QAAQ,KAAK7B,gBAAgB,KAAKxD,KAAK,EAAEsF,aAAa,SAAS7D,EAAS8D,GAAU,GAAG9D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAIngE,EAAMkjE,EAAS50C,WAAiBtuB,GAAM,CAAC,IAAItlE,EAAKslE,EAAM+iE,YAAYl0J,KAAKk4J,aAAa/mE,EAAMgnE,GAAUhnE,EAAMtlE,CAAI,CAAC,OAAOwoI,CAAQ,CAA+F,OAArE,MAAtBr0J,KAAKo2J,iBAAuB/B,EAASU,UAAUnE,IAAc5wJ,KAAKo2J,gBAAgB/B,GAAgBO,EAAc50J,KAAKq0J,EAAS8D,GAAU9D,EAASxB,cAAc7yJ,KAAKq0J,CAAQ,EAAEzmE,YAAY,SAASyqE,GAAuE,OAA1Dr4J,KAAKo2J,iBAAiBiC,IAAUr4J,KAAKo2J,gBAAgB,MAAY5B,EAAax0J,KAAKq4J,EAAS,EAAEvB,WAAW,SAAS8B,EAAatxI,GAAM,OAAOwvI,GAAW92J,KAAK44J,EAAatxI,EAAK,EAAEuxI,eAAe,SAASj4J,GAAI,IAAIk4J,EAAI,KAA6I,OAAxI7E,EAAWj0J,KAAKo2J,iBAAgB,SAAS7zJ,GAAM,GAAGA,EAAKwyJ,UAAUnE,GAAiBruJ,EAAKwlF,aAAa,OAAOnnF,EAAa,OAATk4J,EAAIv2J,GAAY,CAAM,IAAUu2J,CAAG,EAAE5rH,cAAc,SAAS6mF,GAAS,IAAIxxH,EAAK,IAAI4yJ,EAA4K,OAApK5yJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKm9G,SAASqU,EAAQxxH,EAAKwxH,QAAQA,EAAQxxH,EAAKgyJ,WAAW,IAAIjC,GAAmB/vJ,EAAK2gB,WAAW,IAAI8vI,GAAmBkE,cAAc30J,EAAYA,CAAI,EAAEw2J,uBAAuB,WAAW,IAAIx2J,EAAK,IAAIszJ,EAAsE,OAArDtzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKgyJ,WAAW,IAAIjC,EAAgB/vJ,CAAI,EAAE+rF,eAAe,SAASzkF,GAAM,IAAItH,EAAK,IAAI+yJ,EAAmD,OAA9C/yJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKg2J,WAAW1uJ,GAAatH,CAAI,EAAEmtJ,cAAc,SAAS7lJ,GAAM,IAAItH,EAAK,IAAIgzJ,EAAsD,OAA9ChzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKg2J,WAAW1uJ,GAAatH,CAAI,EAAE8sJ,mBAAmB,SAASxlJ,GAAM,IAAItH,EAAK,IAAIizJ,EAA2D,OAA9CjzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKg2J,WAAW1uJ,GAAatH,CAAI,EAAEysJ,4BAA4B,SAASxlG,EAAO3/C,GAAM,IAAItH,EAAK,IAAIuzJ,EAA4G,OAAtFvzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKwxH,QAAQxxH,EAAKinD,OAAOA,EAAOjnD,EAAKgsJ,UAAUhsJ,EAAKsH,KAAKA,EAAYtH,CAAI,EAAEy2J,gBAAgB,SAAS7xJ,GAAM,IAAI5E,EAAK,IAAI6yJ,EAAuG,OAAlG7yJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAK4E,KAAKA,EAAK5E,EAAKm9G,SAASv4G,EAAK5E,EAAKwrJ,UAAU5mJ,EAAK5E,EAAK02J,WAAU,EAAY12J,CAAI,EAAE22J,sBAAsB,SAAS/xJ,GAAM,IAAI5E,EAAK,IAAIqzJ,EAA2D,OAA3CrzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKm9G,SAASv4G,EAAY5E,CAAI,EAAE0rJ,gBAAgB,SAASjS,EAAagc,GAAe,IAAIz1J,EAAK,IAAI4yJ,EAAYgE,EAAGnB,EAActvI,MAAM,KAAS3J,EAAMxc,EAAK2gB,WAAW,IAAI8vI,EAA2Q,OAA9PzwJ,EAAKgyJ,WAAW,IAAIjC,EAAS/vJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKm9G,SAASs4C,EAAcz1J,EAAKwxH,QAAQikC,EAAcz1J,EAAKy5I,aAAaA,EAA2B,GAAXmd,EAAGhzJ,QAAW5D,EAAKsY,OAAOs+I,EAAG,GAAG52J,EAAKwrJ,UAAUoL,EAAG,IAAQ52J,EAAKwrJ,UAAUiK,EAAcj5I,EAAMm4I,cAAc30J,EAAYA,CAAI,EAAE8rJ,kBAAkB,SAASrS,EAAagc,GAAe,IAAIz1J,EAAK,IAAI6yJ,EAAS+D,EAAGnB,EAActvI,MAAM,KAA8N,OAAzNnmB,EAAKswJ,cAAc7yJ,KAAKuC,EAAKm9G,SAASs4C,EAAcz1J,EAAK4E,KAAK6wJ,EAAcz1J,EAAKy5I,aAAaA,EAAaz5I,EAAK02J,WAAU,EAAmB,GAAXE,EAAGhzJ,QAAW5D,EAAKsY,OAAOs+I,EAAG,GAAG52J,EAAKwrJ,UAAUoL,EAAG,IAAQ52J,EAAKwrJ,UAAUiK,EAAqBz1J,CAAI,GAAG+tJ,EAAS6D,EAASL,GAAwCqB,EAAQv4G,UAAU,CAACm4G,SAASnE,EAAawI,aAAa,SAASjyJ,GAAM,OAAoC,MAA7BnH,KAAKq5J,iBAAiBlyJ,EAAW,EAAE4gF,aAAa,SAAS5gF,GAAM,IAAI0W,EAAK7d,KAAKq5J,iBAAiBlyJ,GAAM,OAAO0W,GAAMA,EAAKlb,OAAO,EAAE,EAAE02J,iBAAiB,SAASlyJ,GAAM,OAAOnH,KAAKkjB,WAAWs0I,aAAarwJ,EAAK,EAAEq+E,aAAa,SAASr+E,EAAKxE,GAAO,IAAIkb,EAAK7d,KAAK6yJ,cAAcmG,gBAAgB7xJ,GAAM0W,EAAKlb,MAAMkb,EAAK0wI,UAAU,GAAG5rJ,EAAM3C,KAAKwuJ,iBAAiB3wI,EAAK,EAAEqqE,gBAAgB,SAAS/gF,GAAM,IAAI0W,EAAK7d,KAAKq5J,iBAAiBlyJ,GAAM0W,GAAM7d,KAAKs5J,oBAAoBz7I,EAAK,EAAE0wE,YAAY,SAAS8lE,GAAU,OAAGA,EAASU,WAAWzD,EAA+BtxJ,KAAKk4J,aAAa7D,EAAS,MAAr4H,SAA4B1mE,EAAW0mE,GAAU,IAAIS,EAAGT,EAAS1mE,WAAW,GAAGmnE,EAAG,CAAC,IAAII,EAAIvnE,EAAWgnE,UAAUG,EAAGlnE,YAAYymE,GAAca,EAAIvnE,EAAWgnE,SAAS,CAAoR,OAA/QO,EAAIvnE,EAAWgnE,UAAUN,EAAS1mE,WAAWA,EAAW0mE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAc1mE,EAAW8xB,WAAW40C,EAAS1mE,EAAWgnE,UAAUN,EAASD,EAAezmE,EAAWklE,cAAcllE,EAAW0mE,GAAiBA,CAAQ,CAA+8GkF,CAAmBv5J,KAAKq0J,EAAU,EAAE7F,iBAAiB,SAAS2E,GAAS,OAAOnzJ,KAAKkjB,WAAWu0I,aAAatE,EAAQ,EAAEqG,mBAAmB,SAASrG,GAAS,OAAOnzJ,KAAKkjB,WAAWw0I,eAAevE,EAAQ,EAAEmG,oBAAoB,SAASlG,GAAS,OAAOpzJ,KAAKkjB,WAAW00I,gBAAgBxE,EAAQ1zC,SAAS,EAAE+5C,kBAAkB,SAASzd,EAAa+R,GAAW,IAAIhxC,EAAI/8G,KAAK05J,mBAAmB1d,EAAa+R,GAAWhxC,GAAK/8G,KAAKs5J,oBAAoBv8C,EAAI,EAAE48C,eAAe,SAAS3d,EAAa+R,GAAW,OAAwD,MAAjD/tJ,KAAK05J,mBAAmB1d,EAAa+R,EAAgB,EAAE6L,eAAe,SAAS5d,EAAa+R,GAAW,IAAIlwI,EAAK7d,KAAK05J,mBAAmB1d,EAAa+R,GAAW,OAAOlwI,GAAMA,EAAKlb,OAAO,EAAE,EAAEk3J,eAAe,SAAS7d,EAAagc,EAAcr1J,GAAO,IAAIkb,EAAK7d,KAAK6yJ,cAAcxE,kBAAkBrS,EAAagc,GAAen6I,EAAKlb,MAAMkb,EAAK0wI,UAAU,GAAG5rJ,EAAM3C,KAAKwuJ,iBAAiB3wI,EAAK,EAAE67I,mBAAmB,SAAS1d,EAAa+R,GAAW,OAAO/tJ,KAAKkjB,WAAWy0I,eAAe3b,EAAa+R,EAAU,EAAEx3E,qBAAqB,SAASw9C,GAAS,OAAO,IAAIw+B,EAAavyJ,MAAK,SAAS2kE,GAAM,IAAImuF,EAAG,GAAwI,OAArImB,EAAWtvF,GAAK,SAASpiE,GAASA,IAAOoiE,GAAMpiE,EAAKwyJ,UAAUnE,GAAyB,MAAV78B,GAAexxH,EAAKwxH,SAASA,GAAU++B,EAAGxuJ,KAAK/B,EAAM,IAAUuwJ,CAAE,GAAE,EAAEgH,uBAAuB,SAAS9d,EAAa+R,GAAW,OAAO,IAAIwE,EAAavyJ,MAAK,SAAS2kE,GAAM,IAAImuF,EAAG,GAAuM,OAApMmB,EAAWtvF,GAAK,SAASpiE,GAASA,IAAOoiE,GAAMpiE,EAAKwyJ,WAAWnE,GAA8B,MAAf5U,GAAoBz5I,EAAKy5I,eAAeA,GAA4B,MAAZ+R,GAAiBxrJ,EAAKwrJ,WAAWA,GAAY+E,EAAGxuJ,KAAK/B,EAAM,IAAUuwJ,CAAE,GAAE,GAAGqB,EAASv3G,UAAU25B,qBAAqB4+E,EAAQv4G,UAAU25B,qBAAqB49E,EAASv3G,UAAUk9G,uBAAuB3E,EAAQv4G,UAAUk9G,uBAAuBxJ,EAAS6E,EAAQrB,GAAuBsB,EAAKx4G,UAAUm4G,SAASlE,EAAeP,EAAS8E,EAAKtB,GAAgCuB,EAAcz4G,UAAU,CAAC/yC,KAAK,GAAGkwJ,cAAc,SAASld,EAAOhrH,GAAO,OAAO7xB,KAAK6J,KAAK+uB,UAAUikH,EAAOA,EAAOhrH,EAAM,EAAE0mI,WAAW,SAASlqJ,GAAMA,EAAKrO,KAAK6J,KAAKwE,EAAKrO,KAAKuuJ,UAAUvuJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,EAAE6zJ,WAAW,SAASnd,EAAOxuI,GAAMrO,KAAKi6J,YAAYpd,EAAO,EAAExuI,EAAK,EAAEkgF,YAAY,SAAS8lE,GAAU,MAAM,IAAI/rJ,MAAMmpJ,EAAiBC,GAAuB,EAAEwI,WAAW,SAASrd,EAAOhrH,GAAO7xB,KAAKi6J,YAAYpd,EAAOhrH,EAAM,GAAG,EAAEooI,YAAY,SAASpd,EAAOhrH,EAAMxjB,GAAwFA,EAAxErO,KAAK6J,KAAK+uB,UAAU,EAAEikH,GAA6DxuI,EAA7CrO,KAAK6J,KAAK+uB,UAAUikH,EAAOhrH,GAA2B7xB,KAAKuuJ,UAAUvuJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,GAAGmqJ,EAAS+E,EAAcvB,GAAuBwB,EAAK14G,UAAU,CAAC8iE,SAAS,QAAQq1C,SAASjE,EAAUqJ,UAAU,SAAStd,GAAQ,IAAIxuI,EAAKrO,KAAK6J,KAASuwJ,EAAQ/rJ,EAAKuqB,UAAUikH,GAAQxuI,EAAKA,EAAKuqB,UAAU,EAAEikH,GAAQ78I,KAAK6J,KAAK7J,KAAKuuJ,UAAUlgJ,EAAKrO,KAAKmG,OAAOkI,EAAKlI,OAAO,IAAIk0J,EAAQr6J,KAAK6yJ,cAAcvkE,eAAe8rE,GAAoF,OAAxEp6J,KAAK2tF,YAAY3tF,KAAK2tF,WAAWuqE,aAAamC,EAAQr6J,KAAKk0J,aAAoBmG,CAAO,GAAG/J,EAASgF,EAAKD,GAAmCE,EAAQ34G,UAAU,CAAC8iE,SAAS,WAAWq1C,SAAS5D,GAAcb,EAASiF,EAAQF,GAAwCG,EAAa54G,UAAU,CAAC8iE,SAAS,iBAAiBq1C,SAAShE,GAAoBT,EAASkF,EAAaH,GAAwCI,EAAa74G,UAAUm4G,SAAS1D,EAAmBf,EAASmF,EAAa3B,GAA2B4B,EAAS94G,UAAUm4G,SAASxD,EAAcjB,EAASoF,EAAS5B,GAAyB6B,EAAO/4G,UAAUm4G,SAAS9D,EAAYX,EAASqF,EAAO7B,GAAkC8B,EAAgBh5G,UAAUm4G,SAAS/D,EAAsBV,EAASsF,EAAgB9B,GAAmC+B,EAAiBj5G,UAAU8iE,SAAS,qBAAqBm2C,EAAiBj5G,UAAUm4G,SAASzD,EAAuBhB,EAASuF,EAAiB/B,GAAwCgC,EAAsBl5G,UAAUm4G,SAAS7D,EAA4BZ,EAASwF,EAAsBhC,GAAgC/W,EAAcngG,UAAU2gG,kBAAkB,SAASh7I,EAAKyzJ,EAAOC,GAAY,OAAOF,EAAsBl5G,KAAKt6C,EAAKyzJ,EAAOC,EAAW,EAAEnC,EAAKl3G,UAAUhoC,SAASmhJ,EAAqhJ,IAAI,GAAG1hJ,OAAOwlI,eAAe,CAA2f,SAASygB,GAAe/3J,GAAM,OAAOA,EAAKwyJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArB3zJ,EAAKA,EAAKk9G,WAAiBl9G,GAAyB,IAAhBA,EAAKwyJ,UAA8B,IAAhBxyJ,EAAKwyJ,UAAcmB,EAAI5xJ,KAAKg2J,GAAe/3J,IAAOA,EAAKA,EAAK2xJ,YAAY,OAAOgC,EAAI5nJ,KAAK,IAAI,QAAQ,OAAO/L,EAAKgsJ,UAAU,CAAxxBl6I,OAAOwlI,eAAe0Y,EAAa31G,UAAU,SAAS,CAAC/mC,IAAI,WAAiC,OAAtB68I,EAAgB1yJ,MAAaA,KAAKu6J,QAAQ,IAAIlmJ,OAAOwlI,eAAeia,EAAKl3G,UAAU,cAAc,CAAC/mC,IAAI,WAAW,OAAOykJ,GAAet6J,KAAK,EAAE+Z,IAAI,SAASlQ,GAAM,OAAO7J,KAAK+0J,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAMtxJ,KAAKy/G,YAAYz/G,KAAK4tF,YAAY5tF,KAAKy/G,aAAe51G,GAAMuR,OAAOvR,KAAO7J,KAAKuuF,YAAYvuF,KAAK6yJ,cAAcvkE,eAAezkF,IAAO,MAAM,QAAQ7J,KAAK6J,KAAKA,EAAK7J,KAAK2C,MAAMkH,EAAK7J,KAAKuuJ,UAAU1kJ,EAAK,IAAmSkpJ,GAAQ,SAAS9tJ,EAAOZ,EAAI1B,GAAOsC,EAAO,KAAKZ,GAAK1B,CAAK,CAAC,CAAW,CAAT,MAAM0H,IAAG,CAAC3K,EAAQkuJ,kBAAkBA,EAAkBluJ,EAAQq9I,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAASnjE,EAAQn6E,EAAOC,GAAS,IAAI86J,EAAc,mJAAuJC,EAAS,IAAIn4I,OAAO,aAAak4I,EAAchO,OAAOp5I,MAAM,GAAG,GAAG,0CAA8CsnJ,EAAe,IAAIp4I,OAAO,IAAIk4I,EAAchO,OAAOiO,EAASjO,OAAO,QAAQgO,EAAchO,OAAOiO,EAASjO,OAAO,QAA8I,SAASE,IAAY,CAA+P,SAASj1I,EAAM+0I,EAAOmO,EAAiB7N,EAAUH,EAAW5O,GAAgO,SAAS6c,EAAehtJ,GAAG,IAAI2G,EAAE3G,EAAEwF,MAAM,GAAG,GAAG,OAAGmB,KAAKu4I,EAAkBA,EAAUv4I,GAAyB,MAAdA,EAAE4yC,OAAO,GAAzT,SAA2BxwC,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAIkkJ,EAAW,QAA3BlkJ,GAAM,QAAkC,IAAImkJ,EAAW,OAAY,KAALnkJ,GAAW,OAAOyE,OAAO0jI,aAAa+b,EAAWC,EAAW,CAAM,OAAO1/I,OAAO0jI,aAAanoI,EAAM,CAAyHokJ,CAAkBp1I,SAASpR,EAAEuvC,OAAO,GAAG5wC,QAAQ,IAAI,SAAa6qI,EAAaxuI,MAAM,oBAAoB3B,GAAUA,EAAE,CAAC,SAASotJ,EAAWzzG,GAAK,GAAGA,EAAIx0B,EAAM,CAAC,IAAIkoI,EAAGzO,EAAO5zH,UAAU7F,EAAMw0B,GAAKr0C,QAAQ,WAAW0nJ,GAAgBjP,GAAShrJ,EAASoyB,GAAO45H,EAAWwC,WAAW8L,EAAG,EAAE1zG,EAAIx0B,GAAOA,EAAMw0B,CAAG,CAAC,CAAC,SAAS5mD,EAASqhB,EAAE6+G,GAAG,KAAM7+G,GAAGk5I,IAAUr6B,EAAEs6B,EAAY/b,KAAKoN,KAAU4O,EAAUv6B,EAAE90H,MAAMmvJ,EAAQE,EAAUv6B,EAAE,GAAG16H,OAAOwlJ,EAAQG,aAAaH,EAAQI,aAAa/pI,EAAEo5I,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BxP,EAAQgB,EAAWhB,QAAY0P,EAAW,CAAC,CAACC,aAAaX,IAAuBY,EAAS,CAAC,EAAMxoI,EAAM,IAAa,CAAC,IAAI,IAAIyoI,EAAShP,EAAOn/I,QAAQ,IAAI0lB,GAAO,GAAGyoI,EAAS,EAAE,CAAC,IAAIhP,EAAO1oG,OAAO/wB,GAAOiT,MAAM,SAAS,CAAC,IAAI0tF,EAAIi5B,EAAWj5B,IAAQrlH,EAAKqlH,EAAIplC,eAAek+D,EAAO1oG,OAAO/wB,IAAQ2gG,EAAInlC,YAAYlgF,GAAMs+I,EAAWJ,eAAel+I,CAAI,CAAC,MAAM,CAAyC,OAArCmtJ,EAASzoI,GAAOioI,EAAWQ,GAAiBhP,EAAOrlG,OAAOq0G,EAAS,IAAI,IAAI,IAAI,IAAIj0G,EAAIilG,EAAOn/I,QAAQ,IAAImuJ,EAAS,GAAOznC,EAAQy4B,EAAO5zH,UAAU4iI,EAAS,EAAEj0G,GAAStlD,EAAOo5J,EAAW1qH,MAAS4W,EAAI,GAAGwsE,EAAQy4B,EAAO5zH,UAAU4iI,EAAS,GAAGtoJ,QAAQ,UAAU,IAAI6qI,EAAaxuI,MAAM,iBAAiBwkH,EAAQ,oBAAoB9xH,EAAO8xH,SAASxsE,EAAIi0G,EAAS,EAAEznC,EAAQ5tH,QAAe4tH,EAAQ/tF,MAAM,SAAQ+tF,EAAQA,EAAQ7gH,QAAQ,UAAU,IAAI6qI,EAAaxuI,MAAM,iBAAiBwkH,EAAQ,uBAAuBxsE,EAAIi0G,EAAS,EAAEznC,EAAQ5tH,QAAO,IAAIs1J,EAAWx5J,EAAOw5J,WAAeC,EAASz5J,EAAO8xH,SAASA,EAA4G,GAA9E2nC,GAAUz5J,EAAO8xH,SAAS9xH,EAAO8xH,QAAQ17G,eAAe07G,EAAQ17G,cAAmC,CAA4D,GAA3Ds0I,EAAW8B,WAAWxsJ,EAAO2sJ,IAAI3sJ,EAAO8rJ,UAAUh6B,GAAY0nC,EAAY,IAAI,IAAI5gJ,KAAU4gJ,EAAY9O,EAAWkC,iBAAiBh0I,GAAa6gJ,GAAU3d,EAAaqS,WAAW,iBAAiBr8B,EAAQ,2CAA2C9xH,EAAO8xH,QAAS,MAAMsnC,EAAW/2J,KAAKrC,GAAQslD,IAAM,MAAM,IAAI,IAAIokG,GAAShrJ,EAAS66J,GAAUj0G,EAAIo0G,EAAiBnP,EAAOgP,EAAS7O,GAAY,MAAM,IAAI,IAAIhB,GAAShrJ,EAAS66J,GAAUj0G,EAAIq0G,EAASpP,EAAOgP,EAAS7O,EAAW5O,GAAc,MAAM,QAAQ4N,GAAShrJ,EAAS66J,GAAU,IAAIhvJ,EAAG,IAAIqvJ,EAAsBP,EAAaD,EAAWA,EAAWl1J,OAAO,GAAGm1J,aAA4GpN,GAA3F3mG,EAAIu0G,EAAsBtP,EAAOgP,EAAShvJ,EAAG8uJ,EAAaV,EAAe7c,GAAsBvxI,EAAGrG,QAAwJ,IAA7IqG,EAAGuvJ,QAAQC,EAAcxP,EAAOjlG,EAAI/6C,EAAGunH,QAAQwnC,KAAW/uJ,EAAGuvJ,QAAO,EAASjP,EAAUY,MAAM3P,EAAaoS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAI+N,EAASC,EAAYvQ,EAAQ,CAAC,GAAWp4I,EAAE,EAAEA,EAAE26I,EAAI36I,IAAI,CAAC,IAAI3F,EAAEpB,EAAG+G,GAAG5S,EAASiN,EAAEivI,QAAQjvI,EAAE+9I,QAAQuQ,EAAYvQ,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQsQ,EAAY5P,EAAc7/I,EAAGmgJ,EAAW2O,IAAeD,EAAW/2J,KAAKkI,GAAImgJ,EAAWhB,QAAQA,CAAO,MAASU,EAAc7/I,EAAGmgJ,EAAW2O,IAAeD,EAAW/2J,KAAKkI,GAAiB,iCAATA,EAAGoiJ,KAAuCpiJ,EAAGuvJ,OAA0Fx0G,IAAlFA,EAAI40G,EAAwB3P,EAAOjlG,EAAI/6C,EAAGunH,QAAQ6mC,EAAejO,GAAsF,CAA7D,MAAMtiJ,GAAG0zI,EAAaxuI,MAAM,wBAAwBlF,GAAGk9C,GAAK,CAAC,CAAIA,EAAIx0B,EAAOA,EAAMw0B,EAASyzG,EAAWz0J,KAAKm6C,IAAI86G,EAASzoI,GAAO,EAAG,CAAC,CAAC,SAASmpI,EAAYl1J,EAAEs4B,GAA2D,OAAxDA,EAAEwsH,WAAW9kJ,EAAE8kJ,WAAWxsH,EAAEysH,aAAa/kJ,EAAE+kJ,aAAoBzsH,CAAC,CAAC,SAASw8H,EAAsBtP,EAAOz5H,EAAMvmB,EAAG8uJ,EAAaV,EAAe7c,GAA+D,IAAjD,IAAIqe,EAAuBp6I,IAAI+Q,EAAUnmB,EAAviI,IAA0jI,CAAC,IAAIrJ,EAAEipJ,EAAOrlG,OAAOnlC,GAAG,OAAOze,GAAG,IAAI,IAAI,GAAvlI,IAA0lIqJ,EAAYwvJ,EAAS5P,EAAOp5I,MAAM2f,EAAM/Q,GAAGpV,EAAvmI,MAAmnI,IAA9nI,IAAioIA,EAA8B,MAAM,IAAItE,MAAM,uCAA5BsE,EAAxoI,CAA0sI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAjuI,IAAouIA,GAAlwI,IAA4wIA,EAAW,CAA0I,GAAj6I,IAA2xIA,IAAYmxI,EAAaoS,QAAQ,kCAAkCiM,EAAS5P,EAAOp5I,MAAM2f,EAAM/Q,IAAG+Q,EAAM/Q,EAAE,KAAEA,EAAEwqI,EAAOn/I,QAAQ9J,EAAEwvB,IAAY,GAAmH,MAAM,IAAIzqB,MAAM,2BAA2B/E,EAAE,WAA7JZ,EAAM6pJ,EAAOp5I,MAAM2f,EAAM/Q,GAAG9O,QAAQ,WAAW0nJ,GAAgBpuJ,EAAG4U,IAAIg7I,EAASz5J,EAAMowB,EAAM,GAAGnmB,EAA97I,CAAwgJ,KAAM,IAA/hJ,GAAkiJA,EAA4N,MAAM,IAAItE,MAAM,kCAApN3F,EAAM6pJ,EAAOp5I,MAAM2f,EAAM/Q,GAAG9O,QAAQ,WAAW0nJ,GAAgBpuJ,EAAG4U,IAAIg7I,EAASz5J,EAAMowB,GAAOgrH,EAAaoS,QAAQ,cAAciM,EAAS,uBAAuB74J,EAAE,OAAOwvB,EAAM/Q,EAAE,EAAEpV,EAA3tJ,CAA8xJ,CAAC,MAAM,IAAI,IAAI,OAAOA,GAAG,KAA74J,EAAw5JJ,EAAG6vJ,WAAW7P,EAAOp5I,MAAM2f,EAAM/Q,IAAI,KAAv2J,EAAu3J,KAAr2J,EAAs3J,KAAp2J,EAAq3JpV,EAAr3J,EAAm4JJ,EAAGuvJ,QAAO,EAAK,KAAv8J,EAAg+J,KAAxhK,EAAoiK,KAAjhK,EAAmiK,MAAM,QAAQ,MAAM,IAAIzzJ,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhGy1I,EAAaxuI,MAAM,2BAAtqK,GAAosK3C,GAAUJ,EAAG6vJ,WAAW7P,EAAOp5I,MAAM2f,EAAM/Q,IAAWA,EAAE,IAAI,IAAI,OAAOpV,GAAG,KAA9wK,EAAyxKJ,EAAG6vJ,WAAW7P,EAAOp5I,MAAM2f,EAAM/Q,IAAI,KAAxuK,EAAwvK,KAAtuK,EAAuvK,KAAruK,EAAsvK,MAAM,KAAjzK,EAA00K,KAAl4K,EAA+7K,OAAjDrf,EAAM6pJ,EAAOp5I,MAAM2f,EAAM/Q,IAAY5O,OAAO,KAAU5G,EAAGuvJ,QAAO,EAAKp5J,EAAMA,EAAMyQ,MAAM,GAAG,IAAG,KAAx9K,MAA6+KxG,IAAkBjK,EAAMy5J,GAAh+K,GAA4+KxvJ,GAAwBmxI,EAAaoS,QAAQ,cAAcxtJ,EAAM,sBAAsB6J,EAAG4U,IAAIg7I,EAASz5J,EAAMuQ,QAAQ,WAAW0nJ,GAAgB7nI,KAAkC,iCAAnBuoI,EAAa,KAAuC34J,EAAMqjC,MAAM,qCAAqC+3G,EAAaoS,QAAQ,cAAcxtJ,EAAM,qBAAqBA,EAAM,eAAe6J,EAAG4U,IAAIze,EAAMA,EAAMowB,IAAO,MAAM,KAA73L,EAAu4L,MAAM,IAAIzqB,MAAM,4BAA4B,OAAO0Z,EAAE,IAAI,IAAIze,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOqJ,GAAG,KAAlhM,EAA6hMJ,EAAG6vJ,WAAW7P,EAAOp5I,MAAM2f,EAAM/Q,IAAIpV,EAA19L,EAAw+L,MAAM,KAAzkM,EAAqlMwvJ,EAAS5P,EAAOp5I,MAAM2f,EAAM/Q,GAAGpV,EAAjmM,EAAgnM,MAAM,KAAjlM,EAA0mM,IAAIjK,EAAM6pJ,EAAOp5I,MAAM2f,EAAM/Q,GAAG9O,QAAQ,WAAW0nJ,GAAgB7c,EAAaoS,QAAQ,cAAcxtJ,EAAM,sBAAsB6J,EAAG4U,IAAIg7I,EAASz5J,EAAMowB,GAAO,KAAxvM,EAAwwMnmB,EAAtvM,OAAgxM,OAAOA,GAAG,KAAl2M,EAAg4MJ,EAAGunH,QAA8B,iCAAnBunC,EAAa,KAAuCc,EAASp2H,MAAM,qCAAqC+3G,EAAaoS,QAAQ,cAAciM,EAAS,qBAAqBA,EAAS,gBAAgB5vJ,EAAG4U,IAAIg7I,EAASA,EAASrpI,GAAOA,EAAM/Q,EAAEpV,EAA3oN,EAAopN,MAAM,KAAjlN,EAAimNmxI,EAAaoS,QAAQ,+BAA+BiM,EAAS,OAAO,KAAnpN,EAAoqNxvJ,EAA/vN,EAAwwNmmB,EAAM/Q,EAAE,MAAM,KAAxvN,EAAkwNpV,EAAxuN,EAA8vNmmB,EAAM/Q,EAAE,MAAM,KAAvtN,EAAwuN,MAAM,IAAI1Z,MAAM,+DAAgE0Z,GAAG,CAAC,CAAC,SAASqqI,EAAc7/I,EAAGmgJ,EAAW2O,GAAyE,IAA3D,IAAIvnC,EAAQvnH,EAAGunH,QAAY0nC,EAAW,KAASloJ,EAAE/G,EAAGrG,OAAaoN,KAAI,CAAC,IAAI3F,EAAEpB,EAAG+G,GAAOy6I,EAAMpgJ,EAAEogJ,MAAUrrJ,EAAMiL,EAAEjL,MAAiC,IAAvB25J,EAAItO,EAAM3gJ,QAAQ,MAAY,EAAG,IAAIwN,EAAOjN,EAAEiN,OAAOmzI,EAAM56I,MAAM,EAAEkpJ,GAASvO,EAAUC,EAAM56I,MAAMkpJ,EAAI,GAAOC,EAAkB,UAAT1hJ,GAAkBkzI,OAAeA,EAAUC,EAAMnzI,EAAO,KAAK0hJ,EAAiB,UAARvO,GAAiB,GAAGpgJ,EAAEmgJ,UAAUA,GAAwB,IAAXwO,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAU55J,EAAMiL,EAAEghJ,IAAI,gCAAgCjC,EAAWgC,mBAAmB4N,EAAS55J,GAAO,CAAiB,IAAZ4Q,EAAE/G,EAAGrG,OAAaoN,MAAiBsH,GAAZjN,EAAEpB,EAAG+G,IAAgBsH,UAA8B,QAATA,IAAgBjN,EAAEghJ,IAAI,wCAAmD,UAAT/zI,IAAkBjN,EAAEghJ,IAAI0M,EAAazgJ,GAAQ,MAAM,IAAIyhJ,KAAIvoC,EAAQ1mH,QAAQ,MAAY,GAAGwN,EAAOrO,EAAGqO,OAAOk5G,EAAQ3gH,MAAM,EAAEkpJ,GAAKvO,EAAUvhJ,EAAGuhJ,UAAUh6B,EAAQ3gH,MAAMkpJ,EAAI,KAAQzhJ,EAAO,KAAKkzI,EAAUvhJ,EAAGuhJ,UAAUh6B,GAAQ,IAAI2iC,EAAGlqJ,EAAGoiJ,IAAI0M,EAAazgJ,GAAQ,IAAqD,GAAjD8xI,EAAWj/F,aAAagpG,EAAG3I,EAAUh6B,EAAQvnH,IAAOA,EAAGuvJ,OAA8L,OAAtDvvJ,EAAG8uJ,aAAaA,EAAa9uJ,EAAGivJ,WAAWA,GAAkB,EAAjJ,GAA5C9O,EAAW8B,WAAWiI,EAAG3I,EAAUh6B,GAAY0nC,EAAY,IAAI5gJ,KAAU4gJ,EAAY9O,EAAWkC,iBAAiBh0I,EAAiF,CAAC,SAASshJ,EAAwB3P,EAAOiQ,EAAW1oC,EAAQ6mC,EAAejO,GAAY,GAAG,yBAAyBpqI,KAAKwxG,GAAS,CAAC,IAAI2oC,EAAWlQ,EAAOn/I,QAAQ,KAAK0mH,EAAQ,IAAI0oC,GAAgBpuJ,EAAKm+I,EAAO5zH,UAAU6jI,EAAW,EAAEC,GAAY,GAAG,OAAOn6I,KAAKlU,GAAO,MAAG,YAAYkU,KAAKwxG,IAAU44B,EAAWwC,WAAW9gJ,EAAK,EAAEA,EAAKlI,QAAeu2J,IAAWruJ,EAAKA,EAAK6E,QAAQ,WAAW0nJ,GAAgBjO,EAAWwC,WAAW9gJ,EAAK,EAAEA,EAAKlI,QAAeu2J,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAcxP,EAAOiQ,EAAW1oC,EAAQwnC,GAAU,IAAI5qI,EAAI4qI,EAASxnC,GAA8I,OAA7H,MAALpjG,KAAWA,EAAI67H,EAAOmQ,YAAY,KAAK5oC,EAAQ,MAAY0oC,IAAY9rI,EAAI67H,EAAOmQ,YAAY,KAAK5oC,IAASwnC,EAASxnC,GAASpjG,GAAWA,EAAI8rI,CAAU,CAAC,SAASD,EAAMhQ,EAAOhjG,GAAQ,IAAI,IAAI5G,KAAK4pG,EAAQhjG,EAAO5G,GAAG4pG,EAAO5pG,EAAG,CAAC,SAASg5G,EAASpP,EAAOz5H,EAAM45H,EAAW5O,GAA8C,GAAiB,MAAxCyO,EAAOrlG,OAAOp0B,EAAM,GAAwB,MAA4B,MAAzBy5H,EAAOrlG,OAAOp0B,EAAM,IAAcw0B,EAAIilG,EAAOn/I,QAAQ,SAAM0lB,EAAM,IAAUA,GAAO45H,EAAW1hC,QAAQuhC,EAAOz5H,EAAM,EAAEw0B,EAAIx0B,EAAM,GAAUw0B,EAAI,IAAOw2F,EAAaxuI,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1Bi9I,EAAO1oG,OAAO/wB,EAAM,EAAE,GAAa,CAAC,IAAIw0B,EAAIilG,EAAOn/I,QAAQ,MAAM0lB,EAAM,GAAmG,OAAhG45H,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAOz5H,EAAM,EAAEw0B,EAAIx0B,EAAM,GAAG45H,EAAWiD,WAAkBroG,EAAI,CAAC,CAAC,IAAIq1G,EAAqiD,SAAepQ,EAAOz5H,GAAO,IAAIiT,EAAUkwH,EAAI,GAAO2G,EAAI,6CAAkF,IAArCA,EAAInJ,UAAU3gI,EAAM8pI,EAAIzd,KAAKoN,GAAcxmH,EAAM62H,EAAIzd,KAAKoN,IAAyB,GAAhB0J,EAAI5xJ,KAAK0hC,GAAUA,EAAM,GAAG,OAAOkwH,CAAI,CAA/uDxtI,CAAM8jI,EAAOz5H,GAAWm7H,EAAI0O,EAAOz2J,OAAO,GAAG+nJ,EAAI,GAAG,YAAY3rI,KAAKq6I,EAAO,GAAG,IAAI,CAAC,IAAIz1J,EAAKy1J,EAAO,GAAG,GAAOjG,EAAMzI,EAAI,GAAG,YAAY3rI,KAAKq6I,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOhG,EAAM1I,EAAI,GAAG0O,EAAO,GAAG,GAAOE,EAAUF,EAAO1O,EAAI,GAA2I,OAAxIvB,EAAWkD,SAAS1oJ,EAAKwvJ,GAAOA,EAAMzjJ,QAAQ,kBAAkB,MAAM0jJ,GAAOA,EAAM1jJ,QAAQ,kBAAkB,OAAOy5I,EAAWoQ,SAAgBD,EAAU/wJ,MAAM+wJ,EAAU,GAAG32J,MAAM,CAAE,OAAO,CAAC,CAAC,SAASw1J,EAAiBnP,EAAOz5H,EAAM45H,GAAY,IAAIplG,EAAIilG,EAAOn/I,QAAQ,KAAK0lB,GAAO,GAAGw0B,EAAI,CAAC,IAAIvhB,EAAMwmH,EAAO5zH,UAAU7F,EAAMw0B,GAAKvhB,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAG7/B,OAAOwmJ,EAAWmC,sBAAsB9oH,EAAM,GAAGA,EAAM,IAAWuhB,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAASs0G,EAAkBrP,GAAQ,CAAkjB,SAASwQ,EAAYC,EAAKhoJ,GAA8B,OAAtBgoJ,EAAKvM,UAAUz7I,EAAcgoJ,CAAI,CAAnqVvQ,EAAU9vG,UAAU,CAACnlC,MAAM,SAAS+0I,EAAOI,EAAaE,GAAW,IAAIH,EAAW3sJ,KAAK2sJ,WAAWA,EAAWgB,gBAAgB6O,EAAM5P,EAAaA,EAAa,CAAC,GAAGn1I,EAAM+0I,EAAOI,EAAaE,EAAUH,EAAW3sJ,KAAK+9I,cAAc4O,EAAW4C,aAAa,GAAozTsM,EAAkBj/G,UAAU,CAACy/G,WAAW,SAAStoC,GAAS,IAAI2mC,EAAen4I,KAAKwxG,GAAU,MAAM,IAAIzrH,MAAM,mBAAmByrH,GAAS/zH,KAAK+zH,QAAQA,CAAO,EAAE3yG,IAAI,SAAS4sI,EAAMrrJ,EAAMk6I,GAAQ,IAAI6d,EAAen4I,KAAKyrI,GAAQ,MAAM,IAAI1lJ,MAAM,qBAAqB0lJ,GAAOhuJ,KAAKA,KAAKmG,UAAU,CAAC6nJ,MAAMA,EAAMrrJ,MAAMA,EAAMk6I,OAAOA,EAAO,EAAE12I,OAAO,EAAE+2J,aAAa,SAAS3pJ,GAAG,OAAOvT,KAAKuT,GAAGw6I,SAAS,EAAEO,WAAW,SAAS/6I,GAAG,OAAOvT,KAAKuT,GAAGo4I,OAAO,EAAEyC,SAAS,SAAS76I,GAAG,OAAOvT,KAAKuT,GAAGy6I,KAAK,EAAEG,OAAO,SAAS56I,GAAG,OAAOvT,KAAKuT,GAAGq7I,GAAG,EAAE3iJ,SAAS,SAASsH,GAAG,OAAOvT,KAAKuT,GAAG5Q,KAAK,GAA4Eq6J,EAAY,CAAC,EAAEA,EAAYpgH,qBAAqBogH,IAAcA,EAAY,SAASC,EAAKhoJ,GAAQ,SAAS+M,IAAI,CAA4B,IAAI/M,KAA/B+M,EAAE46B,UAAU3nC,EAAO+M,EAAE,IAAIA,EAAgBi7I,EAAMj7I,EAAE/M,GAAQgoJ,EAAKhoJ,GAAQ,OAAO+M,CAAC,GAAoNtiB,EAAQgtJ,UAAUA,CAAS,EAAE,CAAC,GAAG,mBAAmB,CAAC,SAAS9yE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIztD,EAAUzS,EAAQ,eAAmBu/D,EAASv/D,EAAQ,iBAAiBu/D,SAAaljE,EAAU2D,EAAQ,UAAU3D,UAA0D,IAAIskE,EAAW3gE,EAAQ,gBAAoBguE,EAAW,iDAAiD,SAASuV,EAAatW,GAAyB,OAAVA,EAAK3J,IAAgB,CAAC,SAASkgB,EAAaC,GAAO,IAAIngB,EAAKmgB,EAAMngB,KAAKtpC,EAAKypD,EAAMzpD,KAAK5L,EAAMq1D,EAAMr1D,MAAsCs1D,EAArBD,EAAMhV,WAAoCj1I,MAAMwgG,EAAK,EAAE5L,GAAOwzC,QAAO,SAASxzH,EAAO5Z,GAAM,OAAO4Z,EAAO5Z,EAAKzL,KAAK,GAAE,IAAQ0zE,GAAO,IAAKJ,GAAWE,gBAAgB,QAAQmnF,EAAU,UAAczgB,EAAOxmE,EAAOE,qBAAqB,SAAagnF,EAAIlnF,EAAOE,qBAAqB,SAA4M,OAAnM2mE,EAAKqgB,IAAI,CAACC,GAAG73I,SAAS43I,EAAI,GAAGx1E,aAAa,MAAM,IAAI01E,GAAG93I,SAAS43I,EAAI,GAAGx1E,aAAa,MAAM,KAAKm1D,EAAKL,OAAO,CAAC3vI,EAAEyY,SAASk3H,EAAO,GAAG90D,aAAa,KAAK,IAAI3tB,EAAEz0C,SAASk3H,EAAO,GAAG90D,aAAa,KAAK,KAAYm1D,CAAI,CAAC,IAAIjsB,EAAY,WAAW,SAASA,EAAY9uH,GAA4K,GAAtwC,SAAyBkoD,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAo9BC,CAAgB16I,KAAKixH,GAAajxH,KAAKmH,KAAK,cAAcnH,KAAKmC,QAAQA,GAAS,CAAC,EAAEnC,KAAK09J,YAAY,CAAC,EAA4B,MAAvB19J,KAAKmC,QAAQyxH,WAAgB5zH,KAAKmC,QAAQyxH,UAAS,GAAgC,MAAvB5zH,KAAKmC,QAAQ0xH,SAAgB,MAAM,IAAIvrH,MAAM,4BAA4B,GAAyB,MAAtBtI,KAAKmC,QAAQ6xH,QAAe,MAAM,IAAI1rH,MAAM,2BAA2BtI,KAAK29J,YAAY,CAAC,CAC3u4B,OAD4u4BpkB,EAAatoB,EAAY,CAAC,CAAC5sH,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQm3I,GACtw+B,IAAIskB,EAAUtkB,EAAc7lB,IAAI58C,KAAK,eAAe7uD,OAAOsxH,EAAc7lB,IAAI58C,KAAK,0BAA0B1oE,KAAI,SAAS0oE,GAAM,OAAOA,EAAK1vE,IAAI,IAAgL,OAA7KnH,KAAK4/I,eAAetG,EAAcsG,eAAe5/I,KAAKq/C,SAASi6F,EAAcj6F,SAASr/C,KAAKyzH,IAAI6lB,EAAc7lB,IAAItxH,EAAQ29I,aAAa39I,EAAQ29I,aAAa93H,OAAO41I,GAAkBz7J,CAAO,GAAG,CAACkC,IAAI,MAAM1B,MAAM,SAAaR,GAAYA,EAAQsxH,MAAKzzH,KAAKyzH,IAAItxH,EAAQsxH,KAAOtxH,EAAQq4I,eAAcx6I,KAAKw6I,aAAar4I,EAAQq4I,aAAa,GAAG,CAACn2I,IAAI,QAAQ1B,MAAM,SAAeklJ,GAAoB,IAAIpoJ,EAAOmoJ,EAAehmJ,EAAK,cAAc,MAAuC,OAApCimJ,EAAmBjvH,UAAU,EAAE,GAAiB,CAACh3B,KAAKA,EAAKe,MAAMklJ,EAAmB/jG,OAAO,GAAGrkD,OAAOA,EAAOm0H,UAAS,GAA6C,MAApCi0B,EAAmBjvH,UAAU,EAAE,GAAgB,CAACh3B,KAAKA,EAAKe,MAAMklJ,EAAmB/jG,OAAO,GAAGrkD,OAAOA,EAAOm0H,UAAS,GAAc,IAAI,GAAG,CAACvvH,IAAI,YAAY1B,MAAM,SAAmBu4H,GAAQ,IAAIisB,OAAS,EAAWiB,OAAS,EAA8I,MAApH,SAAhBpoJ,KAAKq/C,UAAmB8nG,EAAS,OAAOiB,EAASgV,IAAkBjW,EAASnnJ,KAAKmC,QAAQyxH,SAAS,MAAM,MAAMw0B,EAAS+U,GAAoBhkB,EAASmG,OAAOmJ,YAAYvtB,EAAO,CAAC0sB,WAAWA,EAAWQ,SAASA,EAASjB,SAASA,GAAU,GAAG,CAAC9iJ,IAAI,SAAS1B,MAAM,SAAgBu6I,EAAK/6I,GAASnC,KAAK09J,YAAYv7J,EAAQ8+I,UAAUjhJ,KAAK09J,YAAYv7J,EAAQ8+I,WAAW,IAAI1G,EAAWv6I,KAAKyzH,IAAItxH,EAAQ8+I,SAASjhJ,KAAKw6I,aAAax6I,KAAKq/C,UAAU,IAAIw+G,EAAW79J,KAAK09J,YAAYv7J,EAAQ8+I,UAAU,GAAgB,iBAAZ/D,EAAKt7I,MAAsBs7I,EAAKz9I,SAASmoJ,EAAY,OAAO,KAAK,IAAI,IAAI9zB,EAAS3xH,EAAQ8lJ,aAAah8I,SAASixI,EAAKv6I,OAAO,IAAImxH,EAAU,MAAM,IAAIxrH,MAAM,qBAAqB,IAAI2rH,EAAUj0H,KAAKmC,QAAQ0xH,SAASC,EAASopB,EAAKv6I,OAAW+5I,EAAImhB,EAAWzhB,aAAap8I,KAAK89J,mBAAmB7pC,GAAe8pC,EAAU/9J,KAAKmC,QAAQ6xH,QAAQC,EAAUH,EAASopB,EAAKv6I,OAAO,OAAO3C,KAAKg+J,gBAAgB9gB,EAAKR,EAAIqhB,EAAgE,CAArD,MAAM1zJ,GAAG,MAAM,CAAC1H,MAAM3C,KAAK4/I,eAAewC,WAAW,CAAC,GAAG,CAAC/9I,IAAI,kBAAkB1B,MAAM,SAAyBu6I,EAAKR,EAAIqhB,GAAW,IADum4B/8I,EAC9l4B07H,IADun4B17H,EACjn4B,MAAM,IAAI1Y,MAAM,wBADyj4B,IAAe0Y,EAC5i4BkmE,EAAK,CAACiyD,EAASC,oBAAoB2kB,EAAU,IAAI5kB,EAASC,oBAAoB2kB,EAAU,KAASnqC,EAAS5zH,KAAKmC,QAAQyxH,UAAUspB,EAAKtpB,SAAyK,MAAM,CAACjxH,MAAjI,SAAhB3C,KAAKq/C,SAA2Br/C,KAAKi+J,oBAAoB/gB,EAAKR,EAAIx1D,EAAK0sC,GAAuB5zH,KAAKk+J,oBAAoBxhB,EAAIx1D,EAAK0sC,GAA+B,GAAG,CAACvvH,IAAI,sBAAsB1B,MAAM,SAA6Bu6I,EAAKR,EAAIx1D,EAAK0sC,GAAU,IAAIipB,EAAO,CAAC3vI,EAAEgwI,EAAKL,OAAO3vI,EAAEktD,EAAE8iF,EAAKL,OAAOziF,GAAO+jG,EAAOjhB,EAAKqgB,IAAIC,GAAOY,EAAOlhB,EAAKqgB,IAAIE,GAAOY,EAAKn3E,EAAK,GAAOo3E,EAAKp3E,EAAK,GAAoE,OAA9D0sC,IAAUipB,EAAO3vI,GAAGixJ,EAAO,EAAEE,EAAK,EAAExhB,EAAOziF,GAAGgkG,EAAO,EAAEE,EAAK,GAASjyE,EAAUuwD,gBAAgBF,EAAI,CAAC2hB,EAAKC,GAAMzhB,EAAO,GAAG,CAACx4I,IAAI,sBAAsB1B,MAAM,SAA6B+5I,EAAIx1D,EAAK0sC,GAAU,OAAOA,EAASvnC,EAAUswD,oBAAoBD,EAAIx1D,GAAMmF,EAAUowD,YAAYC,EAAIx1D,EAAK,GAAG,CAAC7iF,IAAI,mBAAmB1B,MAAM,WAA4B,IAAIwE,EAAK,mBAAmBnH,KAAK29J,YAAY,OAA0B,OAAnB39J,KAAK29J,cAAqBx2J,CAAI,KAAY8pH,CAAW,CADq23B,GACj23BxxH,EAAOC,QAAQuxH,CAAW,EAAE,CAAC,eAAe,EAAE,cAAc,EAAEqoB,cAAc,EAAEkG,OAAO,MAAM,CAAC,EAAE,GAH/rF,CAGmsF,+BCH5+F//I,EAAOC,QAAoS,SAAS2K,EAAEi1B,EAAEsjB,EAAEhzC,GAAG,SAAShD,EAAEuZ,EAAEq1D,GAAG,IAAI54B,EAAEz8B,GAAG,CAAC,IAAImZ,EAAEnZ,GAAG,CAAmE,GAAG5S,EAAE,OAAOA,EAAE4S,GAAE,GAAI,IAAInf,EAAE,IAAIsB,MAAM,uBAAuB6d,EAAE,KAAK,MAAMnf,EAAE2P,KAAK,mBAAmB3P,CAAC,CAAC,IAAIwN,EAAEouC,EAAEz8B,GAAG,CAACzmB,QAAQ,CAAC,GAAG4/B,EAAEnZ,GAAG,GAAG02B,KAAKroC,EAAE9U,SAAQ,SAAS2K,GAAoB,OAAOuC,EAAlB0yB,EAAEnZ,GAAG,GAAG9b,IAAgBA,EAAE,GAAEmK,EAAEA,EAAE9U,QAAQ2K,EAAEi1B,EAAEsjB,EAAEhzC,EAAE,CAAC,OAAOgzC,EAAEz8B,GAAGzmB,OAAO,CAA2C,IAA1C,IAAI6T,OAAE,EAA4C4S,EAAE,EAAEA,EAAEvW,EAAEzJ,OAAOggB,IAAIvZ,EAAEgD,EAAEuW,IAAI,OAAOvZ,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAASgtE,EAAQn6E,EAAOC,GAAS,aAAgM,IAAIo9I,EAAQljE,EAAQ,aAAiB3D,EAAU2D,EAAQ,UAAU3D,UAAc8mE,EAAcnjE,EAAQ,UAAUmjE,cAAkBC,EAAOpjE,EAAQ,YAAgBu/D,EAAS,CAAC,EAA0HA,EAAS/0I,SAAS,CAAC64I,WAAW,SAAoBC,GAAM,OAAIA,EAAKz9I,QAA6By9I,EAAKz9I,OAAyB,IAA7C,WAAwD,EAAEy6E,OAAO4iE,GAAxQ,SAAgBxoB,GAAK,OAAnV3xH,EAAmX,SAAa4xH,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvbjwH,EAAiX,SAArX2T,EAAkX,CAAC,GAArV3D,OAAOwlI,eAAe7hI,EAAI3T,EAAI,CAAC1B,MAAMA,EAAM+2I,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAY5hI,EAAI3T,GAAK1B,EAAaqV,EAA/K,IAAyBA,EAAI3T,EAAI1B,CAAqb,IAAiKw6I,WAAW,CAACpqH,MAAM,IAAIw0B,IAAI,MAAM4xF,EAASiE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAMrlI,OAAI,EAAO1D,OAAK,EAAef,EAAE,EAAEA,EAAEN,UAAU9M,OAAOoN,GAAG,EAAE,CAACyE,EAAI/E,UAAUM,GAAGe,EAAKD,OAAOC,KAAK0D,GAAK,IAAI,IAAI+rB,EAAE,EAAEA,EAAEzvB,EAAKnO,OAAO49B,GAAG,EAAGs5G,EAAO/oI,EAAKyvB,IAAI/rB,EAAI1D,EAAKyvB,GAAI,CAAC,OAAOs5G,CAAM,EAAElE,EAASiC,QAAQ,SAASkC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAEnE,EAASqE,WAAW,SAAS5wI,GAAG,IAAI,QAAOye,IAAJze,EAAe,OAAiB,OAAO6wI,mBAAmBC,OAAOvE,EAASwE,cAAc/wI,IAAmI,CAA9H,MAAMvC,GAAG,IAAIlC,EAAI,IAAIG,MAAM,OAA0F,MAAnFH,EAAIkqF,WAAWxoF,KAAK+C,EAAEzE,EAAIkqF,WAAWurD,YAAY,kCAAwCz1I,CAAG,CAAC,EAAEgxI,EAAS0E,WAAW,SAASjxI,GAAG,OAAOkxI,SAAS3nI,mBAAmBvJ,GAAG,EAAEusI,EAASgC,QAAQ,SAASxjE,EAAIomE,GAAoE,OAA3C,IAAI9nE,EAAU,CAAC8nE,aAAaA,IAA6B5nE,gBAAgBwB,EAAI,WAAW,EAAEwhE,EAAS6E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC9E,EAAS+E,aAAa,SAASvmE,GAAK,OAAOA,EAAIzkE,QAAQ+qI,EAAiB,OAAO,EAAE9E,EAASgF,eAAe9pI,OAAOC,KAAK6kI,EAAS6E,SAAS7vI,KAAI,SAASiwI,GAAS,IAAIC,EAAUlF,EAAS6E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAIh8H,OAAO62H,EAAS+E,aAAaG,GAAW,KAAKE,KAAK,IAAIj8H,OAAO62H,EAAS+E,aAAaE,GAAS,KAAKrrH,MAAMsrH,EAAU92F,IAAI62F,EAAQ,IAAGjF,EAASqF,WAAW,SAASn4F,GAAqB,IAAb,IAAIz2C,OAAE,EAAe2D,EAAE,EAAEiB,EAAE2kI,EAASgF,eAAeh4I,OAAOoN,EAAEiB,EAAEjB,IAAK3D,EAAEupI,EAASgF,eAAe5qI,GAAG8yC,EAAOA,EAAOnzC,QAAQtD,EAAE0uI,OAAO1uI,EAAE23C,KAAK,OAAOlB,CAAM,EAAE8yF,EAASsF,WAAW,SAASp4F,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOzxC,YAAwB,IAAb,IAAIhF,OAAE,EAAe2D,EAAE,EAAEiB,EAAE2kI,EAASgF,eAAeh4I,OAAOoN,EAAEiB,EAAEjB,IAAK3D,EAAEupI,EAASgF,eAAe5qI,GAAG8yC,EAAOA,EAAOnzC,QAAQtD,EAAE2uI,KAAK3uI,EAAEmjB,OAAO,OAAOszB,CAAM,EAAE8yF,EAASzzI,UAAU,SAASsS,GAAK,OAAOjE,KAAK0D,MAAM1D,KAAKC,UAAUgE,GAAK,EAAEmhI,EAASuF,aAAa,SAASC,GAAQ,OAAOA,EAAOnD,QAAO,SAAS1tI,EAAO8wI,GAAgD,OAAzCzxI,MAAMyvC,UAAUt4C,KAAK+nC,MAAMv+B,EAAO8wI,GAAc9wI,CAAM,GAAE,GAAG,EAAE,IAAI+wI,EAAY,IAAIv8H,OAAOlH,OAAO0jI,aAAa,KAAK,KAA8U,SAASC,EAAoB58I,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,WAAW78I,EAAQm5B,QAAQ,sBAAsBn5B,EAAQxB,UAAsN,MAA5MwH,EAAIkqF,WAAW,CAACzxF,GAAG,uBAAuBuB,EAAQxB,SAASi9I,YAAY,WAAWz7I,EAAQm5B,QAAQ,sBAAsBn5B,EAAQxB,SAASu6H,OAAO/4H,EAAQ+4H,OAAOnvH,MAAM5J,EAAQ4J,MAAMuvB,QAAQn5B,EAAQm5B,SAAenzB,CAAG,CAA1qBgxI,EAASwE,cAAc,SAAS/wI,GAAG,OAAOA,EAAEsG,QAAQ2rI,EAAY,IAAI,EAAE1F,EAAS8F,aAAa,SAASC,EAAM9qE,GAA4C,IAAnC,IAAI+qE,EAAW,GAAOn5G,OAAM,EAA0C,OAA5BA,EAAMk5G,EAAME,KAAKhrE,KAAiB+qE,EAAW76I,KAAK,CAACs6I,MAAM54G,EAAM62G,OAAO72G,EAAMj6B,QAAQ,OAAOozI,CAAU,EAAEhG,EAASkG,aAAa,SAASrnI,GAAK,OAAO3D,OAAOC,KAAK0D,GAAK7R,MAAM,EAAoWgzI,EAASh0F,SAAS,SAAS+1E,EAAO5/F,EAAQvvB,GAAO,IAAI,IAAIwH,EAAExH,EAAMyI,EAAE0mH,EAAO/0H,OAAOoN,EAAEiB,EAAEjB,IAAwB,GAAV2nH,EAAO3nH,GAAW5Q,QAAQ,KAAK24B,EAAQ,IAAK,OAAO/nB,EAAGwrI,EAAoB,CAACp+I,SAAS,QAAQ26B,QAAQA,EAAQ4/F,OAAOA,EAAOnvH,MAAMA,GAAO,EAAEotI,EAASj0F,QAAQ,SAASg2E,EAAO5/F,EAAQvvB,GAAO,IAAI,IAAIwH,EAAExH,EAAMwH,GAAG,EAAEA,IAAI,CAAC,IAAI2pI,EAAKhiB,EAAO3nH,GAAG,GAAqC,IAAlC2pI,EAAKv6I,MAAM0K,QAAQ,IAAIiuB,KAAiE,IAAnD,CAAC,IAAI,KAAKjuB,QAAQ6vI,EAAKv6I,MAAM24B,EAAQn1B,OAAO,IAAU,OAAOoN,CAAE,CAACwrI,EAAoB,CAACp+I,SAAS,OAAO26B,QAAQA,EAAQ4/F,OAAOA,EAAOnvH,MAAMA,GAAO,EAAEtM,EAAOC,QAAQy5I,CAAQ,EAAE,CAAC,WAAW,EAAE,YAAY,EAAEqG,OAAO,KAAK,EAAE,CAAC,SAAS5lE,EAAQn6E,EAAOC,GAAS,aAAa,SAAS8hJ,EAAQlwI,GAAStR,KAAKmH,KAAK,eAAenH,KAAKsR,QAAQA,EAAQtR,KAAKyhJ,MAAM,IAAIn5I,MAAMgJ,GAASmwI,KAAK,CAAmC,SAASzC,EAAgB1tI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAKsR,QAAQA,EAAQtR,KAAKyhJ,MAAM,IAAIn5I,MAAMgJ,GAASmwI,KAAK,CAAuC,SAASC,EAAmBpwI,GAAStR,KAAKmH,KAAK,mBAAmBnH,KAAKsR,QAAQA,EAAQtR,KAAKyhJ,MAAM,IAAIn5I,MAAMgJ,GAASmwI,KAAK,CAA0C,SAASE,EAAgBrwI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAKqyF,WAAW,CAACurD,YAAY,iBAAiB59I,KAAKsR,QAAQA,EAAQtR,KAAKyhJ,MAAM,IAAIn5I,MAAMgJ,GAASmwI,KAAK,CAAngBD,EAAQ5kG,UAAUt0C,MAAMs0C,UAA+HoiG,EAAgBpiG,UAAU,IAAI4kG,EAAmIE,EAAmB9kG,UAAU,IAAI4kG,EAA2KG,EAAgB/kG,UAAU,IAAI4kG,EAAQ/hJ,EAAOC,QAAQ,CAAC8hJ,QAAQA,EAAQxC,gBAAgBA,EAAgB2C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS9nE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIkiJ,EAAWhoE,EAAQ,kBAAsBioE,EAAoBjoE,EAAQ,4BAAgCkoE,EAAaloE,EAAQ,oBAAwBmoE,EAAgBnoE,EAAQ,+BAAmC/J,EAAO+J,EAAQ,oBAAwBooE,EAAmB,CAAC7B,kBAAkB,SAA2B1sB,GAAkI,OAA1GA,EAAI58C,KAAK,2DAA2D1oE,KAAI,SAAS0oE,GAAM,OAAOA,EAAK1vE,IAAI,IAAyB6gB,OAAO,CAAC,wBAAwB,EAAEq5H,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAACxwE,EAAOkyE,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2B1sB,GAAwG,OAAhFA,EAAI58C,KAAK,iCAAiC1oE,KAAI,SAAS0oE,GAAM,OAAOA,EAAK1vE,IAAI,IAAyB6gB,OAAO,CAAC,qBAAqB,EAAEq5H,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAACxwE,EAAOgyE,EAAoBE,EAAgBD,EAAaF,IAAaniJ,EAAOC,QAAQ,CAAC4iJ,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,EAAE,iBAAiB,EAAE,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAASpoE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIs9I,EAAOpjE,EAAQ,YAAgBu/D,EAASv/D,EAAQ,eAAe,SAAS4oE,EAAQC,EAAMz8G,GAAO,OAAOy8G,EAAM,IAAIz8G,EAAM62G,QAAQ72G,EAAM62G,OAAO4F,EAAM,EAAE,CAAC,SAASC,EAAgBxF,EAAKyF,GAAW,GAAe,QAAZzF,EAAKt7I,MAA8B,UAAhBs7I,EAAKv8I,UAAoBu8I,EAAK7uI,KAAK,CAAC,GAAGs0I,EAAW,MAAM,IAAIr6I,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZ40I,EAAKt7I,MAA8B,QAAhBs7I,EAAKv8I,UAAkBu8I,EAAK7uI,KAAK,CAAC,IAAIs0I,EAAW,MAAM,IAAIr6I,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAOq6I,CAAS,CAAC,SAASC,EAAWh1I,EAAEC,GAAG,OAAOD,EAAEivI,OAAOhvI,EAAEgvI,MAAM,CAAC,SAASgG,EAAOvuB,GAAK,IAAIvhG,EAAM,EAAc,MAATuhG,EAAI,KAAUvhG,EAAM,GAAE,IAAIhnB,EAAMuoH,EAAIjnH,QAAQ,KAASk6C,GAAa,IAATx7C,EAAWuoH,EAAInuH,OAAO,EAAE4F,EAAM,MAAM,CAACuoH,IAAIA,EAAIlhH,MAAM2f,EAAMw0B,GAAK5mD,SAAiB,IAARoyB,EAAU,QAAQ,MAAM,CAA6hC,SAAS+vH,EAA0B3gJ,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,gBAAmM,MAAnL72I,EAAIkqF,WAAW,CAAC0wD,KAAK5gJ,EAAQ4gJ,KAAKr6H,MAAM,KAAK,GAAGo7B,OAAO,GAAGljD,GAAG,eAAe0O,QAAQnN,EAAQ4gJ,KAAKnF,YAAY,2BAA2Bz7I,EAAQ4gJ,KAAKj/F,OAAO,EAAE,IAAI,iBAAuB37C,CAAG,CAAC,SAAS66I,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACvG,OAAO,GAAOkG,OAAK,EAAOE,EAAiBh/I,SAAQ,SAASo/I,GAAgBN,EAAKG,EAASp/F,OAAOs/F,EAAmBvG,OAAOwG,EAAexG,OAAOuG,EAAmBvG,SAAqC,UAA1BwG,EAAe1iJ,UAAoBwiJ,GAAuC,QAA1BE,EAAe1iJ,WAAmBwiJ,KAA0C,UAA1BE,EAAe1iJ,SAAoBmiJ,EAA0B,CAACC,KAAKA,IAA3+B,SAAmC5gJ,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,gBAAyL,MAAzK72I,EAAIkqF,WAAW,CAAC0wD,KAAK5gJ,EAAQ4gJ,KAAKr6H,MAAM,KAAK,GAAG9nB,GAAG,eAAe0O,QAAQnN,EAAQ4gJ,KAAKnF,YAAY,2BAA2Bz7I,EAAQ4gJ,KAAKj/F,OAAO,EAAE,IAAI,iBAAuB37C,CAAG,CAAsuBm7I,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAAS/8I,OAAQ48I,EAAKG,EAASp/F,OAAOs/F,EAAmBvG,OAAOwG,EAAsBD,EAAmBvG,QAAWsG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAIttI,EAAIvV,GAAU,IAAIuiC,EAAQ,GAAO25G,GAAQ,EAAE,IAAiD,KAA9CA,EAAO2G,EAAIn2I,QAAQ6I,EAAI2mI,EAAO,KAAmB35G,EAAQ5+B,KAAK,CAACu4I,OAAOA,EAAOl8I,SAASA,WAA4B,IAAVk8I,GAAa,OAAO35G,CAAO,CAAC,SAASugH,EAAOC,GAAmB,IAAIptF,EAAMt2D,KAAKA,KAAK0jJ,kBAAkBA,EAAkB1jJ,KAAK2jJ,KAAK,GAAG3jJ,KAAK4jJ,gBAAgB,SAASzG,GAAY7mF,EAAMqtF,KAAKrtF,EAAMotF,kBAAkBp1I,KAAK,IAAI,IAAIuuI,EAAO,EAAEvmF,EAAMutF,OAAOvtF,EAAMotF,kBAAkBv1I,KAAI,SAAS+uI,GAA0B,OAApBL,GAAQK,EAAK/2I,QAAqB+2I,EAAK/2I,MAAM,IAAG,IAAI88I,EAAiB9J,EAASuF,aAAa,CAAC6E,EAAcjtF,EAAMqtF,KAAKxG,EAAWpqH,MAAM,SAASwwH,EAAcjtF,EAAMqtF,KAAKxG,EAAW51F,IAAI,SAAS55C,KAAKi1I,GAAYI,EAAuBC,EAAiB3sF,EAAMqtF,MAAM,IAAIG,EAAgB,CAAC/wH,MAAMoqH,EAAWpqH,MAAM5sB,OAAOohD,IAAI41F,EAAW51F,IAAIphD,QAAY49I,EAAQ,EAAMC,EAAe,EAAE1tF,EAAM4kE,OAAO5kE,EAAMutF,OAAO11I,KAAI,SAAS0uI,EAAOtpI,GAAkI,IAA/H,IAAIkvI,EAAM,CAAC5F,EAAOA,EAAO78I,KAAK0jJ,kBAAkBnwI,GAAGpN,QAAY89I,EAAYjkJ,KAAK0jJ,kBAAkBnwI,GAAO2wI,EAAmB,GAASF,EAAef,EAAiB98I,QAAQq8I,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmB5/I,KAAK2+I,EAAiBe,IAAiBA,IAAiB,IAAIv7H,EAAM,GAAOk6E,EAAO,EAAKohD,EAAQ,IAAGphD,EAAOohD,EAAQA,EAAQ,GAAEG,EAAmBjgJ,SAAQ,SAASkgJ,GAAmB,IAAIxhJ,EAAMshJ,EAAYngG,OAAO6+C,EAAOwhD,EAAkBtH,OAAOA,EAAOl6C,GAAWhgG,EAAMwD,OAAO,GAAGsiB,EAAMnkB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQ8lB,EAAMnkB,KAAK,CAAC1C,KAAK,YAAYjB,SAASwjJ,EAAkBxjJ,WAAWgiG,EAAOwhD,EAAkBtH,OAAOA,EAAOiH,EAAgBK,EAAkBxjJ,SAAS,IAAGojJ,EAAQphD,EAAOshD,EAAY99I,OAAO,IAAIxD,EAAMshJ,EAAYngG,OAAO6+C,GAAoE,OAAzDhgG,EAAMwD,OAAO,GAAGsiB,EAAMnkB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe8lB,CAAK,GAAE6tC,EAAM,CAAC,CAAC72D,EAAOC,QAAQ,CAAC+X,MAAM,SAAe2sI,EAAUjH,GAAY,IAAIwF,GAAU,EAAUe,EAAkB,GAAGU,EAAUngJ,SAAQ,SAASi5I,IAAMyF,EAAUD,EAAgBxF,EAAKyF,KAAqC,YAAZzF,EAAKt7I,MAAkB8hJ,EAAkBp/I,KAAK44I,EAAKv6I,MAAO,IAAG,IAAIs0E,EAAO,IAAIwsE,EAAOC,GAAmBzsE,EAAO2sE,gBAAgBzG,GAAY,IAAIkH,EAAS,GAAOt4I,EAAM,EAAoW,OAAlWq4I,EAAUngJ,SAAQ,SAASi5I,GAAMyF,EAAUD,EAAgBxF,EAAKyF,GAA0B,YAAZzF,EAAKt7I,OAAkBs7I,EAAKv8I,SAASgiJ,EAAU,YAAY,cAAgBA,GAAuB,YAAZzF,EAAKt7I,MAAkBuL,MAAMyvC,UAAUt4C,KAAK+nC,MAAMg4G,EAASptE,EAAOikD,OAAOnvH,GAAOoC,KAAI,SAAS6T,GAAiD,MAAlC,YAATA,EAAEpgB,OAAkBogB,EAAErhB,SAAS,aAAmBqhB,CAAC,KAAIjW,KAAas4I,EAAS//I,KAAK44I,EAAM,IAAUmH,CAAQ,EAAEC,SAAS,SAAkBlwE,EAAQmwE,GAAS,IAAIC,EAApgJ,SAAoBpwE,EAAQqwE,EAAeC,GAAuU,IAArT,IAAI/hD,EAAO,EAAMgiD,EAAcvwE,EAAQjuE,OAAWy+I,EAAWzL,EAASuF,aAAa,CAAC+F,EAAet2I,KAAI,SAASmmH,GAAK,MAAM,CAACA,IAAIA,EAAIjmH,MAAK,EAAK,IAAGq2I,EAAiBv2I,KAAI,SAASmmH,GAAK,MAAM,CAACA,IAAIA,EAAIjmH,MAAK,EAAM,MAAKmtI,QAAO,SAASoJ,EAAWtlH,GAA4B,OAAzBslH,EAAWtlH,EAAEg1F,KAAKh1F,EAAEjxB,KAAYu2I,CAAU,GAAE,CAAC,GAAOC,EAAa,GAASliD,EAAOgiD,IAA+D,KAAhDhiD,EAAOvuB,EAAQ/mE,QAAQ,IAAIs1F,KAA5B,CAA0D,IAAIk6C,EAAOl6C,EAAOA,EAAOvuB,EAAQ/mE,QAAQ,IAAIs1F,GAAQ,IAAImiD,EAAQ1wE,EAAQhhE,MAAMypI,EAAOl6C,EAAO,GAAOoiD,EAAQlC,EAAOiC,GAASxwB,EAAIywB,EAAQzwB,IAAI3zH,EAASokJ,EAAQpkJ,SAAa0N,EAAKu2I,EAAWtwB,GAAc,MAANjmH,GAAqBw2I,EAAavgJ,KAAK,CAAC1C,KAAK,MAAMjB,SAASA,EAAS0N,KAAKA,EAAKwuI,OAAOA,EAAOl6I,MAAMmiJ,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAW5wE,EAAQmwE,EAAQl2I,KAAKk2I,EAAQU,OAAWtiD,EAAO,EAAMu4B,EAAOspB,EAAQhJ,QAAO,SAAStgB,EAAOl1F,GAAO,IAAIrjC,EAAMyxE,EAAQtwB,OAAO6+C,EAAO38D,EAAM62G,OAAOl6C,GAA4K,OAAjKhgG,EAAMwD,OAAO,GAAG+0H,EAAO52H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQggG,EAAO38D,EAAM62G,OAAO72G,EAAMrjC,MAAMwD,cAAc6/B,EAAM62G,OAAU72G,EAAMrjC,MAAMwD,OAAO,GAAG+0H,EAAO52H,KAAK0hC,GAAck1F,CAAM,GAAE,IAAQv4H,EAAMyxE,EAAQtwB,OAAO6+C,GAAqE,OAA1DhgG,EAAMwD,OAAO,GAAG+0H,EAAO52H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAeu4H,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAASthD,EAAQn6E,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiBwlJ,GAAM,IAAIC,EAAcpxI,KAAKC,UAAUoxI,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAIvtH,EAAKstH,EAAclyI,WAAW,OAAO4kB,KAAQutH,EAAMA,EAAMvtH,GAAMutH,EAAMvtH,GAAMqtH,EAAK74G,MAAMrsC,KAAKiT,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS2mE,EAAQn6E,EAAOC,GAAS,aAAa,SAAS2lJ,EAAiB1G,EAAOz0F,GAAuB,IAAhB,IAAIo7F,GAAU,EAAU/xI,EAAE,EAAEiB,EAAEmqI,EAAOx4I,OAAOoN,EAAEiB,EAAEjB,IAAQ22C,EAAM32C,IAAIorI,EAAOprI,GAAGpN,UAAgC,IAAZm/I,GAAe3G,EAAOprI,GAAG22C,EAAM32C,IAAIspI,OAAO8B,EAAO2G,GAAUp7F,EAAMo7F,IAAWzI,UAAQyI,EAAS/xI,GAAG,IAAe,IAAZ+xI,EAAe,MAAM,IAAIh9I,MAAM,qBAAqB,OAAOg9I,CAAQ,CAAC7lJ,EAAOC,QAAQ,SAASi/I,GAAQ,IAAI4G,EAAY5G,EAAOnD,QAAO,SAAS/6F,EAAIm+F,GAAO,OAAOn+F,EAAIm+F,EAAMz4I,MAAM,GAAE,GAAGw4I,EAAOA,EAAO71I,QAAO,SAAS81I,GAAO,OAAOA,EAAMz4I,OAAO,CAAC,IAA6F,IAA1F,IAAIq/I,EAAY,IAAIr4I,MAAMo4I,GAAiBr7F,EAAMy0F,EAAOxwI,KAAI,WAAW,OAAO,CAAC,IAAOoF,EAAE,EAAQA,GAAGgyI,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiB1G,EAAOz0F,GAAOs7F,EAAYjyI,GAAGorI,EAAO8G,GAAYv7F,EAAMu7F,IAAav7F,EAAMu7F,KAAclyI,GAAG,CAAC,OAAOiyI,CAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS5rE,EAAQn6E,EAAOC,GAAS,aAAa,SAASgmJ,IAAW,CAAC,SAASC,EAASpyI,GAAG,OAAOA,CAAC,CAAC9T,EAAOC,QAAQ,SAASD,GAAQ,IAAI2E,EAAS,CAAC2V,IAAI2rI,EAASjuI,MAAMiuI,EAAS71E,OAAO61E,EAASE,UAAUF,EAASnF,mBAAmBoF,EAAS/E,eAAe+E,EAASE,UAAUF,GAAU,GAAGtxI,OAAOC,KAAKlQ,GAAU0hJ,OAAM,SAASzhJ,GAAK,OAAO5E,EAAO4E,EAAI,IAAI,MAAM,IAAIiE,MAAM,2FAAgL,OAArF+L,OAAOC,KAAKlQ,GAAUH,SAAQ,SAASI,GAAK5E,EAAO4E,GAAK5E,EAAO4E,IAAMD,EAASC,EAAI,IAAU5E,CAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASm6E,EAAQn6E,EAAOC,GAAS,aAAa,IAA+BqmJ,EAAUnsE,EAAQ,gBAAoBu/D,EAASv/D,EAAQ,gBAAoB6lE,EAAQ7lE,EAAQ,qBAAuDosE,EAArBpsE,EAAQ,aAAyCosE,mBAAuBhJ,EAAOpjE,EAAQ,aAA+V,SAASqsE,EAAkC9jJ,GAAS,IAAIg7H,EAAKh7H,EAAQg7H,KAASh1H,EAAI,IAAI60I,EAAOgC,gBAAgB,0CAA4O,MAAlM72I,EAAIkqF,WAAW,CAACzxF,GAAG,yCAAyCg9I,YAAY,YAAYzgB,EAAK,GAAGx6H,MAAM,2BAA2Bw6H,EAAK,GAAGx6H,MAAM,IAAIujJ,WAAW/oB,EAAK,GAAGx6H,MAAMwjJ,WAAWhpB,EAAK,GAAGx6H,OAAawF,CAAG,CAAC,SAASi+I,EAAmBlJ,GAAM,OAAOA,EAAKmJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAI/9I,MAAM,uDAAuD40I,EAAKmJ,SAAS,KAAK,CAAC,SAASC,EAAShH,GAAQ,GAAmB,IAAhBA,EAAOn5I,OAAY,MAAM,GAA4C,IAAzC,IAAIogJ,EAAU,EAAMC,EAAWlH,EAAO,GAAW/rI,EAAE,EAAEA,EAAE+rI,EAAOn5I,OAAOoN,IAAI,CAAC,IAAIkzI,EAAanH,EAAO/rI,GAAoD,GAAe,KAAhEgzI,GAAWH,EAAmBK,EAAavJ,OAAuB,CAAIuJ,EAAavJ,KAAKv6I,QAAQ6jJ,EAAWtJ,KAAKv6I,OAAiC,KAA1B8jJ,EAAavJ,KAAKv6I,OAAYsjJ,EAAkC,CAAC9oB,KAAK,CAACqpB,EAAWtJ,KAAKuJ,EAAavJ,QAAQ,IAAIwJ,EAAMJ,EAAShH,EAAOlsI,MAAMG,EAAE,IAAI,MAAM,CAAC,CAACizI,EAAWC,IAAez+H,OAAO0+H,EAAM,CAAC,CAAC,IAAIxJ,EAAKsJ,EAAWtJ,MAAp2C,SAAqC/6I,GAAS,IAAIkkJ,EAASlkJ,EAAQkkJ,SAAa/mH,EAAa,UAAX+mH,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAel+I,EAAI,IAAI60I,EAAOgC,gBAAgB2H,EAAE,SAAaryB,EAAInyH,EAAQ+6I,KAAKv6I,MAA2F,MAArFwF,EAAIkqF,WAAW,CAACzxF,GAAG0+B,EAAE,QAAQs+G,YAAY,qBAAqBtpB,EAAI,OAAOh1F,EAAEyjH,KAAKzuB,GAAWnsH,CAAG,CAAwhCy+I,CAA4B,CAAC1J,KAAKA,EAAKmJ,SAASnJ,EAAKmJ,UAAU,CAAC,IAAItE,EAAgB,CAAC56I,KAAK,kBAAkB0+I,UAAU,SAAmB3qB,EAAO2rB,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAAcvG,EAAOsG,EAAnzD,aAAu0D1qB,GAAQokB,EAAOA,EAAOnxI,KAAI,SAAS44I,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnChH,EAAOyG,EAAUzG,IAAuC2H,EAAcD,EAAM74I,KAAI,SAAS+4I,GAAM,IAAIC,EAASD,EAAK,GAAGhK,KAAKiK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmB9qB,EAAO9nH,MAAM8zI,EAAK,GAAGrK,OAAOqK,EAAK,GAAGrK,UAAasK,EAA4K,CAAnHhO,EAASj0F,QAAQg2E,EAAOisB,EAASD,EAAK,GAAGrK,QAAkB1D,EAASh0F,SAAS+1E,EAAOisB,EAASD,EAAK,GAAGrK,SAA9I,CAACqK,EAAK,GAAGrK,OAAOqK,EAAK,GAAGrK,OAAgJ,IAAOuK,EAAiB,EAAMC,OAAW,EAAO,OAAOnsB,EAAOsgB,QAAO,SAAS8L,EAAUpK,EAAK3pI,GAAG,IAAIg0I,EAAOH,EAAiBJ,EAAM7gJ,QAAQ8gJ,EAAcG,GAAkB,IAAI7zI,EAAM2zI,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAUhjJ,KAAK44I,GAAaoK,EAAiH,GAApGE,EAAa,KAAKj0I,IAAG8zI,EAAW,IAAMH,EAAK,GAAGrK,SAAStpI,GAAG2zI,EAAK,GAAGrK,SAAStpI,GAAG8zI,EAAW/iJ,KAAK44I,GAASsK,EAAa,KAAKj0I,EAAE,CAAC,IAAIk0I,EAASvsB,EAAOgsB,EAAK,GAAGrK,eAAe4K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAUhjJ,KAAKmjJ,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAG7nJ,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQsC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,EAAE,oBAAoB,EAAE,YAAY,KAAK,EAAE,CAAC,SAASnoE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIy5I,EAASv/D,EAAQ,gBAAoB+tE,EAAe,oBAAwBlI,EAAQ7lE,EAAQ,qBAAyBguE,EAAW,OAAWhG,EAAW,CAACz6I,KAAK,aAAasQ,MAAM,SAAeowI,GAAoB,IAAIpoJ,EAAOmoJ,EAAehmJ,EAAK,cAAc,MAA2B,MAAxBimJ,EAAmB,GAAgB,CAACjmJ,KAAKA,EAAKe,MAAMklJ,EAAmB/jG,OAAO,GAAGqjG,SAAS,OAAO1nJ,OAAOA,EAAO4mJ,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAACjmJ,KAAKA,EAAKe,MAAMklJ,EAAmB/jG,OAAO,GAAGqjG,SAAS,OAAO1nJ,OAAOA,EAAO4mJ,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAACjmJ,KAAKA,EAAKe,MAAMklJ,EAAmB/jG,OAAO,GAAGrkD,OAAOA,EAAO4mJ,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAACjmJ,KAAKA,EAAKe,MAA9HklJ,EAAmB30I,QAAQy0I,EAAe,MAAgGR,SAA7EU,EAAmB30I,QAAQy0I,EAAe,MAAqDloJ,OAAOA,EAAO4mJ,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAU7sB,GAAQ,GAAe,eAAZ6sB,EAAiC,OAAO7sB,EAAOsgB,QAAO,SAASre,EAAK+f,EAAKL,GAAqG,MAA9E,gBAAZK,EAAKt7I,MAAsBs7I,EAAKz9I,SAASmoJ,GAAYzqB,EAAK74H,KAAK,CAAC44I,KAAKA,EAAKL,OAAOA,IAAgB1f,CAAI,GAAE,GAAG,EAAEttD,OAAO,SAAgBqtE,EAAK/6I,GAAS,GAAgB,iBAAZ+6I,EAAKt7I,MAAsBs7I,EAAKz9I,SAASmoJ,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjE7lJ,EAAQ8lJ,aAAaC,SAAShL,EAAKv6I,OAAzQ,SAAkB4xH,GAAO,IAAI0zB,EAAa9lJ,EAAQ8lJ,aAAaE,sBAAsB5zB,EAAM2oB,EAAKv6I,OAAOqlJ,EAAW1jJ,KAAKnC,EAAQ0tE,OAAOspE,EAASiE,aAAa,CAAC,EAAEj7I,EAAQ,CAACu9I,SAASxC,EAAKwK,UAAUvqB,KAAK,CAAC,EAAE8qB,aAAaA,KAAgB,GAAmD/K,EAAK4K,UAAgB,CAACnlJ,MAAMqlJ,EAAW15I,KAAK,IAAI,GAAG7O,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQmC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAAShoE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAASv/D,EAAQ,gBAAoBojE,EAAOpjE,EAAQ,aAAiBguE,EAAW,SAAanI,EAAQ7lE,EAAQ,qBAAkW,SAASwuE,EAASvB,GAAM,IAAI3J,EAAK2J,EAAK3J,KAAKtpC,EAAKizC,EAAKjzC,KAAK5L,EAAM6+C,EAAK7+C,MAAMqgD,EAAWxB,EAAKwB,WAAWt8I,EAAM86I,EAAK96I,MAAUu8I,EAAeD,EAAWj1I,MAAMwgG,EAAK,EAAE5L,GAAsO,OAA/NsgD,EAAerkJ,SAAQ,SAAS+d,EAAEzO,GAAMA,IAAIxH,EAAM6nG,EAAK,IAAsB,gBAAT5xF,EAAEpgB,MAA+B,YAATogB,EAAEpgB,MAA+B,cAAbogB,EAAErhB,WAAxmB,SAAgDwB,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,gDAAoD1qB,EAAInyH,EAAQ+6I,KAAKv6I,MAAkK,MAA5JwF,EAAIkqF,WAAW,CAACzxF,GAAG,+CAA+Cg9I,YAAY,WAAWtpB,EAAIyuB,KAAK5gJ,EAAQ+6I,KAAKv6I,MAAM2lJ,eAAenmJ,EAAQmmJ,gBAAsBngJ,CAAG,CAAoTogJ,CAAuC,CAACD,eAAeA,EAAepL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIsL,EAAa,WAAW,SAASA,KAA5hC,SAAyBn+F,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgB16I,KAAKwoJ,GAAcxoJ,KAAKmH,KAAK,cAAc,CAAyvB,OAAxvBoyI,EAAaiP,EAAa,CAAC,CAACnkJ,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQm3I,GAAgE,OAAjDt5I,KAAK4/I,eAAetG,EAAcsG,eAAsBz9I,CAAO,GAAG,CAACkC,IAAI,QAAQ1B,MAAM,SAAeklJ,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAACjmJ,KAAjE,cAA2Ee,MAAMklJ,EAAmB/jG,OAAO,GAAGrkD,OAAOmoJ,EAAW,GAAG,CAACvjJ,IAAI,YAAY1B,MAAM,SAAmBu4H,GAAQ,OAAOie,EAASmG,OAAOmJ,YAAYvtB,EAAO,CAAC0sB,WAAWA,EAAWQ,SAASA,EAASjB,SAASnnJ,KAAK4/I,eAAeuC,WAAW,GAAG,CAAC99I,IAAI,SAAS1B,MAAM,SAAgBu6I,EAAK/6I,GAAS,GAAG+6I,EAAKz9I,SAASmoJ,EAAY,OAAO,KAAK,IAAIjlJ,EAAMR,EAAQ8lJ,aAAah8I,SAASixI,EAAKv6I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQ86I,WAAWC,IAAY,CAACv6I,MAAMA,EAAM,KAAY6lJ,CAAY,CAA12B,GAA82B/oJ,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQ,IAAI+I,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAAS5uE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI2F,EAAQ7lE,EAAQ,qBAAyB8uE,EAAO,WAAW,SAASA,KAAxN,SAAyBr+F,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgB16I,KAAK0oJ,GAAQ1oJ,KAAKmH,KAAK,QAAQ,CAA4V,OAA3VoyI,EAAamP,EAAO,CAAC,CAACrkJ,IAAI,MAAM1B,MAAM,SAAaqV,GAAQA,EAAI0nI,WAAU1/I,KAAK0/I,SAAS1nI,EAAI0nI,UAAsB,MAAV1nI,EAAInO,OAAY7J,KAAK6J,KAAKmO,EAAInO,KAAK,GAAG,CAACxF,IAAI,iBAAiB1B,MAAM,SAAwBg+I,GAAQ,IAAIrqF,EAAMt2D,KAAK,OAAOqU,OAAOC,KAAKtU,KAAK0/I,UAAUlE,QAAO,SAASmF,EAAOz2G,GAA+C,OAAzCy2G,EAAOz2G,GAAM,CAACA,KAAKA,EAAKrgC,KAAKysD,EAAMzsD,MAAa82I,CAAM,GAAEA,EAAO,KAAY+H,CAAM,CAArb,GAAybjpJ,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQ,IAAIiJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAAS9uE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI+/I,EAAQ7lE,EAAQ,qBAAyB+uE,EAAc,CAACxhJ,KAAK,sBAAsB0+I,UAAU,SAAmB3qB,GAAQ,IAAIxzE,EAAM,GAAOkhG,GAAQ,EAAU96I,EAAOotH,EAAOsgB,QAAO,SAAStgB,EAAOgiB,GAA8X,MAAzW,QAAZA,EAAKt7I,MAA8B,UAAhBs7I,EAAKv8I,UAAoBu8I,EAAK7uI,MAAmB,UAAb6uI,EAAKv6I,QAAiBimJ,GAAQ,GAAQA,GAAwB,gBAAZ1L,EAAKt7I,MAAuBs7I,EAAKz9I,SAAQioD,EAAM,GAAG/kD,MAAM,8BAA6B+kD,EAAMpjD,KAAK44I,IAAWhiB,EAAO52H,KAAK44I,GAAqB,QAAZA,EAAKt7I,MAA8B,QAAhBs7I,EAAKv8I,UAAkBu8I,EAAK7uI,MAAmB,WAAb6uI,EAAKv6I,QAAkBwK,MAAMyvC,UAAUt4C,KAAK+nC,MAAM6uF,EAAOxzE,GAAOkhG,GAAQ,EAAMlhG,EAAM,IAAUwzE,CAAM,GAAE,IAA6C,OAAzC/tH,MAAMyvC,UAAUt4C,KAAK+nC,MAAMv+B,EAAO45C,GAAc55C,CAAM,GAAGrO,EAAOC,QAAQ,WAAW,OAAO+/I,EAAQkJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAAS/uE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIy5I,EAASv/D,EAAQ,eAAmBM,EAAO,CAAC2rE,UAAU,SAAmB3qB,EAAOykB,GAAS,SAASiG,EAAUmC,EAAU7sB,GAAQ,OAAOykB,EAAQxxI,KAAI,SAAS1O,GAAQ,OAAOA,EAAOmmJ,UAAUmC,EAAU7sB,EAAO,GAAE,CAA6J,OAA5J,SAAS2qB,EAAU3qB,GAAQ,OAAOykB,EAAQnE,QAAO,SAAStgB,EAAOz7H,GAAQ,OAAOA,EAAOomJ,UAAU3qB,EAAO,CAAC2qB,UAAUA,EAAUD,UAAUA,GAAW,GAAE1qB,EAAO,CAAQ2qB,CAAU3qB,EAAO,EAAEzjH,MAAM,SAAeoxI,EAAMlJ,GAAyQ,IAAImJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMrN,QAAO,SAAStgB,EAAO8tB,GAAO,MAAgB,cAAbA,EAAMpnJ,MAAoBknJ,EAA+B,UAAjBE,EAAMroJ,SAAuC,QAAjBqoJ,EAAMroJ,UAA/b,SAAqBknJ,EAAmB3sB,GAAgC,IAAxB,IAAI+tB,OAAa,EAAe11I,EAAE,EAAEiB,EAAEmrI,EAAQx5I,OAAOoN,EAAEiB,EAAEjB,IAA2E,GAA/C01I,EAAXtJ,EAAQpsI,GAAwBkE,MAAMowI,GAA+D,OAA1B3sB,EAAO52H,KAAK2kJ,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmB1O,EAASqF,WAAWqJ,GAAuD3sB,IAASA,EAAO52H,KAAK,CAAC1C,KAAK,cAAce,MAAMklJ,IAAqB16I,MAAMyvC,UAAUt4C,KAAK+nC,MAAM6uF,EAAO6tB,GAAWA,EAAU,GAAU7tB,IAAO2sB,EAAmB,GAAU3sB,IAAU4tB,GAA+B,YAAbE,EAAMpnJ,MAAmC,cAAjBonJ,EAAMroJ,SAAwBknJ,GAAoBmB,EAAMrmJ,MAAWomJ,EAAUzkJ,KAAK0kJ,GAAc9tB,IAAOA,EAAO52H,KAAK0kJ,GAAc9tB,EAAM,GAAE,GAAG,GAAGz7H,EAAOC,QAAQw6E,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASN,EAAQn6E,EAAOC,GAAS,aAAa,IAAIypJ,EAAavvE,EAAQ,mBAAuBu/D,EAASv/D,EAAQ,eAAu1Bn6E,EAAOC,QAAjmB,SAASmwE,EAAO1tE,GAA2J,OAAlJA,EAAQ0tE,OAAOA,EAAO1tE,EAAQw9I,QAAQx9I,EAAQw9I,QAAYx9I,EAAQ8lJ,eAAc9lJ,EAAQ8lJ,aAAakB,EAAaC,uBAAuBjnJ,IAAgBA,EAAQu9I,SAASvxI,KAAI,SAAS+uI,GAAM,IAAImM,EAAxc,SAAsBnM,EAAK/6I,GAAmC,IAA1B,IAAIknJ,OAAe,EAAe91I,EAAE,EAAEiB,EAAErS,EAAQw9I,QAAQx5I,OAAOoN,EAAEiB,EAAEjB,IAAgF,GAA5C81I,EAAnBlnJ,EAAQw9I,QAAQpsI,GAA0Bs8D,OAAOqtE,EAAK/6I,GAA4B,OAAOknJ,EAAgB,OAAO,CAAK,CAA0OC,CAAapM,EAAK/6I,GAAS,GAAGknJ,EAAgB,OAAOA,EAAe1mJ,MAAM,GAAe,gBAAZu6I,EAAKt7I,KAAqB,CAAC,IAAIe,EAAMR,EAAQ8lJ,aAAah8I,SAASixI,EAAKv6I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQ86I,WAAWC,IAAa/D,EAASsF,WAAW97I,EAAM,CAAC,GAAe,YAAZu6I,EAAKt7I,MAA8B,QAAZs7I,EAAKt7I,KAAc,OAAOs7I,EAAKv6I,MAAM,MAAM,IAAI2F,MAAM,2BAA2B40I,EAAKt7I,KAAK,IAAI,IAAG0M,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASsrE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIkD,EAAOpjE,EAAQ,YAAgBuvE,EAAa,WAAW,SAASA,EAAahnJ,IAAjO,SAAyBkoD,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgB16I,KAAKmpJ,GAAcnpJ,KAAKupJ,UAAUpnJ,EAAQonJ,UAAUvpJ,KAAKm1B,UAAUhzB,EAAQgzB,UAAUn1B,KAAKk6E,OAAO/3E,EAAQ+3E,MAAM,CAAmmE,OAAlmEq/D,EAAa4P,EAAa,CAAC,CAAC9kJ,IAAI,WAAW1B,MAAM,SAAkB2xH,EAAIziH,EAASi2I,GAAmC,OAAzBA,EAASA,IAAU,EAAa9nJ,KAAKwpJ,cAAcxpJ,KAAKiM,SAASqoH,GAAKziH,EAASi2I,EAAS,GAAG,CAACzjJ,IAAI,oBAAoB1B,MAAM,SAA2BmlJ,EAAS2B,EAAQ9mJ,GAAUmlJ,GAAU2B,EAAQ9mJ,EAAO,GAAG,CAAC0B,IAAI,eAAe1B,MAAM,SAAsBA,EAAMf,GAAM,OAAc,MAAPe,IAAcA,GAAc,mBAAPf,GAAwC,IAAfe,EAAMwD,MAAU,GAAG,CAAC9B,IAAI,gBAAgB1B,MAAM,SAAuBA,EAAM8mJ,EAAQ3B,GAAU,IAAIlmJ,EAAKyS,OAAOuoC,UAAUhoC,SAASioC,KAAKl6C,GAAW+mJ,EAAa1pJ,KAAKm1B,UAAUn1B,KAAK2pJ,KAAK,GAAG3pJ,KAAK4pJ,aAAajnJ,EAAMf,GAAO,OAAO5B,KAAK6pJ,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAP9nJ,EAAqI,MAAU,oBAAPA,EAAiC5B,KAAK6pJ,mBAAmB/B,EAAS2B,EAAQ9mJ,IAAkB,IAARA,EAAqB3C,KAAK6pJ,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQn1B,EAAJhhH,EAAE,EAAQA,EAAE5Q,EAAMwD,OAAOoN,IAAKghH,EAAM5xH,EAAM4Q,GAAGvT,KAAK6pJ,mBAAmB/B,EAAS2B,EAAQl1B,EAAiL,GAAG,CAAClwH,IAAI,WAAW1B,MAAM,SAAkB2xH,EAAIq1B,GAAK3pJ,KAAK2pJ,IAAS,MAALA,EAAU3pJ,KAAKm1B,UAAUhvB,OAAO,EAAEwjJ,EAAI,IAAIxhJ,OAAI,EAAW+xE,OAAO,EAAWpsE,OAAO,EAAWymH,EAAMv0H,KAAKm1B,UAAUn1B,KAAK2pJ,KAAK,IAAIzvE,EAAOl6E,KAAKk6E,OAAOo6C,EAAkP,CAA7O,MAAM/kH,GAA8N,MAAvNpH,EAAI,IAAI60I,EAAO0E,mBAAmB,oCAAuCrvD,WAAW,CAACzxF,GAAG,iCAAiC0zH,IAAIA,EAAIspB,YAAY,gCAAgCtpB,EAAI,qBAAqBw1B,UAAUv6I,GAAapH,CAAG,CAAC,IAAI2F,EAAOosE,EAAOrkE,IAAI0+G,EAAM,CAACo1B,IAAI3pJ,KAAK2pJ,IAAIx0H,UAAUn1B,KAAKm1B,WAAiQ,CAArP,MAAM5lB,GAAsO,MAA/NpH,EAAI,IAAI60I,EAAO0E,mBAAmB,kCAAqCrvD,WAAW,CAACzxF,GAAG,+BAA+Bg9I,YAAY,gCAAgCtpB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAIw1B,UAAUv6I,GAAapH,CAAG,CAAC,OAAW,MAAR2F,GAAc9N,KAAK2pJ,IAAI,EAAU3pJ,KAAKiM,SAASqoH,EAAIt0H,KAAK2pJ,IAAI,GAAU77I,CAAM,GAAG,CAACzJ,IAAI,wBAAwB1B,MAAM,SAA+B4xH,EAAMD,GAAK,IAAInyH,EAAQ,CAAConJ,UAAUvpJ,KAAKupJ,UAAUn2I,MAAM,GAAG+hB,UAAUn1B,KAAKm1B,UAAU/hB,MAAM,IAA2H,OAAvHjR,EAAQ+3E,OAAOl6E,KAAKk6E,OAAO/3E,EAAQgzB,UAAUn1B,KAAKm1B,UAAUnN,OAAOusG,GAAOpyH,EAAQonJ,UAAUvpJ,KAAKupJ,UAAUvhI,OAAOssG,GAAY,IAAI60B,EAAahnJ,EAAQ,KAAYgnJ,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAI3sE,EAAO2sE,EAAK3sE,OAAOijD,EAAK0pB,EAAK1pB,KAASh7H,EAAQ,CAAC+3E,OAAOA,EAAOijD,KAAKA,EAAMh7H,UAAkB,IAA4B,OAAzBA,EAAQgzB,UAAU,CAACgoG,GAAa,IAAIgsB,EAAahnJ,EAAQ,EAAE1C,EAAOC,QAAQypJ,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAASvvE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIy5I,EAASv/D,EAAQ,eAAmBojE,EAAOpjE,EAAQ,YAA4V,SAASmwE,EAAiBnL,EAAMtqB,GAAK,GAAkB,IAAfsqB,EAAMz4I,OAAY,OAAO,EAAM,IAAsC6jJ,EAA1BpL,EAAMA,EAAMz4I,OAAO,GAA4BmuH,IAAIxwE,OAAO,GAAOmmG,EAAgB31B,EAAIxwE,OAAO,EAAEwwE,EAAInuH,OAAO,GAAG,OAA+C,IAAxC6jJ,EAAa38I,QAAQ48I,EAAoB,CAAC,SAASC,EAAOtL,EAAMtqB,GAA2B,OAAtBsqB,EAAMt6I,KAAK,CAACgwH,IAAIA,IAAasqB,CAAK,CAA0nB,SAASuL,EAAUjN,EAAKmL,EAAWlmJ,GAAS,IAAIglJ,EAASjK,EAAKiK,UAAUhlJ,EAAQglJ,SAAap7I,EAAMs8I,EAAWh7I,QAAQ6vI,GAAM,IAAIiK,EAAU,OAAOkB,EAAW,IAAIrgD,OAAM,EAAO4L,OAAK,EAAO,IAAI5L,EAAMmxC,EAASh0F,SAASkjG,EAAWlB,EAASp7I,GAAO6nG,EAAKulC,EAASj0F,QAAQmjG,EAAWlB,EAASp7I,EAAsM,CAA/L,MAAM+9I,GAA0K,MAA5JA,aAAqB9M,EAAOgC,iBAAxkD,SAAmC78I,GAAS,IAAIgG,EAAI,IAAI60I,EAAOgC,gBAAgB,4BAAgC1qB,EAAInyH,EAAQ+6I,KAAKv6I,MAAsM,MAAhMwF,EAAIkqF,WAAW,CAACzxF,GAAG,2BAA2Bg9I,YAAY,YAAYtpB,EAAI,IAAIw1B,UAAU3nJ,EAAQ2nJ,UAAU/G,KAAKzuB,EAAI+zB,WAAWlmJ,EAAQkmJ,WAAWlB,SAAShlJ,EAAQglJ,SAASp7I,MAAM5J,EAAQ4J,OAAa5D,CAAG,CAA0wCiiJ,CAA0B,CAAClN,KAAKA,EAAK4M,UAAUA,EAAUzB,WAAWA,EAAWlB,SAASA,EAASp7I,MAAMA,IAAc+9I,CAAS,CAAC,IAAIO,EAAUhC,EAAWj1I,MAAMwgG,EAAK7nG,GAAWu+I,EAAWjC,EAAWj1I,MAAMrH,EAAM,EAAEi8F,EAAM,GAAOuiD,EAAMpoJ,EAAQimJ,SAAS,CAACr8I,MAAMA,EAAMmxI,KAAKA,EAAKmN,UAAUA,EAAUC,WAAWA,EAAW12C,KAAKA,EAAK5L,MAAMA,EAAMqgD,WAAWA,IAAmF,OAAlEkC,EAAMpkJ,SAAQokJ,EAAMgU,SAAS,CAAClU,EAAUC,GAAYC,EAAM,CAACA,IAAcpR,EAASuF,aAAa,CAAC2J,EAAWj1I,MAAM,EAAEwgG,GAAM22C,EAAMlC,EAAWj1I,MAAM40F,EAAM,IAAI,CAA4TvoG,EAAOC,QAAQ,CAAC+oJ,YAA3U,SAAqBJ,EAAWlmJ,GAAyQ,OAA3OkmJ,EAAW7M,QAAO,SAAStyI,EAASg0I,GAA0F,MAArE,gBAAZA,EAAKt7I,MAAsBs7I,EAAKz9I,SAAS0C,EAAQylJ,YAAY1+I,EAAS5E,KAAK44I,GAAah0I,CAAQ,GAAE,IAAqBjF,SAAQ,SAASi5I,GAAMmL,EAAW8B,EAAUjN,EAAKmL,EAAWlmJ,EAAQ,IAAUkmJ,CAAU,EAAyCrC,mBAAl9C,SAA4Bv9H,GAAiD,IAA1C,IAAI+hI,EAAvZ,SAA4B/hI,GAA4H,IAArH,IAAiI6rG,EAA7H6I,EAAK10G,EAAM3f,QAAO,SAASo0I,GAAM,MAAmB,QAAZA,EAAKt7I,IAAY,IAAGuM,KAAI,SAAS+uI,GAAM,OAAOA,EAAKv6I,KAAK,IAAOmL,EAAO,GAAWyF,EAAE,EAAMA,EAAE4pH,EAAKh3H,OAAOoN,IAA6B,OAAxB+gH,EAAI6I,EAAK5pH,IAAU,GAAaw2I,EAAiBj8I,EAAOwmH,GAAMxmH,EAAO6iC,MAAW7iC,EAAOo8I,EAAOp8I,EAAOwmH,GAAkC,MAApBA,EAAIA,EAAInuH,OAAO,KAAU2H,EAAOo8I,EAAOp8I,EAAOwmH,IAAM,OAAOxmH,CAAM,CAAoD28I,CAAmBhiI,GAAelV,EAAE,EAAEA,EAAEi3I,EAAYrkJ,OAAOoN,IAAI,CAAC,IAAIirJ,EAAWhU,EAAYj3I,GAAG,GAAqC,IAAlCirJ,EAAWlqC,IAAIjnH,QAAQ,SAAc,MAAM,OAAO,GAAqC,IAAlCmxJ,EAAWlqC,IAAIjnH,QAAQ,SAAc,MAAM,MAAO,CAAC,OAAO,CAAK,EAAgvC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASusE,EAAQn6E,EAAOC,GAAS,aAAa,IAAIy5I,EAASv/D,EAAQ,eAAo7C,IAAI8wE,EAA75C9wE,EAAQ,YAA85CkjE,EAAxe,SAAoB1oE,EAAQu2E,GAAc,IAAIrwI,EAAI,CAAC,EAAEA,EAAI85D,QAAQA,EAAQ95D,EAAIqwI,aAAaA,EAAarwI,EAAIswI,mBAAmBtwI,EAAIqwI,aAAar8I,KAAK,KAAK,IAAIu4C,EAAO,IAAIvkC,OAAO,QAAQhI,EAAIswI,mBAAmB,wBAAwBtwI,EAAIswI,mBAAmB,KAAK,KAAyL,OAApLtwI,EAAIkqI,QAAQrL,EAAS8F,aAAap4F,EAAOvsC,EAAI85D,SAAS95D,EAAIuwI,0BAA0BvwI,EAAIkqI,QAAQr2I,KAAI,WAAW,OAAO,CAAC,IAAGmM,EAAIwwI,gBAAgBxwI,EAAIkqI,QAAQr2I,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6BmM,GAAK,SAASywI,IAAkB,IAAIC,EAAG,CAACpM,MAAMzxI,MAAMyvC,UAAUxpC,MAAMypC,KAAK5pC,YAAY+3I,EAAGpM,MAAMnqI,QAAQ,IAAIuxB,EAAMglH,EAAGpM,MAAM,GAAGoM,EAAGpM,MAAM,GAAGoM,EAAGpM,MAAMrrH,QAAQyS,GAAOglH,EAAGpM,MAAMjuG,MAAM,IAAIksG,EAAOmO,EAAGpM,MAAMjuG,MAA4F,OAAtFq6G,EAAGnO,OAAOA,EAAOmO,EAAG3rH,OAAM,EAAK/kB,EAAIkqI,QAAQjxH,QAAQy3H,GAAI1wI,EAAIwwI,gBAAgBv3H,QAAQ,GAAUjZ,EAAIuwI,0BAA0Bt3H,QAAQ,EAAE,EAAgC,IAA5BjZ,EAAI85D,QAAQ/mE,QAAQ,OAAuC,IAA5BiN,EAAI85D,QAAQ/mE,QAAQ,MAAWiN,EAAI85D,QAAQlhE,QAAQ,eAAe63I,GAAiB,IAAIn7I,EAAE,IAAI0S,OAAO,kBAAkBhI,EAAIswI,mBAAmB,MAAmY,OAA7XtwI,EAAI85D,QAAQlhE,QAAQtD,EAAEm7I,GAAmQn7I,EAAE,IAAI0S,OAAO,QAAQhI,EAAIswI,mBAAmB,oBAAoBtwI,EAAI85D,QAAQlhE,QAAQtD,GAAtU,WAAwB,IAAIo7I,EAAG,CAACpM,MAAMzxI,MAAMyvC,UAAUxpC,MAAMypC,KAAK5pC,YAAY+3I,EAAGpM,MAAMjuG,MAAM,IAAIksG,EAAOmO,EAAGpM,MAAMjuG,MAAqF,OAA/Eq6G,EAAGnO,OAAOA,EAAOmO,EAAGC,MAAK,EAAK3wI,EAAIkqI,QAAQlgJ,KAAK0mJ,GAAI1wI,EAAIwwI,gBAAgBxmJ,KAAK,GAAUgW,EAAIuwI,0BAA0BvmJ,KAAK,EAAE,IAA4GgW,CAAG,CAAmc4wI,CAAoB5wI,EAAI,IAAkC7a,EAAOC,QAAQ,SAAS00E,EAAQu2E,GAAc,OAAOxR,EAASzzI,UAAUglJ,EAASt2E,EAAQu2E,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAAS/wE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAASv/D,EAAQ,eAAmBuvE,EAAavvE,EAAQ,mBAAuBuxE,EAAWvxE,EAAQ,iBAAqBojE,EAAOpjE,EAAQ,YAAgBwxE,EAAMxxE,EAAQ,WAAeyxE,EAAOzxE,EAAQ,eAAmB0xE,EAAQ1xE,EAAQ,eAAmPn6E,EAAOC,QAAQ,WAAW,SAAS0hJ,EAAahtE,EAAQjyE,IAArqB,SAAyBkoD,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgB16I,KAAKohJ,GAAcphJ,KAAKurJ,SAASppJ,GAASnC,KAAKwrJ,WAAW,CAACC,QAAQ,CAACxK,SAASjhJ,KAAKihJ,YAAYjhJ,KAAKi0B,KAAKmgD,EAAQ,CAA2tD,OAA1tDmlE,EAAa6H,EAAa,CAAC,CAAC/8I,IAAI,OAAO1B,MAAM,SAAcyxE,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAIjsE,EAAI,IAAI60I,EAAO2E,gBAAgB,4BAAoF,MAAxDx5I,EAAIkqF,WAAWzxF,GAAG,sCAA4CuH,CAAG,CAACnI,KAAKo0E,QAAQA,CAAO,GAAG,CAAC/vE,IAAI,UAAU1B,MAAM,SAAiBw6H,GAA8H,OAAxHn9H,KAAKm9H,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAEn9H,KAAKioJ,aAAakB,EAAaC,uBAAuB,CAACjsB,KAAKn9H,KAAKm9H,KAAKjjD,OAAOl6E,KAAKk6E,SAAgBl6E,IAAI,GAAG,CAACqE,IAAI,WAAW1B,MAAM,SAAkBR,GAASnC,KAAKihJ,SAAS9+I,EAAQ8+I,SAASjhJ,KAAK2/I,QAAQx9I,EAAQw9I,QAAQ3/I,KAAK4/I,eAAez9I,EAAQy9I,eAAevrI,OAAOC,KAAK6kI,EAAS/0I,UAAU+J,KAAI,SAAS9J,GAAKrE,KAAKqE,GAAmB,MAAdlC,EAAQkC,GAAWlC,EAAQkC,GAAK80I,EAAS/0I,SAASC,EAAI,GAAErE,KAAK,GAAG,CAACqE,IAAI,cAAc1B,MAAM,WAAuB,OAA/nCyxE,EAAmpCp0E,KAAKo0E,QAAhpCu2E,EAAwpC3qJ,KAAK4/I,eAAeqC,iBAA7mCn0I,EAArCq9I,EAAW/2E,EAAQu2E,GAAiCnG,QAAQr2I,KAAI,SAAS63B,GAAO,OAAOA,EAAM44G,MAAM,EAAE,IAAUzF,EAASqF,WAAWrF,EAASwE,cAAc7vI,EAAOQ,KAAK,MAA9N,IAAsB8lE,EAAQu2E,EAA+D78I,CAA8nC,GAAG,CAACzJ,IAAI,aAAa1B,MAAM,SAAoBqV,GAAKhY,KAAK2/I,QAAQ17I,SAAQ,SAASxE,GAAQA,EAAOsa,IAAI/B,EAAI,GAAE,GAAG,CAAC3T,IAAI,QAAQ1B,MAAM,WAAyc,OAAxb3C,KAAK0rJ,SAASN,EAAM9G,SAAStkJ,KAAKo0E,QAAQ,CAAC/lE,KAAKrO,KAAK4/I,eAAeqC,iBAAiBgD,MAAMjlJ,KAAK4/I,eAAesC,oBAAoBliJ,KAAKwrJ,WAAW,CAACC,QAAQ,CAACC,SAAS1rJ,KAAK0rJ,YAAY1rJ,KAAK6oJ,MAAMuC,EAAM3zI,MAAMzX,KAAK0rJ,SAAS1rJ,KAAKm9I,YAAYn9I,KAAKwrJ,WAAW,CAACC,QAAQ,CAAC5C,MAAM7oJ,KAAK6oJ,SAAS7oJ,KAAKk7H,OAAOmwB,EAAO5zI,MAAMzX,KAAK6oJ,MAAM7oJ,KAAK2/I,SAAS3/I,KAAKwrJ,WAAW,CAACC,QAAQ,CAACvwB,OAAOl7H,KAAKk7H,UAAUl7H,KAAKqoJ,WAAWgD,EAAOxF,UAAU7lJ,KAAKk7H,OAAOl7H,KAAK2/I,SAAgB3/I,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,SAAgBqnC,GAAyR,OAArRhqC,KAAKihJ,SAASj3G,EAAGhqC,KAAKwrJ,WAAW,CAACC,QAAQ,CAACpD,WAAWroJ,KAAKqoJ,cAAcroJ,KAAKo0E,QAAQk3E,EAAQ,CAAC5L,SAAS1/I,KAAKqoJ,WAAWlrB,KAAKn9H,KAAKm9H,KAAKwiB,QAAQ3/I,KAAK2/I,QAAQzlE,OAAOl6E,KAAKk6E,OAAO+iE,WAAWj9I,KAAKi9I,WAAWgE,SAASjhJ,KAAKihJ,WAAWjhJ,KAAKwrJ,WAAW,CAACC,QAAQ,CAACr3E,QAAQp0E,KAAKo0E,WAAkBp0E,IAAI,KAAYohJ,CAAY,CAAh6D,EAAm6D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAASxnE,EAAQn6E,EAAOC,GAAS,SAASu2E,EAAU9zE,GAASnC,KAAKmC,QAAQA,GAAS,CAACwpJ,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAa5rJ,KAAK6rJ,OAAM,CAAK,CAAC,SAASlrJ,EAASgrJ,EAAQppJ,GAAMA,EAAKupJ,WAAWH,EAAQG,WAAWvpJ,EAAKwpJ,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAASx3I,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAEy3I,UAAU,IAAI,UAAUz3I,EAAEs3I,WAAW,QAAQt3I,EAAEu3I,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMp5H,EAAM5sB,GAAQ,MAAiB,iBAAPgmJ,EAAwBA,EAAMroG,OAAO/wB,EAAM5sB,GAAgBgmJ,EAAMhmJ,QAAQ4sB,EAAM5sB,GAAQ4sB,EAAc,IAAIq5H,KAAKxkF,KAAKxsD,OAAO+wI,EAAMp5H,EAAM5sB,GAAQ,GAAUgmJ,CAAM,CAAiP,SAASE,EAAcC,EAAO/pJ,GAAU+pJ,EAAOC,eAAkDD,EAAOC,eAAeh+D,YAAYhsF,GAApE+pJ,EAAO54B,IAAInlC,YAAYhsF,EAAmD,CAA3/I0zE,EAAUr5B,UAAUu5B,gBAAgB,SAASq2E,EAAOr3B,GAAU,IAAIhzH,EAAQnC,KAAKmC,QAAYsqJ,EAAI,IAAIC,EAAcC,EAAWxqJ,EAAQwqJ,YAAY,IAAIf,EAAe7N,EAAa57I,EAAQ47I,aAAiB4N,EAAQxpJ,EAAQwpJ,QAAYiB,EAAazqJ,EAAQ0qJ,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAI1O,aAA2a,SAA2BsP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI5O,EAAa,CAAC,EAAMuP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMnpJ,GAAK,IAAIqM,EAAG28I,EAAUhpJ,IAASqM,GAAI48I,IAAY58I,EAAqB,GAAlB28I,EAAUlnJ,OAAU,SAAS8Y,GAAKouI,EAAUhpJ,EAAI4a,EAAI,EAAEouI,GAAUtP,EAAa15I,GAAKqM,GAAI,SAASuO,GAAKvO,EAAG,WAAWrM,EAAI,MAAM4a,EAAI+sI,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqBzP,CAAY,CAAj7B0P,CAAkB1P,EAAa4O,EAAWhB,GAASc,EAAIE,WAAWxqJ,EAAQwqJ,YAAYA,EAAc,aAAapqI,KAAK4yG,KAAW23B,EAAUY,KAAK,IAAIZ,EAAU5vF,KAAK,IAAI0vF,EAAa,IAAI,gCAA+BA,EAAajjH,IAAIijH,EAAajjH,KAAK,uCAA0C6iH,EAAQC,EAAIh1I,MAAM+0I,EAAOI,EAAaE,GAAgBL,EAAI1O,aAAaxuI,MAAM,sBAA6Bo9I,EAAWj5B,GAAG,EAAuqBk4B,EAAWhvG,UAAU,CAAC+wG,cAAc,WAAW3tJ,KAAK0zH,KAAI,IAAKk6B,GAAmBC,eAAe,KAAK,KAAK,MAAS7tJ,KAAK2rJ,UAAS3rJ,KAAK0zH,IAAIo6B,YAAY9tJ,KAAK2rJ,QAAQM,SAAS,EAAEv+F,aAAa,SAASsuF,EAAa+R,EAAUC,EAAMjvI,GAAO,IAAI20G,EAAI1zH,KAAK0zH,IAAQlnH,EAAGknH,EAAIu6B,gBAAgBjS,EAAagS,GAAOD,GAAeG,EAAInvI,EAAM5Y,OAAOkmJ,EAAcrsJ,KAAKwM,GAAIxM,KAAKusJ,eAAe//I,EAAGxM,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQn/I,GAAI,IAAI,IAAI+G,EAAE,EAAEA,EAAE26I,EAAI36I,IAAI,CAAKyoI,EAAaj9H,EAAMovI,OAAO56I,GAA9B,IAAqC5Q,EAAMoc,EAAM9S,SAASsH,GAAmCsK,GAA5BmwI,EAAMjvI,EAAMqvI,SAAS76I,GAAYmgH,EAAI26B,kBAAkBrS,EAAagS,IAAOhuJ,KAAK2rJ,SAAShrJ,EAASoe,EAAMuvI,WAAW/6I,GAAGsK,GAAMA,EAAKlb,MAAMkb,EAAK0wI,UAAU5rJ,EAAM6J,EAAGgiJ,iBAAiB3wI,EAAK,CAAC,EAAE4wI,WAAW,SAASzS,EAAa+R,EAAUC,GAAO,IAAIU,EAAQ1uJ,KAAKusJ,eAA2BmC,EAAQ36B,QAAQ/zH,KAAKusJ,eAAemC,EAAQ/gE,UAAU,EAAEghE,mBAAmB,SAAS9zI,EAAO+zI,GAAK,EAAEC,iBAAiB,SAASh0I,GAAQ,EAAEi0I,sBAAsB,SAAStlG,EAAO3/C,GAAM,IAAIklJ,EAAI/uJ,KAAK0zH,IAAIs7B,4BAA4BxlG,EAAO3/C,GAAM7J,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQoD,GAAK1C,EAAcrsJ,KAAK+uJ,EAAI,EAAEE,oBAAoB,SAASC,EAAGn8H,EAAM5sB,GAAQ,EAAEgpJ,WAAW,SAAShD,EAAMp5H,EAAM5sB,GAA8C,GAAtCgmJ,EAAMD,EAAU7/G,MAAMrsC,KAAKiT,WAAoB,CAAC,GAAGjT,KAAK6rJ,MAAO,IAAIuD,EAASpvJ,KAAK0zH,IAAI27B,mBAAmBlD,QAAgBiD,EAASpvJ,KAAK0zH,IAAIplC,eAAe69D,GAAUnsJ,KAAKusJ,eAAgBvsJ,KAAKusJ,eAAeh+D,YAAY6gE,GAAkB,QAAQ7sI,KAAK4pI,IAAQnsJ,KAAK0zH,IAAInlC,YAAY6gE,GAAUpvJ,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAASnoJ,GAAM,EAAEooJ,YAAY,WAAWvvJ,KAAK0zH,IAAI87B,WAAW,EAAEpC,mBAAmB,SAASzB,IAAY3rJ,KAAK2rJ,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAE7gC,QAAQ,SAASkhC,EAAMp5H,EAAM5sB,GAAQgmJ,EAAMD,EAAU7/G,MAAMrsC,KAAKiT,WAAW,IAAIw8I,EAAKzvJ,KAAK0zH,IAAIg8B,cAAcvD,GAAOnsJ,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQ8D,GAAMpD,EAAcrsJ,KAAKyvJ,EAAK,EAAEE,WAAW,WAAW3vJ,KAAK6rJ,OAAM,CAAI,EAAE+D,SAAS,WAAW5vJ,KAAK6rJ,OAAM,CAAK,EAAEgE,SAAS,SAAS1oJ,EAAK2oJ,EAAS7D,GAAU,IAAI8D,EAAK/vJ,KAAK0zH,IAAIs8B,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmB9oJ,EAAK2oJ,EAAS7D,GAAUjsJ,KAAK2rJ,SAAShrJ,EAASX,KAAK2rJ,QAAQuE,GAAI7D,EAAcrsJ,KAAKkwJ,EAAG,CAAC,EAAEC,QAAQ,SAAS5gJ,GAAO/G,QAAQC,KAAK,qBAAqB8G,EAAMy8I,EAAShsJ,KAAK2rJ,SAAS,EAAEp8I,MAAM,SAASA,GAAO/G,QAAQ+G,MAAM,mBAAmBA,EAAMy8I,EAAShsJ,KAAK2rJ,SAAS,EAAEyE,WAAW,SAAS7gJ,GAA2E,MAApE/G,QAAQ+G,MAAM,wBAAwBA,EAAMy8I,EAAShsJ,KAAK2rJ,UAAgBp8I,CAAK,GAA8T,+JAA+J2D,QAAQ,QAAO,SAAS7O,GAAKunJ,EAAWhvG,UAAUv4C,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAIqoJ,EAAU9yE,EAAQ,SAAS8yE,UAAckB,EAAkBluJ,EAAQkuJ,kBAAkBh0E,EAAQ,SAASg0E,kBAAkBluJ,EAAQq9I,cAAcnjE,EAAQ,SAASmjE,cAAcr9I,EAAQu2E,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAAS2D,EAAQn6E,EAAOC,GAAS,SAASw9D,EAAKktB,EAAIimE,GAAM,IAAI,IAAIruI,KAAKooE,EAAKimE,EAAKruI,GAAGooE,EAAIpoE,EAAG,CAAC,SAASsuI,EAAS7xI,EAAM8xI,GAAO,IAAIC,EAAG/xI,EAAMm+B,UAAU,GAAGvoC,OAAOo4D,OAAO,CAAC,IAAIgkF,EAAIp8I,OAAOo4D,OAAO8jF,EAAM3zG,WAAW4zG,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAASjxH,IAAI,CAACA,EAAEsd,UAAU2zG,EAAM3zG,UAAkBsgB,EAAKszF,EAAblxH,EAAE,IAAIA,GAAa7gB,EAAMm+B,UAAU4zG,EAAGlxH,CAAC,CAAIkxH,EAAG7wJ,aAAa8e,IAAwB,mBAAPA,GAAmBjW,QAAQ+G,MAAM,gBAAgBkP,GAAO+xI,EAAG7wJ,YAAY8e,EAAM,CAAC,IAA8CkyI,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAaz7I,EAAKrF,GAAS,GAAGA,aAAmBhJ,MAAO,IAAIiH,EAAM+B,OAAa/B,EAAMvP,KAAKsI,MAAMu0C,KAAK78C,KAAKyxJ,EAAiB96I,IAAO3W,KAAKsR,QAAQmgJ,EAAiB96I,GAASrO,MAAM+pJ,mBAAkB/pJ,MAAM+pJ,kBAAkBryJ,KAAKoyJ,GAAgF,OAAlE7iJ,EAAMoH,KAAKA,EAAQrF,IAAQtR,KAAKsR,QAAQtR,KAAKsR,QAAQ,KAAKA,GAAe/B,CAAK,CAAyE,SAAS+iJ,IAAW,CAA+N,SAASC,EAAahwJ,EAAKmC,GAAS1E,KAAKwyJ,MAAMjwJ,EAAKvC,KAAKyyJ,SAAS/tJ,EAAQguJ,EAAgB1yJ,KAAK,CAAC,SAAS0yJ,EAAgBzoJ,GAAM,IAAI0oJ,EAAI1oJ,EAAKuoJ,MAAMI,MAAM3oJ,EAAKuoJ,MAAMK,cAAcD,KAAK,GAAG3oJ,EAAK2oJ,MAAMD,EAAI,CAAC,IAAIG,EAAG7oJ,EAAKwoJ,SAASxoJ,EAAKuoJ,OAAOO,GAAQ9oJ,EAAK,SAAS6oJ,EAAG3sJ,QAAQ+2D,EAAK41F,EAAG7oJ,GAAMA,EAAK2oJ,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAehpJ,EAAK1H,GAAwB,IAAlB,IAAIgR,EAAEtJ,EAAK9D,OAAaoN,KAAK,GAAGtJ,EAAKsJ,KAAKhR,EAAM,OAAOgR,CAAG,CAAC,SAAS2/I,EAAc1mJ,EAAGvC,EAAKkpJ,EAAQC,GAAiG,GAArFA,EAASnpJ,EAAKgpJ,EAAehpJ,EAAKmpJ,IAAUD,EAAalpJ,EAAKA,EAAK9D,UAAUgtJ,EAAW3mJ,EAAG,CAAC2mJ,EAAQE,aAAa7mJ,EAAG,IAAIknH,EAAIlnH,EAAGqmJ,cAAiBn/B,IAAK0/B,GAASE,EAAmB5/B,EAAIlnH,EAAG4mJ,GAAyvI,SAAyB1/B,EAAIlnH,EAAG2mJ,GAASz/B,GAAKA,EAAIk/B,OAA0C,iCAA5BO,EAAQnX,eAAqDxvI,EAAG+mJ,OAAOJ,EAAQt4I,OAAOs4I,EAAQpF,UAAU,IAAIoF,EAAQxwJ,MAAM,CAA16I6wJ,CAAgB9/B,EAAIlnH,EAAG2mJ,GAAS,CAAC,CAAC,SAASM,EAAiBjnJ,EAAGvC,EAAK4T,GAAM,IAAItK,EAAE0/I,EAAehpJ,EAAK4T,GAAM,KAAGtK,GAAG,GAAgM,MAAM6+I,EAAaP,EAAc,IAAIvpJ,MAAMkE,EAAGunH,QAAQ,IAAIl2G,IAA3N,IAA5B,IAAI61I,EAAUzpJ,EAAK9D,OAAO,EAAQoN,EAAEmgJ,GAAWzpJ,EAAKsJ,GAAGtJ,IAAOsJ,GAAyB,GAAtBtJ,EAAK9D,OAAOutJ,EAAalnJ,EAAG,CAAC,IAAIknH,EAAIlnH,EAAGqmJ,cAAiBn/B,IAAK4/B,EAAmB5/B,EAAIlnH,EAAGqR,GAAMA,EAAKw1I,aAAa,KAAK,CAAwE,CAAioC,SAASzF,EAAkB+F,GAA4B,GAAlB3zJ,KAAK4zJ,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAU3zJ,KAAK4zJ,UAAUD,EAASE,EAAU,CAAsrB,SAASC,IAAO,CAA6kD,SAASC,EAAYxwJ,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAEywJ,aAAa,GAAG,CAAmD,SAASC,EAAW1xJ,EAAKsP,GAAU,GAAGA,EAAStP,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAKk9G,WAAY,GAAG,GAAGw0C,EAAW1xJ,EAAKsP,GAAW,OAAO,QAAYtP,EAAKA,EAAK2xJ,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmB5/B,EAAIlnH,EAAG2mJ,EAAQp4I,GAAQ24G,GAAKA,EAAIk/B,OAA0C,iCAA5BO,EAAQnX,qBAA4DxvI,EAAG+mJ,OAAOJ,EAAQt4I,OAAOs4I,EAAQpF,UAAU,GAAI,CAAC,SAASqG,EAAe1gC,EAAIlnH,EAAG6nJ,GAAU,GAAG3gC,GAAKA,EAAIk/B,KAAK,CAACl/B,EAAIk/B,OAAO,IAAI0B,EAAG9nJ,EAAG+nJ,WAAW,GAAGF,EAAUC,EAAGA,EAAGnuJ,UAAUkuJ,MAAa,CAAiC,IAAhC,IAAIljE,EAAM3kF,EAAGizG,WAAelsG,EAAE,EAAQ49E,GAAOmjE,EAAG/gJ,KAAK49E,EAAMA,EAAMA,EAAM+iE,YAAYI,EAAGnuJ,OAAOoN,CAAC,CAAC,CAAC,CAAC,SAASihJ,EAAa7mE,EAAWwD,GAAO,IAAIsjE,EAAStjE,EAAMujE,gBAAoB7oI,EAAKslE,EAAM+iE,YAAiN,OAAlMO,EAAUA,EAASP,YAAYroI,EAAU8hE,EAAW8xB,WAAW5zF,EAAQA,EAAMA,EAAK6oI,gBAAgBD,EAAc9mE,EAAWgnE,UAAUF,EAASL,EAAezmE,EAAWklE,cAAcllE,GAAmBwD,CAAK,CAAC,SAASyjE,EAAcjnE,EAAW0mE,EAASQ,GAAW,IAAIC,EAAGT,EAAS1mE,WAA2C,GAA7BmnE,GAAIA,EAAGlnE,YAAYymE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAAS50C,WAAW,GAAa,MAAVu1C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgB/mE,EAAWgnE,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAcrnE,EAAW8xB,WAAWu1C,EAAuB,MAAXH,EAAiBlnE,EAAWgnE,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAASrnE,WAAWA,QAAiBqnE,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAezmE,EAAWklE,eAAellE,EAAWA,GAAe0mE,EAASU,UAAUzD,IAAwB+C,EAAS50C,WAAW40C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUn1J,KAAKuzJ,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAAS/Y,IAAgB,CAAqL,SAASgZ,EAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfn2J,KAAK+0J,SAAY/0J,KAAKo2J,gBAAgBp2J,KAAS6a,EAAOs7I,EAAQt7I,OAAW+zI,EAAIuH,EAAQna,aAAa,GAAG4S,GAAa,MAAR/zI,GAA8D,OAA5CA,EAAOs7I,EAAQE,aAAazH,IAAsB,IAAI0H,EAAkB,CAAC,CAACC,UAAU3H,EAAI/zI,OAAO,OAAwE,OAAhE0iI,GAAkBv9I,KAAKk2J,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAI5nJ,KAAK,GAAG,CAAC,SAASkoJ,GAAoBj0J,EAAKk0J,EAAOH,GAAmB,IAAIz7I,EAAOtY,EAAKsY,QAAQ,GAAO+zI,EAAIrsJ,EAAKy5I,aAAa,IAAInhI,IAAS+zI,EAAK,OAAO,EAAM,GAAY,QAAT/zI,GAAsB,yCAAN+zI,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAIr7I,EAAE+iJ,EAAkBnwJ,OAAaoN,KAAI,CAAC,IAAImjJ,EAAGJ,EAAkB/iJ,GAAG,GAAGmjJ,EAAG77I,QAAQA,EAAQ,OAAO67I,EAAGH,WAAW3H,CAAI,CAAC,OAAO,CAAI,CAAC,SAASrR,GAAkBh7I,EAAK2zJ,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtB1zJ,EAAK0zJ,EAAW1zJ,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAf2zJ,EAAI5xJ,KAAK/B,EAA0B,CAAC,OAAOA,EAAKwyJ,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBnwJ,OAA7C,IAAwD4Y,EAAMxc,EAAK2gB,WAAegrI,EAAInvI,EAAM5Y,OAAWgrF,EAAM5uF,EAAKk9G,WAAeC,EAASn9G,EAAKwxH,QAAQ0iC,EAA7/kB,iCAA6glBl0J,EAAKy5I,cAAcya,EAAOP,EAAI5xJ,KAAK,IAAIo7G,GAAU,IAAI,IAAInsG,EAAE,EAAEA,EAAE26I,EAAI36I,IAA4C,UAAnCsK,EAAKkB,EAAM3Q,KAAKmF,IAAWsH,OAAiBy7I,EAAkBhyJ,KAAK,CAACuW,OAAOgD,EAAKkwI,UAAUwI,UAAU14I,EAAKlb,QAA+B,SAAfkb,EAAK6hG,UAAmB42C,EAAkBhyJ,KAAK,CAACuW,OAAO,GAAG07I,UAAU14I,EAAKlb,QAAS,IAAQ4Q,EAAE,EAAEA,EAAE26I,EAAI36I,IAAI,CAAC,IAAIsK,EAAmB,GAAG24I,GAAtB34I,EAAKkB,EAAM3Q,KAAKmF,GAA+BkjJ,EAAOH,GAAmB,CAAC,IAAIz7I,EAAOgD,EAAKhD,QAAQ,GAAO+zI,EAAI/wI,EAAKm+H,aAAiB0a,EAAG77I,EAAO,UAAUA,EAAO,SAASq7I,EAAI5xJ,KAAKoyJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBhyJ,KAAK,CAACuW,OAAOA,EAAO07I,UAAU3H,GAAK,CAACrR,GAAkB1/H,EAAKq4I,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoBj0J,EAAKk0J,EAAOH,KAAwBz7I,EAAOtY,EAAKsY,QAAQ,GAAO+zI,EAAIrsJ,EAAKy5I,aAAiB0a,EAAG77I,EAAO,UAAUA,EAAO,SAASq7I,EAAI5xJ,KAAKoyJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBhyJ,KAAK,CAACuW,OAAOA,EAAO07I,UAAU3H,KAASz9D,GAAOslE,IAAS,mCAAmCl0I,KAAKm9F,GAAU,CAAe,GAAdw2C,EAAI5xJ,KAAK,KAAQmyJ,GAAQ,YAAYl0I,KAAKm9F,GAAW,KAAMvuB,GAAUA,EAAMtnF,KAAMqsJ,EAAI5xJ,KAAK6sF,EAAMtnF,MAAW0zI,GAAkBpsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,iBAAkB,KAAM/iE,GAAOosD,GAAkBpsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,YAAagC,EAAI5xJ,KAAK,KAAKo7G,EAAS,IAAI,MAAMw2C,EAAI5xJ,KAAK,MAAM,OAAO,KAAK8sJ,EAAc,KAAKE,EAAiD,IAAtBngE,EAAM5uF,EAAKk9G,WAAiBtuB,GAAOosD,GAAkBpsD,EAAM+kE,EAAIO,EAAOR,EAAWK,GAAmBnlE,EAAMA,EAAM+iE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAI5xJ,KAAK,IAAI/B,EAAK4E,KAAK,KAAK5E,EAAKI,MAAMuQ,QAAQ,SAAS6gJ,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAI5xJ,KAAK/B,EAAKsH,KAAKqJ,QAAQ,QAAQ6gJ,IAAc,KAAKhD,EAAmB,OAAOmF,EAAI5xJ,KAAK,YAAY/B,EAAKsH,KAAK,OAAO,KAAKsnJ,EAAa,OAAO+E,EAAI5xJ,KAAK,UAAU/B,EAAKsH,KAAK,UAAU,KAAKwnJ,EAAmB,IAAIsF,EAAMp0J,EAAKutJ,SAAa8G,EAAMr0J,EAAK0pJ,SAA0C,GAAjCiK,EAAI5xJ,KAAK,aAAa/B,EAAK4E,MAASwvJ,EAAOT,EAAI5xJ,KAAK,YAAYqyJ,GAAUC,GAAc,KAAPA,GAAYV,EAAI5xJ,KAAK,MAAMsyJ,GAAOV,EAAI5xJ,KAAK,WAAW,GAAGsyJ,GAAc,KAAPA,EAAYV,EAAI5xJ,KAAK,YAAYsyJ,EAAM,UAAU,CAAC,IAAIpjJ,EAAIjR,EAAKs0J,eAAkBrjJ,GAAK0iJ,EAAI5xJ,KAAK,KAAKkP,EAAI,KAAK0iJ,EAAI5xJ,KAAK,IAAI,CAAC,OAAO,KAAK4sJ,EAA4B,OAAOgF,EAAI5xJ,KAAK,KAAK/B,EAAKinD,OAAO,IAAIjnD,EAAKsH,KAAK,MAAM,KAAKmnJ,EAAsB,OAAOkF,EAAI5xJ,KAAK,IAAI/B,EAAKm9G,SAAS,KAAK,QAAQw2C,EAAI5xJ,KAAK,KAAK/B,EAAKm9G,UAAU,CAAC,SAASo3C,GAAWpjC,EAAInxH,EAAK+kB,GAAM,IAAIyvI,EAAM,OAAOx0J,EAAKwyJ,UAAU,KAAKnE,GAAamG,EAAMx0J,EAAKy0J,WAAU,IAAanE,cAAcn/B,EAAI,KAAK49B,EAAuB,MAAM,KAAKT,EAAevpI,GAAK,EAAgG,GAAjFyvI,IAAOA,EAAMx0J,EAAKy0J,WAAU,IAAOD,EAAMlE,cAAcn/B,EAAIqjC,EAAMppE,WAAW,KAAQrmE,EAAgC,IAA1B,IAAI6pE,EAAM5uF,EAAKk9G,WAAiBtuB,GAAO4lE,EAAMxoE,YAAYuoE,GAAWpjC,EAAIviC,EAAM7pE,IAAO6pE,EAAMA,EAAM+iE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAUtjC,EAAInxH,EAAK+kB,GAAM,IAAIyvI,EAAM,IAAIx0J,EAAK5C,YAAY,IAAI,IAAIijD,KAAKrgD,EAAK,CAAC,IAAI+Q,EAAE/Q,EAAKqgD,GAAgB,iBAAHtvC,GAAgBA,GAAGyjJ,EAAMn0G,KAAIm0G,EAAMn0G,GAAGtvC,EAAG,CAA2E,OAAvE/Q,EAAKgyJ,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAcn/B,EAAWqjC,EAAMhC,UAAU,KAAKnE,EAAa,IAAI7xI,EAAMxc,EAAK2gB,WAAe+zI,EAAOF,EAAM7zI,WAAW,IAAI8vI,EAAiB9E,EAAInvI,EAAM5Y,OAAO8wJ,EAAOC,cAAcH,EAAM,IAAI,IAAIxjJ,EAAE,EAAEA,EAAE26I,EAAI36I,IAAKwjJ,EAAMvI,iBAAiBwI,GAAUtjC,EAAI30G,EAAM3Q,KAAKmF,IAAG,IAAO,MAAM,KAAKs9I,EAAevpI,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAI6pE,EAAM5uF,EAAKk9G,WAAiBtuB,GAAO4lE,EAAMxoE,YAAYyoE,GAAUtjC,EAAIviC,EAAM7pE,IAAO6pE,EAAMA,EAAM+iE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQ9tJ,EAAOZ,EAAI1B,GAAOsC,EAAOZ,GAAK1B,CAAK,CAA3qoB6uJ,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAax1G,UAAUt0C,MAAMs0C,UAAUsgB,EAAKs0F,EAAcY,GAAmCE,EAAS11G,UAAU,CAACz2C,OAAO,EAAEiI,KAAK,SAASrC,GAAO,OAAO/L,KAAK+L,IAAQ,IAAI,EAAE6I,SAAS,SAAS6hJ,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAG3iJ,EAAE,EAAEA,EAAEvT,KAAKmG,OAAOoN,IAAKgqI,GAAkBv9I,KAAKuT,GAAG2iJ,EAAIO,EAAOR,GAAY,OAAOC,EAAI5nJ,KAAK,GAAG,GAA2SikJ,EAAa31G,UAAUxuC,KAAK,SAASmF,GAAyB,OAAtBm/I,EAAgB1yJ,MAAaA,KAAKuT,EAAE,EAAE+8I,EAASiC,EAAaD,GAAuuBU,EAAap2G,UAAU,CAACz2C,OAAO,EAAEiI,KAAKkkJ,EAAS11G,UAAUxuC,KAAKopJ,aAAa,SAASnzJ,GAAuB,IAAlB,IAAIkP,EAAEvT,KAAKmG,OAAaoN,KAAI,CAAC,IAAIsK,EAAK7d,KAAKuT,GAAG,GAAGsK,EAAK6hG,UAAUr7G,EAAK,OAAOwZ,CAAK,CAAC,EAAE45I,aAAa,SAAS55I,GAAM,IAAIrR,EAAGqR,EAAKw1I,aAAa,GAAG7mJ,GAAIA,GAAIxM,KAAKk3J,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQpzJ,KAAKw3J,aAAa35I,EAAK6hG,UAA8D,OAApDwzC,EAAclzJ,KAAKk3J,cAAcl3J,KAAK6d,EAAKu1I,GAAgBA,CAAO,EAAEsE,eAAe,SAAS75I,GAAM,IAAyBu1I,EAArB5mJ,EAAGqR,EAAKw1I,aAAqB,GAAG7mJ,GAAIA,GAAIxM,KAAKk3J,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQpzJ,KAAK23J,eAAe95I,EAAKm+H,aAAan+H,EAAKkwI,WAAWmF,EAAclzJ,KAAKk3J,cAAcl3J,KAAK6d,EAAKu1I,GAAgBA,CAAO,EAAEwE,gBAAgB,SAASvzJ,GAAK,IAAIwZ,EAAK7d,KAAKw3J,aAAanzJ,GAAoD,OAA/CovJ,EAAiBzzJ,KAAKk3J,cAAcl3J,KAAK6d,GAAaA,CAAI,EAAEg6I,kBAAkB,SAAS7b,EAAa+R,GAAW,IAAIlwI,EAAK7d,KAAK23J,eAAe3b,EAAa+R,GAA0D,OAA/C0F,EAAiBzzJ,KAAKk3J,cAAcl3J,KAAK6d,GAAaA,CAAI,EAAE85I,eAAe,SAAS3b,EAAa+R,GAA6B,IAAlB,IAAIx6I,EAAEvT,KAAKmG,OAAaoN,KAAI,CAAC,IAAIhR,EAAKvC,KAAKuT,GAAG,GAAGhR,EAAKwrJ,WAAWA,GAAWxrJ,EAAKy5I,cAAcA,EAAc,OAAOz5I,CAAK,CAAC,OAAO,IAAI,GAAuIqrJ,EAAkBhxG,UAAU,CAACk7G,WAAW,SAASjE,EAAQtwI,GAAS,IAAIw0I,EAAS/3J,KAAK4zJ,UAAUC,EAAQx7I,eAAe,SAAG0/I,GAAYx0I,KAASA,KAAWw0I,GAAyC,EAAElK,eAAe,SAAS7R,EAAagc,EAAcC,GAAS,IAAIvkC,EAAI,IAAIygC,EAAsH,GAA7GzgC,EAAIs8B,eAAehwJ,KAAK0zH,EAAI6gC,WAAW,IAAIjC,EAAS5+B,EAAIukC,QAAQA,EAAWA,GAASvkC,EAAInlC,YAAY0pE,GAAYD,EAAc,CAAC,IAAIj4D,EAAK2zB,EAAIu6B,gBAAgBjS,EAAagc,GAAetkC,EAAInlC,YAAYwR,EAAK,CAAC,OAAO2zB,CAAG,EAAEu8B,mBAAmB,SAAS+H,EAAclI,EAAS7D,GAAU,IAAI1pJ,EAAK,IAAIkzJ,EAA+G,OAAlGlzJ,EAAK4E,KAAK6wJ,EAAcz1J,EAAKm9G,SAASs4C,EAAcz1J,EAAKutJ,SAASA,EAASvtJ,EAAK0pJ,SAASA,EAAgB1pJ,CAAI,GAAoBuxJ,EAAKl3G,UAAU,CAAC6iE,WAAW,KAAKk1C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAKhxI,WAAW,KAAKyqE,WAAW,KAAK4mE,WAAW,KAAK1B,cAAc,KAAKtE,UAAU,KAAKvS,aAAa,KAAKnhI,OAAO,KAAKkzI,UAAU,KAAKmK,aAAa,SAAS7D,EAAS8D,GAAU,OAAOvD,EAAc50J,KAAKq0J,EAAS8D,EAAS,EAAEC,aAAa,SAAS/D,EAASgE,GAAUr4J,KAAKk4J,aAAa7D,EAASgE,GAAaA,GAAUr4J,KAAK4tF,YAAYyqE,EAAU,EAAEzqE,YAAY,SAASyqE,GAAU,OAAO7D,EAAax0J,KAAKq4J,EAAS,EAAE9pE,YAAY,SAAS8lE,GAAU,OAAOr0J,KAAKk4J,aAAa7D,EAAS,KAAK,EAAEiE,cAAc,WAAW,OAAwB,MAAjBt4J,KAAKy/G,UAAgB,EAAEu3C,UAAU,SAAS1vI,GAAM,OAAO0vI,GAAUh3J,KAAK6yJ,eAAe7yJ,KAAKA,KAAKsnB,EAAK,EAAEkoI,UAAU,WAAqC,IAA1B,IAAIr+D,EAAMnxF,KAAKy/G,WAAiBtuB,GAAM,CAAC,IAAItlE,EAAKslE,EAAM+iE,YAAeroI,GAAMA,EAAKkpI,UAAUjE,GAAW3/D,EAAM4jE,UAAUjE,GAAW9wJ,KAAK4tF,YAAY/hE,GAAMslE,EAAMonE,WAAW1sI,EAAKhiB,QAAWsnF,EAAMq+D,YAAYr+D,EAAMtlE,EAAK,CAAC,EAAE2sI,YAAY,SAAS3E,EAAQtwI,GAAS,OAAOvjB,KAAK6yJ,cAAc7C,eAAe8H,WAAWjE,EAAQtwI,EAAQ,EAAEk1I,cAAc,WAAW,OAAOz4J,KAAKkjB,WAAW/c,OAAO,CAAC,EAAEkwJ,aAAa,SAASra,GAA0B,IAAZ,IAAIxvI,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAG+mJ,OAAO,GAAGplJ,EAAK,IAAI,IAAIy0C,KAAKz0C,EAAK,GAAGA,EAAIy0C,IAAIo5F,EAAc,OAAOp5F,EAAIp2C,EAAGA,EAAGuoJ,UAAUlE,EAAerkJ,EAAGqmJ,cAAcrmJ,EAAGmhF,UAAU,CAAC,OAAO,IAAI,EAAE+qE,mBAAmB,SAAS79I,GAAoB,IAAZ,IAAIrO,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAG+mJ,OAAO,GAAGplJ,GAAQ0M,KAAU1M,EAAK,OAAOA,EAAI0M,GAASrO,EAAGA,EAAGuoJ,UAAUlE,EAAerkJ,EAAGqmJ,cAAcrmJ,EAAGmhF,UAAU,CAAC,OAAO,IAAI,EAAEgrE,mBAAmB,SAAS3c,GAAyD,OAAe,MAA/Ch8I,KAAKq2J,aAAara,EAAiC,GAA6H9+E,EAAKyzF,EAASmD,GAAM52F,EAAKyzF,EAASmD,EAAKl3G,WAA02Eu3G,EAASv3G,UAAU,CAAC8iE,SAAS,YAAYq1C,SAAS3D,EAAc6G,QAAQ,KAAK7B,gBAAgB,KAAKxD,KAAK,EAAEsF,aAAa,SAAS7D,EAAS8D,GAAU,GAAG9D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAIngE,EAAMkjE,EAAS50C,WAAiBtuB,GAAM,CAAC,IAAItlE,EAAKslE,EAAM+iE,YAAYl0J,KAAKk4J,aAAa/mE,EAAMgnE,GAAUhnE,EAAMtlE,CAAI,CAAC,OAAOwoI,CAAQ,CAA+F,OAArE,MAAtBr0J,KAAKo2J,iBAAuB/B,EAASU,UAAUnE,IAAc5wJ,KAAKo2J,gBAAgB/B,GAAgBO,EAAc50J,KAAKq0J,EAAS8D,GAAU9D,EAASxB,cAAc7yJ,KAAKq0J,CAAQ,EAAEzmE,YAAY,SAASyqE,GAAuE,OAA1Dr4J,KAAKo2J,iBAAiBiC,IAAUr4J,KAAKo2J,gBAAgB,MAAY5B,EAAax0J,KAAKq4J,EAAS,EAAEvB,WAAW,SAAS8B,EAAatxI,GAAM,OAAOwvI,GAAW92J,KAAK44J,EAAatxI,EAAK,EAAEuxI,eAAe,SAASj4J,GAAI,IAAIk4J,EAAI,KAA6I,OAAxI7E,EAAWj0J,KAAKo2J,iBAAgB,SAAS7zJ,GAAM,GAAGA,EAAKwyJ,UAAUnE,GAAiBruJ,EAAKwlF,aAAa,OAAOnnF,EAAa,OAATk4J,EAAIv2J,GAAY,CAAM,IAAUu2J,CAAG,EAAE5rH,cAAc,SAAS6mF,GAAS,IAAIxxH,EAAK,IAAI4yJ,EAA4K,OAApK5yJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKm9G,SAASqU,EAAQxxH,EAAKwxH,QAAQA,EAAQxxH,EAAKgyJ,WAAW,IAAIjC,GAAmB/vJ,EAAK2gB,WAAW,IAAI8vI,GAAmBkE,cAAc30J,EAAYA,CAAI,EAAEw2J,uBAAuB,WAAW,IAAIx2J,EAAK,IAAIszJ,EAAsE,OAArDtzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKgyJ,WAAW,IAAIjC,EAAgB/vJ,CAAI,EAAE+rF,eAAe,SAASzkF,GAAM,IAAItH,EAAK,IAAI+yJ,EAAmD,OAA9C/yJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKg2J,WAAW1uJ,GAAatH,CAAI,EAAEmtJ,cAAc,SAAS7lJ,GAAM,IAAItH,EAAK,IAAIgzJ,EAAsD,OAA9ChzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKg2J,WAAW1uJ,GAAatH,CAAI,EAAE8sJ,mBAAmB,SAASxlJ,GAAM,IAAItH,EAAK,IAAIizJ,EAA2D,OAA9CjzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKg2J,WAAW1uJ,GAAatH,CAAI,EAAEysJ,4BAA4B,SAASxlG,EAAO3/C,GAAM,IAAItH,EAAK,IAAIuzJ,EAA4G,OAAtFvzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKwxH,QAAQxxH,EAAKinD,OAAOA,EAAOjnD,EAAKgsJ,UAAUhsJ,EAAKsH,KAAKA,EAAYtH,CAAI,EAAEy2J,gBAAgB,SAAS7xJ,GAAM,IAAI5E,EAAK,IAAI6yJ,EAAuG,OAAlG7yJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAK4E,KAAKA,EAAK5E,EAAKm9G,SAASv4G,EAAK5E,EAAKwrJ,UAAU5mJ,EAAK5E,EAAK02J,WAAU,EAAY12J,CAAI,EAAE22J,sBAAsB,SAAS/xJ,GAAM,IAAI5E,EAAK,IAAIqzJ,EAA2D,OAA3CrzJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKm9G,SAASv4G,EAAY5E,CAAI,EAAE0rJ,gBAAgB,SAASjS,EAAagc,GAAe,IAAIz1J,EAAK,IAAI4yJ,EAAYgE,EAAGnB,EAActvI,MAAM,KAAS3J,EAAMxc,EAAK2gB,WAAW,IAAI8vI,EAA2Q,OAA9PzwJ,EAAKgyJ,WAAW,IAAIjC,EAAS/vJ,EAAKswJ,cAAc7yJ,KAAKuC,EAAKm9G,SAASs4C,EAAcz1J,EAAKwxH,QAAQikC,EAAcz1J,EAAKy5I,aAAaA,EAA2B,GAAXmd,EAAGhzJ,QAAW5D,EAAKsY,OAAOs+I,EAAG,GAAG52J,EAAKwrJ,UAAUoL,EAAG,IAAQ52J,EAAKwrJ,UAAUiK,EAAcj5I,EAAMm4I,cAAc30J,EAAYA,CAAI,EAAE8rJ,kBAAkB,SAASrS,EAAagc,GAAe,IAAIz1J,EAAK,IAAI6yJ,EAAS+D,EAAGnB,EAActvI,MAAM,KAA8N,OAAzNnmB,EAAKswJ,cAAc7yJ,KAAKuC,EAAKm9G,SAASs4C,EAAcz1J,EAAK4E,KAAK6wJ,EAAcz1J,EAAKy5I,aAAaA,EAAaz5I,EAAK02J,WAAU,EAAmB,GAAXE,EAAGhzJ,QAAW5D,EAAKsY,OAAOs+I,EAAG,GAAG52J,EAAKwrJ,UAAUoL,EAAG,IAAQ52J,EAAKwrJ,UAAUiK,EAAqBz1J,CAAI,GAAG+tJ,EAAS6D,EAASL,GAAwCqB,EAAQv4G,UAAU,CAACm4G,SAASnE,EAAawI,aAAa,SAASjyJ,GAAM,OAAoC,MAA7BnH,KAAKq5J,iBAAiBlyJ,EAAW,EAAE4gF,aAAa,SAAS5gF,GAAM,IAAI0W,EAAK7d,KAAKq5J,iBAAiBlyJ,GAAM,OAAO0W,GAAMA,EAAKlb,OAAO,EAAE,EAAE02J,iBAAiB,SAASlyJ,GAAM,OAAOnH,KAAKkjB,WAAWs0I,aAAarwJ,EAAK,EAAEq+E,aAAa,SAASr+E,EAAKxE,GAAO,IAAIkb,EAAK7d,KAAK6yJ,cAAcmG,gBAAgB7xJ,GAAM0W,EAAKlb,MAAMkb,EAAK0wI,UAAU,GAAG5rJ,EAAM3C,KAAKwuJ,iBAAiB3wI,EAAK,EAAEqqE,gBAAgB,SAAS/gF,GAAM,IAAI0W,EAAK7d,KAAKq5J,iBAAiBlyJ,GAAM0W,GAAM7d,KAAKs5J,oBAAoBz7I,EAAK,EAAE0wE,YAAY,SAAS8lE,GAAU,OAAGA,EAASU,WAAWzD,EAA+BtxJ,KAAKk4J,aAAa7D,EAAS,MAAr4H,SAA4B1mE,EAAW0mE,GAAU,IAAIS,EAAGT,EAAS1mE,WAAW,GAAGmnE,EAAG,CAAC,IAAII,EAAIvnE,EAAWgnE,UAAUG,EAAGlnE,YAAYymE,GAAca,EAAIvnE,EAAWgnE,SAAS,CAAoR,OAA/QO,EAAIvnE,EAAWgnE,UAAUN,EAAS1mE,WAAWA,EAAW0mE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAc1mE,EAAW8xB,WAAW40C,EAAS1mE,EAAWgnE,UAAUN,EAASD,EAAezmE,EAAWklE,cAAcllE,EAAW0mE,GAAiBA,CAAQ,CAA+8GkF,CAAmBv5J,KAAKq0J,EAAU,EAAE7F,iBAAiB,SAAS2E,GAAS,OAAOnzJ,KAAKkjB,WAAWu0I,aAAatE,EAAQ,EAAEqG,mBAAmB,SAASrG,GAAS,OAAOnzJ,KAAKkjB,WAAWw0I,eAAevE,EAAQ,EAAEmG,oBAAoB,SAASlG,GAAS,OAAOpzJ,KAAKkjB,WAAW00I,gBAAgBxE,EAAQ1zC,SAAS,EAAE+5C,kBAAkB,SAASzd,EAAa+R,GAAW,IAAIhxC,EAAI/8G,KAAK05J,mBAAmB1d,EAAa+R,GAAWhxC,GAAK/8G,KAAKs5J,oBAAoBv8C,EAAI,EAAE48C,eAAe,SAAS3d,EAAa+R,GAAW,OAAwD,MAAjD/tJ,KAAK05J,mBAAmB1d,EAAa+R,EAAgB,EAAE6L,eAAe,SAAS5d,EAAa+R,GAAW,IAAIlwI,EAAK7d,KAAK05J,mBAAmB1d,EAAa+R,GAAW,OAAOlwI,GAAMA,EAAKlb,OAAO,EAAE,EAAEk3J,eAAe,SAAS7d,EAAagc,EAAcr1J,GAAO,IAAIkb,EAAK7d,KAAK6yJ,cAAcxE,kBAAkBrS,EAAagc,GAAen6I,EAAKlb,MAAMkb,EAAK0wI,UAAU,GAAG5rJ,EAAM3C,KAAKwuJ,iBAAiB3wI,EAAK,EAAE67I,mBAAmB,SAAS1d,EAAa+R,GAAW,OAAO/tJ,KAAKkjB,WAAWy0I,eAAe3b,EAAa+R,EAAU,EAAEx3E,qBAAqB,SAASw9C,GAAS,OAAO,IAAIw+B,EAAavyJ,MAAK,SAAS2kE,GAAM,IAAImuF,EAAG,GAAwI,OAArImB,EAAWtvF,GAAK,SAASpiE,GAASA,IAAOoiE,GAAMpiE,EAAKwyJ,UAAUnE,GAAyB,MAAV78B,GAAexxH,EAAKwxH,SAASA,GAAU++B,EAAGxuJ,KAAK/B,EAAM,IAAUuwJ,CAAE,GAAE,EAAEgH,uBAAuB,SAAS9d,EAAa+R,GAAW,OAAO,IAAIwE,EAAavyJ,MAAK,SAAS2kE,GAAM,IAAImuF,EAAG,GAAuM,OAApMmB,EAAWtvF,GAAK,SAASpiE,GAASA,IAAOoiE,GAAMpiE,EAAKwyJ,WAAWnE,GAA8B,MAAf5U,GAAoBz5I,EAAKy5I,eAAeA,GAA4B,MAAZ+R,GAAiBxrJ,EAAKwrJ,WAAWA,GAAY+E,EAAGxuJ,KAAK/B,EAAM,IAAUuwJ,CAAE,GAAE,GAAGqB,EAASv3G,UAAU25B,qBAAqB4+E,EAAQv4G,UAAU25B,qBAAqB49E,EAASv3G,UAAUk9G,uBAAuB3E,EAAQv4G,UAAUk9G,uBAAuBxJ,EAAS6E,EAAQrB,GAAuBsB,EAAKx4G,UAAUm4G,SAASlE,EAAeP,EAAS8E,EAAKtB,GAAgCuB,EAAcz4G,UAAU,CAAC/yC,KAAK,GAAGkwJ,cAAc,SAASld,EAAOhrH,GAAO,OAAO7xB,KAAK6J,KAAK+uB,UAAUikH,EAAOA,EAAOhrH,EAAM,EAAE0mI,WAAW,SAASlqJ,GAAMA,EAAKrO,KAAK6J,KAAKwE,EAAKrO,KAAKuuJ,UAAUvuJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,EAAE6zJ,WAAW,SAASnd,EAAOxuI,GAAMrO,KAAKi6J,YAAYpd,EAAO,EAAExuI,EAAK,EAAEkgF,YAAY,SAAS8lE,GAAU,MAAM,IAAI/rJ,MAAMmpJ,EAAiBC,GAAuB,EAAEwI,WAAW,SAASrd,EAAOhrH,GAAO7xB,KAAKi6J,YAAYpd,EAAOhrH,EAAM,GAAG,EAAEooI,YAAY,SAASpd,EAAOhrH,EAAMxjB,GAAwFA,EAAxErO,KAAK6J,KAAK+uB,UAAU,EAAEikH,GAA6DxuI,EAA7CrO,KAAK6J,KAAK+uB,UAAUikH,EAAOhrH,GAA2B7xB,KAAKuuJ,UAAUvuJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,GAAGmqJ,EAAS+E,EAAcvB,GAAuBwB,EAAK14G,UAAU,CAAC8iE,SAAS,QAAQq1C,SAASjE,EAAUqJ,UAAU,SAAStd,GAAQ,IAAIxuI,EAAKrO,KAAK6J,KAASuwJ,EAAQ/rJ,EAAKuqB,UAAUikH,GAAQxuI,EAAKA,EAAKuqB,UAAU,EAAEikH,GAAQ78I,KAAK6J,KAAK7J,KAAKuuJ,UAAUlgJ,EAAKrO,KAAKmG,OAAOkI,EAAKlI,OAAO,IAAIk0J,EAAQr6J,KAAK6yJ,cAAcvkE,eAAe8rE,GAAoF,OAAxEp6J,KAAK2tF,YAAY3tF,KAAK2tF,WAAWuqE,aAAamC,EAAQr6J,KAAKk0J,aAAoBmG,CAAO,GAAG/J,EAASgF,EAAKD,GAAmCE,EAAQ34G,UAAU,CAAC8iE,SAAS,WAAWq1C,SAAS5D,GAAcb,EAASiF,EAAQF,GAAwCG,EAAa54G,UAAU,CAAC8iE,SAAS,iBAAiBq1C,SAAShE,GAAoBT,EAASkF,EAAaH,GAAwCI,EAAa74G,UAAUm4G,SAAS1D,EAAmBf,EAASmF,EAAa3B,GAA2B4B,EAAS94G,UAAUm4G,SAASxD,EAAcjB,EAASoF,EAAS5B,GAAyB6B,EAAO/4G,UAAUm4G,SAAS9D,EAAYX,EAASqF,EAAO7B,GAAkC8B,EAAgBh5G,UAAUm4G,SAAS/D,EAAsBV,EAASsF,EAAgB9B,GAAmC+B,EAAiBj5G,UAAU8iE,SAAS,qBAAqBm2C,EAAiBj5G,UAAUm4G,SAASzD,EAAuBhB,EAASuF,EAAiB/B,GAAwCgC,EAAsBl5G,UAAUm4G,SAAS7D,EAA4BZ,EAASwF,EAAsBhC,GAAgC/W,EAAcngG,UAAU2gG,kBAAkB,SAASh7I,EAAKyzJ,EAAOC,GAAY,OAAOF,EAAsBl5G,KAAKt6C,EAAKyzJ,EAAOC,EAAW,EAAEnC,EAAKl3G,UAAUhoC,SAASmhJ,EAA2hJ,IAAI,GAAG1hJ,OAAOwlI,eAAe,CAA2f,SAASygB,GAAe/3J,GAAM,OAAOA,EAAKwyJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArB3zJ,EAAKA,EAAKk9G,WAAiBl9G,GAAyB,IAAhBA,EAAKwyJ,UAA8B,IAAhBxyJ,EAAKwyJ,UAAcmB,EAAI5xJ,KAAKg2J,GAAe/3J,IAAOA,EAAKA,EAAK2xJ,YAAY,OAAOgC,EAAI5nJ,KAAK,IAAI,QAAQ,OAAO/L,EAAKgsJ,UAAU,CAAxxBl6I,OAAOwlI,eAAe0Y,EAAa31G,UAAU,SAAS,CAAC/mC,IAAI,WAAiC,OAAtB68I,EAAgB1yJ,MAAaA,KAAKu6J,QAAQ,IAAIlmJ,OAAOwlI,eAAeia,EAAKl3G,UAAU,cAAc,CAAC/mC,IAAI,WAAW,OAAOykJ,GAAet6J,KAAK,EAAE+Z,IAAI,SAASlQ,GAAM,OAAO7J,KAAK+0J,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAMtxJ,KAAKy/G,YAAYz/G,KAAK4tF,YAAY5tF,KAAKy/G,aAAe51G,GAAMuR,OAAOvR,KAAO7J,KAAKuuF,YAAYvuF,KAAK6yJ,cAAcvkE,eAAezkF,IAAO,MAAM,QAAQ7J,KAAK6J,KAAKA,EAAK7J,KAAK2C,MAAMkH,EAAK7J,KAAKuuJ,UAAU1kJ,EAAK,IAAmSkpJ,GAAQ,SAAS9tJ,EAAOZ,EAAI1B,GAAOsC,EAAO,KAAKZ,GAAK1B,CAAK,CAAC,CAAW,CAAT,MAAM0H,IAAG,CAAC3K,EAAQkuJ,kBAAkBA,EAAkBluJ,EAAQq9I,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAASnjE,EAAQn6E,EAAOC,GAAS,IAAI86J,EAAc,mJAAuJC,EAAS,IAAIn4I,OAAO,aAAak4I,EAAchO,OAAOp5I,MAAM,GAAG,GAAG,0CAA8CsnJ,EAAe,IAAIp4I,OAAO,IAAIk4I,EAAchO,OAAOiO,EAASjO,OAAO,QAAQgO,EAAchO,OAAOiO,EAASjO,OAAO,QAA8I,SAASE,IAAY,CAA+P,SAASj1I,EAAM+0I,EAAOmO,EAAiB7N,EAAUH,EAAW5O,GAAgO,SAAS6c,EAAehtJ,GAAG,IAAI2G,EAAE3G,EAAEwF,MAAM,GAAG,GAAG,OAAGmB,KAAKu4I,EAAkBA,EAAUv4I,GAAyB,MAAdA,EAAE4yC,OAAO,GAAzT,SAA2BxwC,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAIkkJ,EAAW,QAA3BlkJ,GAAM,QAAkC,IAAImkJ,EAAW,OAAY,KAALnkJ,GAAW,OAAOyE,OAAO0jI,aAAa+b,EAAWC,EAAW,CAAM,OAAO1/I,OAAO0jI,aAAanoI,EAAM,CAAyHokJ,CAAkBp1I,SAASpR,EAAEuvC,OAAO,GAAG5wC,QAAQ,IAAI,SAAa6qI,EAAaxuI,MAAM,oBAAoB3B,GAAUA,EAAE,CAAC,SAASotJ,EAAWzzG,GAAK,GAAGA,EAAIx0B,EAAM,CAAC,IAAIkoI,EAAGzO,EAAO5zH,UAAU7F,EAAMw0B,GAAKr0C,QAAQ,WAAW0nJ,GAAgBjP,GAAShrJ,EAASoyB,GAAO45H,EAAWwC,WAAW8L,EAAG,EAAE1zG,EAAIx0B,GAAOA,EAAMw0B,CAAG,CAAC,CAAC,SAAS5mD,EAASqhB,EAAE6+G,GAAG,KAAM7+G,GAAGk5I,IAAUr6B,EAAEs6B,EAAY/b,KAAKoN,KAAU4O,EAAUv6B,EAAE90H,MAAMmvJ,EAAQE,EAAUv6B,EAAE,GAAG16H,OAAOwlJ,EAAQG,aAAaH,EAAQI,aAAa/pI,EAAEo5I,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BxP,EAAQgB,EAAWhB,QAAY0P,EAAW,CAAC,CAACC,aAAaX,IAAuBY,EAAS,CAAC,EAAMxoI,EAAM,IAAa,CAAC,IAAI,IAAIyoI,EAAShP,EAAOn/I,QAAQ,IAAI0lB,GAAO,GAAGyoI,EAAS,EAAE,CAAC,IAAIhP,EAAO1oG,OAAO/wB,GAAOiT,MAAM,SAAS,CAAC,IAAI0tF,EAAIi5B,EAAWj5B,IAAQrlH,EAAKqlH,EAAIplC,eAAek+D,EAAO1oG,OAAO/wB,IAAQ2gG,EAAInlC,YAAYlgF,GAAMs+I,EAAWJ,eAAel+I,CAAI,CAAC,MAAM,CAAyC,OAArCmtJ,EAASzoI,GAAOioI,EAAWQ,GAAiBhP,EAAOrlG,OAAOq0G,EAAS,IAAI,IAAI,IAAI,IAAIj0G,EAAIilG,EAAOn/I,QAAQ,IAAImuJ,EAAS,GAAOznC,EAAQy4B,EAAO5zH,UAAU4iI,EAAS,EAAEj0G,GAAStlD,EAAOo5J,EAAW1qH,MAAS4W,EAAI,GAAGwsE,EAAQy4B,EAAO5zH,UAAU4iI,EAAS,GAAGtoJ,QAAQ,UAAU,IAAI6qI,EAAaxuI,MAAM,iBAAiBwkH,EAAQ,oBAAoB9xH,EAAO8xH,SAASxsE,EAAIi0G,EAAS,EAAEznC,EAAQ5tH,QAAe4tH,EAAQ/tF,MAAM,SAAQ+tF,EAAQA,EAAQ7gH,QAAQ,UAAU,IAAI6qI,EAAaxuI,MAAM,iBAAiBwkH,EAAQ,uBAAuBxsE,EAAIi0G,EAAS,EAAEznC,EAAQ5tH,QAAO,IAAIs1J,EAAWx5J,EAAOw5J,WAAeC,EAASz5J,EAAO8xH,SAASA,EAA4G,GAA9E2nC,GAAUz5J,EAAO8xH,SAAS9xH,EAAO8xH,QAAQ17G,eAAe07G,EAAQ17G,cAAmC,CAA4D,GAA3Ds0I,EAAW8B,WAAWxsJ,EAAO2sJ,IAAI3sJ,EAAO8rJ,UAAUh6B,GAAY0nC,EAAY,IAAI,IAAI5gJ,KAAU4gJ,EAAY9O,EAAWkC,iBAAiBh0I,GAAa6gJ,GAAU3d,EAAaqS,WAAW,iBAAiBr8B,EAAQ,2CAA2C9xH,EAAO8xH,QAAS,MAAMsnC,EAAW/2J,KAAKrC,GAAQslD,IAAM,MAAM,IAAI,IAAIokG,GAAShrJ,EAAS66J,GAAUj0G,EAAIo0G,EAAiBnP,EAAOgP,EAAS7O,GAAY,MAAM,IAAI,IAAIhB,GAAShrJ,EAAS66J,GAAUj0G,EAAIq0G,EAASpP,EAAOgP,EAAS7O,EAAW5O,GAAc,MAAM,QAAQ4N,GAAShrJ,EAAS66J,GAAU,IAAIhvJ,EAAG,IAAIqvJ,EAAsBP,EAAaD,EAAWA,EAAWl1J,OAAO,GAAGm1J,aAA4GpN,GAA3F3mG,EAAIu0G,EAAsBtP,EAAOgP,EAAShvJ,EAAG8uJ,EAAaV,EAAe7c,GAAsBvxI,EAAGrG,QAAwJ,IAA7IqG,EAAGuvJ,QAAQC,EAAcxP,EAAOjlG,EAAI/6C,EAAGunH,QAAQwnC,KAAW/uJ,EAAGuvJ,QAAO,EAASjP,EAAUY,MAAM3P,EAAaoS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAI+N,EAASC,EAAYvQ,EAAQ,CAAC,GAAWp4I,EAAE,EAAEA,EAAE26I,EAAI36I,IAAI,CAAC,IAAI3F,EAAEpB,EAAG+G,GAAG5S,EAASiN,EAAEivI,QAAQjvI,EAAE+9I,QAAQuQ,EAAYvQ,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQsQ,EAAY5P,EAAc7/I,EAAGmgJ,EAAW2O,IAAeD,EAAW/2J,KAAKkI,GAAImgJ,EAAWhB,QAAQA,CAAO,MAASU,EAAc7/I,EAAGmgJ,EAAW2O,IAAeD,EAAW/2J,KAAKkI,GAAiB,iCAATA,EAAGoiJ,KAAuCpiJ,EAAGuvJ,OAA0Fx0G,IAAlFA,EAAI40G,EAAwB3P,EAAOjlG,EAAI/6C,EAAGunH,QAAQ6mC,EAAejO,GAAsF,CAA7D,MAAMtiJ,GAAG0zI,EAAaxuI,MAAM,wBAAwBlF,GAAGk9C,GAAK,CAAC,CAAIA,EAAIx0B,EAAOA,EAAMw0B,EAASyzG,EAAWz0J,KAAKm6C,IAAI86G,EAASzoI,GAAO,EAAG,CAAC,CAAC,SAASmpI,EAAYl1J,EAAEs4B,GAA2D,OAAxDA,EAAEwsH,WAAW9kJ,EAAE8kJ,WAAWxsH,EAAEysH,aAAa/kJ,EAAE+kJ,aAAoBzsH,CAAC,CAAC,SAASw8H,EAAsBtP,EAAOz5H,EAAMvmB,EAAG8uJ,EAAaV,EAAe7c,GAA+D,IAAjD,IAAIqe,EAAuBp6I,IAAI+Q,EAAUnmB,EAAviI,IAA0jI,CAAC,IAAIrJ,EAAEipJ,EAAOrlG,OAAOnlC,GAAG,OAAOze,GAAG,IAAI,IAAI,GAAvlI,IAA0lIqJ,EAAYwvJ,EAAS5P,EAAOp5I,MAAM2f,EAAM/Q,GAAGpV,EAAvmI,MAAmnI,IAA9nI,IAAioIA,EAA8B,MAAM,IAAItE,MAAM,uCAA5BsE,EAAxoI,CAA0sI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAjuI,IAAouIA,GAAlwI,IAA4wIA,EAAW,CAA0I,GAAj6I,IAA2xIA,IAAYmxI,EAAaoS,QAAQ,kCAAkCiM,EAAS5P,EAAOp5I,MAAM2f,EAAM/Q,IAAG+Q,EAAM/Q,EAAE,KAAEA,EAAEwqI,EAAOn/I,QAAQ9J,EAAEwvB,IAAY,GAAmH,MAAM,IAAIzqB,MAAM,2BAA2B/E,EAAE,WAA7JZ,EAAM6pJ,EAAOp5I,MAAM2f,EAAM/Q,GAAG9O,QAAQ,WAAW0nJ,GAAgBpuJ,EAAG4U,IAAIg7I,EAASz5J,EAAMowB,EAAM,GAAGnmB,EAA97I,CAAwgJ,KAAM,IAA/hJ,GAAkiJA,EAA4N,MAAM,IAAItE,MAAM,kCAApN3F,EAAM6pJ,EAAOp5I,MAAM2f,EAAM/Q,GAAG9O,QAAQ,WAAW0nJ,GAAgBpuJ,EAAG4U,IAAIg7I,EAASz5J,EAAMowB,GAAOgrH,EAAaoS,QAAQ,cAAciM,EAAS,uBAAuB74J,EAAE,OAAOwvB,EAAM/Q,EAAE,EAAEpV,EAA3tJ,CAA8xJ,CAAC,MAAM,IAAI,IAAI,OAAOA,GAAG,KAA74J,EAAw5JJ,EAAG6vJ,WAAW7P,EAAOp5I,MAAM2f,EAAM/Q,IAAI,KAAv2J,EAAu3J,KAAr2J,EAAs3J,KAAp2J,EAAq3JpV,EAAr3J,EAAm4JJ,EAAGuvJ,QAAO,EAAK,KAAv8J,EAAg+J,KAAxhK,EAAoiK,KAAjhK,EAAmiK,MAAM,QAAQ,MAAM,IAAIzzJ,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhGy1I,EAAaxuI,MAAM,2BAAtqK,GAAosK3C,GAAUJ,EAAG6vJ,WAAW7P,EAAOp5I,MAAM2f,EAAM/Q,IAAWA,EAAE,IAAI,IAAI,OAAOpV,GAAG,KAA9wK,EAAyxKJ,EAAG6vJ,WAAW7P,EAAOp5I,MAAM2f,EAAM/Q,IAAI,KAAxuK,EAAwvK,KAAtuK,EAAuvK,KAAruK,EAAsvK,MAAM,KAAjzK,EAA00K,KAAl4K,EAA+7K,OAAjDrf,EAAM6pJ,EAAOp5I,MAAM2f,EAAM/Q,IAAY5O,OAAO,KAAU5G,EAAGuvJ,QAAO,EAAKp5J,EAAMA,EAAMyQ,MAAM,GAAG,IAAG,KAAx9K,MAA6+KxG,IAAkBjK,EAAMy5J,GAAh+K,GAA4+KxvJ,GAAwBmxI,EAAaoS,QAAQ,cAAcxtJ,EAAM,sBAAsB6J,EAAG4U,IAAIg7I,EAASz5J,EAAMuQ,QAAQ,WAAW0nJ,GAAgB7nI,KAAkC,iCAAnBuoI,EAAa,KAAuC34J,EAAMqjC,MAAM,qCAAqC+3G,EAAaoS,QAAQ,cAAcxtJ,EAAM,qBAAqBA,EAAM,eAAe6J,EAAG4U,IAAIze,EAAMA,EAAMowB,IAAO,MAAM,KAA73L,EAAu4L,MAAM,IAAIzqB,MAAM,4BAA4B,OAAO0Z,EAAE,IAAI,IAAIze,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOqJ,GAAG,KAAlhM,EAA6hMJ,EAAG6vJ,WAAW7P,EAAOp5I,MAAM2f,EAAM/Q,IAAIpV,EAA19L,EAAw+L,MAAM,KAAzkM,EAAqlMwvJ,EAAS5P,EAAOp5I,MAAM2f,EAAM/Q,GAAGpV,EAAjmM,EAAgnM,MAAM,KAAjlM,EAA0mM,IAAIjK,EAAM6pJ,EAAOp5I,MAAM2f,EAAM/Q,GAAG9O,QAAQ,WAAW0nJ,GAAgB7c,EAAaoS,QAAQ,cAAcxtJ,EAAM,sBAAsB6J,EAAG4U,IAAIg7I,EAASz5J,EAAMowB,GAAO,KAAxvM,EAAwwMnmB,EAAtvM,OAAgxM,OAAOA,GAAG,KAAl2M,EAAg4MJ,EAAGunH,QAA8B,iCAAnBunC,EAAa,KAAuCc,EAASp2H,MAAM,qCAAqC+3G,EAAaoS,QAAQ,cAAciM,EAAS,qBAAqBA,EAAS,gBAAgB5vJ,EAAG4U,IAAIg7I,EAASA,EAASrpI,GAAOA,EAAM/Q,EAAEpV,EAA3oN,EAAopN,MAAM,KAAjlN,EAAimNmxI,EAAaoS,QAAQ,+BAA+BiM,EAAS,OAAO,KAAnpN,EAAoqNxvJ,EAA/vN,EAAwwNmmB,EAAM/Q,EAAE,MAAM,KAAxvN,EAAkwNpV,EAAxuN,EAA8vNmmB,EAAM/Q,EAAE,MAAM,KAAvtN,EAAwuN,MAAM,IAAI1Z,MAAM,+DAAgE0Z,GAAG,CAAC,CAAC,SAASqqI,EAAc7/I,EAAGmgJ,EAAW2O,GAAyE,IAA3D,IAAIvnC,EAAQvnH,EAAGunH,QAAY0nC,EAAW,KAASloJ,EAAE/G,EAAGrG,OAAaoN,KAAI,CAAC,IAAI3F,EAAEpB,EAAG+G,GAAOy6I,EAAMpgJ,EAAEogJ,MAAUrrJ,EAAMiL,EAAEjL,MAAiC,IAAvB25J,EAAItO,EAAM3gJ,QAAQ,MAAY,EAAG,IAAIwN,EAAOjN,EAAEiN,OAAOmzI,EAAM56I,MAAM,EAAEkpJ,GAASvO,EAAUC,EAAM56I,MAAMkpJ,EAAI,GAAOC,EAAkB,UAAT1hJ,GAAkBkzI,OAAeA,EAAUC,EAAMnzI,EAAO,KAAK0hJ,EAAiB,UAARvO,GAAiB,GAAGpgJ,EAAEmgJ,UAAUA,GAAwB,IAAXwO,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAU55J,EAAMiL,EAAEghJ,IAAI,gCAAgCjC,EAAWgC,mBAAmB4N,EAAS55J,GAAO,CAAiB,IAAZ4Q,EAAE/G,EAAGrG,OAAaoN,MAAiBsH,GAAZjN,EAAEpB,EAAG+G,IAAgBsH,UAA8B,QAATA,IAAgBjN,EAAEghJ,IAAI,wCAAmD,UAAT/zI,IAAkBjN,EAAEghJ,IAAI0M,EAAazgJ,GAAQ,MAAM,IAAIyhJ,KAAIvoC,EAAQ1mH,QAAQ,MAAY,GAAGwN,EAAOrO,EAAGqO,OAAOk5G,EAAQ3gH,MAAM,EAAEkpJ,GAAKvO,EAAUvhJ,EAAGuhJ,UAAUh6B,EAAQ3gH,MAAMkpJ,EAAI,KAAQzhJ,EAAO,KAAKkzI,EAAUvhJ,EAAGuhJ,UAAUh6B,GAAQ,IAAI2iC,EAAGlqJ,EAAGoiJ,IAAI0M,EAAazgJ,GAAQ,IAAqD,GAAjD8xI,EAAWj/F,aAAagpG,EAAG3I,EAAUh6B,EAAQvnH,IAAOA,EAAGuvJ,OAA8L,OAAtDvvJ,EAAG8uJ,aAAaA,EAAa9uJ,EAAGivJ,WAAWA,GAAkB,EAAjJ,GAA5C9O,EAAW8B,WAAWiI,EAAG3I,EAAUh6B,GAAY0nC,EAAY,IAAI5gJ,KAAU4gJ,EAAY9O,EAAWkC,iBAAiBh0I,EAAiF,CAAC,SAASshJ,EAAwB3P,EAAOiQ,EAAW1oC,EAAQ6mC,EAAejO,GAAY,GAAG,yBAAyBpqI,KAAKwxG,GAAS,CAAC,IAAI2oC,EAAWlQ,EAAOn/I,QAAQ,KAAK0mH,EAAQ,IAAI0oC,GAAgBpuJ,EAAKm+I,EAAO5zH,UAAU6jI,EAAW,EAAEC,GAAY,GAAG,OAAOn6I,KAAKlU,GAAO,MAAG,YAAYkU,KAAKwxG,IAAU44B,EAAWwC,WAAW9gJ,EAAK,EAAEA,EAAKlI,QAAeu2J,IAAWruJ,EAAKA,EAAK6E,QAAQ,WAAW0nJ,GAAgBjO,EAAWwC,WAAW9gJ,EAAK,EAAEA,EAAKlI,QAAeu2J,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAcxP,EAAOiQ,EAAW1oC,EAAQwnC,GAAU,IAAI5qI,EAAI4qI,EAASxnC,GAA8I,OAA7H,MAALpjG,KAAWA,EAAI67H,EAAOmQ,YAAY,KAAK5oC,EAAQ,MAAY0oC,IAAY9rI,EAAI67H,EAAOmQ,YAAY,KAAK5oC,IAASwnC,EAASxnC,GAASpjG,GAAWA,EAAI8rI,CAAU,CAAC,SAASD,EAAMhQ,EAAOhjG,GAAQ,IAAI,IAAI5G,KAAK4pG,EAAQhjG,EAAO5G,GAAG4pG,EAAO5pG,EAAG,CAAC,SAASg5G,EAASpP,EAAOz5H,EAAM45H,EAAW5O,GAA8C,GAAiB,MAAxCyO,EAAOrlG,OAAOp0B,EAAM,GAAwB,MAA4B,MAAzBy5H,EAAOrlG,OAAOp0B,EAAM,IAAcw0B,EAAIilG,EAAOn/I,QAAQ,SAAS0lB,EAAM,IAAUA,GAAO45H,EAAW1hC,QAAQuhC,EAAOz5H,EAAM,EAAEw0B,EAAIx0B,EAAM,GAAUw0B,EAAI,IAAOw2F,EAAaxuI,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1Bi9I,EAAO1oG,OAAO/wB,EAAM,EAAE,GAAa,CAAC,IAAIw0B,EAAIilG,EAAOn/I,QAAQ,MAAM0lB,EAAM,GAAmG,OAAhG45H,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAOz5H,EAAM,EAAEw0B,EAAIx0B,EAAM,GAAG45H,EAAWiD,WAAkBroG,EAAI,CAAC,CAAC,IAAIq1G,EAAqiD,SAAepQ,EAAOz5H,GAAO,IAAIiT,EAAUkwH,EAAI,GAAO2G,EAAI,6CAAkF,IAArCA,EAAInJ,UAAU3gI,EAAM8pI,EAAIzd,KAAKoN,GAAcxmH,EAAM62H,EAAIzd,KAAKoN,IAAyB,GAAhB0J,EAAI5xJ,KAAK0hC,GAAUA,EAAM,GAAG,OAAOkwH,CAAI,CAA/uDxtI,CAAM8jI,EAAOz5H,GAAWm7H,EAAI0O,EAAOz2J,OAAO,GAAG+nJ,EAAI,GAAG,YAAY3rI,KAAKq6I,EAAO,GAAG,IAAI,CAAC,IAAIz1J,EAAKy1J,EAAO,GAAG,GAAOjG,EAAMzI,EAAI,GAAG,YAAY3rI,KAAKq6I,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOhG,EAAM1I,EAAI,GAAG0O,EAAO,GAAG,GAAOE,EAAUF,EAAO1O,EAAI,GAA2I,OAAxIvB,EAAWkD,SAAS1oJ,EAAKwvJ,GAAOA,EAAMzjJ,QAAQ,kBAAkB,MAAM0jJ,GAAOA,EAAM1jJ,QAAQ,kBAAkB,OAAOy5I,EAAWoQ,SAAgBD,EAAU/wJ,MAAM+wJ,EAAU,GAAG32J,MAAM,CAAE,OAAO,CAAC,CAAC,SAASw1J,EAAiBnP,EAAOz5H,EAAM45H,GAAY,IAAIplG,EAAIilG,EAAOn/I,QAAQ,KAAK0lB,GAAO,GAAGw0B,EAAI,CAAC,IAAIvhB,EAAMwmH,EAAO5zH,UAAU7F,EAAMw0B,GAAKvhB,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAG7/B,OAAOwmJ,EAAWmC,sBAAsB9oH,EAAM,GAAGA,EAAM,IAAWuhB,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAASs0G,EAAkBrP,GAAQ,CAAkjB,SAASwQ,EAAYC,EAAKhoJ,GAA8B,OAAtBgoJ,EAAKvM,UAAUz7I,EAAcgoJ,CAAI,CAAtqVvQ,EAAU9vG,UAAU,CAACnlC,MAAM,SAAS+0I,EAAOI,EAAaE,GAAW,IAAIH,EAAW3sJ,KAAK2sJ,WAAWA,EAAWgB,gBAAgB6O,EAAM5P,EAAaA,EAAa,CAAC,GAAGn1I,EAAM+0I,EAAOI,EAAaE,EAAUH,EAAW3sJ,KAAK+9I,cAAc4O,EAAW4C,aAAa,GAAuzTsM,EAAkBj/G,UAAU,CAACy/G,WAAW,SAAStoC,GAAS,IAAI2mC,EAAen4I,KAAKwxG,GAAU,MAAM,IAAIzrH,MAAM,mBAAmByrH,GAAS/zH,KAAK+zH,QAAQA,CAAO,EAAE3yG,IAAI,SAAS4sI,EAAMrrJ,EAAMk6I,GAAQ,IAAI6d,EAAen4I,KAAKyrI,GAAQ,MAAM,IAAI1lJ,MAAM,qBAAqB0lJ,GAAOhuJ,KAAKA,KAAKmG,UAAU,CAAC6nJ,MAAMA,EAAMrrJ,MAAMA,EAAMk6I,OAAOA,EAAO,EAAE12I,OAAO,EAAE+2J,aAAa,SAAS3pJ,GAAG,OAAOvT,KAAKuT,GAAGw6I,SAAS,EAAEO,WAAW,SAAS/6I,GAAG,OAAOvT,KAAKuT,GAAGo4I,OAAO,EAAEyC,SAAS,SAAS76I,GAAG,OAAOvT,KAAKuT,GAAGy6I,KAAK,EAAEG,OAAO,SAAS56I,GAAG,OAAOvT,KAAKuT,GAAGq7I,GAAG,EAAE3iJ,SAAS,SAASsH,GAAG,OAAOvT,KAAKuT,GAAG5Q,KAAK,GAA4Eq6J,EAAY,CAAC,EAAEA,EAAYpgH,qBAAqBogH,IAAcA,EAAY,SAASC,EAAKhoJ,GAAQ,SAAS+M,IAAI,CAA4B,IAAI/M,KAA/B+M,EAAE46B,UAAU3nC,EAAO+M,EAAE,IAAIA,EAAgBi7I,EAAMj7I,EAAE/M,GAAQgoJ,EAAKhoJ,GAAQ,OAAO+M,CAAC,GAAoNtiB,EAAQgtJ,UAAUA,CAAS,EAAE,CAAC,GAAG,2BAA2B,CAAC,SAAS9yE,EAAQn6E,EAAOC,GAAS,aAAa,IAAI65I,EAAa,WAAW,SAASC,EAAiBhwF,EAAO4yC,GAAO,IAAI,IAAI7oF,EAAE,EAAEA,EAAE6oF,EAAMj2F,OAAOoN,IAAI,CAAC,IAAIkmI,EAAWr9C,EAAM7oF,GAAGkmI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKvlI,OAAOwlI,eAAerwF,EAAOiwF,EAAWp1I,IAAIo1I,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYl9F,UAAUm9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0e,SAASY,EAAgBrwF,EAASyvF,GAAa,KAAKzvF,aAAoByvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAC,IAAItB,EAASv/D,EAAQ,eAAeu/D,EAASmG,OAAO1lE,EAAQ,YAAYu/D,EAASoG,cAAc3lE,EAAQ,oBAAoB,IAAI6lE,EAAQtG,EAASoG,cAAkBvuB,EAAc,WAAW,SAASA,IAAoD,GAApC0pB,EAAgB16I,KAAKgxH,GAAkB/9G,UAAU9M,OAAO,EAAG,MAAM,IAAImC,MAAM,2GAA2GtI,KAAK0/I,SAAS,CAAC,EAAE1/I,KAAK2/I,QAAQ,GAAG3/I,KAAKksF,WAAW,CAAC,EAAE,CAAq5G,OAAp5GqtD,EAAavoB,EAAc,CAAC,CAAC3sH,IAAI,eAAe1B,MAAM,SAAsBlD,GAA2C,OAAnCO,KAAK2/I,QAAQr7I,KAAKm7I,EAAQhgJ,IAAgBO,IAAI,GAAG,CAACqE,IAAI,aAAa1B,MAAM,SAAoBR,GAAS,IAAIm0D,EAAMt2D,KAAsO,OAAjOA,KAAKmC,QAAQA,EAAQkS,OAAOC,KAAK6kI,EAAS/0I,UAAUH,SAAQ,SAASI,GAAK,IAAI+gC,EAAa+zG,EAAS/0I,SAASC,GAAKiyD,EAAMjyD,GAAyB,MAApBiyD,EAAMn0D,QAAQkC,GAAWiyD,EAAMn0D,QAAQkC,GAAK+gC,CAAY,IAAMplC,KAAKyzH,KAAKzzH,KAAKy+J,uBAA8Bz+J,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiB8wH,GAAK,GAAGA,EAAIssB,UAAW,MAAM,IAAIz3I,MAAM,iEAA0G,OAAzCtI,KAAKyzH,IAAIA,EAAIzzH,KAAKy+J,uBAA8Bz+J,IAAI,GAAG,CAACqE,IAAI,cAAc1B,MAAM,SAAqB6yG,GAAU,IAAIwqC,EAAYhgJ,KAAKigJ,oBAAoBzqC,GAAUwqC,EAAYvoI,QAAQzX,KAAK0/I,SAASlqC,GAAUwqC,CAAW,GAAG,CAAC37I,IAAI,UAAU1B,MAAM,WAAuF,OAApE3C,KAAKkgJ,eAAelgJ,KAAK4/I,eAAeO,kBAAkBngJ,KAAKyzH,KAAYzzH,IAAI,GAAG,CAACqE,IAAI,uBAAuB1B,MAAM,WAA6L,OAA7J3C,KAAKq/C,SAASr/C,KAAKyzH,IAAIynB,MAAM,qBAAqB,OAAO,OAAOl7I,KAAK4/I,eAAe5/I,KAAKmC,QAAQy9I,gBAAgB5uB,EAAc6uB,eAAe7/I,KAAKq/C,UAAiBr/C,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAkB,IAAIy9I,EAAOpgJ,KAAmzC,OAA9yCA,KAAKmC,QAAQ29I,aAAa,GAAG9/I,KAAK2/I,QAAQ3/I,KAAK4/I,eAAeS,YAAYlyI,KAAI,SAASmyI,GAAgB,OAAOA,GAAgB,IAAGt4H,OAAOhoB,KAAK2/I,SAAS3/I,KAAKmC,QAAQnC,KAAK2/I,QAAQnE,QAAO,SAASr5I,EAAQ1C,GAAQ,OAAOA,EAAO8gJ,mBAAmBp+I,EAAQi+I,EAAO,GAAEpgJ,KAAKmC,SAASnC,KAAKw6I,aAAax6I,KAAKmC,QAAQ29I,aAAatE,QAAO,SAAShB,EAAahlC,GAAU,IAAIphC,EAAQgsE,EAAO3sB,IAAIynB,MAAM1lC,GAAUgrC,SAA0D,OAAjDhG,EAAahlC,GAAU2jC,EAASgC,QAAQ/mE,GAAgBomE,CAAY,GAAE,CAAC,GAAGx6I,KAAK2/I,QAAQ17I,SAAQ,SAASxE,GAAQA,EAAOsa,IAAI,CAAC05G,IAAI2sB,EAAO3sB,IAAI+mB,aAAa4F,EAAO5F,aAAa3wI,KAAKu2I,EAAOv2I,MAAM,IAAG7J,KAAKygJ,UAAUzgJ,KAAK2/I,QAAQ17I,SAAQ,SAASxE,GAAQA,EAAOsa,IAAI,CAAC2lI,SAASU,EAAOV,UAAU,IAAG1/I,KAAKkgJ,eAAej8I,SAAQ,SAASuxG,GAAyC,MAA5B4qC,EAAO3sB,IAAIynB,MAAM1lC,IAAiB4qC,EAAOM,YAAYlrC,EAAU,IAAGx1G,KAAK2gJ,OAAO3gJ,KAAK2/I,QAAQnE,QAAO,SAAS74I,EAAMlD,GAAQ,OAAOA,EAAOmhJ,eAAej+I,EAAM,GAAE,CAAC,GAAG0R,OAAOC,KAAKtU,KAAK2gJ,QAAQ18I,SAAQ,SAAS+lC,GAAI,IAAI62G,EAAOT,EAAOO,OAAO32G,GAAQE,EAAK22G,EAAO32G,KAAS81G,EAAYI,EAAOV,SAASx1G,GAAM81G,EAAYc,QAAQD,EAAOh3I,MAAMm2I,EAAYnwE,OAAO7lC,GAAIo2G,EAAO3sB,IAAI58C,KAAK7sC,EAAGg2G,EAAY5rE,QAAQ,IAAG//D,OAAOC,KAAKtU,KAAKw6I,cAAcv2I,SAAQ,SAASuxG,GAAU4qC,EAAO3sB,IAAI14G,OAAOy6F,GAAU,IAAIphC,EAAQ+kE,EAASiC,QAAQgF,EAAO5F,aAAahlC,IAAW,OAAO4qC,EAAO3sB,IAAI58C,KAAK2+B,EAASphC,EAAQ,CAAC,EAAE,IAAUp0E,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBkH,GAAqB,OAAf7J,KAAK6J,KAAKA,EAAY7J,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAkB,OAAO3C,KAAKyzH,GAAG,GAAG,CAACpvH,IAAI,sBAAsB1B,MAAM,SAA6BgtD,GAAM,IAAIoxF,EAAS/gJ,KAAKyzH,IAAIynB,MAAMvrF,GAAM6wF,SAAS,OAAOxgJ,KAAKghJ,+BAA+BD,EAASpxF,EAAK,GAAG,CAACtrD,IAAI,iCAAiC1B,MAAM,SAAwCyxE,EAAQ6sE,GAAU,IAAIC,EAAOlhJ,KAASmhJ,EAAY,CAACF,SAASA,GAA8K,OAApK5sI,OAAOC,KAAK6kI,EAAS/0I,UAAUH,SAAQ,SAASI,GAAK88I,EAAY98I,GAAK68I,EAAO78I,EAAI,IAAG88I,EAAYvB,eAAe5/I,KAAK4/I,eAAeuB,EAAYxB,QAAQ3/I,KAAK2/I,QAAe,IAAI3uB,EAAcowB,aAAahtE,EAAQ+sE,EAAY,GAAG,CAAC98I,IAAI,cAAc1B,MAAM,SAAqBgtD,GAAM,OAAO3vD,KAAKigJ,oBAAoBtwF,GAAM3vD,KAAK4/I,eAAeyB,UAAUC,aAAa,GAAG,CAACj9I,IAAI,oBAAoB1B,MAAM,WAA4C,OAAf3C,KAAKygJ,UAAiBzgJ,KAAKkgJ,cAAc,KAAYlvB,CAAa,CAAvrH,GAA2rHA,EAAcmoB,SAASv/D,EAAQ,eAAeo3C,EAAcgsB,OAAOpjE,EAAQ,YAAYo3C,EAAcowB,aAAaxnE,EAAQ,mBAAmBo3C,EAAc6uB,eAAejmE,EAAQ,sBAAsBo3C,EAAcuwB,WAAW3nE,EAAQ,iBAAiBn6E,EAAOC,QAAQsxH,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,WAAW,GAAG,gBAAgB,GAAG,kBAAkB,MAAM,CAAC,EAAE,GAAnkiF,CAAukiF,uCCWr3iFvxH,EAAOC,QAA2N,SAASkO,EAAEC,EAAEtK,EAAEytB,GAAG,SAAS3mB,EAAEmyG,EAAE51F,GAAG,IAAIrjB,EAAEi5G,GAAG,CAAC,IAAI3uG,EAAE2uG,GAAG,CAAmE,GAAGx1G,EAAE,OAAOA,EAAEw1G,GAAE,GAAI,IAAIz4E,EAAE,IAAIz7B,MAAM,uBAAuBk0G,EAAE,KAAK,MAAMz4E,EAAEptB,KAAK,mBAAmBotB,CAAC,CAAC,IAAIxvB,EAAEhR,EAAEi5G,GAAG,CAAC98G,QAAQ,CAAC,GAAGmO,EAAE2uG,GAAG,GAAG3/D,KAAKtoC,EAAE7U,SAAQ,SAASkO,GAAoB,OAAOvD,EAAlBwD,EAAE2uG,GAAG,GAAG5uG,IAAgBA,EAAE,GAAE2G,EAAEA,EAAE7U,QAAQkO,EAAEC,EAAEtK,EAAEytB,EAAE,CAAC,OAAOztB,EAAEi5G,GAAG98G,OAAO,CAAC,IAAI,IAAIsH,OAAE,EAAoCw1G,EAAE,EAAEA,EAAExrF,EAAE7qB,OAAOq2G,IAAInyG,EAAE2mB,EAAEwrF,IAAI,OAAOnyG,CAAC,CAAnb,CAAqb,CAAC,EAAE,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,GAAG,GAAGA,EAAE,CAAC5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK0+J,KAAK,EAAE,IAAI,IAAI7wJ,EAAE,EAAEA,EAAE7N,KAAK6J,KAAK1D,OAAO0H,IAAID,EAAEC,GAAG,IAAID,EAAEC,EAAE,CAAC,CAAC,IAAIxD,EAAEuD,EAAE,gBAAgBojB,EAAE4rB,UAAU,IAAIvyC,EAAE2mB,EAAE4rB,UAAU+hH,OAAO,SAAS/wJ,GAAG,OAAO5N,KAAK6J,KAAK7J,KAAK0+J,KAAK9wJ,EAAE,EAAEojB,EAAE4rB,UAAUgiH,qBAAqB,SAAShxJ,GAAG,IAAI,IAAIC,EAAED,EAAEomJ,WAAW,GAAGzwJ,EAAEqK,EAAEomJ,WAAW,GAAGhjI,EAAEpjB,EAAEomJ,WAAW,GAAG3pJ,EAAEuD,EAAEomJ,WAAW,GAAGhtJ,EAAEhH,KAAKmG,OAAO,EAAEa,GAAG,IAAIA,EAAE,GAAGhH,KAAK6J,KAAK7C,KAAK6G,GAAG7N,KAAK6J,KAAK7C,EAAE,KAAKzD,GAAGvD,KAAK6J,KAAK7C,EAAE,KAAKgqB,GAAGhxB,KAAK6J,KAAK7C,EAAE,KAAKqD,EAAE,OAAOrD,EAAEhH,KAAK0+J,KAAK,OAAO,CAAC,EAAE1tI,EAAE4rB,UAAUiiH,SAAS,SAASjxJ,GAAG,GAAG5N,KAAK8+J,YAAYlxJ,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKuJ,MAAMpT,KAAK0+J,KAAK1+J,KAAK+L,MAAM/L,KAAK0+J,KAAK1+J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQsxB,CAAC,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAE,oEAAoEztB,EAAEw7J,OAAO,SAASnxJ,EAAEC,GAAG,IAAI,IAAItK,EAAE8G,EAAErD,EAAEw1G,EAAE51F,EAAErT,EAAEwwB,EAAExvB,EAAE,GAAGC,EAAE,EAAEA,EAAE5G,EAAEzH,QAAoEq2G,GAA5Dj5G,EAAEqK,EAAEomJ,WAAWx/I,OAAkD,EAAEoS,GAAG,EAAErjB,IAAI,GAAxD8G,EAAEuD,EAAEomJ,WAAWx/I,OAA8C,EAAEjB,GAAG,GAAGlJ,IAAI,GAArDrD,EAAE4G,EAAEomJ,WAAWx/I,OAA2C,EAAEuvB,EAAE,GAAG/8B,EAAE67C,MAAMx4C,GAAGkJ,EAAEwwB,EAAE,GAAG8e,MAAM77C,KAAK+8B,EAAE,IAAIxvB,EAAEA,EAAEyc,EAAEm2B,OAAOq1D,GAAGxrF,EAAEm2B,OAAOvgC,GAAGoK,EAAEm2B,OAAO5zC,GAAGyd,EAAEm2B,OAAOpjB,GAAG,OAAOxvB,CAAC,EAAEhR,EAAEy7J,OAAO,SAASpxJ,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAI4f,EAAErT,EAAEwwB,EAAExvB,EAAE,GAAGC,EAAE,EAAE,IAAI5G,EAAEA,EAAEsF,QAAQ,sBAAsB,IAAIsB,EAAE5G,EAAEzH,QAAoH5C,EAA1GytB,EAAE3jB,QAAQO,EAAEu5C,OAAO3yC,OAA4F,GAAtFoS,EAAEoK,EAAE3jB,QAAQO,EAAEu5C,OAAO3yC,QAAsE,EAAEnK,GAAG,GAAGuc,IAAI,GAA5ErT,EAAEyd,EAAE3jB,QAAQO,EAAEu5C,OAAO3yC,QAA4D,EAAExN,GAAG,EAAEuM,IAAI,GAAjEwwB,EAAE/S,EAAE3jB,QAAQO,EAAEu5C,OAAO3yC,OAAgDD,GAAG6G,OAAO0jI,aAAav7I,GAAG,IAAIgQ,IAAIgB,GAAG6G,OAAO0jI,aAAaz0I,IAAI,IAAI05B,IAAIxvB,GAAG6G,OAAO0jI,aAAa93I,IAAI,OAAOuN,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS3G,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,IAAIhxB,KAAKi/J,eAAe,EAAEj/J,KAAKk/J,iBAAiB,EAAEl/J,KAAKm/J,MAAM,EAAEn/J,KAAKo/J,kBAAkB,KAAKp/J,KAAKq/J,kBAAkB,IAAI,CAACruI,EAAE4rB,UAAU,CAAC0iH,WAAW,WAAW,OAAO,IAAI,EAAEC,qBAAqB,WAAW,OAAO,IAAI,GAAG1xJ,EAAEnO,QAAQsxB,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAaA,EAAEi8J,MAAM,CAACC,MAAM,OAAOC,SAAS,SAAS9xJ,EAAEC,GAAG,OAAOD,CAAC,EAAE+xJ,WAAW,SAAS/xJ,GAAG,OAAOA,CAAC,EAAEgyJ,kBAAkB,KAAKC,oBAAoB,MAAMt8J,EAAEu8J,QAAQlyJ,EAAE,UAAU,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAEpjB,EAAE,WAAWvD,EAAE,CAAC,EAAE,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAWwD,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,QAAG,IAAoBD,IAAIA,EAAEzH,OAAO,OAAO,EAAE,IAAI5C,EAAE,WAAWytB,EAAE+uI,UAAUnyJ,QAAG,IAAoBC,IAAIA,EAAE,GAAG,IAAY+Y,EAAE,EAAE/Y,IAAI,EAAE,IAAI,IAAI0F,EAAE,EAAEwwB,EAAEn2B,EAAEzH,OAAOoN,EAAEwwB,EAAExwB,IAAIqT,EAAErjB,EAAEqK,EAAE2F,GAAG3F,EAAEomJ,WAAWzgJ,GAAsB1F,EAAEA,IAAI,EAAXxD,EAAZ,KAAKwD,EAAE+Y,IAAoB,OAAU,EAAH/Y,CAAI,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,GAAG5N,KAAK6J,KAAK,KAAK7J,KAAKmG,OAAO,EAAEnG,KAAK+L,MAAM,EAAE/L,KAAK0+J,KAAK,CAAC,CAAC,IAAIr0J,EAAEuD,EAAE,WAAWojB,EAAE4rB,UAAU,CAACkiH,YAAY,SAASlxJ,GAAG5N,KAAKggK,WAAWhgK,KAAK+L,MAAM6B,EAAE,EAAEoyJ,WAAW,SAASpyJ,GAAG,GAAG5N,KAAKmG,OAAOnG,KAAK0+J,KAAK9wJ,GAAGA,EAAE,EAAE,MAAM,IAAItF,MAAM,sCAAsCtI,KAAKmG,OAAO,mBAAmByH,EAAE,qBAAqB,EAAEqyJ,SAAS,SAASryJ,GAAG5N,KAAKggK,WAAWpyJ,GAAG5N,KAAK+L,MAAM6B,CAAC,EAAE4lB,KAAK,SAAS5lB,GAAG5N,KAAKigK,SAASjgK,KAAK+L,MAAM6B,EAAE,EAAE+wJ,OAAO,SAAS/wJ,GAAG,EAAEsyJ,QAAQ,SAAStyJ,GAAG,IAAIC,EAAEtK,EAAE,EAAE,IAAIvD,KAAK8+J,YAAYlxJ,GAAGC,EAAE7N,KAAK+L,MAAM6B,EAAE,EAAEC,GAAG7N,KAAK+L,MAAM8B,IAAItK,GAAGA,GAAG,GAAGvD,KAAK2+J,OAAO9wJ,GAAG,OAAO7N,KAAK+L,OAAO6B,EAAErK,CAAC,EAAE48J,WAAW,SAASvyJ,GAAG,OAAOvD,EAAE+1J,YAAY,SAASpgK,KAAK6+J,SAASjxJ,GAAG,EAAEixJ,SAAS,SAASjxJ,GAAG,EAAEgxJ,qBAAqB,SAAShxJ,GAAG,EAAEyyJ,SAAS,WAAW,IAAIzyJ,EAAE5N,KAAKkgK,QAAQ,GAAG,OAAO,IAAIz/I,KAAiB,MAAX7S,GAAG,GAAG,MAAWA,GAAG,GAAG,IAAI,EAAEA,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAGA,GAAG,EAAE,IAAI,GAAGA,IAAI,EAAE,GAAGC,EAAEnO,QAAQsxB,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAaA,EAAE+8J,QAAO,EAAG/8J,EAAE84I,QAAO,EAAG94I,EAAEoH,KAAI,EAAGpH,EAAEg9J,eAAc,EAAGh9J,EAAEod,KAAK,KAAKpd,EAAEi9J,YAAY,KAAKj9J,EAAEk9J,mBAAmB,KAAKl9J,EAAE0nH,QAAQ,KAAK1nH,EAAEm9J,gBAAgB,KAAKn9J,EAAEo9J,eAAe,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS/yJ,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAEpjB,EAAE,WAAWrK,EAAEq9J,cAAc,SAAShzJ,GAAG,OAAOojB,EAAE4vI,cAAchzJ,EAAE,EAAErK,EAAEs9J,kBAAkB,SAASjzJ,GAAG,OAAOojB,EAAEovI,YAAY,aAAaxyJ,EAAE,EAAErK,EAAEu9J,kBAAkB,SAASlzJ,GAAG,OAAOojB,EAAEovI,YAAY,SAASxyJ,EAAE,EAAErK,EAAEw9J,YAAY,SAASnzJ,GAAG,IAAIC,EAAEmjB,EAAEovI,YAAY,cAAcxyJ,GAAG,OAAOojB,EAAEgwI,iBAAiBnzJ,EAAE,EAAEtK,EAAEy9J,iBAAiB,SAASpzJ,GAAG,OAAOojB,EAAEgwI,iBAAiBpzJ,EAAE,EAAErK,EAAE68J,YAAY,SAASxyJ,EAAEC,GAAG,OAAOmjB,EAAEovI,YAAYxyJ,EAAEC,EAAE,EAAEtK,EAAEw8J,UAAU,SAASnyJ,GAAG,OAAOojB,EAAE+uI,UAAUnyJ,EAAE,EAAErK,EAAE09J,aAAa,SAASrzJ,GAAG,OAAOojB,EAAEiwI,aAAarzJ,EAAE,EAAErK,EAAE29J,iBAAiBlwI,EAAEkwI,iBAAiB39J,EAAE49J,iBAAiBnwI,EAAEmwI,iBAAiB59J,EAAE69J,OAAO,SAASxzJ,GAAG,OAAOojB,EAAEowI,OAAOxzJ,EAAE,EAAErK,EAAE89J,gBAAgB,SAASzzJ,GAAG,OAAOojB,EAAEqwI,gBAAgBzzJ,EAAE,EAAErK,EAAE+9J,SAAS,SAAS1zJ,GAAG,OAAOojB,EAAEswI,SAAS1zJ,EAAE,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAE,oBAAoBuwI,YAAY,oBAAoBC,aAAa,oBAAoBC,YAAYp3J,EAAEuD,EAAE,QAAQrK,EAAEs8J,oBAAoB7uI,EAAE,aAAa,QAAQztB,EAAEq8J,kBAAkB5uI,EAAE,aAAa,QAAQztB,EAAEk8J,MAAM,OAAOl8J,EAAEm8J,SAAS,SAAS9xJ,EAAEC,GAAG,OAAOxD,EAAEq3J,WAAW9zJ,EAAE,CAAC+zJ,MAAM9zJ,EAAE8zJ,QAAQ,GAAG,EAAEp+J,EAAEo8J,WAAW,SAAS/xJ,GAAG,OAAOvD,EAAEu3J,WAAWh0J,EAAE,CAAC,EAAE,CAACi0J,KAAK,KAAK,GAAG,CAAC,SAASj0J,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,EAAEC,GAAG,OAAO7N,gBAAgBgxB,GAAGhxB,KAAKk7I,MAAM,CAAC,EAAEl7I,KAAKirH,QAAQ,KAAKjrH,KAAK+/F,KAAK,GAAGnyF,GAAG5N,KAAKi0B,KAAKrmB,EAAEC,QAAQ7N,KAAKi2B,MAAM,WAAW,IAAIroB,EAAE,IAAIojB,EAAE,IAAI,IAAInjB,KAAK7N,KAAK,mBAAmBA,KAAK6N,KAAKD,EAAEC,GAAG7N,KAAK6N,IAAI,OAAOD,CAAC,IAAI,IAAIojB,EAAEpjB,EAAEC,EAAE,CAAC,IAAIxD,EAAEuD,EAAE,YAAYojB,EAAE4rB,UAAUhvC,EAAE,YAAYojB,EAAE4rB,UAAU3oB,KAAKrmB,EAAE,UAAUojB,EAAE8wI,QAAQl0J,EAAE,aAAaojB,EAAE5sB,SAASwJ,EAAE,cAAcojB,EAAE+wI,MAAMn0J,EAAE,2BAA2BojB,EAAEsvI,OAAO,CAACvB,OAAO,SAASnxJ,GAAG,OAAOvD,EAAE00J,OAAOnxJ,EAAE,EAAEoxJ,OAAO,SAASpxJ,GAAG,OAAOvD,EAAE20J,OAAOpxJ,EAAE,GAAGojB,EAAEgxI,aAAap0J,EAAE,kBAAkBC,EAAEnO,QAAQsxB,CAAC,EAAE,CAAC,WAAW,EAAE,iBAAiB,EAAE,aAAa,EAAE,0BAA0B,EAAE,SAAS,GAAG,WAAW,GAAG,YAAY,KAAK,GAAG,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAEpjB,EAAE,YAAYvD,EAAEuD,EAAE,UAAU5G,EAAE4G,EAAE,WAAW4uG,EAAE5uG,EAAE,gBAAgBC,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,IAAItK,EAAEqjB,EAAErT,EAAEwwB,EAAE,KAAIl2B,EAAE7G,EAAEtD,OAAOmK,GAAG,CAAC,EAAE,CAACyyJ,QAAO,EAAG2B,YAAW,EAAGC,uBAAsB,EAAG3B,eAAc,EAAG4B,eAAe93J,EAAE+3J,cAAe9B,SAAS1yJ,EAAEojB,EAAEguI,OAAOpxJ,IAAiBrK,GAAbqjB,EAAE,IAAI41F,EAAE5uG,EAAEC,IAAOqtI,MAAM3nI,EAAE,EAAEA,EAAEhQ,EAAE4C,OAAOoN,IAAIwwB,EAAExgC,EAAEgQ,GAAGvT,KAAK62E,KAAK9yC,EAAEs+H,YAAYt+H,EAAEu+H,aAAa,CAACjmB,QAAO,EAAG6lB,uBAAsB,EAAGvhJ,KAAKojB,EAAEpjB,KAAKhW,IAAIo5B,EAAEp5B,IAAIsgH,QAAQlnF,EAAEw+H,eAAep8J,OAAO49B,EAAEw+H,eAAe,KAAK7B,gBAAgB38H,EAAE28H,gBAAgBC,eAAe58H,EAAE48H,eAAeJ,cAAc1yJ,EAAE0yJ,gBAAgB,OAAO35I,EAAE47I,WAAWr8J,SAASnG,KAAKirH,QAAQrkG,EAAE47I,YAAYxiK,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,GAAG,UAAU,GAAG,eAAe,KAAK,GAAG,CAAC,SAAS4N,EAAEC,EAAEtK,IAAG,SAAUqK,GAAG,aAAaC,EAAEnO,QAAQ,SAASmO,EAAEtK,GAAG,OAAO,IAAIqK,EAAEC,EAAEtK,EAAE,EAAEsK,EAAEnO,QAAQ6iB,KAAK,SAAS1U,GAAG,OAAOD,EAAE60J,SAAS50J,EAAE,CAAE,GAAEgvC,KAAK78C,KAAK,oBAAoB0iK,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS90J,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,GAAG5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK0+J,KAAK,CAAC,CAAC,IAAIr0J,EAAEuD,EAAE,sBAAsBojB,EAAE4rB,UAAU,IAAIvyC,EAAE2mB,EAAE4rB,UAAUiiH,SAAS,SAASjxJ,GAAG5N,KAAK8+J,YAAYlxJ,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKuJ,MAAMpT,KAAK0+J,KAAK1+J,KAAK+L,MAAM/L,KAAK0+J,KAAK1+J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQsxB,CAAC,EAAE,CAAC,qBAAqB,KAAK,GAAG,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAEpjB,EAAE,aAAavD,EAAEuD,EAAE,WAAW5G,EAAE4G,EAAE,WAAW4uG,EAAE5uG,EAAE,eAAegZ,EAAEhZ,EAAE,cAAc2F,EAAE3F,EAAE,YAAYm2B,EAAEn2B,EAAE,kBAAkB2G,EAAE3G,EAAE,sBAAsB4G,EAAE5G,EAAE,gBAAgBizH,EAAEjzH,EAAE,UAAUg1C,EAAEh1C,EAAE,kBAAkBuY,EAAEvY,EAAE,sBAAsBoU,EAAE,SAASpU,GAAG,GAAGA,EAAE+0J,iBAAiBpuJ,IAAI3G,EAAE+0J,MAAM/0J,EAAE+0J,MAAMrD,aAAa1xJ,EAAEzL,QAAQk6I,QAAO,EAAGzuI,EAAEzL,QAAQm+J,QAAO,EAAG,eAAej2J,EAAE01J,UAAUnyJ,EAAE+0J,QAAQ,CAAC,IAAI90J,EAAED,EAAE+0J,MAAM/0J,EAAE+0J,MAAM,IAAIpB,WAAW1zJ,EAAE1H,QAAQ,IAAI0H,EAAE1H,QAAQyH,EAAE+0J,MAAM5oJ,IAAIlM,EAAE,EAAE,CAAC,OAAOD,EAAE+0J,KAAK,EAAEt6I,EAAE,SAASza,GAAG,IAAIC,EAAEmU,EAAEpU,GAAoB,MAAM,WAArBvD,EAAE01J,UAAUlyJ,IAAuBD,EAAEzL,QAAQk6I,QAAQrrH,EAAE4xI,WAAWpuJ,EAAE3G,EAAE,SAASD,EAAEi1J,WAAWh1J,CAAC,EAAE+B,EAAE,SAAShC,GAAG,IAAIC,EAAEmU,EAAEhiB,MAAM,OAAO,MAAO6N,EAAyB,IAAI7N,KAAKmC,QAAQm+J,SAASzyJ,EAAE0F,EAAEyrJ,OAAOnxJ,IAAIA,EAAED,GAAG5N,KAAKmC,QAAQk6I,OAAOymB,EAAEV,WAAWv0J,GAAGxD,EAAE+1J,YAAY,SAASvyJ,GAAGD,GAAG5N,KAAKmC,QAAQk6I,SAASxuI,EAAExD,EAAE+1J,YAAY,SAAS0C,EAAEC,WAAWl1J,KAAKA,EAAE,EAAEjB,EAAE,SAASgB,EAAEC,EAAEtK,GAAGvD,KAAKmH,KAAKyG,EAAE5N,KAAK2K,IAAIpH,EAAEoH,IAAI3K,KAAK2gB,KAAKpd,EAAEod,KAAK3gB,KAAKirH,QAAQ1nH,EAAE0nH,QAAQjrH,KAAK0gK,gBAAgBn9J,EAAEm9J,gBAAgB1gK,KAAK2gK,eAAep9J,EAAEo9J,eAAe3gK,KAAK2iK,MAAM90J,EAAE7N,KAAKmC,QAAQoB,EAAEvD,KAAKgjK,iBAAiB,CAACr4J,IAAIpH,EAAEoH,IAAIgW,KAAKpd,EAAEod,KAAK,EAAE/T,EAAEgwC,UAAU,CAAC4jG,OAAO,WAAW,OAAO5wI,EAAEitC,KAAK78C,MAAK,EAAG,EAAE6iK,SAAS,WAAW,OAAOjzJ,EAAEitC,KAAK78C,MAAK,EAAG,EAAEijK,aAAa,WAAW,IAAIr1J,EAAEya,EAAEroB,MAAM,OAAOqK,EAAE+1J,YAAY,aAAaxyJ,EAAE,EAAEs1J,aAAa,WAAW,IAAIt1J,EAAEya,EAAEroB,MAAM,OAAOqK,EAAE+1J,YAAY,aAAaxyJ,EAAE,EAAEu1J,cAAc,WAAW,OAAOnjK,KAAKkjK,eAAeE,MAAM,GAAG,IAAI9jI,EAAE,SAAS1xB,EAAEC,GAAG,IAAItK,EAAEytB,EAAE,GAAG,IAAIztB,EAAE,EAAEA,EAAEsK,EAAEtK,IAAIytB,GAAG5V,OAAO0jI,aAAa,IAAIlxI,GAAGA,KAAK,EAAE,OAAOojB,CAAC,EAA6M1d,EAAE,SAAS1F,EAAEC,EAAEtK,GAAG,IAAIytB,EAAEhqB,EAAEqD,EAAE01J,UAAUlyJ,GAAG,GAAU,iBAAPtK,EAArP,SAASqK,GAAG,OAA0B,KAAnBA,EAAEA,GAAG,CAAC,GAAI0yJ,QAAa,OAAO1yJ,EAAEyuI,aAAQ,IAASzuI,EAAEyuI,SAASzuI,EAAEyuI,QAAO,IAAIzuI,EAAEvD,EAAE3G,OAAOkK,EAAEgZ,IAAKjG,KAAK/S,EAAE+S,MAAM,IAAIF,KAAK,OAAO7S,EAAE4yJ,cAAc5yJ,EAAE4yJ,YAAY5yJ,EAAE4yJ,YAAYt5G,eAAet5C,CAAC,CAAgD4tE,CAAEj4E,IAAsBm9J,kBAAkBn9J,EAAEm9J,gBAAgB/6I,SAASpiB,EAAEm9J,gBAAgB,IAAIn9J,EAAEm9J,iBAAiB,MAAMn9J,EAAEm9J,kBAAkBn9J,EAAEoH,KAAI,GAAIpH,EAAEo9J,gBAAgB,GAAGp9J,EAAEo9J,iBAAiBp9J,EAAEoH,KAAI,GAAIpH,EAAEoH,MAAMiD,EAAEV,EAAEU,IAAIrK,EAAEg9J,gBAAgBvvI,EAAE4jD,EAAEhnE,KAAKwsD,EAAEvd,KAAK78C,KAAKgxB,GAAE,GAAIztB,EAAEoH,KAAFpH,MAAcsK,EAAyBtK,EAAE+8J,QAAO,EAAG/8J,EAAE84I,QAAO,EAAGxuI,EAAE,KAAK7G,EAAE,UAAU,GAAG,WAAWA,EAAEzD,EAAE84I,SAAS94I,EAAE+8J,SAAkC,IAA1B/8J,EAAE2+J,wBAA6Br0J,EAAExD,EAAEu2J,cAAc/yJ,QAAQ,CAAC,GAAGtK,EAAE+8J,QAAO,EAAG/8J,EAAE84I,QAAO,IAAKr1I,GAAG6G,aAAa0G,GAAG,MAAM,IAAIjM,MAAM,gBAAgBsF,EAAE,mCAAmC,gBAAgB5G,IAAI6G,EAAExD,EAAE+1J,YAAY,aAAavyJ,GAAG,CAAC,IAAI2uG,EAAE,IAAI5vG,EAAEgB,EAAEC,EAAEtK,GAAG,OAAOvD,KAAKk7I,MAAMttI,GAAG4uG,EAAEA,CAAC,EAAE5nC,EAAE,SAAShnE,GAAG,KAAKA,EAAEwF,OAAO,KAAKxF,EAAEA,EAAEgrB,UAAU,EAAEhrB,EAAEzH,OAAO,IAAI,IAAI0H,EAAED,EAAE+uJ,YAAY,KAAK,OAAO9uJ,EAAE,EAAED,EAAEgrB,UAAU,EAAE/qB,GAAG,EAAE,EAAEX,EAAE,SAASU,GAAG,MAAM,KAAKA,EAAEwF,OAAO,KAAKxF,GAAG,KAAKA,CAAC,EAAEwsD,EAAE,SAASxsD,EAAEC,GAAG,OAAOA,OAAE,IAAoBA,GAAGA,EAAED,EAAEV,EAAEU,GAAG5N,KAAKk7I,MAAMttI,IAAI0F,EAAEupC,KAAK78C,KAAK4N,EAAE,KAAK,CAACjD,KAAI,EAAG41J,cAAc1yJ,IAAI7N,KAAKk7I,MAAMttI,EAAE,EAAEy1J,EAAE,SAASz1J,EAAEC,EAAEtK,GAAG,IAAIytB,EAAEwrF,EAAE,IAAIjoG,EAAE,OAAO3G,EAAE+0J,iBAAiBpuJ,GAAGioG,EAAE0iD,iBAAiBtxJ,EAAE+0J,MAAMzD,iBAAiB1iD,EAAE2iD,MAAMvxJ,EAAE+0J,MAAMxD,MAAM,IAAI3iD,EAAE0iD,kBAAkBtxJ,EAAEjD,KAAKkD,EAAEk2B,EAAEy7H,MAAMhjD,EAAE6iD,kBAAkB,GAAG7iD,EAAE2iD,MAAM,GAAGvxJ,EAAE+0J,MAAMvD,oBAAoBvxJ,EAAE4xJ,MAAMjjD,EAAE6iD,kBAAkBzxJ,EAAE+0J,MAAMpD,wBAAwBvuI,EAAEpjB,EAAE+0J,MAAMrD,aAAa9iD,EAAE6iD,kBAAkBxxJ,EAAE6xJ,SAASr1J,EAAE+1J,YAAYvyJ,EAAE+xJ,kBAAkB5uI,GAAGztB,OAAMytB,EAAE3I,EAAEza,KAAM,IAAIojB,EAAE7qB,SAASyH,EAAEjD,MAAMkD,EAAEk2B,EAAEy7H,MAAMxuI,EAAE,IAAIwrF,EAAE0iD,iBAAiBluI,EAAE7qB,OAAOq2G,EAAE2iD,MAAMn4J,EAAEgqB,GAAGwrF,EAAE6iD,kBAAkBxxJ,EAAE6xJ,SAASr1J,EAAE+1J,YAAYvyJ,EAAE+xJ,kBAAkB5uI,GAAGztB,IAAIi5G,EAAEyiD,eAAeziD,EAAE6iD,kBAAkBl5J,OAAOq2G,EAAE4iD,kBAAkBvxJ,EAAE4xJ,MAAMjjD,CAAC,EAAuG8mD,EAAE,SAAS11J,EAAEC,EAAEtK,EAAEytB,EAAEpK,EAAErT,GAAG,IAAIwwB,EAAExvB,EAAEC,EAAEouC,EAAEz8B,GAAG5iB,EAAE87J,kBAAkB9rJ,IAAIstH,EAAEkiC,YAAY/gJ,EAAE3X,EAAE+1J,YAAY,SAAS7sJ,EAAE1F,EAAE1G,OAAOkhB,EAAEhe,EAAE+1J,YAAY,SAASv/B,EAAEkiC,WAAWl1J,EAAE1G,OAAOyI,EAAE/B,EAAEo9G,SAAS,GAAGr+G,EAAEvC,EAAE+1J,YAAY,SAAS7sJ,EAAE3D,IAAI4rE,EAAEnxE,EAAE+1J,YAAY,SAASv/B,EAAEkiC,WAAWnzJ,IAAI0D,EAAE+U,EAAEliB,SAAS0H,EAAE1G,KAAKhB,OAAOyuE,EAAE4G,EAAEr1E,SAASyJ,EAAEzJ,OAAO+G,EAAEW,EAAE1L,QAAQi4D,EAAE,GAAGipG,EAAE,GAAGC,EAAE,GAAG9uJ,EAAE3G,EAAEm1J,iBAAiBr4J,MAAMkD,EAAElD,IAAIkD,EAAElD,IAAIuC,EAAEvC,IAAIi4C,EAAE/0C,EAAEm1J,iBAAiBriJ,OAAO9S,EAAE8S,KAAK9S,EAAE8S,KAAKzT,EAAEyT,KAAK,IAAImiJ,EAAE,EAAES,EAAE,EAAE/uJ,IAAIsuJ,GAAG,IAAI,SAASl8I,GAAG28I,EAAE,IAAIT,GAA/iB,SAASl1J,EAAEC,GAAG,IAAItK,EAAEqK,EAAE,OAAOA,IAAIrK,EAAEsK,EAAE,MAAM,QAAQ,MAAMtK,IAAI,EAAE,CAAmfigK,CAAE31J,EAAE6yJ,gBAAgBlsJ,KAAK+uJ,EAAE,GAAGT,GAA7gB,SAASl1J,EAAEC,GAAG,OAAO,IAAID,GAAG,EAAE,CAAkf61J,CAAE51J,EAAE8yJ,iBAAmB58H,EAAE6e,EAAEvE,WAAWta,IAAI,EAAEA,GAAG6e,EAAErE,aAAaxa,IAAI,EAAEA,GAAG6e,EAAEnE,aAAa,EAAElqC,EAAEquC,EAAElK,cAAc,KAAKnkC,IAAI,EAAEA,GAAGquC,EAAEhK,WAAW,EAAErkC,IAAI,EAAEA,GAAGquC,EAAE9J,UAAUxlC,IAAI+vJ,EAAE/jI,EAAE,EAAE,GAAGA,EAAEt4B,EAAEgb,GAAG,GAAGqG,EAAE+xC,GAAG,KAAK96B,EAAE+jI,EAAEl9J,OAAO,GAAGk9J,GAAGzuF,IAAI0uF,EAAEhkI,EAAE,EAAE,GAAGA,EAAEt/B,KAAKm/J,MAAMvyJ,GAAG,GAAG4uE,EAAEphB,GAAG,KAAK96B,EAAEgkI,EAAEn9J,OAAO,GAAGm9J,GAAG,IAAIp/J,EAAE,GAAuS,OAApSA,GAAG,OAAOA,GAAGiiB,IAAI7S,IAAIshE,EAAE,OAAO,OAAO1wE,GAAGX,EAAE67J,kBAAkBl7J,GAAGo7B,EAAEyE,EAAE,GAAG7/B,GAAGo7B,EAAE/qB,EAAE,GAAGrQ,GAAGo7B,EAAE/7B,EAAE47J,MAAM,GAAGj7J,GAAGo7B,EAAE/7B,EAAE07J,eAAe,GAAG/6J,GAAGo7B,EAAE/7B,EAAE27J,iBAAiB,GAAGh7J,GAAGo7B,EAAEtd,EAAE7b,OAAO,GAAGjC,GAAGo7B,EAAE86B,EAAEj0D,OAAO,GAAuH,CAACu9J,WAA/GlnD,EAAEmnD,kBAAkBz/J,EAAE8d,EAAEo4C,EAAoGwpG,UAAhGpnD,EAAEqnD,oBAAoBvkI,EAAEikI,EAAE,GAAGr/J,EAAEo7B,EAAE1yB,EAAEzG,OAAO,GAAG,WAAWm5B,EAAEwjI,EAAE,GAAGxjI,EAAEtO,EAAE,GAAGhP,EAAEo4C,EAAExtD,EAAkCk3J,iBAAiBvgK,EAAE,EAAEu/J,EAAE,CAAC7uI,KAAK,SAASrmB,EAAEC,GAAG,MAAM,IAAIvF,MAAM,mEAAmE,EAAEQ,OAAO,SAAS8E,GAAG,IAAIC,EAAEtK,EAAEytB,EAAEhqB,EAAEw1G,EAAE,GAAG,IAAI3uG,KAAK7N,KAAKk7I,MAAMl7I,KAAKk7I,MAAM19G,eAAe3vB,KAAKmjB,EAAEhxB,KAAKk7I,MAAMrtI,GAAG7G,EAAE,IAAI4F,EAAEokB,EAAE7pB,KAAK6pB,EAAE2xI,MAAMt4J,EAAE3G,OAAOstB,EAAE7uB,UAAUoB,EAAEsK,EAAEuF,MAAMpT,KAAK+/F,KAAK55F,OAAO0H,EAAE1H,QAAQ0H,EAAEuF,MAAM,EAAEpT,KAAK+/F,KAAK55F,UAAUnG,KAAK+/F,MAAMnyF,EAAErK,EAAEyD,IAAIw1G,EAAEl4G,KAAK0C,IAAI,OAAOw1G,CAAC,EAAE3lC,KAAK,SAASjpE,EAAEC,EAAEtK,GAAG,GAAG,IAAI0P,UAAU9M,OAAO,CAAC,GAAGkE,EAAEi3J,SAAS1zJ,GAAG,CAAC,IAAIojB,EAAEpjB,EAAE,OAAO5N,KAAK8I,QAAO,SAAS8E,EAAEC,GAAG,OAAOA,EAAElD,KAAKqmB,EAAEzO,KAAK3U,EAAE,GAAE,CAAC,OAAO5N,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAEoH,KAAKkD,IAAID,CAAC,IAAG,IAAI,IAAI,CAAC,OAAOA,EAAE5N,KAAK+/F,KAAKnyF,EAAE0F,EAAEupC,KAAK78C,KAAK4N,EAAEC,EAAEtK,GAAGvD,IAAI,EAAE+jK,OAAO,SAASn2J,GAAG,IAAIA,EAAE,OAAO5N,KAAK,GAAGqK,EAAEi3J,SAAS1zJ,GAAG,OAAO5N,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAEoH,KAAKiD,EAAE2U,KAAK1U,EAAE,IAAG,IAAIA,EAAE7N,KAAK+/F,KAAKnyF,EAAErK,EAAE62D,EAAEvd,KAAK78C,KAAK6N,GAAGmjB,EAAEhxB,KAAKi2B,QAAQ,OAAOjF,EAAE+uE,KAAKx8F,EAAE4D,KAAK6pB,CAAC,EAAEjW,OAAO,SAASnN,GAAGA,EAAE5N,KAAK+/F,KAAKnyF,EAAE,IAAIC,EAAE7N,KAAKk7I,MAAMttI,GAAG,GAAGC,IAAI,KAAKD,EAAEwF,OAAO,KAAKxF,GAAG,KAAKC,EAAE7N,KAAKk7I,MAAMttI,IAAIC,IAAIA,EAAElD,WAAW3K,KAAKk7I,MAAMttI,QAAQ,IAAI,IAAIrK,EAAEvD,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAE4D,KAAKiM,MAAM,EAAExF,EAAEzH,UAAUyH,CAAC,IAAGojB,EAAE,EAAEA,EAAEztB,EAAE4C,OAAO6qB,WAAWhxB,KAAKk7I,MAAM33I,EAAEytB,GAAG7pB,MAAM,OAAOnH,IAAI,EAAEk1H,SAAS,SAAStnH,GAAGA,EAAEvD,EAAE3G,OAAOkK,GAAG,CAAC,EAAE,CAAC0yJ,QAAO,EAAGE,YAAY,QAAQC,mBAAmB,KAAK7+J,KAAK,SAASoiK,SAAS,MAAM/4C,QAAQ,KAAKkK,SAAS,kBAAkB8uC,eAAepjC,EAAEkiC,aAAa14J,EAAE42J,aAAarzJ,EAAEhM,MAAM,WAAWgM,EAAEo2J,UAAU,YAAYp2J,EAAEo2J,UAAU,UAAUp2J,EAAEo2J,UAAU,UAAUp2J,EAAEo2J,WAAWp2J,EAAEo2J,SAAS,QAAQ,UAAUp2J,EAAEo2J,WAAWp2J,EAAEo2J,SAAS,OAAO,IAAIn2J,EAAEtK,EAAEytB,EAAE,GAAGhqB,EAAE,EAAE4f,EAAE,EAAErS,EAAElK,EAAE+1J,YAAY,SAASxyJ,EAAEq2J,eAAer2J,EAAEq9G,SAASjrH,KAAKirH,SAAS,KAAK,IAAI,IAAIz2G,KAAKxU,KAAKk7I,MAAM,GAAGl7I,KAAKk7I,MAAM19G,eAAehpB,GAAG,CAAC,IAAIwN,EAAEhiB,KAAKk7I,MAAM1mI,GAAG6T,EAAErG,EAAE7f,QAAQq+J,aAAa5yJ,EAAE4yJ,YAAYt5G,cAAct3C,EAAEm0B,EAAE1b,GAAG,IAAIzY,EAAE,MAAM,IAAItH,MAAM+f,EAAE,wCAAwC,IAAIzb,EAAEoV,EAAE7f,QAAQs+J,oBAAoB7yJ,EAAE6yJ,oBAAoB,CAAC,EAAEjlF,EAAE6nF,EAAExmH,KAAK78C,KAAKgiB,EAAEpS,EAAEhD,GAAG0G,EAAEgwJ,EAAEzmH,KAAK78C,KAAKwU,EAAEwN,EAAEw5D,EAAEx0E,EAAE4G,EAAEo2J,SAASp2J,EAAEq2J,gBAAgBj9J,GAAGsM,EAAEowJ,WAAWv9J,OAAOq1E,EAAEyjF,eAAer4I,GAAGtT,EAAEswJ,UAAUz9J,OAAO6qB,EAAE1sB,KAAKgP,EAAE,CAAC,IAAIshE,EAAKA,EAAE4nC,EAAE0nD,sBAAsB,WAAW5kI,EAAEtO,EAAE7qB,OAAO,GAAGm5B,EAAEtO,EAAE7qB,OAAO,GAAGm5B,EAAE1Y,EAAE,GAAG0Y,EAAEt4B,EAAE,GAAGs4B,EAAE/qB,EAAEpO,OAAO,GAAGoO,EAAE,IAAIrH,EAAEU,EAAEhM,KAAKyW,cAAc,IAAIxK,EAAE,eAAeX,GAAG,gBAAgBA,GAAG,SAASA,GAAG,eAAeA,EAAE,IAAIiZ,EAAEnf,EAAE4f,EAAEguD,EAAEzuE,QAAQ,IAAIy8C,EAAE57C,EAAE4f,EAAEguD,EAAEzuE,QAAQ5C,EAAE,EAAEA,EAAEytB,EAAE7qB,OAAO5C,IAAIsK,EAAEs2J,OAAOnzI,EAAEztB,GAAGmgK,YAAY71J,EAAEs2J,OAAOnzI,EAAEztB,GAAGugK,iBAAiBzE,mBAAmB,IAAI97J,EAAE,EAAEA,EAAEytB,EAAE7qB,OAAO5C,IAAIsK,EAAEs2J,OAAOnzI,EAAEztB,GAAGqgK,WAAW/1J,EAAEs2J,OAAOvvF,GAAG,IAAIxa,EAAEvsD,EAAEu2J,WAAW,OAAOx2J,EAAEhM,KAAKyW,eAAe,IAAI,aAAa,IAAI,cAAc,IAAI,aAAa,OAAOhO,EAAE+1J,YAAYxyJ,EAAEhM,KAAKyW,cAAc+hD,GAAG,IAAI,OAAO,OAAO/vD,EAAE22J,iBAAiB32J,EAAE+1J,YAAY,cAAchmG,GAAGxsD,EAAEunH,UAAU,IAAI,SAAS,OAAOvnH,EAAE0yJ,OAAO/sJ,EAAEwrJ,OAAO3kG,GAAGA,EAAE,QAAQ,OAAOA,EAAE,EAAE+kG,MAAM,SAASvxJ,EAAEC,GAAG,OAAO7G,EAAE4G,EAAEC,EAAE,EAAEk1J,WAAW,SAASn1J,GAAG,OAAOvD,EAAE+1J,YAAY,SAASv/B,EAAEkiC,WAAWn1J,GAAG,EAAEw0J,WAAW,SAASx0J,GAAG,OAAOizH,EAAEuhC,WAAWx0J,EAAE,GAAGC,EAAEnO,QAAQojK,CAAC,EAAE,CAAC,WAAW,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,UAAU,EAAE,aAAa,EAAE,eAAe,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,SAAS,GAAG,UAAU,KAAK,GAAG,CAAC,SAASl1J,EAAEC,EAAEtK,GAAG,aAAaA,EAAEogK,kBAAkB,OAAOpgK,EAAEsgK,oBAAoB,OAAOtgK,EAAE2gK,sBAAsB,OAAO3gK,EAAE8gK,gCAAgC,OAAO9gK,EAAE+gK,4BAA4B,OAAO/gK,EAAEghK,gBAAgB,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS32J,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,EAAEC,GAAG7N,KAAK6J,KAAK+D,EAAEC,IAAI7N,KAAK6J,KAAK7C,EAAE45J,cAAc5gK,KAAK6J,OAAO7J,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK0+J,KAAK,CAAC,CAAC,IAAIr0J,EAAEuD,EAAE,gBAAgB5G,EAAE4G,EAAE,WAAWojB,EAAE4rB,UAAU,IAAIvyC,EAAE2mB,EAAE4rB,UAAU+hH,OAAO,SAAS/wJ,GAAG,OAAO5N,KAAK6J,KAAKmqJ,WAAWh0J,KAAK0+J,KAAK9wJ,EAAE,EAAEojB,EAAE4rB,UAAUgiH,qBAAqB,SAAShxJ,GAAG,OAAO5N,KAAK6J,KAAK8yJ,YAAY/uJ,GAAG5N,KAAK0+J,IAAI,EAAE1tI,EAAE4rB,UAAUiiH,SAAS,SAASjxJ,GAAG5N,KAAK8+J,YAAYlxJ,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKuJ,MAAMpT,KAAK0+J,KAAK1+J,KAAK+L,MAAM/L,KAAK0+J,KAAK1+J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQsxB,CAAC,EAAE,CAAC,eAAe,EAAE,UAAU,KAAK,GAAG,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAEpjB,EAAE,WAAWvD,EAAE,WAAWrK,KAAK6J,KAAK,EAAE,EAAEQ,EAAEuyC,UAAU,CAACunH,OAAO,SAASv2J,GAAGA,EAAEojB,EAAEovI,YAAY,SAASxyJ,GAAG5N,KAAK6J,KAAKvF,KAAKsJ,EAAE,EAAEw2J,SAAS,WAAW,OAAOpkK,KAAK6J,KAAKyE,KAAK,GAAG,GAAGT,EAAEnO,QAAQ2K,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,IAAG,SAAUqK,GAAG,aAAa,GAAGrK,EAAE+8J,QAAO,EAAG/8J,EAAEq7I,OAAM,EAAGr7I,EAAE8iD,QAAO,EAAG9iD,EAAEihK,YAAY,oBAAoBC,aAAa,oBAAoBlD,WAAWh+J,EAAEq/J,gBAAW,IAAoBh1J,EAAErK,EAAEmhK,WAAW,oBAAoBnD,WAAW,oBAAoBkD,YAAYlhK,EAAE8mG,MAAK,MAAO,CAAC,IAAIx8F,EAAE,IAAI42J,YAAY,GAAG,IAAIlhK,EAAE8mG,KAAK,IAAI,IAAIs6D,KAAK,CAAC92J,GAAG,CAACjM,KAAK,oBAAoBslF,IAAsM,CAAjM,MAAMl2D,GAAG,IAAI,IAAgGhqB,EAAE,IAA5FkS,OAAO0rJ,aAAa1rJ,OAAO2rJ,mBAAmB3rJ,OAAO4rJ,gBAAgB5rJ,OAAO6rJ,eAAsB/9J,EAAEm9J,OAAOt2J,GAAGtK,EAAE8mG,KAAK,IAAIrjG,EAAEg+J,QAAQ,mBAAmB99E,IAAuB,CAAlB,MAAMl2D,GAAGztB,EAAE8mG,MAAK,CAAE,CAAC,CAAC,CAAE,GAAExtD,KAAK78C,KAAK,oBAAoB0iK,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS90J,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,GAAGA,IAAI5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK0+J,KAAK,EAAE,CAAC,IAAIr0J,EAAEuD,EAAE,iBAAiBojB,EAAE4rB,UAAU,IAAIvyC,EAAE2mB,EAAE4rB,UAAUiiH,SAAS,SAASjxJ,GAAG,GAAG5N,KAAK8+J,YAAYlxJ,GAAG,IAAIA,EAAE,OAAO,IAAI2zJ,WAAW,GAAG,IAAI1zJ,EAAE7N,KAAK6J,KAAKo7J,SAASjlK,KAAK0+J,KAAK1+J,KAAK+L,MAAM/L,KAAK0+J,KAAK1+J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQsxB,CAAC,EAAE,CAAC,gBAAgB,IAAI,GAAG,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAEpjB,EAAE,WAAWvD,EAAE,SAASuD,GAAG5N,KAAK6J,KAAK,IAAI03J,WAAW3zJ,GAAG5N,KAAK+L,MAAM,CAAC,EAAE1B,EAAEuyC,UAAU,CAACunH,OAAO,SAASv2J,GAAG,IAAIA,EAAEzH,SAASyH,EAAEojB,EAAEovI,YAAY,aAAaxyJ,GAAG5N,KAAK6J,KAAKkQ,IAAInM,EAAE5N,KAAK+L,OAAO/L,KAAK+L,OAAO6B,EAAEzH,OAAO,EAAEi+J,SAAS,WAAW,OAAOpkK,KAAK6J,IAAI,GAAGgE,EAAEnO,QAAQ2K,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,IAAI,IAAIytB,EAAEpjB,EAAE,WAAWvD,EAAEuD,EAAE,aAAa5G,EAAE4G,EAAE,gBAAgB4uG,EAAE,IAAIrvG,MAAM,KAAKyZ,EAAE,EAAEA,EAAE,IAAIA,IAAI41F,EAAE51F,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAE41F,EAAE,KAAKA,EAAE,KAAK,EAAE,IAAumBz4E,EAAE,SAASn2B,EAAEC,GAAG,IAAItK,EAAE,KAAIsK,EAAEA,GAAGD,EAAEzH,QAASyH,EAAEzH,SAAS0H,EAAED,EAAEzH,QAAQ5C,EAAEsK,EAAE,EAAEtK,GAAG,GAAG,MAAO,IAAIqK,EAAErK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANsK,EAAUtK,EAAEi5G,EAAE5uG,EAAErK,IAAIsK,EAAEtK,EAAEsK,CAAC,EAAE0G,EAAE,SAAS3G,GAAG,IAAIC,EAAEtK,EAAE8G,EAAErD,EAAE4f,EAAEhZ,EAAEzH,OAAOoN,EAAE,IAAIpG,MAAM,EAAEyZ,GAAG,IAAIrjB,EAAE,EAAEsK,EAAE,EAAEA,EAAE+Y,GAAG,IAAGvc,EAAEuD,EAAEC,MAAO,IAAI0F,EAAEhQ,KAAK8G,OAAO,IAAGrD,EAAEw1G,EAAEnyG,IAAK,EAAEkJ,EAAEhQ,KAAK,MAAMsK,GAAG7G,EAAE,MAAM,CAAC,IAAIqD,GAAG,IAAIrD,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAG6G,EAAE+Y,GAAGvc,EAAEA,GAAG,EAAE,GAAGuD,EAAEC,KAAK7G,IAAIA,EAAE,EAAEuM,EAAEhQ,KAAK,MAAM8G,EAAE,MAAMkJ,EAAEhQ,KAAK8G,GAAGA,GAAG,MAAMkJ,EAAEhQ,KAAK,MAAM8G,GAAG,GAAG,KAAKkJ,EAAEhQ,KAAK,MAAM,KAAK8G,EAAE,CAAC,OAAOkJ,EAAEpN,SAAS5C,IAAIgQ,EAAE0xJ,SAAS1xJ,EAAEA,EAAE0xJ,SAAS,EAAE1hK,GAAGgQ,EAAEpN,OAAO5C,GAAGytB,EAAEk0I,kBAAkB3xJ,EAAE,EAAEhQ,EAAEw/J,WAAW,SAASn1J,GAAG,OAAOvD,EAAEu4J,WAAW57J,EAAE4G,EAAE,SAAnpC,SAASA,GAAG,IAAIC,EAAEtK,EAAEytB,EAAEhqB,EAAEw1G,EAAE51F,EAAEhZ,EAAEzH,OAAOoN,EAAE,EAAE,IAAIvM,EAAE,EAAEA,EAAE4f,EAAE5f,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEomJ,WAAWhtJ,MAAsBA,EAAE,EAAE4f,GAAwB,QAAS,OAA7BoK,EAAEpjB,EAAEomJ,WAAWhtJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKytB,EAAE,OAAOhqB,KAAMuM,GAAGhQ,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIsK,EAAExD,EAAEq6J,WAAW,IAAInD,WAAWhuJ,GAAG,IAAIpG,MAAMoG,GAAGipG,EAAE,EAAEx1G,EAAE,EAAEw1G,EAAEjpG,EAAEvM,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEomJ,WAAWhtJ,MAAsBA,EAAE,EAAE4f,GAAwB,QAAS,OAA7BoK,EAAEpjB,EAAEomJ,WAAWhtJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKytB,EAAE,OAAOhqB,KAAMzD,EAAE,IAAIsK,EAAE2uG,KAAKj5G,EAAEA,EAAE,MAAMsK,EAAE2uG,KAAK,IAAIj5G,IAAI,EAAEsK,EAAE2uG,KAAK,IAAI,GAAGj5G,GAAGA,EAAE,OAAOsK,EAAE2uG,KAAK,IAAIj5G,IAAI,GAAGsK,EAAE2uG,KAAK,IAAIj5G,IAAI,EAAE,GAAGsK,EAAE2uG,KAAK,IAAI,GAAGj5G,IAAIsK,EAAE2uG,KAAK,IAAIj5G,IAAI,GAAGsK,EAAE2uG,KAAK,IAAIj5G,IAAI,GAAG,GAAGsK,EAAE2uG,KAAK,IAAIj5G,IAAI,EAAE,GAAGsK,EAAE2uG,KAAK,IAAI,GAAGj5G,GAAG,OAAOsK,CAAC,CAA6jB0F,CAAE3F,EAAE,EAAErK,EAAE6+J,WAAW,SAASx0J,GAAG,GAAGvD,EAAEu4J,WAAW,OAAO5xI,EAAEovI,YAAY,aAAaxyJ,GAAGgH,SAAS,SAA8D,IAAI,IAAI/G,EAAE,GAAGtK,EAAE,EAAEyD,GAAtE4G,EAAEojB,EAAEovI,YAAY/1J,EAAEq6J,WAAW,aAAa,QAAQ92J,IAAwBzH,OAAe5C,EAAEyD,GAAG,CAAC,IAAI4f,EAAEmd,EAAEn2B,EAAErH,KAAKo6C,IAAIp9C,EAA/B,MAAmCyD,IAAIqD,EAAEq6J,WAAW72J,EAAEvJ,KAAKiQ,EAAE3G,EAAEq3J,SAAS1hK,EAAEqjB,KAAK/Y,EAAEvJ,KAAKiQ,EAAE3G,EAAEwF,MAAM7P,EAAEqjB,KAAKrjB,EAAEqjB,CAAC,CAAC,OAAO/Y,EAAES,KAAK,GAAG,CAAC,EAAE,CAAC,eAAe,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAASV,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,GAAG,OAAOA,CAAC,CAAC,SAASvD,EAAEuD,EAAEC,GAAG,IAAI,IAAItK,EAAE,EAAEA,EAAEqK,EAAEzH,SAAS5C,EAAEsK,EAAEtK,GAAG,IAAIqK,EAAEomJ,WAAWzwJ,GAAG,OAAOsK,CAAC,CAAC,SAAS7G,EAAE4G,GAAG,IAAIC,EAAE,MAAMmjB,EAAE,GAAG3mB,EAAEuD,EAAEzH,OAAOa,EAAEzD,EAAEw8J,UAAUnyJ,GAAG4uG,EAAE,EAAE51F,GAAE,EAAG,IAAI,OAAO5f,GAAG,IAAI,aAAaoU,OAAO0jI,aAAazyG,MAAM,KAAK,IAAIk1H,WAAW,IAAI,MAAM,IAAI,aAAanmJ,OAAO0jI,aAAazyG,MAAM,KAAKtI,EAAE,IAAkB,CAAb,MAAMxwB,GAAGqT,GAAE,CAAE,CAAC,IAAIA,EAAE,CAAC,IAAI,IAAIrS,EAAE,GAAGC,EAAE,EAAEA,EAAE5G,EAAEzH,OAAOqO,IAAID,GAAG6G,OAAO0jI,aAAalxI,EAAE4G,IAAI,OAAOD,CAAC,CAAC,KAAKioG,EAAEnyG,GAAGwD,EAAE,GAAG,IAAI,UAAU7G,GAAG,eAAeA,EAAEgqB,EAAE1sB,KAAK8W,OAAO0jI,aAAazyG,MAAM,KAAKz+B,EAAEwF,MAAMopG,EAAEj2G,KAAKo6C,IAAI67D,EAAE3uG,EAAExD,MAAM2mB,EAAE1sB,KAAK8W,OAAO0jI,aAAazyG,MAAM,KAAKz+B,EAAEq3J,SAASzoD,EAAEj2G,KAAKo6C,IAAI67D,EAAE3uG,EAAExD,MAAMmyG,GAAG3uG,CAA4B,CAA1B,MAAM0F,GAAG1F,EAAEtH,KAAKC,MAAMqH,EAAE,EAAE,CAAC,OAAOmjB,EAAE1iB,KAAK,GAAG,CAAC,SAASkuG,EAAE5uG,EAAEC,GAAG,IAAI,IAAItK,EAAE,EAAEA,EAAEqK,EAAEzH,OAAO5C,IAAIsK,EAAEtK,GAAGqK,EAAErK,GAAG,OAAOsK,CAAC,CAAC,IAAI+Y,EAAEhZ,EAAE,aAAa2F,EAAE3F,EAAE,kBAAkBm2B,EAAEn2B,EAAE,gBAAgBrK,EAAEq9J,cAAc,SAAShzJ,GAAG,IAAI,IAAIC,EAAE,GAAGtK,EAAE,EAAEA,EAAEqK,EAAEzH,OAAO5C,IAAIsK,GAAGuN,OAAO0jI,aAAa,IAAIlxI,EAAEomJ,WAAWzwJ,IAAI,OAAOsK,CAAC,EAAEtK,EAAEy9J,iBAAiB,SAASpzJ,EAAEC,GAAGtK,EAAE09J,aAAa,QAAQpzJ,EAAEA,GAAG,kBAAkB,IAAI,OAAO,IAAI82J,KAAK,CAAC/2J,GAAG,CAAChM,KAAKiM,GAAqN,CAAjN,MAAMmjB,GAAG,IAAI,IAAgGhqB,EAAE,IAA5FkS,OAAO0rJ,aAAa1rJ,OAAO2rJ,mBAAmB3rJ,OAAO4rJ,gBAAgB5rJ,OAAO6rJ,eAAsB,OAAO/9J,EAAEm9J,OAAOv2J,GAAG5G,EAAEg+J,QAAQn3J,EAA8D,CAA3D,MAAMmjB,GAAG,MAAM,IAAI1oB,MAAM,kCAAkC,CAAC,CAAC,EAAE/E,EAAE2hK,kBAAkBl+J,EAAE,IAAIuN,EAAE,CAAC,EAAEA,EAAE8xC,OAAO,CAACA,OAAOr1B,EAAE4tH,MAAM,SAAShxI,GAAG,OAAOvD,EAAEuD,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAEq+J,YAAY,SAAS52J,GAAG,OAAO2G,EAAE8xC,OAAOq+G,WAAW92J,GAAGw1J,MAAM,EAAEsB,WAAW,SAAS92J,GAAG,OAAOvD,EAAEuD,EAAE,IAAI2zJ,WAAW3zJ,EAAEzH,QAAQ,EAAEy8J,WAAW,SAASh1J,GAAG,OAAOvD,EAAEuD,EAAEm2B,EAAEn2B,EAAEzH,QAAQ,GAAGoO,EAAEqqI,MAAM,CAACv4F,OAAOr/C,EAAE43I,MAAM5tH,EAAEwzI,YAAY,SAAS52J,GAAG,OAAO,IAAI2zJ,WAAW3zJ,GAAGw1J,MAAM,EAAEsB,WAAW,SAAS92J,GAAG,OAAO,IAAI2zJ,WAAW3zJ,EAAE,EAAEg1J,WAAW,SAASh1J,GAAG,OAAOm2B,EAAEn2B,EAAE,GAAG2G,EAAEiwJ,YAAY,CAACn+G,OAAO,SAASz4C,GAAG,OAAO5G,EAAE,IAAIu6J,WAAW3zJ,GAAG,EAAEgxI,MAAM,SAAShxI,GAAG,OAAO4uG,EAAE,IAAI+kD,WAAW3zJ,GAAG,IAAIT,MAAMS,EAAEu3J,YAAY,EAAEX,YAAYxzI,EAAE0zI,WAAW,SAAS92J,GAAG,OAAO,IAAI2zJ,WAAW3zJ,EAAE,EAAEg1J,WAAW,SAASh1J,GAAG,OAAOm2B,EAAE,IAAIw9H,WAAW3zJ,GAAG,GAAG2G,EAAEmwJ,WAAW,CAACr+G,OAAOr/C,EAAE43I,MAAM,SAAShxI,GAAG,OAAO4uG,EAAE5uG,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAEq+J,YAAY,SAAS52J,GAAG,OAAOA,EAAEw1J,MAAM,EAAEsB,WAAW1zI,EAAE4xI,WAAW,SAASh1J,GAAG,OAAOm2B,EAAEn2B,EAAE,GAAG2G,EAAEquJ,WAAW,CAACv8G,OAAOr/C,EAAE43I,MAAM,SAAShxI,GAAG,OAAO4uG,EAAE5uG,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAEq+J,YAAY,SAAS52J,GAAG,OAAO2G,EAAEquJ,WAAW8B,WAAW92J,GAAGw1J,MAAM,EAAEsB,WAAW,SAAS92J,GAAG,OAAO4uG,EAAE5uG,EAAE,IAAI2zJ,WAAW3zJ,EAAEzH,QAAQ,EAAEy8J,WAAW5xI,GAAGztB,EAAE68J,YAAY,SAASxyJ,EAAEC,GAAG,GAAGA,IAAIA,EAAE,KAAKD,EAAE,OAAOC,EAAEtK,EAAE09J,aAAarzJ,GAAG,IAAIojB,EAAEztB,EAAEw8J,UAAUlyJ,GAAgB,OAAX0G,EAAEyc,GAAGpjB,GAAGC,EAAW,EAAEtK,EAAEw8J,UAAU,SAASnyJ,GAAG,MAAM,iBAAiBA,EAAE,SAAS,mBAAmByG,OAAOuoC,UAAUhoC,SAASioC,KAAKjvC,GAAG,QAAQgZ,EAAEg8I,YAAY7+H,EAAExhB,KAAK3U,GAAG,aAAagZ,EAAE89I,YAAY92J,aAAa2zJ,WAAW,aAAa36I,EAAE49I,aAAa52J,aAAa62J,YAAY,mBAAc,CAAM,EAAElhK,EAAE09J,aAAa,SAASrzJ,GAA4B,IAAnBgZ,EAAEhZ,EAAEyK,eAAqB,MAAM,IAAI/P,MAAMsF,EAAE,oCAAoC,EAAErK,EAAE29J,iBAAiB,MAAM39J,EAAE49J,kBAAkB,EAAE59J,EAAE69J,OAAO,SAASxzJ,GAAG,IAAIC,EAAEtK,EAAEytB,EAAE,GAAG,IAAIztB,EAAE,EAAEA,GAAGqK,GAAG,IAAIzH,OAAO5C,IAAsBytB,GAAG,QAArBnjB,EAAED,EAAEomJ,WAAWzwJ,IAAe,GAAG,IAAI,IAAIsK,EAAE+G,SAAS,IAAIsyC,cAAc,OAAOl2B,CAAC,EAAEztB,EAAE89J,gBAAgB,SAASzzJ,GAAG,IAAI,IAAIC,KAAK0F,EAAE,GAAGA,EAAEiqB,eAAe3vB,IAAI0F,EAAE1F,GAAG4xJ,QAAQ7xJ,EAAE,OAAO2F,EAAE1F,GAAG,OAAO,IAAI,EAAEtK,EAAE+9J,SAAS,SAAS1zJ,GAAG,MAAM,oBAAoByG,OAAOuoC,UAAUhoC,SAASioC,KAAKjvC,EAAE,EAAErK,EAAEG,OAAO,WAAW,IAAIkK,EAAEC,EAAEtK,EAAE,CAAC,EAAE,IAAIqK,EAAE,EAAEA,EAAEqF,UAAU9M,OAAOyH,IAAI,IAAIC,KAAKoF,UAAUrF,GAAGqF,UAAUrF,GAAG4vB,eAAe3vB,SAAI,IAAoBtK,EAAEsK,KAAKtK,EAAEsK,GAAGoF,UAAUrF,GAAGC,IAAI,OAAOtK,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,eAAe,GAAG,YAAY,KAAK,GAAG,CAAC,SAASqK,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,EAAEC,GAAG7N,KAAKk7I,MAAM,GAAGl7I,KAAKolK,YAAYv3J,EAAED,GAAG5N,KAAKi0B,KAAKrmB,EAAE,CAAC,IAAIvD,EAAEuD,EAAE,kBAAkB5G,EAAE4G,EAAE,sBAAsB4uG,EAAE5uG,EAAE,sBAAsBgZ,EAAEhZ,EAAE,iBAAiB2F,EAAE3F,EAAE,WAAWm2B,EAAEn2B,EAAE,eAAe2G,EAAE3G,EAAE,cAAc4G,EAAE5G,EAAE,aAAaA,EAAE,YAAYojB,EAAE4rB,UAAU,CAACyoH,eAAe,SAASz3J,GAAG,IAAIC,EAAE7N,KAAKi3E,OAAOkpF,WAAW,GAAG,GAAGtyJ,IAAID,EAAE,MAAM,IAAItF,MAAM,gDAAgDiL,EAAE6tJ,OAAOvzJ,GAAG,cAAc0F,EAAE6tJ,OAAOxzJ,GAAG,IAAI,EAAE03J,YAAY,SAAS13J,EAAEC,GAAG,IAAItK,EAAEvD,KAAKi3E,OAAOlrE,MAAM/L,KAAKi3E,OAAOgpF,SAASryJ,GAAG,IAAgCvD,EAA1BrK,KAAKi3E,OAAOkpF,WAAW,KAAStyJ,EAAE,OAAO7N,KAAKi3E,OAAOgpF,SAAS18J,GAAG8G,CAAC,EAAEk7J,sBAAsB,WAAWvlK,KAAKwlK,WAAWxlK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAKylK,wBAAwBzlK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAK0lK,4BAA4B1lK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAK2lK,kBAAkB3lK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAK4lK,eAAe5lK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAK6lK,iBAAiB7lK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAK8lK,iBAAiB9lK,KAAKi3E,OAAOipF,QAAQ,GAAG,IAAItyJ,EAAE5N,KAAKi3E,OAAO4nF,SAAS7+J,KAAK8lK,kBAAkBj4J,EAAE2G,EAAEkwJ,WAAW,aAAa,QAAQnhK,EAAEgQ,EAAE6sJ,YAAYvyJ,EAAED,GAAG5N,KAAKwiK,WAAWxiK,KAAKolK,YAAYjD,eAAe5+J,EAAE,EAAEwiK,2BAA2B,WAAW/lK,KAAKgmK,sBAAsBhmK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAKimK,cAAcjmK,KAAKi3E,OAAOkpF,WAAW,GAAGngK,KAAKkmK,cAAclmK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAKwlK,WAAWxlK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAKylK,wBAAwBzlK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAK0lK,4BAA4B1lK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAK2lK,kBAAkB3lK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAK4lK,eAAe5lK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAK6lK,iBAAiB7lK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAKmmK,oBAAoB,CAAC,EAAE,IAAI,IAAIv4J,EAAEC,EAAEtK,EAAEytB,EAAEhxB,KAAKgmK,sBAAsB,GAAK,EAAIh1I,GAAGpjB,EAAE5N,KAAKi3E,OAAOipF,QAAQ,GAAGryJ,EAAE7N,KAAKi3E,OAAOipF,QAAQ,GAAG38J,EAAEvD,KAAKi3E,OAAOkpF,WAAWtyJ,GAAG7N,KAAKmmK,oBAAoBv4J,GAAG,CAAChN,GAAGgN,EAAEzH,OAAO0H,EAAElL,MAAMY,EAAE,EAAE6iK,kCAAkC,WAAW,GAAGpmK,KAAKqmK,6BAA6BrmK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAKsmK,mCAAmCtmK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAKumK,WAAWvmK,KAAKi3E,OAAOipF,QAAQ,GAAGlgK,KAAKumK,WAAW,EAAE,MAAM,IAAIj+J,MAAM,sCAAsC,EAAEk+J,eAAe,WAAW,IAAI54J,EAAEC,EAAE,IAAID,EAAE,EAAEA,EAAE5N,KAAKk7I,MAAM/0I,OAAOyH,IAAIC,EAAE7N,KAAKk7I,MAAMttI,GAAG5N,KAAKi3E,OAAOgpF,SAASpyJ,EAAE44J,mBAAmBzmK,KAAKqlK,eAAethI,EAAE4/H,mBAAmB91J,EAAE64J,cAAc1mK,KAAKi3E,QAAQppE,EAAE84J,aAAa94J,EAAE+4J,mBAAmB,EAAEC,eAAe,WAAW,IAAIj5J,EAAE,IAAI5N,KAAKi3E,OAAOgpF,SAASjgK,KAAK6lK,kBAAkB7lK,KAAKi3E,OAAOkpF,WAAW,KAAKp8H,EAAE8/H,sBAAqBj2J,EAAE,IAAI2G,EAAE,CAACuyJ,MAAM9mK,KAAK8mK,OAAO9mK,KAAKolK,cAAe2B,gBAAgB/mK,KAAKi3E,QAAQj3E,KAAKk7I,MAAM52I,KAAKsJ,GAAG,GAAG5N,KAAK2lK,oBAAoB3lK,KAAKk7I,MAAM/0I,QAAQ,IAAInG,KAAK2lK,mBAAmB,IAAI3lK,KAAKk7I,MAAM/0I,OAAO,MAAM,IAAImC,MAAM,kCAAkCtI,KAAK2lK,kBAAkB,gCAAgC3lK,KAAKk7I,MAAM/0I,OAAO,EAAE6gK,iBAAiB,WAAW,IAAIp5J,EAAE5N,KAAKi3E,OAAO2nF,qBAAqB76H,EAAEmgI,uBAAuB,GAAGt2J,EAAE,EAAkD,MAAxC5N,KAAKslK,YAAY,EAAEvhI,EAAE4/H,mBAA+K,IAAIr7J,MAAM,uDAA9J,IAAIA,MAAM,0IAA2MtI,KAAKi3E,OAAOgpF,SAASryJ,GAAG,IAAIrK,EAAEqK,EAAE,GAAG5N,KAAKqlK,eAAethI,EAAEmgI,uBAAuBlkK,KAAKulK,wBAAwBvlK,KAAKwlK,aAAajyJ,EAAE2tJ,kBAAkBlhK,KAAKylK,0BAA0BlyJ,EAAE2tJ,kBAAkBlhK,KAAK0lK,8BAA8BnyJ,EAAE2tJ,kBAAkBlhK,KAAK2lK,oBAAoBpyJ,EAAE2tJ,kBAAkBlhK,KAAK4lK,iBAAiBryJ,EAAE4tJ,kBAAkBnhK,KAAK6lK,mBAAmBtyJ,EAAE4tJ,iBAAiB,CAAC,GAAGnhK,KAAK8mK,OAAM,GAAGl5J,EAAE5N,KAAKi3E,OAAO2nF,qBAAqB76H,EAAEsgI,kCAAmC,EAAE,MAAM,IAAI/7J,MAAM,yEAAyE,GAAGtI,KAAKi3E,OAAOgpF,SAASryJ,GAAG5N,KAAKqlK,eAAethI,EAAEsgI,iCAAiCrkK,KAAKomK,qCAAqCpmK,KAAKslK,YAAYtlK,KAAKsmK,mCAAmCviI,EAAEugI,+BAA+BtkK,KAAKsmK,mCAAmCtmK,KAAKi3E,OAAO2nF,qBAAqB76H,EAAEugI,6BAA6BtkK,KAAKsmK,mCAAmC,GAAG,MAAM,IAAIh+J,MAAM,iEAAiEtI,KAAKi3E,OAAOgpF,SAASjgK,KAAKsmK,oCAAoCtmK,KAAKqlK,eAAethI,EAAEugI,6BAA6BtkK,KAAK+lK,4BAA4B,CAAC,IAAI/0I,EAAEhxB,KAAK6lK,iBAAiB7lK,KAAK4lK,eAAe5lK,KAAK8mK,QAAQ91I,GAAG,GAAGA,GAAG,GAAGhxB,KAAKgmK,uBAAuB,IAAI37J,EAAE9G,EAAEytB,EAAE,GAAG3mB,EAAE,EAAErK,KAAKslK,YAAY/hK,EAAEwgC,EAAE8/H,uBAAuB7jK,KAAKi3E,OAAOynF,KAAKr0J,QAAQ,GAAGA,EAAE,EAAE,MAAM,IAAI/B,MAAM,0BAA0B/B,KAAKm9C,IAAIr5C,GAAG,UAAU,EAAE48J,cAAc,SAASr5J,GAAG,IAAIC,EAAE0F,EAAEwsJ,UAAUnyJ,GAAG,GAAG2F,EAAE0tJ,aAAapzJ,GAAG,WAAWA,GAAG2G,EAAEkwJ,WAAW,GAAG,eAAe72J,EAAE7N,KAAKi3E,OAAO,IAAIjwE,EAAE4G,QAAQ,GAAG4G,EAAEkwJ,WAAW1kK,KAAKi3E,OAAO,IAAIulC,EAAEjpG,EAAE6sJ,YAAY,aAAaxyJ,QAAQ,CAAC,IAAI4G,EAAEoqI,MAAM,MAAM,IAAIt2I,MAAM,uCAAuCuF,EAAE,KAAK7N,KAAKi3E,OAAO,IAAIrwD,EAAErT,EAAE6sJ,YAAY,QAAQxyJ,GAAG,MAAM5N,KAAKi3E,OAAO,IAAI5sE,EAAEuD,EAAE5N,KAAKolK,YAAYlD,sBAAsB,EAAEjuI,KAAK,SAASrmB,GAAG5N,KAAKinK,cAAcr5J,GAAG5N,KAAKgnK,mBAAmBhnK,KAAK6mK,iBAAiB7mK,KAAKwmK,gBAAgB,GAAG34J,EAAEnO,QAAQsxB,CAAC,EAAE,CAAC,gBAAgB,EAAE,qBAAqB,GAAG,WAAW,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,UAAU,GAAG,aAAa,KAAK,GAAG,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,EAAEC,GAAG7N,KAAKmC,QAAQyL,EAAE5N,KAAKolK,YAAYv3J,CAAC,CAAC,IAAIxD,EAAEuD,EAAE,kBAAkB5G,EAAE4G,EAAE,WAAW4uG,EAAE5uG,EAAE,sBAAsBgZ,EAAEhZ,EAAE,YAAY2F,EAAE3F,EAAE,aAAqBojB,EAAE4rB,UAAU,CAACsqH,YAAY,WAAW,OAAO,IAAK,EAAElnK,KAAKmnK,QAAQ,EAAEC,QAAQ,WAAW,OAAO,OAAQ,KAAKpnK,KAAKmnK,QAAQ,EAAEE,yBAAyB,SAASz5J,EAAEC,EAAEtK,GAAG,OAAO,WAAW,IAAIytB,EAAEpjB,EAAE7B,MAAM6B,EAAEqyJ,SAASpyJ,GAAG,IAAIxD,EAAEuD,EAAEixJ,SAASt7J,GAAG,OAAOqK,EAAEqyJ,SAASjvI,GAAG3mB,CAAC,CAAC,EAAEi9J,eAAe,SAAS15J,EAAEC,EAAEtK,EAAEytB,EAAE3mB,GAAG,OAAO,WAAW,IAAIuD,EAAE5G,EAAEo5J,YAAYpvI,EAAE6uI,oBAAoB7/J,KAAKu/J,wBAAwB1xJ,EAAEmjB,EAAE2uI,WAAW/xJ,GAAG,GAAGC,EAAE1H,SAASkE,EAAE,MAAM,IAAI/B,MAAM,yCAAyC,OAAOuF,CAAC,CAAC,EAAE64J,cAAc,SAAS94J,GAAG,IAAIC,EAAEtK,EAAE,GAAGqK,EAAE4lB,KAAK,IAAIxzB,KAAKunK,eAAe35J,EAAEsyJ,QAAQ,GAAG38J,EAAEqK,EAAEsyJ,QAAQ,GAAGlgK,KAAKw1G,SAAS5nG,EAAEixJ,SAAS7+J,KAAKunK,gBAAgB35J,EAAE4lB,KAAKjwB,IAAyB,GAAtBvD,KAAKi/J,iBAA4C,GAAxBj/J,KAAKk/J,iBAAqB,MAAM,IAAI52J,MAAM,qIAAqI,GAA+C,QAA5CuF,EAAE7G,EAAEq6J,gBAAgBrhK,KAAKo/J,oBAA4B,MAAM,IAAI92J,MAAM,+BAA+BtB,EAAEo6J,OAAOphK,KAAKo/J,mBAAmB,0BAA0Bp4J,EAAEo5J,YAAY,SAASpgK,KAAKw1G,UAAU,KAAK,GAAGx1G,KAAKsiK,aAAa,IAAI9lD,EAAEx8G,KAAKsiK,aAAarD,eAAej/J,KAAKi/J,eAAej/J,KAAKsiK,aAAapD,iBAAiBl/J,KAAKk/J,iBAAiBl/J,KAAKsiK,aAAanD,MAAMn/J,KAAKm/J,MAAMn/J,KAAKsiK,aAAalD,kBAAkBp/J,KAAKo/J,kBAAkBp/J,KAAKsiK,aAAa/C,qBAAqBv/J,KAAKqnK,yBAAyBz5J,EAAEA,EAAE7B,MAAM/L,KAAKi/J,eAAepxJ,GAAG7N,KAAKsiK,aAAahD,WAAWt/J,KAAKsnK,eAAe15J,EAAEA,EAAE7B,MAAM/L,KAAKi/J,eAAepxJ,EAAE7N,KAAKk/J,kBAAkBl/J,KAAKolK,YAAYnD,aAAajiK,KAAKsiK,aAAat7J,EAAEo5J,YAAY,SAASpgK,KAAKsiK,aAAahD,cAAc14I,EAAEu4I,MAAMn/J,KAAKsiK,gBAAgBtiK,KAAKm/J,OAAO,MAAM,IAAI72J,MAAM,iCAC5x+B,EAAEy+J,gBAAgB,SAASn5J,GAAG,GAAG5N,KAAKimK,cAAcr4J,EAAEsyJ,QAAQ,GAAGlgK,KAAKkmK,cAAct4J,EAAEsyJ,QAAQ,GAAGlgK,KAAKmnK,QAAQv5J,EAAEsyJ,QAAQ,GAAGlgK,KAAKo/J,kBAAkBxxJ,EAAEuyJ,WAAW,GAAGngK,KAAK2gB,KAAK/S,EAAEyyJ,WAAWrgK,KAAKm/J,MAAMvxJ,EAAEsyJ,QAAQ,GAAGlgK,KAAKi/J,eAAerxJ,EAAEsyJ,QAAQ,GAAGlgK,KAAKk/J,iBAAiBtxJ,EAAEsyJ,QAAQ,GAAGlgK,KAAKunK,eAAe35J,EAAEsyJ,QAAQ,GAAGlgK,KAAKwnK,kBAAkB55J,EAAEsyJ,QAAQ,GAAGlgK,KAAKynK,kBAAkB75J,EAAEsyJ,QAAQ,GAAGlgK,KAAK0nK,gBAAgB95J,EAAEsyJ,QAAQ,GAAGlgK,KAAK2nK,uBAAuB/5J,EAAEsyJ,QAAQ,GAAGlgK,KAAK4nK,uBAAuBh6J,EAAEsyJ,QAAQ,GAAGlgK,KAAKymK,kBAAkB74J,EAAEsyJ,QAAQ,GAAGlgK,KAAKknK,cAAc,MAAM,IAAI5+J,MAAM,mCAAmCtI,KAAKw1G,SAAS5nG,EAAEixJ,SAAS7+J,KAAKunK,gBAAgBvnK,KAAK6nK,gBAAgBj6J,GAAG5N,KAAK8nK,qBAAqBl6J,GAAG5N,KAAK+nK,YAAYn6J,EAAEixJ,SAAS7+J,KAAKynK,kBAAkB,EAAEb,kBAAkB,WAAW5mK,KAAK0gK,gBAAgB,KAAK1gK,KAAK2gK,eAAe,KAAK,IAAI/yJ,EAAE5N,KAAKimK,eAAe,EAAEjmK,KAAK2K,OAAO,GAAG3K,KAAK4nK,wBADm05B,IAC3y5Bh6J,IAAQ5N,KAAK2gK,eAAe,GAAG3gK,KAAK4nK,wBAD2w5B,IACnv5Bh6J,IAAQ5N,KAAK0gK,gBAAgB1gK,KAAK4nK,wBAAwB,GAAG,OAAO5nK,KAAK2K,KAAK,MAAM3K,KAAKqiK,YAAYjvJ,OAAO,KAAKpT,KAAK2K,KAAI,EAAG,EAAEm9J,qBAAqB,SAASl6J,GAAG,GAAG5N,KAAKgoK,YAAY,GAAG,CAAC,IAAIn6J,EAAE,IAAIxD,EAAErK,KAAKgoK,YAAY,GAAGrlK,OAAO3C,KAAKk/J,mBAAmBl4J,EAAEm6J,mBAAmBnhK,KAAKk/J,iBAAiBrxJ,EAAEqyJ,QAAQ,IAAIlgK,KAAKi/J,iBAAiBj4J,EAAEm6J,mBAAmBnhK,KAAKi/J,eAAepxJ,EAAEqyJ,QAAQ,IAAIlgK,KAAKymK,oBAAoBz/J,EAAEm6J,mBAAmBnhK,KAAKymK,kBAAkB54J,EAAEqyJ,QAAQ,IAAIlgK,KAAK0nK,kBAAkB1gK,EAAEm6J,mBAAmBnhK,KAAK0nK,gBAAgB75J,EAAEqyJ,QAAQ,GAAG,CAAC,EAAE2H,gBAAgB,SAASj6J,GAAG,IAAIC,EAAEtK,EAAEytB,EAAE3mB,EAAEuD,EAAE7B,MAAM,IAAI/L,KAAKgoK,YAAYhoK,KAAKgoK,aAAa,CAAC,EAAEp6J,EAAE7B,MAAM1B,EAAErK,KAAKwnK,mBAAmB35J,EAAED,EAAEsyJ,QAAQ,GAAG38J,EAAEqK,EAAEsyJ,QAAQ,GAAGlvI,EAAEpjB,EAAEuyJ,WAAW58J,GAAGvD,KAAKgoK,YAAYn6J,GAAG,CAACjN,GAAGiN,EAAE1H,OAAO5C,EAAEZ,MAAMquB,EAAE,EAAE21I,WAAW,WAAW,IAAI/4J,EAAE2F,EAAEmxJ,WAAW,aAAa,QAAQ,GAAG1kK,KAAKonK,UAAUpnK,KAAKqiK,YAAYz7I,EAAEw7I,WAAWpiK,KAAKw1G,UAAUx1G,KAAKuiK,eAAe37I,EAAEw7I,WAAWpiK,KAAK+nK,iBAAiB,CAAC,IAAIl6J,EAAE7N,KAAKioK,4BAA4B,GAAG,OAAOp6J,EAAE7N,KAAKqiK,YAAYx0J,MAAM,CAAC,IAAItK,EAAEyD,EAAEo5J,YAAYxyJ,EAAE5N,KAAKw1G,UAAUx1G,KAAKqiK,YAAYriK,KAAKolK,YAAYjD,eAAe5+J,EAAE,CAAC,IAAIytB,EAAEhxB,KAAKkoK,+BAA+B,GAAG,OAAOl3I,EAAEhxB,KAAKuiK,eAAevxI,MAAM,CAAC,IAAI3mB,EAAErD,EAAEo5J,YAAYxyJ,EAAE5N,KAAK+nK,aAAa/nK,KAAKuiK,eAAeviK,KAAKolK,YAAYjD,eAAe93J,EAAE,CAAC,CAAC,EAAE49J,0BAA0B,WAAW,IAAIr6J,EAAE5N,KAAKgoK,YAAY,OAAO,GAAGp6J,EAAE,CAAC,IAAIC,EAAE,IAAIxD,EAAEuD,EAAEjL,OAAO,OAAO,IAAIkL,EAAEqyJ,QAAQ,IAAQt5I,EAAEu4I,MAAMn/J,KAAKw1G,YAAY3nG,EAAEqyJ,QAAQ,GAAxC,KAAgDt5I,EAAEw7I,WAAWv0J,EAAEsyJ,WAAWvyJ,EAAEzH,OAAO,GAAG,CAAC,OAAO,IAAI,EAAE+hK,6BAA6B,WAAW,IAAIt6J,EAAE5N,KAAKgoK,YAAY,OAAO,GAAGp6J,EAAE,CAAC,IAAIC,EAAE,IAAIxD,EAAEuD,EAAEjL,OAAO,OAAO,IAAIkL,EAAEqyJ,QAAQ,IAAQt5I,EAAEu4I,MAAMn/J,KAAK+nK,eAAel6J,EAAEqyJ,QAAQ,GAA3C,KAAmDt5I,EAAEw7I,WAAWv0J,EAAEsyJ,WAAWvyJ,EAAEzH,OAAO,GAAG,CAAC,OAAO,IAAI,GAAG0H,EAAEnO,QAAQsxB,CAAC,EAAE,CAAC,qBAAqB,EAAE,WAAW,GAAG,iBAAiB,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAa,IAA2GqjB,EAAE,CAAC,GAAEoK,EAA1GpjB,EAAE,sBAAsBswC,QAAoFt3B,EAA3EhZ,EAAE,iBAAmBA,EAAE,iBAAmBA,EAAE,yBAAwCC,EAAEnO,QAAQknB,CAAC,EAAE,CAAC,gBAAgB,GAAG,gBAAgB,GAAG,qBAAqB,GAAG,uBAAuB,KAAK,GAAG,CAAC,SAAShZ,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,GAAG,KAAK5N,gBAAgBgxB,GAAG,OAAO,IAAIA,EAAEpjB,GAAG5N,KAAKmC,QAAQoR,EAAE2qC,OAAO,CAACyjH,MAAM/0J,EAAEsK,OAAOskE,EAAE2sF,UAAU,MAAMC,WAAW,GAAGC,SAAS,EAAEC,SAAShpI,EAAE0K,GAAG,IAAIp8B,GAAG,CAAC,GAAG,IAAIC,EAAE7N,KAAKmC,QAAQ0L,EAAEgR,KAAKhR,EAAEu6J,WAAW,EAAEv6J,EAAEu6J,YAAYv6J,EAAEu6J,WAAWv6J,EAAE06J,MAAM16J,EAAEu6J,WAAW,GAAGv6J,EAAEu6J,WAAW,KAAKv6J,EAAEu6J,YAAY,IAAIpoK,KAAKmI,IAAI,EAAEnI,KAAKif,IAAI,GAAGjf,KAAKwoK,OAAM,EAAGxoK,KAAKwnD,OAAO,GAAGxnD,KAAKyoK,KAAK,IAAIj0J,EAAExU,KAAKyoK,KAAKC,UAAU,EAAE,IAAInlK,EAAEqjB,EAAE+hJ,aAAa3oK,KAAKyoK,KAAK56J,EAAE8zJ,MAAM9zJ,EAAEqJ,OAAOrJ,EAAEu6J,WAAWv6J,EAAEw6J,SAASx6J,EAAEy6J,UAAU,GAAG/kK,IAAIye,EAAE,MAAM,IAAI1Z,MAAMiM,EAAEhR,IAAI,GAAGsK,EAAEkmE,QAAQntD,EAAEgiJ,iBAAiB5oK,KAAKyoK,KAAK56J,EAAEkmE,QAAQlmE,EAAEg7J,WAAW,CAAC,IAAIx+J,EAAE,GAAGA,EAAE,iBAAiBwD,EAAEg7J,WAAW9kI,EAAE+kI,WAAWj7J,EAAEg7J,YAAY,yBAAyBhoC,EAAEhkF,KAAKhvC,EAAEg7J,YAAY,IAAItH,WAAW1zJ,EAAEg7J,YAAYh7J,EAAEg7J,YAAWtlK,EAAEqjB,EAAEmiJ,qBAAqB/oK,KAAKyoK,KAAKp+J,MAAO2X,EAAE,MAAM,IAAI1Z,MAAMiM,EAAEhR,IAAIvD,KAAKgpK,WAAU,CAAE,CAAC,CAAC,SAAS3+J,EAAEuD,EAAEC,GAAG,IAAItK,EAAE,IAAIytB,EAAEnjB,GAAG,GAAGtK,EAAEe,KAAKsJ,GAAE,GAAIrK,EAAE4E,IAAI,MAAM5E,EAAE0b,IAAI,OAAO1b,EAAEuK,MAAM,CAAgG,IAAI8Y,EAAEhZ,EAAE,kBAAkB2F,EAAE3F,EAAE,kBAAkBm2B,EAAEn2B,EAAE,mBAAmB2G,EAAE3G,EAAE,mBAAmB4G,EAAE5G,EAAE,kBAAkBizH,EAAExsH,OAAOuoC,UAAUhoC,SAAiBoN,EAAE,EAAUpV,GAAG,EAAE0yB,EAAE,EAAEk8C,EAAE,EAAExqD,EAAE4rB,UAAUt4C,KAAK,SAASsJ,EAAEC,GAAG,IAAItK,EAAEytB,EAAE3mB,EAAErK,KAAKyoK,KAAKzhK,EAAEhH,KAAKmC,QAAQgmK,UAAU,GAAGnoK,KAAKwoK,MAAM,OAAM,EAAGx3I,EAAEnjB,MAAMA,EAAEA,GAAM,IAAJA,EAA1I,EAAJ,EAAyJ,iBAAiBD,EAAEvD,EAAE4+J,MAAMllI,EAAE+kI,WAAWl7J,GAAG,yBAAyBizH,EAAEhkF,KAAKjvC,GAAGvD,EAAE4+J,MAAM,IAAI1H,WAAW3zJ,GAAGvD,EAAE4+J,MAAMr7J,EAAEvD,EAAE6+J,QAAQ,EAAE7+J,EAAE8+J,SAAS9+J,EAAE4+J,MAAM9iK,OAAO,EAAE,CAAC,GAAG,IAAIkE,EAAEq+J,YAAYr+J,EAAE++J,OAAO,IAAI71J,EAAE81J,KAAKriK,GAAGqD,EAAEi/J,SAAS,EAAEj/J,EAAEq+J,UAAU1hK,GAA7W,KAAgXzD,EAAEqjB,EAAE2iJ,QAAQl/J,EAAE2mB,KAAUztB,IAAIye,EAAE,OAAOhiB,KAAKwpK,MAAMjmK,GAAGvD,KAAKwoK,OAAM,GAAG,EAAG,IAAIn+J,EAAEq+J,YAAY,IAAIr+J,EAAE8+J,UAApd,IAA8dn4I,GAAld,IAAydA,KAAS,WAAWhxB,KAAKmC,QAAQ6nC,GAAGhqC,KAAKypK,OAAO1lI,EAAE2lI,cAAcn2J,EAAEo2J,UAAUt/J,EAAE++J,OAAO/+J,EAAEi/J,YAAYtpK,KAAKypK,OAAOl2J,EAAEo2J,UAAUt/J,EAAE++J,OAAO/+J,EAAEi/J,WAAW,QAAQj/J,EAAE8+J,SAAS,GAAG,IAAI9+J,EAAEq+J,YAA1oB,IAAspBnlK,GAAO,OAArqB,IAA4qBytB,GAAOztB,EAAEqjB,EAAEgjJ,WAAW5pK,KAAKyoK,MAAMzoK,KAAKwpK,MAAMjmK,GAAGvD,KAAKwoK,OAAM,EAAGjlK,IAAIye,GAAjuB,IAAouBgP,IAAQhxB,KAAKwpK,MAAMxnJ,GAAG3X,EAAEq+J,UAAU,GAAE,EAAG,EAAE13I,EAAE4rB,UAAU6sH,OAAO,SAAS77J,GAAG5N,KAAKwnD,OAAOljD,KAAKsJ,EAAE,EAAEojB,EAAE4rB,UAAU4sH,MAAM,SAAS57J,GAAGA,IAAIoU,IAAI,WAAWhiB,KAAKmC,QAAQ6nC,GAAGhqC,KAAK8N,OAAO9N,KAAKwnD,OAAOl5C,KAAK,IAAItO,KAAK8N,OAAOyF,EAAEs2J,cAAc7pK,KAAKwnD,SAASxnD,KAAKwnD,OAAO,GAAGxnD,KAAKmI,IAAIyF,EAAE5N,KAAKif,IAAIjf,KAAKyoK,KAAKxpJ,GAAG,EAAE1b,EAAEumK,QAAQ94I,EAAEztB,EAAEgmK,QAAQl/J,EAAE9G,EAAEm+J,WAA1xC,SAAW9zJ,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAIgR,KAAI,EAAGxU,EAAEuD,EAAEC,EAAE,EAAyvCtK,EAAEglK,KAA1vC,SAAW36J,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAI06J,MAAK,EAAGl+J,EAAEuD,EAAEC,EAAE,CAAitC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,GAAG,KAAK5N,gBAAgBgxB,GAAG,OAAO,IAAIA,EAAEpjB,GAAG5N,KAAKmC,QAAQykB,EAAEs3B,OAAO,CAACiqH,UAAU,MAAMC,WAAW,EAAEp+H,GAAG,IAAIp8B,GAAG,CAAC,GAAG,IAAIC,EAAE7N,KAAKmC,QAAQ0L,EAAEgR,KAAKhR,EAAEu6J,YAAY,GAAGv6J,EAAEu6J,WAAW,KAAKv6J,EAAEu6J,YAAYv6J,EAAEu6J,WAAW,IAAIv6J,EAAEu6J,aAAav6J,EAAEu6J,YAAY,OAAOv6J,EAAEu6J,YAAY,GAAGv6J,EAAEu6J,WAAW,KAAKx6J,GAAGA,EAAEw6J,aAAav6J,EAAEu6J,YAAY,IAAIv6J,EAAEu6J,WAAW,IAAIv6J,EAAEu6J,WAAW,IAAI,IAAK,GAAGv6J,EAAEu6J,cAAcv6J,EAAEu6J,YAAY,IAAIpoK,KAAKmI,IAAI,EAAEnI,KAAKif,IAAI,GAAGjf,KAAKwoK,OAAM,EAAGxoK,KAAKwnD,OAAO,GAAGxnD,KAAKyoK,KAAK,IAAIj0J,EAAExU,KAAKyoK,KAAKC,UAAU,EAAE,IAAInlK,EAAEi5G,EAAEutD,aAAa/pK,KAAKyoK,KAAK56J,EAAEu6J,YAAY,GAAG7kK,IAAIwgC,EAAEimI,KAAK,MAAM,IAAI1hK,MAAMiM,EAAEhR,IAAIvD,KAAK+zE,OAAO,IAAI8sD,EAAErkB,EAAEytD,iBAAiBjqK,KAAKyoK,KAAKzoK,KAAK+zE,OAAO,CAAC,SAAS1pE,EAAEuD,EAAEC,GAAG,IAAItK,EAAE,IAAIytB,EAAEnjB,GAAG,GAAGtK,EAAEe,KAAKsJ,GAAE,GAAIrK,EAAE4E,IAAI,MAAM5E,EAAE0b,IAAI,OAAO1b,EAAEuK,MAAM,CAAgD,IAAI0uG,EAAE5uG,EAAE,kBAAkBgZ,EAAEhZ,EAAE,kBAAkB2F,EAAE3F,EAAE,mBAAmBm2B,EAAEn2B,EAAE,oBAAoB2G,EAAE3G,EAAE,mBAAmB4G,EAAE5G,EAAE,kBAAkBizH,EAAEjzH,EAAE,mBAAmBg1C,EAAEvuC,OAAOuoC,UAAUhoC,SAASoc,EAAE4rB,UAAUt4C,KAAK,SAASsJ,EAAEC,GAAG,IAAItK,EAAEytB,EAAE3mB,EAAErD,EAAEuN,EAAEC,EAAEqsH,EAAE7gI,KAAKyoK,KAAKtiJ,EAAEnmB,KAAKmC,QAAQgmK,UAAUnmJ,EAAEhiB,KAAKmC,QAAQ0mK,WAAWxgJ,GAAE,EAAG,GAAGroB,KAAKwoK,MAAM,OAAM,EAAGx3I,EAAEnjB,MAAMA,EAAEA,GAAM,IAAJA,EAAOk2B,EAAEmmI,SAASnmI,EAAEomI,WAAW,iBAAiBv8J,EAAEizH,EAAEooC,MAAM11J,EAAE62J,cAAcx8J,GAAG,yBAAyBg1C,EAAE/F,KAAKjvC,GAAGizH,EAAEooC,MAAM,IAAI1H,WAAW3zJ,GAAGizH,EAAEooC,MAAMr7J,EAAEizH,EAAEqoC,QAAQ,EAAEroC,EAAEsoC,SAAStoC,EAAEooC,MAAM9iK,OAAO,EAAE,CAAC,GAAG,IAAI06H,EAAE6nC,YAAY7nC,EAAEuoC,OAAO,IAAIxiJ,EAAEyiJ,KAAKljJ,GAAG06G,EAAEyoC,SAAS,EAAEzoC,EAAE6nC,UAAUviJ,IAAG5iB,EAAEi5G,EAAE6tD,QAAQxpC,EAAE98F,EAAEomI,eAAgBpmI,EAAEumI,aAAatoJ,IAAIxN,EAAE,iBAAiBwN,EAAEzO,EAAEu1J,WAAW9mJ,GAAG,yBAAyB4gC,EAAE/F,KAAK76B,GAAG,IAAIu/I,WAAWv/I,GAAGA,EAAEze,EAAEi5G,EAAE+tD,qBAAqBvqK,KAAKyoK,KAAKj0J,IAAIjR,IAAIwgC,EAAEymI,cAAiB,IAAJniJ,IAAS9kB,EAAEwgC,EAAEimI,KAAK3hJ,GAAE,GAAI9kB,IAAIwgC,EAAE0mI,cAAclnK,IAAIwgC,EAAEimI,KAAK,OAAOhqK,KAAKwpK,MAAMjmK,GAAGvD,KAAKwoK,OAAM,GAAG,EAAG3nC,EAAEyoC,WAAW,IAAIzoC,EAAE6nC,WAAWnlK,IAAIwgC,EAAE0mI,eAAe,IAAI5pC,EAAEsoC,UAAUn4I,IAAI+S,EAAEmmI,UAAUl5I,IAAI+S,EAAE2mI,gBAAgB,WAAW1qK,KAAKmC,QAAQ6nC,IAAI3/B,EAAEkJ,EAAEo3J,WAAW9pC,EAAEuoC,OAAOvoC,EAAEyoC,UAAUtiK,EAAE65H,EAAEyoC,SAASj/J,EAAEkK,EAAEhB,EAAEq3J,WAAW/pC,EAAEuoC,OAAO/+J,GAAGw2H,EAAEyoC,SAAStiK,EAAE65H,EAAE6nC,UAAUviJ,EAAEnf,EAAEA,GAAG4f,EAAEikJ,SAAShqC,EAAEuoC,OAAOvoC,EAAEuoC,OAAO/+J,EAAErD,EAAE,GAAGhH,KAAKypK,OAAOl1J,IAAIvU,KAAKypK,OAAO7iJ,EAAE+iJ,UAAU9oC,EAAEuoC,OAAOvoC,EAAEyoC,aAAa,IAAIzoC,EAAEsoC,UAAU,IAAItoC,EAAE6nC,YAAYrgJ,GAAE,EAAG,QAAQw4G,EAAEsoC,SAAS,GAAG,IAAItoC,EAAE6nC,YAAYnlK,IAAIwgC,EAAE0mI,cAAc,OAAOlnK,IAAIwgC,EAAE0mI,eAAez5I,EAAE+S,EAAEmmI,UAAUl5I,IAAI+S,EAAEmmI,UAAU3mK,EAAEi5G,EAAEsuD,WAAW9qK,KAAKyoK,MAAMzoK,KAAKwpK,MAAMjmK,GAAGvD,KAAKwoK,OAAM,EAAGjlK,IAAIwgC,EAAEimI,MAAMh5I,IAAI+S,EAAE2mI,eAAe1qK,KAAKwpK,MAAMzlI,EAAEimI,MAAMnpC,EAAE6nC,UAAU,GAAE,EAAG,EAAE13I,EAAE4rB,UAAU6sH,OAAO,SAAS77J,GAAG5N,KAAKwnD,OAAOljD,KAAKsJ,EAAE,EAAEojB,EAAE4rB,UAAU4sH,MAAM,SAAS57J,GAAGA,IAAIm2B,EAAEimI,OAAO,WAAWhqK,KAAKmC,QAAQ6nC,GAAGhqC,KAAK8N,OAAO9N,KAAKwnD,OAAOl5C,KAAK,IAAItO,KAAK8N,OAAO8Y,EAAEijJ,cAAc7pK,KAAKwnD,SAASxnD,KAAKwnD,OAAO,GAAGxnD,KAAKmI,IAAIyF,EAAE5N,KAAKif,IAAIjf,KAAKyoK,KAAKxpJ,GAAG,EAAE1b,EAAEwnK,QAAQ/5I,EAAEztB,EAAE8mK,QAAQhgK,EAAE9G,EAAEq+J,WAAjzD,SAAWh0J,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAIgR,KAAI,EAAGxU,EAAEuD,EAAEC,EAAE,EAAgxDtK,EAAEynK,OAAO3gK,CAAC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAE,oBAAoBuwI,YAAY,oBAAoBC,aAAa,oBAAoByJ,WAAW1nK,EAAE26C,OAAO,SAAStwC,GAAG,IAAI,IAAIC,EAAEV,MAAMyvC,UAAUxpC,MAAMypC,KAAK5pC,UAAU,GAAGpF,EAAE1H,QAAQ,CAAC,IAAI5C,EAAEsK,EAAE4G,QAAQ,GAAGlR,EAAE,CAAC,GAAG,iBAAiBA,EAAE,MAAM,IAAIk3I,UAAUl3I,EAAE,sBAAsB,IAAI,IAAIytB,KAAKztB,EAAEA,EAAEi6B,eAAexM,KAAKpjB,EAAEojB,GAAGztB,EAAEytB,GAAG,CAAC,CAAC,OAAOpjB,CAAC,EAAErK,EAAEomK,UAAU,SAAS/7J,EAAEC,GAAG,OAAOD,EAAEzH,SAAS0H,EAAED,EAAEA,EAAEq3J,SAASr3J,EAAEq3J,SAAS,EAAEp3J,IAAID,EAAEzH,OAAO0H,EAAED,EAAE,EAAE,IAAIvD,EAAE,CAACwgK,SAAS,SAASj9J,EAAEC,EAAEtK,EAAEytB,EAAE3mB,GAAG,GAAGwD,EAAEo3J,UAAUr3J,EAAEq3J,SAAqBr3J,EAAEmM,IAAIlM,EAAEo3J,SAAS1hK,EAAEA,EAAEytB,GAAG3mB,QAAG,IAAI,IAAIrD,EAAE,EAAEA,EAAEgqB,EAAEhqB,IAAI4G,EAAEvD,EAAErD,GAAG6G,EAAEtK,EAAEyD,EAAE,EAAE6iK,cAAc,SAASj8J,GAAG,IAAIC,EAAEtK,EAAEytB,EAAE3mB,EAAErD,EAAEw1G,EAAE,IAAIxrF,EAAE,EAAEnjB,EAAE,EAAEtK,EAAEqK,EAAEzH,OAAO0H,EAAEtK,EAAEsK,IAAImjB,GAAGpjB,EAAEC,GAAG1H,OAAO,IAAIq2G,EAAE,IAAI+kD,WAAWvwI,GAAG3mB,EAAE,EAAEwD,EAAE,EAAEtK,EAAEqK,EAAEzH,OAAO0H,EAAEtK,EAAEsK,IAAI7G,EAAE4G,EAAEC,GAAG2uG,EAAEziG,IAAI/S,EAAEqD,GAAGA,GAAGrD,EAAEb,OAAO,OAAOq2G,CAAC,GAAGx1G,EAAE,CAAC6jK,SAAS,SAASj9J,EAAEC,EAAEtK,EAAEytB,EAAE3mB,GAAG,IAAI,IAAIrD,EAAE,EAAEA,EAAEgqB,EAAEhqB,IAAI4G,EAAEvD,EAAErD,GAAG6G,EAAEtK,EAAEyD,EAAE,EAAE6iK,cAAc,SAASj8J,GAAG,MAAM,GAAGoa,OAAOqkB,MAAM,GAAGz+B,EAAE,GAAGrK,EAAE2nK,SAAS,SAASt9J,GAAGA,GAAGrK,EAAE8lK,KAAK9H,WAAWh+J,EAAE4nK,MAAM3J,YAAYj+J,EAAE6nK,MAAMH,WAAW1nK,EAAE26C,OAAO36C,EAAE8G,KAAK9G,EAAE8lK,KAAKl8J,MAAM5J,EAAE4nK,MAAMh+J,MAAM5J,EAAE6nK,MAAMj+J,MAAM5J,EAAE26C,OAAO36C,EAAEyD,GAAG,EAAEzD,EAAE2nK,SAASl6I,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAASpjB,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,EAAEC,GAAG,GAAGA,EAAE,QAAQD,EAAEq3J,UAAUzoD,IAAI5uG,EAAEq3J,UAAUj+J,GAAG,OAAOoU,OAAO0jI,aAAazyG,MAAM,KAAKhiC,EAAEs/J,UAAU/7J,EAAEC,IAAI,IAAI,IAAItK,EAAE,GAAGytB,EAAE,EAAEA,EAAEnjB,EAAEmjB,IAAIztB,GAAG6X,OAAO0jI,aAAalxI,EAAEojB,IAAI,OAAOztB,CAAC,CAAC,IAAI8G,EAAEuD,EAAE,YAAY5G,GAAE,EAAGw1G,GAAE,EAAG,IAAIphG,OAAO0jI,aAAazyG,MAAM,KAAK,CAAC,GAAiB,CAAb,MAAMzlB,GAAG5f,GAAE,CAAE,CAAC,IAAIoU,OAAO0jI,aAAazyG,MAAM,KAAK,IAAIk1H,WAAW,GAAiB,CAAb,MAAM36I,GAAG41F,GAAE,CAAE,CAAC,IAAI,IAAIjpG,EAAE,IAAIlJ,EAAEg/J,KAAK,KAAKtlI,EAAE,EAAEA,EAAE,IAAIA,IAAIxwB,EAAEwwB,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAExwB,EAAE,KAAKA,EAAE,KAAK,EAAEhQ,EAAEulK,WAAW,SAASl7J,GAAG,IAAIC,EAAEtK,EAAEytB,EAAEhqB,EAAEw1G,EAAE51F,EAAEhZ,EAAEzH,OAAOoN,EAAE,EAAE,IAAIvM,EAAE,EAAEA,EAAE4f,EAAE5f,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEomJ,WAAWhtJ,MAAsBA,EAAE,EAAE4f,GAAwB,QAAS,OAA7BoK,EAAEpjB,EAAEomJ,WAAWhtJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKytB,EAAE,OAAOhqB,KAAMuM,GAAGhQ,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIsK,EAAE,IAAIxD,EAAEg/J,KAAK91J,GAAGipG,EAAE,EAAEx1G,EAAE,EAAEw1G,EAAEjpG,EAAEvM,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEomJ,WAAWhtJ,MAAsBA,EAAE,EAAE4f,GAAwB,QAAS,OAA7BoK,EAAEpjB,EAAEomJ,WAAWhtJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKytB,EAAE,OAAOhqB,KAAMzD,EAAE,IAAIsK,EAAE2uG,KAAKj5G,EAAEA,EAAE,MAAMsK,EAAE2uG,KAAK,IAAIj5G,IAAI,EAAEsK,EAAE2uG,KAAK,IAAI,GAAGj5G,GAAGA,EAAE,OAAOsK,EAAE2uG,KAAK,IAAIj5G,IAAI,GAAGsK,EAAE2uG,KAAK,IAAIj5G,IAAI,EAAE,GAAGsK,EAAE2uG,KAAK,IAAI,GAAGj5G,IAAIsK,EAAE2uG,KAAK,IAAIj5G,IAAI,GAAGsK,EAAE2uG,KAAK,IAAIj5G,IAAI,GAAG,GAAGsK,EAAE2uG,KAAK,IAAIj5G,IAAI,EAAE,GAAGsK,EAAE2uG,KAAK,IAAI,GAAGj5G,GAAG,OAAOsK,CAAC,EAAEtK,EAAEmmK,cAAc,SAAS97J,GAAG,OAAOojB,EAAEpjB,EAAEA,EAAEzH,OAAO,EAAE5C,EAAE6mK,cAAc,SAASx8J,GAAG,IAAI,IAAIC,EAAE,IAAIxD,EAAEg/J,KAAKz7J,EAAEzH,QAAQ5C,EAAE,EAAEytB,EAAEnjB,EAAE1H,OAAO5C,EAAEytB,EAAEztB,IAAIsK,EAAEtK,GAAGqK,EAAEomJ,WAAWzwJ,GAAG,OAAOsK,CAAC,EAAEtK,EAAEqnK,WAAW,SAASh9J,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAEw1G,EAAE51F,EAAE/Y,GAAGD,EAAEzH,OAAO49B,EAAE,IAAI52B,MAAM,EAAEyZ,GAAG,IAAIvc,EAAE,EAAE9G,EAAE,EAAEA,EAAEqjB,GAAG,IAAG5f,EAAE4G,EAAErK,MAAO,IAAIwgC,EAAE15B,KAAKrD,OAAO,IAAGw1G,EAAEjpG,EAAEvM,IAAK,EAAE+8B,EAAE15B,KAAK,MAAM9G,GAAGi5G,EAAE,MAAM,CAAC,IAAIx1G,GAAG,IAAIw1G,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAGj5G,EAAEqjB,GAAG5f,EAAEA,GAAG,EAAE,GAAG4G,EAAErK,KAAKi5G,IAAIA,EAAE,EAAEz4E,EAAE15B,KAAK,MAAMrD,EAAE,MAAM+8B,EAAE15B,KAAKrD,GAAGA,GAAG,MAAM+8B,EAAE15B,KAAK,MAAMrD,GAAG,GAAG,KAAK+8B,EAAE15B,KAAK,MAAM,KAAKrD,EAAE,CAAC,OAAOgqB,EAAE+S,EAAE15B,EAAE,EAAE9G,EAAEonK,WAAW,SAAS/8J,EAAEC,GAAG,IAAItK,EAAE,KAAIsK,EAAEA,GAAGD,EAAEzH,QAASyH,EAAEzH,SAAS0H,EAAED,EAAEzH,QAAQ5C,EAAEsK,EAAE,EAAEtK,GAAG,GAAG,MAAO,IAAIqK,EAAErK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANsK,EAAUtK,EAAEgQ,EAAE3F,EAAErK,IAAIsK,EAAEtK,EAAEsK,CAAC,CAAC,EAAE,CAAC,WAAW,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAA2KsK,EAAEnO,QAAhK,SAAWkO,EAAEC,EAAEtK,EAAEytB,GAAG,IAAI,IAAI3mB,EAAE,MAAMuD,EAAE,EAAE5G,EAAE4G,IAAI,GAAG,MAAM,EAAE4uG,EAAE,EAAE,IAAIj5G,GAAG,CAAeA,GAAdi5G,EAAEj5G,EAAE,IAAI,IAAIA,EAAO,GAAgByD,EAAEA,GAAfqD,EAAEA,EAAEwD,EAAEmjB,KAAK,GAAQ,UAAUwrF,GAAGnyG,GAAG,MAAMrD,GAAG,KAAK,CAAC,OAAOqD,EAAErD,GAAG,GAAG,CAAC,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS4G,EAAEC,EAAEtK,GAAG,aAAasK,EAAEnO,QAAQ,CAACyqK,WAAW,EAAEkB,gBAAgB,EAAEX,aAAa,EAAEY,aAAa,EAAEpB,SAAS,EAAEqB,QAAQ,EAAEC,QAAQ,EAAExB,KAAK,EAAES,aAAa,EAAEH,YAAY,EAAEmB,SAAS,EAAEC,gBAAgB,EAAEC,cAAc,EAAEnB,aAAa,EAAEoB,iBAAiB,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,uBAAuB,EAAEC,WAAW,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,WAAW,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS5+J,EAAEC,EAAEtK,GAAG,aAA6N,IAAIyD,EAApN,WAAa,IAAI,IAAI4G,EAAEC,EAAE,GAAGtK,EAAE,EAAEA,EAAE,IAAIA,IAAI,CAACqK,EAAErK,EAAE,IAAI,IAAIytB,EAAE,EAAEA,EAAE,EAAEA,IAAIpjB,EAAE,EAAEA,EAAE,WAAWA,IAAI,EAAEA,IAAI,EAAEC,EAAEtK,GAAGqK,CAAC,CAAC,OAAOC,CAAC,CAAuGmjB,GAAInjB,EAAEnO,QAA5G,SAAWkO,EAAEC,EAAEtK,EAAEytB,GAAG,IAAI3mB,EAAErD,EAAEw1G,EAAExrF,EAAEztB,EAAEqK,IAAI,EAAE,IAAI,IAAIgZ,EAAEoK,EAAEpK,EAAE41F,EAAE51F,IAAIhZ,EAAEA,IAAI,EAAEvD,EAAE,KAAKuD,EAAEC,EAAE+Y,KAAK,OAAU,EAAHhZ,CAAI,CAAsB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,EAAEC,GAAG,OAAOD,EAAEqR,IAAIwtJ,EAAE5+J,GAAGA,CAAC,CAAC,SAASxD,EAAEuD,GAAG,OAAOA,GAAG,IAAIA,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS5G,EAAE4G,GAAG,IAAI,IAAIC,EAAED,EAAEzH,SAAS0H,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAAS2uG,EAAE5uG,GAAG,IAAIC,EAAED,EAAEs8C,MAAM3mD,EAAEsK,EAAEgS,QAAQtc,EAAEqK,EAAE86J,YAAYnlK,EAAEqK,EAAE86J,WAAW,IAAInlK,IAAIggK,EAAEsH,SAASj9J,EAAEw7J,OAAOv7J,EAAE6+J,YAAY7+J,EAAE8+J,YAAYppK,EAAEqK,EAAE07J,UAAU17J,EAAE07J,UAAU/lK,EAAEsK,EAAE8+J,aAAappK,EAAEqK,EAAEg/J,WAAWrpK,EAAEqK,EAAE86J,WAAWnlK,EAAEsK,EAAEgS,SAAStc,EAAE,IAAIsK,EAAEgS,UAAUhS,EAAE8+J,YAAY,GAAG,CAAC,SAAS/lJ,EAAEhZ,EAAEC,GAAG3J,EAAE2oK,gBAAgBj/J,EAAEA,EAAEk/J,aAAa,EAAEl/J,EAAEk/J,aAAa,EAAEl/J,EAAEm/J,SAASn/J,EAAEk/J,YAAYj/J,GAAGD,EAAEk/J,YAAYl/J,EAAEm/J,SAASvwD,EAAE5uG,EAAE66J,KAAK,CAAC,SAASl1J,EAAE3F,EAAEC,GAAGD,EAAE8+J,YAAY9+J,EAAEiS,WAAWhS,CAAC,CAAC,SAASk2B,EAAEn2B,EAAEC,GAAGD,EAAE8+J,YAAY9+J,EAAEiS,WAAWhS,IAAI,EAAE,IAAID,EAAE8+J,YAAY9+J,EAAEiS,WAAW,IAAIhS,CAAC,CAAC,SAAS0G,EAAE3G,EAAEC,EAAEtK,EAAEytB,GAAG,IAAI3mB,EAAEuD,EAAEu7J,SAAS,OAAO9+J,EAAE2mB,IAAI3mB,EAAE2mB,GAAG,IAAI3mB,EAAE,GAAGuD,EAAEu7J,UAAU9+J,EAAEk5J,EAAEsH,SAASh9J,EAAED,EAAEq7J,MAAMr7J,EAAEs7J,QAAQ7+J,EAAE9G,GAAG,IAAIqK,EAAEs8C,MAAM8iH,KAAKp/J,EAAEq/J,MAAMC,EAAEt/J,EAAEq/J,MAAMp/J,EAAExD,EAAE9G,GAAG,IAAIqK,EAAEs8C,MAAM8iH,OAAOp/J,EAAEq/J,MAAME,EAAEv/J,EAAEq/J,MAAMp/J,EAAExD,EAAE9G,IAAIqK,EAAEs7J,SAAS7+J,EAAEuD,EAAEw/J,UAAU/iK,EAAEA,EAAE,CAAC,SAASmK,EAAE5G,EAAEC,GAAG,IAAItK,EAAEytB,EAAE3mB,EAAEuD,EAAEy/J,iBAAiBrmK,EAAE4G,EAAEm/J,SAASvwD,EAAE5uG,EAAE0/J,YAAY1mJ,EAAEhZ,EAAE2/J,WAAWh6J,EAAE3F,EAAEm/J,SAASn/J,EAAE4/J,OAAOC,GAAG7/J,EAAEm/J,UAAUn/J,EAAE4/J,OAAOC,IAAI,EAAE1pI,EAAEn2B,EAAEsL,OAAO3E,EAAE3G,EAAE8/J,OAAOl5J,EAAE5G,EAAE+/J,KAAK9sC,EAAEjzH,EAAEm/J,SAASa,GAAGhrH,EAAE7e,EAAE/8B,EAAEw1G,EAAE,GAAGr2F,EAAE4d,EAAE/8B,EAAEw1G,GAAG5uG,EAAE0/J,aAAa1/J,EAAEigK,aAAaxjK,IAAI,GAAGuc,EAAEhZ,EAAEkgK,YAAYlnJ,EAAEhZ,EAAEkgK,WAAW,MAAU/pI,GAAJxgC,EAAEsK,GAAM2uG,KAAKr2F,GAAG4d,EAAExgC,EAAEi5G,EAAE,KAAK55D,GAAG7e,EAAExgC,KAAKwgC,EAAE/8B,IAAI+8B,IAAIxgC,KAAKwgC,EAAE/8B,EAAE,GAAG,CAACA,GAAG,EAAEzD,IAAI,UAASwgC,IAAI/8B,KAAK+8B,IAAIxgC,IAAIwgC,IAAI/8B,KAAK+8B,IAAIxgC,IAAIwgC,IAAI/8B,KAAK+8B,IAAIxgC,IAAIwgC,IAAI/8B,KAAK+8B,IAAIxgC,IAAIwgC,IAAI/8B,KAAK+8B,IAAIxgC,IAAIwgC,IAAI/8B,KAAK+8B,IAAIxgC,IAAIwgC,IAAI/8B,KAAK+8B,IAAIxgC,IAAIwgC,IAAI/8B,KAAK+8B,IAAIxgC,IAAIyD,EAAE65H,GAAG,GAAG7vG,EAAE48I,IAAI/sC,EAAE75H,GAAGA,EAAE65H,EAAE+sC,GAAG58I,EAAEwrF,EAAE,CAAC,GAAG5uG,EAAEmgK,YAAYlgK,EAAE2uG,EAAExrF,EAAEA,GAAGpK,EAAE,MAAMg8B,EAAE7e,EAAE/8B,EAAEw1G,EAAE,GAAGr2F,EAAE4d,EAAE/8B,EAAEw1G,EAAE,CAAC,SAAQ3uG,EAAE2G,EAAE3G,EAAE0G,IAAIhB,GAAG,KAAMlJ,GAAG,OAAOmyG,GAAG5uG,EAAEkgK,UAAUtxD,EAAE5uG,EAAEkgK,SAAS,CAAC,SAASjtC,EAAEjzH,GAAG,IAAIC,EAAEtK,EAAEytB,EAAE3mB,EAAErD,EAAEw1G,EAAE5uG,EAAE4/J,OAAO,EAAE,CAAC,GAAGnjK,EAAEuD,EAAEogK,YAAYpgK,EAAEkgK,UAAUlgK,EAAEm/J,SAASn/J,EAAEm/J,UAAUvwD,GAAGA,EAAEixD,IAAI,CAAClK,EAAEsH,SAASj9J,EAAEsL,OAAOtL,EAAEsL,OAAOsjG,EAAEA,EAAE,GAAG5uG,EAAEmgK,aAAavxD,EAAE5uG,EAAEm/J,UAAUvwD,EAAE5uG,EAAEk/J,aAAatwD,EAAgB3uG,EAAdtK,EAAEqK,EAAEqgK,UAAc,GAAGj9I,EAAEpjB,EAAE3M,OAAO4M,GAAGD,EAAE3M,KAAK4M,GAAGmjB,GAAGwrF,EAAExrF,EAAEwrF,EAAE,UAAUj5G,GAAOsK,EAAJtK,EAAEi5G,EAAM,GAAGxrF,EAAEpjB,EAAE+/J,OAAO9/J,GAAGD,EAAE+/J,KAAK9/J,GAAGmjB,GAAGwrF,EAAExrF,EAAEwrF,EAAE,UAAUj5G,GAAG8G,GAAGmyG,CAAC,CAAC,GAAG,IAAI5uG,EAAE66J,KAAKU,SAAS,MAAM,GAAG5lK,EAAEgR,EAAE3G,EAAE66J,KAAK76J,EAAEsL,OAAOtL,EAAEm/J,SAASn/J,EAAEkgK,UAAUzjK,GAAGuD,EAAEkgK,WAAWvqK,EAAEqK,EAAEkgK,UAAUlgK,EAAEsgK,QAAQC,GAAG,IAAInnK,EAAE4G,EAAEm/J,SAASn/J,EAAEsgK,OAAOtgK,EAAEwgK,MAAMxgK,EAAEsL,OAAOlS,GAAG4G,EAAEwgK,OAAOxgK,EAAEwgK,OAAOxgK,EAAEygK,WAAWzgK,EAAEsL,OAAOlS,EAAE,IAAI4G,EAAE0gK,UAAU1gK,EAAEsgK,SAAStgK,EAAEwgK,OAAOxgK,EAAEwgK,OAAOxgK,EAAEygK,WAAWzgK,EAAEsL,OAAOlS,EAAEmnK,GAAG,IAAIvgK,EAAE0gK,UAAU1gK,EAAE+/J,KAAK3mK,EAAE4G,EAAE8/J,QAAQ9/J,EAAE3M,KAAK2M,EAAEwgK,OAAOxgK,EAAE3M,KAAK2M,EAAEwgK,OAAOpnK,EAAEA,IAAI4G,EAAEsgK,WAAWtgK,EAAEkgK,UAAUlgK,EAAEsgK,OAAOC,OAAO,OAAOvgK,EAAEkgK,UAAUL,IAAI,IAAI7/J,EAAE66J,KAAKU,SAAS,CAAwiB,SAAShjJ,EAAEvY,EAAEC,GAAG,IAAI,IAAItK,EAAEytB,IAAI,CAAC,GAAGpjB,EAAEkgK,UAAUL,GAAG,CAAC,GAAG5sC,EAAEjzH,GAAGA,EAAEkgK,UAAUL,IAAI5/J,IAAI0gK,EAAE,OAAOC,GAAG,GAAG,IAAI5gK,EAAEkgK,UAAU,KAAK,CAAC,GAAGvqK,EAAE,EAAEqK,EAAEkgK,WAAWK,KAAKvgK,EAAEwgK,OAAOxgK,EAAEwgK,OAAOxgK,EAAEygK,WAAWzgK,EAAEsL,OAAOtL,EAAEm/J,SAASoB,GAAG,IAAIvgK,EAAE0gK,UAAU/qK,EAAEqK,EAAE+/J,KAAK//J,EAAEm/J,SAASn/J,EAAE8/J,QAAQ9/J,EAAE3M,KAAK2M,EAAEwgK,OAAOxgK,EAAE3M,KAAK2M,EAAEwgK,OAAOxgK,EAAEm/J,UAAU,IAAIxpK,GAAGqK,EAAEm/J,SAASxpK,GAAGqK,EAAE4/J,OAAOC,KAAK7/J,EAAE6gK,aAAaj6J,EAAE5G,EAAErK,IAAIqK,EAAE6gK,cAAcN,GAAG,GAAGn9I,EAAE9sB,EAAEwqK,UAAU9gK,EAAEA,EAAEm/J,SAASn/J,EAAEmgK,YAAYngK,EAAE6gK,aAAaN,IAAIvgK,EAAEkgK,WAAWlgK,EAAE6gK,aAAa7gK,EAAE6gK,cAAc7gK,EAAE+gK,gBAAgB/gK,EAAEkgK,WAAWK,GAAG,CAACvgK,EAAE6gK,eAAe,GAAG7gK,EAAEm/J,WAAWn/J,EAAEwgK,OAAOxgK,EAAEwgK,OAAOxgK,EAAEygK,WAAWzgK,EAAEsL,OAAOtL,EAAEm/J,SAASoB,GAAG,IAAIvgK,EAAE0gK,UAAU/qK,EAAEqK,EAAE+/J,KAAK//J,EAAEm/J,SAASn/J,EAAE8/J,QAAQ9/J,EAAE3M,KAAK2M,EAAEwgK,OAAOxgK,EAAE3M,KAAK2M,EAAEwgK,OAAOxgK,EAAEm/J,eAAe,KAAMn/J,EAAE6gK,cAAc7gK,EAAEm/J,UAAU,MAAMn/J,EAAEm/J,UAAUn/J,EAAE6gK,aAAa7gK,EAAE6gK,aAAa,EAAE7gK,EAAEwgK,MAAMxgK,EAAEsL,OAAOtL,EAAEm/J,UAAUn/J,EAAEwgK,OAAOxgK,EAAEwgK,OAAOxgK,EAAEygK,WAAWzgK,EAAEsL,OAAOtL,EAAEm/J,SAAS,IAAIn/J,EAAE0gK,eAAet9I,EAAE9sB,EAAEwqK,UAAU9gK,EAAE,EAAEA,EAAEsL,OAAOtL,EAAEm/J,WAAWn/J,EAAEkgK,YAAYlgK,EAAEm/J,WAAW,GAAG/7I,IAAIpK,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO5gK,EAAEsgK,OAAOtgK,EAAEm/J,SAASoB,GAAG,EAAEvgK,EAAEm/J,SAASoB,GAAG,EAAEtgK,IAAI+gK,GAAGhoJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,UAAUmG,GAAGC,IAAIlhK,EAAEmhK,WAAWnoJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAAShtJ,EAAEpU,EAAEC,GAAG,IAAI,IAAItK,EAAEytB,EAAE3mB,IAAI,CAAC,GAAGuD,EAAEkgK,UAAUL,GAAG,CAAC,GAAG5sC,EAAEjzH,GAAGA,EAAEkgK,UAAUL,IAAI5/J,IAAI0gK,EAAE,OAAOC,GAAG,GAAG,IAAI5gK,EAAEkgK,UAAU,KAAK,CAAC,GAAGvqK,EAAE,EAAEqK,EAAEkgK,WAAWK,KAAKvgK,EAAEwgK,OAAOxgK,EAAEwgK,OAAOxgK,EAAEygK,WAAWzgK,EAAEsL,OAAOtL,EAAEm/J,SAASoB,GAAG,IAAIvgK,EAAE0gK,UAAU/qK,EAAEqK,EAAE+/J,KAAK//J,EAAEm/J,SAASn/J,EAAE8/J,QAAQ9/J,EAAE3M,KAAK2M,EAAEwgK,OAAOxgK,EAAE3M,KAAK2M,EAAEwgK,OAAOxgK,EAAEm/J,UAAUn/J,EAAE0/J,YAAY1/J,EAAE6gK,aAAa7gK,EAAEqhK,WAAWrhK,EAAEmgK,YAAYngK,EAAE6gK,aAAaN,GAAG,EAAE,IAAI5qK,GAAGqK,EAAE0/J,YAAY1/J,EAAE+gK,gBAAgB/gK,EAAEm/J,SAASxpK,GAAGqK,EAAE4/J,OAAOC,KAAK7/J,EAAE6gK,aAAaj6J,EAAE5G,EAAErK,GAAGqK,EAAE6gK,cAAc,IAAI7gK,EAAE06J,WAAW4G,GAAGthK,EAAE6gK,eAAeN,IAAIvgK,EAAEm/J,SAASn/J,EAAEmgK,YAAY,QAAQngK,EAAE6gK,aAAaN,GAAG,IAAIvgK,EAAE0/J,aAAaa,IAAIvgK,EAAE6gK,cAAc7gK,EAAE0/J,YAAY,CAACjjK,EAAEuD,EAAEm/J,SAASn/J,EAAEkgK,UAAUK,GAAGn9I,EAAE9sB,EAAEwqK,UAAU9gK,EAAEA,EAAEm/J,SAAS,EAAEn/J,EAAEqhK,WAAWrhK,EAAE0/J,YAAYa,IAAIvgK,EAAEkgK,WAAWlgK,EAAE0/J,YAAY,EAAE1/J,EAAE0/J,aAAa,EAAE,KAAI1/J,EAAEm/J,UAAU1iK,IAAIuD,EAAEwgK,OAAOxgK,EAAEwgK,OAAOxgK,EAAEygK,WAAWzgK,EAAEsL,OAAOtL,EAAEm/J,SAASoB,GAAG,IAAIvgK,EAAE0gK,UAAU/qK,EAAEqK,EAAE+/J,KAAK//J,EAAEm/J,SAASn/J,EAAE8/J,QAAQ9/J,EAAE3M,KAAK2M,EAAEwgK,OAAOxgK,EAAE3M,KAAK2M,EAAEwgK,OAAOxgK,EAAEm/J,gBAAgB,KAAMn/J,EAAE0/J,aAAa,GAAG1/J,EAAEuhK,gBAAgB,EAAEvhK,EAAE6gK,aAAaN,GAAG,EAAEvgK,EAAEm/J,WAAW/7I,IAAIpK,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW,OAAO8F,EAAE,MAAM,GAAG5gK,EAAEuhK,iBAAiB,IAAGn+I,EAAE9sB,EAAEwqK,UAAU9gK,EAAE,EAAEA,EAAEsL,OAAOtL,EAAEm/J,SAAS,MAAOnmJ,EAAEhZ,GAAE,GAAIA,EAAEm/J,WAAWn/J,EAAEkgK,YAAY,IAAIlgK,EAAE66J,KAAKC,UAAU,OAAO8F,QAAQ5gK,EAAEuhK,gBAAgB,EAAEvhK,EAAEm/J,WAAWn/J,EAAEkgK,WAAW,CAAC,OAAOlgK,EAAEuhK,kBAAkBn+I,EAAE9sB,EAAEwqK,UAAU9gK,EAAE,EAAEA,EAAEsL,OAAOtL,EAAEm/J,SAAS,IAAIn/J,EAAEuhK,gBAAgB,GAAGvhK,EAAEsgK,OAAOtgK,EAAEm/J,SAASoB,GAAG,EAAEvgK,EAAEm/J,SAASoB,GAAG,EAAEtgK,IAAI+gK,GAAGhoJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,UAAUmG,GAAGC,IAAIlhK,EAAEmhK,WAAWnoJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAAS3mJ,EAAEza,EAAEC,GAAG,IAAI,IAAItK,EAAEytB,EAAE3mB,EAAErD,EAAEw1G,EAAE5uG,EAAEsL,SAAS,CAAC,GAAGtL,EAAEkgK,WAAWF,GAAG,CAAC,GAAG/sC,EAAEjzH,GAAGA,EAAEkgK,WAAWF,IAAI//J,IAAI0gK,EAAE,OAAOC,GAAG,GAAG,IAAI5gK,EAAEkgK,UAAU,KAAK,CAAC,GAAGlgK,EAAE6gK,aAAa,EAAE7gK,EAAEkgK,WAAWK,IAAIvgK,EAAEm/J,SAAS,IAAmB/7I,EAAEwrF,EAAjBnyG,EAAEuD,EAAEm/J,SAAS,MAAavwD,IAAInyG,IAAI2mB,IAAIwrF,IAAInyG,IAAI2mB,IAAIwrF,IAAInyG,GAAI,CAACrD,EAAE4G,EAAEm/J,SAASa,GAAG,UAAS58I,IAAIwrF,IAAInyG,IAAI2mB,IAAIwrF,IAAInyG,IAAI2mB,IAAIwrF,IAAInyG,IAAI2mB,IAAIwrF,IAAInyG,IAAI2mB,IAAIwrF,IAAInyG,IAAI2mB,IAAIwrF,IAAInyG,IAAI2mB,IAAIwrF,IAAInyG,IAAI2mB,IAAIwrF,IAAInyG,IAAIA,EAAErD,GAAG4G,EAAE6gK,aAAab,IAAI5mK,EAAEqD,GAAGuD,EAAE6gK,aAAa7gK,EAAEkgK,YAAYlgK,EAAE6gK,aAAa7gK,EAAEkgK,UAAU,CAAC,GAAGlgK,EAAE6gK,cAAcN,IAAI5qK,EAAEW,EAAEwqK,UAAU9gK,EAAE,EAAEA,EAAE6gK,aAAaN,IAAIvgK,EAAEkgK,WAAWlgK,EAAE6gK,aAAa7gK,EAAEm/J,UAAUn/J,EAAE6gK,aAAa7gK,EAAE6gK,aAAa,IAAIlrK,EAAEW,EAAEwqK,UAAU9gK,EAAE,EAAEA,EAAEsL,OAAOtL,EAAEm/J,WAAWn/J,EAAEkgK,YAAYlgK,EAAEm/J,YAAYxpK,IAAIqjB,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO5gK,EAAEsgK,OAAO,EAAErgK,IAAI+gK,GAAGhoJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,UAAUmG,GAAGC,IAAIlhK,EAAEmhK,WAAWnoJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASp/J,EAAEhC,EAAEC,GAAG,IAAI,IAAItK,IAAI,CAAC,GAAG,IAAIqK,EAAEkgK,YAAYjtC,EAAEjzH,GAAG,IAAIA,EAAEkgK,WAAW,CAAC,GAAGjgK,IAAI0gK,EAAE,OAAOC,GAAG,KAAK,CAAC,GAAG5gK,EAAE6gK,aAAa,EAAElrK,EAAEW,EAAEwqK,UAAU9gK,EAAE,EAAEA,EAAEsL,OAAOtL,EAAEm/J,WAAWn/J,EAAEkgK,YAAYlgK,EAAEm/J,WAAWxpK,IAAIqjB,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO5gK,EAAEsgK,OAAO,EAAErgK,IAAI+gK,GAAGhoJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,UAAUmG,GAAGC,IAAIlhK,EAAEmhK,WAAWnoJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASpiK,EAAEgB,EAAEC,EAAEtK,EAAEytB,EAAE3mB,GAAGrK,KAAKovK,YAAYxhK,EAAE5N,KAAKqvK,SAASxhK,EAAE7N,KAAKsvK,YAAY/rK,EAAEvD,KAAKuvK,UAAUv+I,EAAEhxB,KAAKklJ,KAAK76I,CAAC,CAA6T,SAASmxE,IAAIx7E,KAAKyoK,KAAK,KAAKzoK,KAAKuX,OAAO,EAAEvX,KAAK0sK,YAAY,KAAK1sK,KAAKwvK,iBAAiB,EAAExvK,KAAK2sK,YAAY,EAAE3sK,KAAK6f,QAAQ,EAAE7f,KAAKgtK,KAAK,EAAEhtK,KAAKyvK,OAAO,KAAKzvK,KAAK0vK,QAAQ,EAAE1vK,KAAKkX,OAAOy4J,EAAE3vK,KAAK4vK,YAAY,EAAE5vK,KAAKwtK,OAAO,EAAExtK,KAAK6vK,OAAO,EAAE7vK,KAAK0tK,OAAO,EAAE1tK,KAAKkZ,OAAO,KAAKlZ,KAAKguK,YAAY,EAAEhuK,KAAK2tK,KAAK,KAAK3tK,KAAKiB,KAAK,KAAKjB,KAAKouK,MAAM,EAAEpuK,KAAKiuK,UAAU,EAAEjuK,KAAK8vK,UAAU,EAAE9vK,KAAKsuK,UAAU,EAAEtuK,KAAKquK,WAAW,EAAEruK,KAAK8sK,YAAY,EAAE9sK,KAAKyuK,aAAa,EAAEzuK,KAAKivK,WAAW,EAAEjvK,KAAKmvK,gBAAgB,EAAEnvK,KAAK+sK,SAAS,EAAE/sK,KAAK+tK,YAAY,EAAE/tK,KAAK8tK,UAAU,EAAE9tK,KAAKstK,YAAY,EAAEttK,KAAKqtK,iBAAiB,EAAErtK,KAAK2uK,eAAe,EAAE3uK,KAAK2hK,MAAM,EAAE3hK,KAAKsoK,SAAS,EAAEtoK,KAAK6tK,WAAW,EAAE7tK,KAAKutK,WAAW,EAAEvtK,KAAK+vK,UAAU,IAAIxM,EAAE4H,MAAM,EAAE6E,GAAIhwK,KAAKiwK,UAAU,IAAI1M,EAAE4H,MAAM,GAAG,EAAE+E,EAAG,IAAIlwK,KAAKmwK,QAAQ,IAAI5M,EAAE4H,MAAM,GAAG,EAAEiF,EAAG,IAAIppK,EAAEhH,KAAK+vK,WAAW/oK,EAAEhH,KAAKiwK,WAAWjpK,EAAEhH,KAAKmwK,SAASnwK,KAAKqwK,OAAO,KAAKrwK,KAAKswK,OAAO,KAAKtwK,KAAKuwK,QAAQ,KAAKvwK,KAAKwwK,SAAS,IAAIjN,EAAE4H,MAAMsF,EAAG,GAAGzwK,KAAK0wK,KAAK,IAAInN,EAAE4H,MAAM,EAAEwF,EAAG,GAAG3pK,EAAEhH,KAAK0wK,MAAM1wK,KAAK4wK,SAAS,EAAE5wK,KAAK6wK,SAAS,EAAE7wK,KAAKykF,MAAM,IAAI8+E,EAAE4H,MAAM,EAAEwF,EAAG,GAAG3pK,EAAEhH,KAAKykF,OAAOzkF,KAAK8wK,MAAM,EAAE9wK,KAAK+wK,YAAY,EAAE/wK,KAAK+uK,SAAS,EAAE/uK,KAAKgxK,MAAM,EAAEhxK,KAAKixK,QAAQ,EAAEjxK,KAAKkxK,WAAW,EAAElxK,KAAKwkJ,QAAQ,EAAExkJ,KAAKkuK,OAAO,EAAEluK,KAAKmxK,OAAO,EAAEnxK,KAAKoxK,SAAS,CAAC,CAAC,SAAS99J,EAAE1F,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAEs8C,OAAOt8C,EAAEw/J,SAASx/J,EAAEg/J,UAAU,EAAEh/J,EAAEyjK,UAAUC,GAAEzjK,EAAED,EAAEs8C,OAAQrqC,QAAQ,EAAEhS,EAAE8+J,YAAY,EAAE9+J,EAAEm/J,KAAK,IAAIn/J,EAAEm/J,MAAMn/J,EAAEm/J,MAAMn/J,EAAE0J,OAAO1J,EAAEm/J,KAAKuE,GAAGC,GAAG5jK,EAAEq/J,MAAM,IAAIp/J,EAAEm/J,KAAK,EAAE,EAAEn/J,EAAE+hK,WAAWrB,EAAErqK,EAAEutK,SAAS5jK,GAAG6jK,GAAG1gJ,EAAEpjB,EAAE+jK,EAAE,CAAC,SAAS/8F,EAAEhnE,GAAG,IAAIC,EAAEyF,EAAE1F,GAAG,OAAOC,IAAI6jK,GAAptD,SAAW9jK,GAAGA,EAAEogK,YAAY,EAAEpgK,EAAE4/J,OAAOxmK,EAAE4G,EAAE3M,MAAM2M,EAAE+gK,eAAe7L,EAAEl1J,EAAE+zJ,OAAO0N,SAASzhK,EAAEigK,WAAW/K,EAAEl1J,EAAE+zJ,OAAOyN,YAAYxhK,EAAE2/J,WAAWzK,EAAEl1J,EAAE+zJ,OAAO2N,YAAY1hK,EAAEy/J,iBAAiBvK,EAAEl1J,EAAE+zJ,OAAO4N,UAAU3hK,EAAEm/J,SAAS,EAAEn/J,EAAEk/J,YAAY,EAAEl/J,EAAEkgK,UAAU,EAAElgK,EAAEsgK,OAAO,EAAEtgK,EAAE6gK,aAAa7gK,EAAE0/J,YAAYa,GAAG,EAAEvgK,EAAEuhK,gBAAgB,EAAEvhK,EAAEwgK,MAAM,CAAC,CAA45C9uI,CAAE1xB,EAAEs8C,OAAOr8C,CAAC,CAA6E,SAASusD,EAAExsD,EAAEC,EAAEtK,EAAE8G,EAAErD,EAAEw1G,GAAG,IAAI5uG,EAAE,OAAO+jK,EAAE,IAAI/qJ,EAAE,EAAE,GAAG/Y,IAAI84I,IAAI94I,EAAE,GAAGxD,EAAE,GAAGuc,EAAE,EAAEvc,GAAGA,GAAGA,EAAE,KAAKuc,EAAE,EAAEvc,GAAG,IAAIrD,EAAE,GAAGA,EAAEk8H,GAAG3/H,IAAIosK,GAAGtlK,EAAE,GAAGA,EAAE,IAAIwD,EAAE,GAAGA,EAAE,GAAG2uG,EAAE,GAAGA,EAAEo1D,EAAE,OAAO5gJ,EAAEpjB,EAAE+jK,GAAG,IAAItnK,IAAIA,EAAE,GAAG,IAAIkJ,EAAE,IAAIioE,EAAE,OAAO5tE,EAAEs8C,MAAM32C,EAAEA,EAAEk1J,KAAK76J,EAAE2F,EAAEy5J,KAAKpmJ,EAAErT,EAAEk8J,OAAO,KAAKl8J,EAAEs8J,OAAOxlK,EAAEkJ,EAAEi6J,OAAO,GAAGj6J,EAAEs8J,OAAOt8J,EAAEm6J,OAAOn6J,EAAEi6J,OAAO,EAAEj6J,EAAEu8J,UAAU9oK,EAAE,EAAEuM,EAAE06J,UAAU,GAAG16J,EAAEu8J,UAAUv8J,EAAE+6J,UAAU/6J,EAAE06J,UAAU,EAAE16J,EAAE86J,eAAe96J,EAAEu8J,UAAU3B,GAAG,GAAGA,IAAI56J,EAAE2F,OAAO,IAAIqqJ,EAAE8F,KAAK,EAAE91J,EAAEi6J,QAAQj6J,EAAEtS,KAAK,IAAIsiK,EAAE4H,MAAM53J,EAAE06J,WAAW16J,EAAEo6J,KAAK,IAAIpK,EAAE4H,MAAM53J,EAAEi6J,QAAQj6J,EAAEw9J,YAAY,GAAG/pK,EAAE,EAAEuM,EAAEi8J,iBAAiB,EAAEj8J,EAAEw9J,YAAYx9J,EAAEm5J,YAAY,IAAInJ,EAAE8F,KAAK91J,EAAEi8J,kBAAkBj8J,EAAEy9J,MAAM,EAAEz9J,EAAEw9J,YAAYx9J,EAAEu9J,MAAM,EAAEv9J,EAAEw9J,YAAYx9J,EAAEouJ,MAAM9zJ,EAAE0F,EAAE+0J,SAAS9rD,EAAEjpG,EAAE2D,OAAO3T,EAAEqxE,EAAEhnE,EAAE,CAAy6I,IAAIk1J,EAAES,EAAE31J,EAAE,mBAAmB1J,EAAE0J,EAAE,WAAWs/J,EAAEt/J,EAAE,aAAau/J,EAAEv/J,EAAE,WAAW6+J,EAAE7+J,EAAE,cAAc2gK,EAAE,EAAEsD,EAAE,EAAE9xK,EAAE,EAAE6uK,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,GAAG,EAAEK,GAAG,EAAEC,GAAG,EAAEtrB,GAAG,EAAEuoB,EAAE,EAAExiI,EAAE,EAAEwlI,EAAE,EAAEN,EAAE,EAAEO,EAAE,EAAEb,EAAE,EAAE3B,EAAE,EAAEzsC,EAAE,EAAEkvC,EAAG,GAAGC,EAAG,EAAe1B,EAAG2B,IAAQpC,EAAG,GAAGE,EAAG,GAAGJ,EAAG,EAAEW,EAAG,EAAEF,EAAG,GAAGtC,GAAG,EAAEP,GAAG,IAAIH,GAAGG,GAAGO,GAAG,EAAEoE,GAAG,GAAGhB,GAAG,GAAGiB,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,IAAInB,GAAG,IAAIoB,GAAG,IAAIpE,GAAG,EAAEQ,GAAG,EAAEH,GAAG,EAAEC,GAAG,EAAE+D,GAAG,EAAE/P,EAAE,CAAC,IAAIl2J,EAAE,EAAE,EAAE,EAAE,GAAl/W,SAAWgB,EAAEC,GAAG,IAAItK,EAAE,MAAM,IAAIA,EAAEqK,EAAE4hK,iBAAiB,IAAIjsK,EAAEqK,EAAE4hK,iBAAiB,KAAK,CAAC,GAAG5hK,EAAEkgK,WAAW,EAAE,CAAC,GAAGjtC,EAAEjzH,GAAG,IAAIA,EAAEkgK,WAAWjgK,IAAI0gK,EAAE,OAAOC,GAAG,GAAG,IAAI5gK,EAAEkgK,UAAU,KAAK,CAAClgK,EAAEm/J,UAAUn/J,EAAEkgK,UAAUlgK,EAAEkgK,UAAU,EAAE,IAAI98I,EAAEpjB,EAAEk/J,YAAYvpK,EAAE,IAAI,IAAIqK,EAAEm/J,UAAUn/J,EAAEm/J,UAAU/7I,KAAKpjB,EAAEkgK,UAAUlgK,EAAEm/J,SAAS/7I,EAAEpjB,EAAEm/J,SAAS/7I,EAAEpK,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW,OAAO8F,GAAG,GAAG5gK,EAAEm/J,SAASn/J,EAAEk/J,aAAal/J,EAAE4/J,OAAOC,KAAK7mJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO5gK,EAAEsgK,OAAO,EAAErgK,IAAI+gK,GAAGhoJ,EAAEhZ,GAAE,GAAI,IAAIA,EAAE66J,KAAKC,UAAUmG,GAAGC,KAAIlhK,EAAEm/J,SAASn/J,EAAEk/J,cAAclmJ,EAAEhZ,GAAE,GAAQA,EAAE66J,KAAKC,WAAW8F,GAAK,IAAi9V,IAAI5hK,EAAE,EAAE,EAAE,EAAE,EAAEuZ,GAAG,IAAIvZ,EAAE,EAAE,EAAE,GAAG,EAAEuZ,GAAG,IAAIvZ,EAAE,EAAE,EAAE,GAAG,GAAGuZ,GAAG,IAAIvZ,EAAE,EAAE,EAAE,GAAG,GAAGoV,GAAG,IAAIpV,EAAE,EAAE,GAAG,GAAG,GAAGoV,GAAG,IAAIpV,EAAE,EAAE,GAAG,IAAI,IAAIoV,GAAG,IAAIpV,EAAE,EAAE,GAAG,IAAI,IAAIoV,GAAG,IAAIpV,EAAE,GAAG,IAAI,IAAI,KAAKoV,GAAG,IAAIpV,EAAE,GAAG,IAAI,IAAI,KAAKoV,IAAIze,EAAEuvK,YAA18J,SAAWllK,EAAEC,GAAG,OAAOusD,EAAExsD,EAAEC,EAAE8hK,EAAEyC,EAAGC,EAAGF,EAAE,EAAi7J5uK,EAAEolK,aAAavuG,EAAE72D,EAAEwvK,aAAan+F,EAAErxE,EAAEyvK,iBAAiB1/J,EAAE/P,EAAEqlK,iBAA7vL,SAAWh7J,EAAEC,GAAG,OAAOD,GAAGA,EAAEs8C,MAAM,IAAIt8C,EAAEs8C,MAAM8iH,KAAK2E,GAAG/jK,EAAEs8C,MAAMulH,OAAO5hK,EAAE6jK,GAAGC,CAAC,EAAqsLpuK,EAAEgmK,QAA9/J,SAAW37J,EAAEC,GAAG,IAAItK,EAAEqjB,EAAErS,EAAEC,EAAE,IAAI5G,IAAIA,EAAEs8C,OAAOr8C,EAAEikK,GAAGjkK,EAAE,EAAE,OAAOD,EAAEojB,EAAEpjB,EAAE+jK,GAAGA,EAAE,GAAG/qJ,EAAEhZ,EAAEs8C,OAAOt8C,EAAEw7J,SAASx7J,EAAEq7J,OAAO,IAAIr7J,EAAEu7J,UAAUviJ,EAAErP,SAASq7J,IAAI/kK,IAAI+gK,EAAE,OAAO59I,EAAEpjB,EAAE,IAAIA,EAAE86J,UAAUuJ,EAAEN,GAAG,GAAG/qJ,EAAE6hJ,KAAK76J,EAAErK,EAAEqjB,EAAEgpJ,WAAWhpJ,EAAEgpJ,WAAW/hK,EAAE+Y,EAAErP,SAASg6J,GAAG,GAAG,IAAI3qJ,EAAEomJ,KAAKp/J,EAAEq/J,MAAM,EAAE15J,EAAEqT,EAAE,IAAIrT,EAAEqT,EAAE,KAAKrT,EAAEqT,EAAE,GAAGA,EAAE6oJ,QAAQl8J,EAAEqT,GAAGA,EAAE6oJ,OAAOphK,KAAK,EAAE,IAAIuY,EAAE6oJ,OAAOwD,KAAK,EAAE,IAAIrsJ,EAAE6oJ,OAAOyD,MAAM,EAAE,IAAItsJ,EAAE6oJ,OAAOtoK,KAAK,EAAE,IAAIyf,EAAE6oJ,OAAOxkD,QAAQ,GAAG,IAAI13G,EAAEqT,EAAE,IAAIA,EAAE6oJ,OAAO0D,MAAM5/J,EAAEqT,EAAEA,EAAE6oJ,OAAO0D,MAAM,EAAE,KAAK5/J,EAAEqT,EAAEA,EAAE6oJ,OAAO0D,MAAM,GAAG,KAAK5/J,EAAEqT,EAAEA,EAAE6oJ,OAAO0D,MAAM,GAAG,KAAK5/J,EAAEqT,EAAE,IAAIA,EAAE+6I,MAAM,EAAE/6I,EAAE0hJ,UAAU57H,GAAG9lB,EAAE+6I,MAAM,EAAE,EAAE,GAAGpuJ,EAAEqT,EAAE,IAAIA,EAAE6oJ,OAAO2D,IAAIxsJ,EAAE6oJ,OAAOyD,OAAOtsJ,EAAE6oJ,OAAOyD,MAAM/sK,SAASoN,EAAEqT,EAAE,IAAIA,EAAE6oJ,OAAOyD,MAAM/sK,QAAQoN,EAAEqT,EAAEA,EAAE6oJ,OAAOyD,MAAM/sK,QAAQ,EAAE,MAAMygB,EAAE6oJ,OAAOwD,OAAOrlK,EAAEq/J,MAAME,EAAEv/J,EAAEq/J,MAAMrmJ,EAAE8lJ,YAAY9lJ,EAAE/G,QAAQ,IAAI+G,EAAE8oJ,QAAQ,EAAE9oJ,EAAErP,OAAOi7J,KAAKj/J,EAAEqT,EAAE,GAAGrT,EAAEqT,EAAE,GAAGrT,EAAEqT,EAAE,GAAGrT,EAAEqT,EAAE,GAAGrT,EAAEqT,EAAE,GAAGrT,EAAEqT,EAAE,IAAIA,EAAE+6I,MAAM,EAAE/6I,EAAE0hJ,UAAU57H,GAAG9lB,EAAE+6I,MAAM,EAAE,EAAE,GAAGpuJ,EAAEqT,EAAEisJ,IAAIjsJ,EAAErP,OAAOi6J,QAAQ,CAAC,IAAI3wC,EAAE8uC,GAAG/oJ,EAAEipJ,OAAO,GAAG,IAAI,EAAgEhvC,IAAvDj6G,EAAE0hJ,UAAU57H,GAAG9lB,EAAE+6I,MAAM,EAAE,EAAE/6I,EAAE+6I,MAAM,EAAE,EAAE,IAAI/6I,EAAE+6I,MAAM,EAAE,IAAQ,EAAE,IAAI/6I,EAAEmmJ,WAAWlsC,GAAG0xC,IAAI1xC,GAAG,GAAGA,EAAE,GAAGj6G,EAAErP,OAAOi6J,GAAGztI,EAAEnd,EAAEi6G,GAAG,IAAIj6G,EAAEmmJ,WAAWhpI,EAAEnd,EAAEhZ,EAAEq/J,QAAQ,IAAIlpI,EAAEnd,EAAE,MAAMhZ,EAAEq/J,QAAQr/J,EAAEq/J,MAAM,CAAC,CAAC,GAAGrmJ,EAAErP,SAASi7J,GAAG,GAAG5rJ,EAAE6oJ,OAAOyD,MAAM,CAAC,IAAI3+J,EAAEqS,EAAE/G,QAAQ+G,EAAE8oJ,SAAS,MAAM9oJ,EAAE6oJ,OAAOyD,MAAM/sK,UAAUygB,EAAE/G,UAAU+G,EAAE4oJ,mBAAmB5oJ,EAAE6oJ,OAAOwD,MAAMrsJ,EAAE/G,QAAQtL,IAAI3G,EAAEq/J,MAAME,EAAEv/J,EAAEq/J,MAAMrmJ,EAAE8lJ,YAAY9lJ,EAAE/G,QAAQtL,EAAEA,IAAIioG,EAAE5uG,GAAG2G,EAAEqS,EAAE/G,QAAQ+G,EAAE/G,UAAU+G,EAAE4oJ,oBAAoBj8J,EAAEqT,EAAE,IAAIA,EAAE6oJ,OAAOyD,MAAMtsJ,EAAE8oJ,UAAU9oJ,EAAE8oJ,UAAU9oJ,EAAE6oJ,OAAOwD,MAAMrsJ,EAAE/G,QAAQtL,IAAI3G,EAAEq/J,MAAME,EAAEv/J,EAAEq/J,MAAMrmJ,EAAE8lJ,YAAY9lJ,EAAE/G,QAAQtL,EAAEA,IAAIqS,EAAE8oJ,UAAU9oJ,EAAE6oJ,OAAOyD,MAAM/sK,SAASygB,EAAE8oJ,QAAQ,EAAE9oJ,EAAErP,OAAOk7J,GAAG,MAAM7rJ,EAAErP,OAAOk7J,GAAG,GAAG7rJ,EAAErP,SAASk7J,GAAG,GAAG7rJ,EAAE6oJ,OAAOtoK,KAAK,CAACoN,EAAEqS,EAAE/G,QAAQ,EAAE,CAAC,GAAG+G,EAAE/G,UAAU+G,EAAE4oJ,mBAAmB5oJ,EAAE6oJ,OAAOwD,MAAMrsJ,EAAE/G,QAAQtL,IAAI3G,EAAEq/J,MAAME,EAAEv/J,EAAEq/J,MAAMrmJ,EAAE8lJ,YAAY9lJ,EAAE/G,QAAQtL,EAAEA,IAAIioG,EAAE5uG,GAAG2G,EAAEqS,EAAE/G,QAAQ+G,EAAE/G,UAAU+G,EAAE4oJ,kBAAkB,CAACh7J,EAAE,EAAE,KAAK,CAACA,EAAEoS,EAAE8oJ,QAAQ9oJ,EAAE6oJ,OAAOtoK,KAAKhB,OAAO,IAAIygB,EAAE6oJ,OAAOtoK,KAAK6sJ,WAAWptI,EAAE8oJ,WAAW,EAAEn8J,EAAEqT,EAAEpS,EAAE,OAAO,IAAIA,GAAGoS,EAAE6oJ,OAAOwD,MAAMrsJ,EAAE/G,QAAQtL,IAAI3G,EAAEq/J,MAAME,EAAEv/J,EAAEq/J,MAAMrmJ,EAAE8lJ,YAAY9lJ,EAAE/G,QAAQtL,EAAEA,IAAI,IAAIC,IAAIoS,EAAE8oJ,QAAQ,EAAE9oJ,EAAErP,OAAOm7J,GAAG,MAAM9rJ,EAAErP,OAAOm7J,GAAG,GAAG9rJ,EAAErP,SAASm7J,GAAG,GAAG9rJ,EAAE6oJ,OAAOxkD,QAAQ,CAAC12G,EAAEqS,EAAE/G,QAAQ,EAAE,CAAC,GAAG+G,EAAE/G,UAAU+G,EAAE4oJ,mBAAmB5oJ,EAAE6oJ,OAAOwD,MAAMrsJ,EAAE/G,QAAQtL,IAAI3G,EAAEq/J,MAAME,EAAEv/J,EAAEq/J,MAAMrmJ,EAAE8lJ,YAAY9lJ,EAAE/G,QAAQtL,EAAEA,IAAIioG,EAAE5uG,GAAG2G,EAAEqS,EAAE/G,QAAQ+G,EAAE/G,UAAU+G,EAAE4oJ,kBAAkB,CAACh7J,EAAE,EAAE,KAAK,CAACA,EAAEoS,EAAE8oJ,QAAQ9oJ,EAAE6oJ,OAAOxkD,QAAQ9kH,OAAO,IAAIygB,EAAE6oJ,OAAOxkD,QAAQ+oC,WAAWptI,EAAE8oJ,WAAW,EAAEn8J,EAAEqT,EAAEpS,EAAE,OAAO,IAAIA,GAAGoS,EAAE6oJ,OAAOwD,MAAMrsJ,EAAE/G,QAAQtL,IAAI3G,EAAEq/J,MAAME,EAAEv/J,EAAEq/J,MAAMrmJ,EAAE8lJ,YAAY9lJ,EAAE/G,QAAQtL,EAAEA,IAAI,IAAIC,IAAIoS,EAAErP,OAAOo7J,GAAG,MAAM/rJ,EAAErP,OAAOo7J,GAAG,GAAG/rJ,EAAErP,SAASo7J,KAAK/rJ,EAAE6oJ,OAAOwD,MAAMrsJ,EAAE/G,QAAQ,EAAE+G,EAAE4oJ,kBAAkBhzD,EAAE5uG,GAAGgZ,EAAE/G,QAAQ,GAAG+G,EAAE4oJ,mBAAmBj8J,EAAEqT,EAAE,IAAIhZ,EAAEq/J,OAAO15J,EAAEqT,EAAEhZ,EAAEq/J,OAAO,EAAE,KAAKr/J,EAAEq/J,MAAM,EAAErmJ,EAAErP,OAAOi6J,KAAK5qJ,EAAErP,OAAOi6J,IAAI,IAAI5qJ,EAAE/G,SAAS,GAAG28F,EAAE5uG,GAAG,IAAIA,EAAE86J,UAAU,OAAO9hJ,EAAEgpJ,YAAY,EAAE8B,OAAO,GAAG,IAAI9jK,EAAEu7J,UAAU9+J,EAAEwD,IAAIxD,EAAE9G,IAAIsK,IAAI+gK,EAAE,OAAO59I,EAAEpjB,EAAEqkK,GAAG,GAAGrrJ,EAAErP,SAASq7J,IAAI,IAAIhlK,EAAEu7J,SAAS,OAAOn4I,EAAEpjB,EAAEqkK,GAAG,GAAG,IAAIrkK,EAAEu7J,UAAU,IAAIviJ,EAAEknJ,WAAWjgK,IAAI0gK,GAAG3nJ,EAAErP,SAASq7J,GAAG,CAAC,IAAIzsJ,EAAES,EAAE0hJ,WAAW57H,EAAE98B,EAAEgX,EAAE/Y,GAAG+Y,EAAE0hJ,WAAW4J,EAAE7pJ,EAAEzB,EAAE/Y,GAAGi1J,EAAEl8I,EAAE+6I,OAAOzc,KAAKt+H,EAAE/Y,GAAG,GAAGsY,IAAI0oJ,IAAI1oJ,IAAI2oJ,KAAKloJ,EAAErP,OAAOq7J,IAAIzsJ,IAAIqoJ,IAAIroJ,IAAI0oJ,GAAG,OAAO,IAAIjhK,EAAE86J,YAAY9hJ,EAAEgpJ,YAAY,GAAG8B,EAAE,GAAGvrJ,IAAI6oJ,KAAKnhK,IAAIgkK,EAAE3tK,EAAEmvK,UAAUzsJ,GAAG/Y,IAAIikK,IAAI5tK,EAAEovK,iBAAiB1sJ,EAAE,EAAE,GAAE,GAAI/Y,IAAI9N,IAAIiH,EAAE4f,EAAE3lB,MAAM,IAAI2lB,EAAEknJ,YAAYlnJ,EAAEmmJ,SAAS,EAAEnmJ,EAAEkmJ,YAAY,EAAElmJ,EAAEsnJ,OAAO,KAAK1xD,EAAE5uG,GAAG,IAAIA,EAAE86J,WAAW,OAAO9hJ,EAAEgpJ,YAAY,EAAE8B,CAAC,CAAC,OAAO7jK,IAAI+gK,EAAE8C,EAAE9qJ,EAAEomJ,MAAM,EAAE+E,GAAG,IAAInrJ,EAAEomJ,MAAMz5J,EAAEqT,EAAE,IAAIhZ,EAAEq/J,OAAO15J,EAAEqT,EAAEhZ,EAAEq/J,OAAO,EAAE,KAAK15J,EAAEqT,EAAEhZ,EAAEq/J,OAAO,GAAG,KAAK15J,EAAEqT,EAAEhZ,EAAEq/J,OAAO,GAAG,KAAK15J,EAAEqT,EAAE,IAAIhZ,EAAEw/J,UAAU75J,EAAEqT,EAAEhZ,EAAEw/J,UAAU,EAAE,KAAK75J,EAAEqT,EAAEhZ,EAAEw/J,UAAU,GAAG,KAAK75J,EAAEqT,EAAEhZ,EAAEw/J,UAAU,GAAG,OAAOrpI,EAAEnd,EAAEhZ,EAAEq/J,QAAQ,IAAIlpI,EAAEnd,EAAE,MAAMhZ,EAAEq/J,QAAQzwD,EAAE5uG,GAAGgZ,EAAEomJ,KAAK,IAAIpmJ,EAAEomJ,MAAMpmJ,EAAEomJ,MAAM,IAAIpmJ,EAAE/G,QAAQ6xJ,EAAEK,EAAE,EAA2lDxuK,EAAEqmK,WAA5lD,SAAWh8J,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAEs8C,OAAOr8C,EAAED,EAAEs8C,MAAM3yC,UAAWg6J,IAAI1jK,IAAI2kK,IAAI3kK,IAAI4kK,IAAI5kK,IAAI6kK,IAAI7kK,IAAI8kK,IAAI9kK,IAAI2jK,IAAI3jK,IAAI+kK,GAAG5hJ,EAAEpjB,EAAE+jK,IAAI/jK,EAAEs8C,MAAM,KAAKr8C,IAAI2jK,GAAGxgJ,EAAEpjB,EAAEokK,GAAGN,GAAIC,CAAC,EAAk9CpuK,EAAEwlK,qBAAn9C,SAAWn7J,EAAEC,GAAG,IAAItK,EAAEytB,EAAE3mB,EAAEmyG,EAAE51F,EAAErT,EAAEwwB,EAAExvB,EAAEC,EAAE3G,EAAE1H,OAAO,IAAIyH,IAAIA,EAAEs8C,MAAM,OAAOynH,EAAE,GAAsB,KAATn1D,GAAVj5G,EAAEqK,EAAEs8C,OAAU8iH,OAAY,IAAIxwD,GAAGj5G,EAAEgU,SAASg6J,IAAIhuK,EAAEuqK,UAAU,OAAO6D,EAAE,IAAI,IAAIn1D,IAAI5uG,EAAEq/J,MAAMC,EAAEt/J,EAAEq/J,MAAMp/J,EAAE2G,EAAE,IAAIjR,EAAEypK,KAAK,EAAEx4J,GAAGjR,EAAEiqK,SAAS,IAAIhxD,IAAIx1G,EAAEzD,EAAEtC,MAAMsC,EAAEwpK,SAAS,EAAExpK,EAAEupK,YAAY,EAAEvpK,EAAE2qK,OAAO,GAAG35J,EAAE,IAAIgvJ,EAAE8F,KAAK9lK,EAAEiqK,QAAQjK,EAAEsH,SAASt2J,EAAE1G,EAAE2G,EAAEjR,EAAEiqK,OAAOjqK,EAAEiqK,OAAO,GAAG3/J,EAAE0G,EAAEC,EAAEjR,EAAEiqK,QAAQ5mJ,EAAEhZ,EAAEu7J,SAAS51J,EAAE3F,EAAEs7J,QAAQnlI,EAAEn2B,EAAEq7J,MAAMr7J,EAAEu7J,SAAS30J,EAAE5G,EAAEs7J,QAAQ,EAAEt7J,EAAEq7J,MAAMp7J,EAAEgzH,EAAEt9H,GAAGA,EAAEuqK,WAAWK,IAAI,CAACn9I,EAAEztB,EAAEwpK,SAAS1iK,EAAE9G,EAAEuqK,WAAWK,GAAG,GAAG,GAAG5qK,EAAE6qK,OAAO7qK,EAAE6qK,OAAO7qK,EAAE8qK,WAAW9qK,EAAE2V,OAAO8X,EAAEm9I,GAAG,IAAI5qK,EAAE+qK,UAAU/qK,EAAEoqK,KAAK38I,EAAEztB,EAAEmqK,QAAQnqK,EAAEtC,KAAKsC,EAAE6qK,OAAO7qK,EAAEtC,KAAKsC,EAAE6qK,OAAOp9I,EAAEA,YAAY3mB,GAAG9G,EAAEwpK,SAAS/7I,EAAEztB,EAAEuqK,UAAUK,GAAG,EAAEttC,EAAEt9H,EAAE,CAAC,OAAOA,EAAEwpK,UAAUxpK,EAAEuqK,UAAUvqK,EAAEupK,YAAYvpK,EAAEwpK,SAASxpK,EAAE2qK,OAAO3qK,EAAEuqK,UAAUvqK,EAAEuqK,UAAU,EAAEvqK,EAAEkrK,aAAalrK,EAAE+pK,YAAYa,GAAG,EAAE5qK,EAAE4rK,gBAAgB,EAAEvhK,EAAEs7J,QAAQ31J,EAAE3F,EAAEq7J,MAAMllI,EAAEn2B,EAAEu7J,SAASviJ,EAAErjB,EAAEypK,KAAKxwD,EAAEk1D,CAAC,EAAirBnuK,EAAEgwK,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,UAAU,KAAK,GAAG,CAAC,SAAS3lK,EAAEC,EAAEtK,GAAG,aAAiKsK,EAAEnO,QAAtJ,WAAaM,KAAKqO,KAAK,EAAErO,KAAKmzK,KAAK,EAAEnzK,KAAKwzK,OAAO,EAAExzK,KAAKozK,GAAG,EAAEpzK,KAAKkzK,MAAM,KAAKlzK,KAAKyzK,UAAU,EAAEzzK,KAAKmH,KAAK,GAAGnH,KAAKirH,QAAQ,GAAGjrH,KAAKizK,KAAK,EAAEjzK,KAAK2yI,MAAK,CAAE,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS/kI,EAAEC,EAAEtK,GAAG,aAA2BsK,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,IAAItK,EAAEyD,EAAEw1G,EAAE51F,EAAErT,EAAEwwB,EAAExvB,EAAEC,EAAEqsH,EAAEj+E,EAAEz8B,EAAEnE,EAAEqG,EAAEzY,EAAEhD,EAAE0yB,EAAEk8C,EAAEloE,EAAEshE,EAAE1nE,EAAEktD,EAAEipG,EAAEG,EAAEC,EAAEH,EAAE//J,EAAEqK,EAAEs8C,MAAMljD,EAAE4G,EAAEs7J,QAAQzF,EAAE71J,EAAEq7J,MAAMzsD,EAAEx1G,GAAG4G,EAAEu7J,SAAS,GAAGviJ,EAAEhZ,EAAE07J,SAAShG,EAAE11J,EAAEw7J,OAAO71J,EAAEqT,GAAG/Y,EAAED,EAAE86J,WAAW3kI,EAAEnd,GAAGhZ,EAAE86J,UAAU,KAAKn0J,EAAEhR,EAAEmwK,KAAKl/J,EAAEjR,EAAEowK,MAAM9yC,EAAEt9H,EAAEqwK,MAAMhxH,EAAEr/C,EAAEswK,MAAM1tJ,EAAE5iB,EAAE2V,OAAO8I,EAAEze,EAAEuwK,KAAKzrJ,EAAE9kB,EAAEwwK,KAAKnkK,EAAErM,EAAEywK,QAAQpnK,EAAErJ,EAAE0wK,SAAS30I,GAAG,GAAG/7B,EAAE2wK,SAAS,EAAE14F,GAAG,GAAGj4E,EAAE4wK,UAAU,EAAEvmK,EAAE,EAAE,CAACya,EAAE,KAAKrG,GAAGyhJ,EAAEz8J,MAAMqhB,EAAEA,GAAG,EAAErG,GAAGyhJ,EAAEz8J,MAAMqhB,EAAEA,GAAG,GAAG/U,EAAE1D,EAAEoS,EAAEsd,GAAGzxB,EAAE,OAAO,CAAC,GAAYmU,KAAT4yD,EAAEthE,IAAI,GAAU+U,GAAGusD,EAAe,IAAbA,EAAEthE,IAAI,GAAG,KAAUgwJ,EAAE18I,KAAK,MAAMtT,MAAM,CAAC,KAAK,GAAGshE,GAAG,CAAC,GAAG,IAAK,GAAGA,GAAG,CAACthE,EAAE1D,GAAG,MAAM0D,IAAI0O,GAAG,GAAG4yD,GAAG,IAAI,SAAS/mE,CAAC,CAAC,GAAG,GAAG+mE,EAAE,CAACrxE,EAAE02E,KAA1hB,GAAiiB,MAAMrsE,CAAC,CAACA,EAAEqR,IAAI,8BAA8B1b,EAAE02E,KAAplB,GAA2lB,MAAMrsE,CAAC,CAACV,EAAE,MAAMoG,GAAEshE,GAAG,MAAOvsD,EAAEusD,IAAI5yD,GAAGyhJ,EAAEz8J,MAAMqhB,EAAEA,GAAG,GAAGnb,GAAG8U,GAAG,GAAG4yD,GAAG,EAAE5yD,KAAK4yD,EAAEvsD,GAAGusD,GAAGvsD,EAAE,KAAKrG,GAAGyhJ,EAAEz8J,MAAMqhB,EAAEA,GAAG,EAAErG,GAAGyhJ,EAAEz8J,MAAMqhB,EAAEA,GAAG,GAAG/U,EAAE1G,EAAEoV,EAAEw5D,GAAGj4E,EAAE,OAAO,CAAC,GAAYye,KAAT4yD,EAAEthE,IAAI,GAAU+U,GAAGusD,IAAiB,IAAfA,EAAEthE,IAAI,GAAG,MAAY,CAAC,GAAG,IAAK,GAAGshE,GAAG,CAACthE,EAAE1G,GAAG,MAAM0G,IAAI0O,GAAG,GAAG4yD,GAAG,IAAI,SAASrxE,CAAC,CAACqK,EAAEqR,IAAI,wBAAwB1b,EAAE02E,KAA92B,GAAq3B,MAAMrsE,CAAC,CAAC,GAAGwsD,EAAE,MAAM9mD,EAAQ+U,GAANusD,GAAG,MAAS5yD,GAAGyhJ,EAAEz8J,MAAMqhB,GAAEA,GAAG,GAAIusD,IAAI5yD,GAAGyhJ,EAAEz8J,MAAMqhB,EAAEA,GAAG,KAAI+xC,GAAGp4C,GAAG,GAAG4yD,GAAG,GAAIrgE,EAAE,CAAC3G,EAAEqR,IAAI,gCAAgC1b,EAAE02E,KAA7/B,GAAogC,MAAMrsE,CAAC,CAAC,GAAGoU,KAAK4yD,EAAEvsD,GAAGusD,EAAQxa,GAANwa,EAAEhuD,EAAErT,GAAM,CAAC,IAAGqhE,EAAExa,EAAEwa,GAAIisD,GAAGt9H,EAAE6wK,KAAK,CAACxmK,EAAEqR,IAAI,gCAAgC1b,EAAE02E,KAApmC,GAA2mC,MAAMrsE,CAAC,CAAC,GAAGy1J,EAAE,EAAEG,EAAEr9I,EAAE,IAAIy8B,GAAG,GAAGygH,GAAG7uJ,EAAEogE,EAAEA,EAAE1nE,EAAE,CAACA,GAAG0nE,EAAE,GAAG0uF,EAAE18I,KAAKT,EAAEk9I,aAAazuF,GAAGyuF,EAAEz8I,EAAEwzC,EAAEopG,EAAEF,CAAC,OAAO,GAAG1gH,EAAEgyB,GAAG,GAAGyuF,GAAG7uJ,EAAEouC,EAAEgyB,GAAEA,GAAGhyB,GAAI11C,EAAE,CAACA,GAAG0nE,EAAE,GAAG0uF,EAAE18I,KAAKT,EAAEk9I,aAAazuF,GAAG,GAAGyuF,EAAE,EAAEzgH,EAAE11C,EAAE,CAAKA,GAAJ0nE,EAAEhyB,EAAO,GAAG0gH,EAAE18I,KAAKT,EAAEk9I,aAAazuF,GAAGyuF,EAAEz8I,EAAEwzC,EAAEopG,EAAEF,CAAC,CAAC,OAAO,GAAGD,GAAGzgH,EAAEgyB,EAAEA,EAAE1nE,EAAE,CAACA,GAAG0nE,EAAE,GAAG0uF,EAAE18I,KAAKT,EAAEk9I,aAAazuF,GAAGyuF,EAAEz8I,EAAEwzC,EAAEopG,EAAEF,CAAC,CAAC,KAAKp2J,EAAE,GAAGo2J,EAAE18I,KAAK48I,EAAEH,KAAKC,EAAE18I,KAAK48I,EAAEH,KAAKC,EAAE18I,KAAK48I,EAAEH,KAAKn2J,GAAG,EAAEA,IAAIo2J,EAAE18I,KAAK48I,EAAEH,KAAKn2J,EAAE,IAAIo2J,EAAE18I,KAAK48I,EAAEH,MAAM,KAAK,CAACA,EAAEz8I,EAAEwzC,EAAE,GAAGkpG,EAAE18I,KAAK08I,EAAED,KAAKC,EAAE18I,KAAK08I,EAAED,KAAKC,EAAE18I,KAAK08I,EAAED,KAAKn2J,GAAG,QAAQA,EAAE,GAAGA,IAAIo2J,EAAE18I,KAAK08I,EAAED,KAAKn2J,EAAE,IAAIo2J,EAAE18I,KAAK08I,EAAED,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAOr8J,EAAEw1G,GAAG51F,EAAEmd,GAAU/8B,GAAPkG,EAAEmb,GAAG,EAAerG,IAAI,IAAZqG,GAAGnb,GAAG,IAAY,EAAEU,EAAEs7J,QAAQliK,EAAE4G,EAAE07J,SAAS1iJ,EAAEhZ,EAAEu7J,SAASniK,EAAEw1G,EAAKA,EAAEx1G,EAAL,EAAQ,GAAGA,EAAEw1G,GAAG5uG,EAAE86J,UAAU9hJ,EAAEmd,EAAOA,EAAEnd,EAAP,IAAU,KAAKA,EAAEmd,GAAGxgC,EAAEuwK,KAAK9xJ,EAAEze,EAAEwwK,KAAK1rJ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASza,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,GAAG,OAAOA,IAAI,GAAG,MAAMA,IAAI,EAAE,SAAS,MAAMA,IAAI,KAAK,IAAIA,IAAI,GAAG,CAAC,SAASvD,IAAIrK,KAAKi6E,KAAK,EAAEj6E,KAAKirJ,MAAK,EAAGjrJ,KAAKgtK,KAAK,EAAEhtK,KAAKq0K,UAAS,EAAGr0K,KAAKs0K,MAAM,EAAEt0K,KAAK0zK,KAAK,EAAE1zK,KAAKu0K,MAAM,EAAEv0K,KAAKonH,MAAM,EAAEpnH,KAAKiB,KAAK,KAAKjB,KAAKw0K,MAAM,EAAEx0K,KAAK2zK,MAAM,EAAE3zK,KAAK4zK,MAAM,EAAE5zK,KAAK6zK,MAAM,EAAE7zK,KAAKkZ,OAAO,KAAKlZ,KAAK8zK,KAAK,EAAE9zK,KAAK+zK,KAAK,EAAE/zK,KAAKmG,OAAO,EAAEnG,KAAK68I,OAAO,EAAE78I,KAAKkzK,MAAM,EAAElzK,KAAKg0K,QAAQ,KAAKh0K,KAAKi0K,SAAS,KAAKj0K,KAAKk0K,QAAQ,EAAEl0K,KAAKm0K,SAAS,EAAEn0K,KAAKy0K,MAAM,EAAEz0K,KAAK00K,KAAK,EAAE10K,KAAK20K,MAAM,EAAE30K,KAAK40K,KAAK,EAAE50K,KAAK6rB,KAAK,KAAK7rB,KAAK60K,KAAK,IAAIjoK,EAAEu+J,MAAM,KAAKnrK,KAAK80K,KAAK,IAAIloK,EAAEu+J,MAAM,KAAKnrK,KAAK+0K,OAAO,KAAK/0K,KAAKg1K,QAAQ,KAAKh1K,KAAKo0K,KAAK,EAAEp0K,KAAKi1K,KAAK,EAAEj1K,KAAKk1K,IAAI,CAAC,CAAC,SAASluK,EAAE4G,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAEs8C,OAAOr8C,EAAED,EAAEs8C,MAAMt8C,EAAEw/J,SAASx/J,EAAEg/J,UAAU/+J,EAAEu5G,MAAM,EAAEx5G,EAAEqR,IAAI,GAAGpR,EAAEm/J,OAAOp/J,EAAEq/J,MAAM,EAAEp/J,EAAEm/J,MAAMn/J,EAAEosE,KAAKl6E,EAAE8N,EAAEo9I,KAAK,EAAEp9I,EAAEwmK,SAAS,EAAExmK,EAAE6lK,KAAK,MAAM7lK,EAAE5M,KAAK,KAAK4M,EAAEimK,KAAK,EAAEjmK,EAAEkmK,KAAK,EAAElmK,EAAEmmK,QAAQnmK,EAAEknK,OAAO,IAAInoK,EAAEw+J,MAAMqH,IAAI5kK,EAAEomK,SAASpmK,EAAEmnK,QAAQ,IAAIpoK,EAAEw+J,MAAMsH,IAAI7kK,EAAEumK,KAAK,EAAEvmK,EAAEonK,MAAM,EAAEnS,GAAGoK,CAAC,CAAC,SAAS1wD,EAAE5uG,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAEs8C,QAAOr8C,EAAED,EAAEs8C,OAAQypH,MAAM,EAAE9lK,EAAE+lK,MAAM,EAAE/lK,EAAEgmK,MAAM,EAAE7sK,EAAE4G,IAAIs/J,CAAC,CAAC,SAAStmJ,EAAEhZ,EAAEC,GAAG,IAAItK,EAAEytB,EAAE,OAAOpjB,GAAGA,EAAEs8C,OAAOl5B,EAAEpjB,EAAEs8C,MAAMr8C,EAAE,GAAGtK,EAAE,EAAEsK,GAAGA,IAAItK,EAAS,GAANsK,GAAG,GAAKA,EAAE,KAAKA,GAAG,KAAKA,IAAIA,EAAE,GAAGA,EAAE,IAAIq/J,GAAG,OAAOl8I,EAAE9X,QAAQ8X,EAAEwjJ,QAAQ3mK,IAAImjB,EAAE9X,OAAO,MAAM8X,EAAEg8I,KAAKzpK,EAAEytB,EAAEwjJ,MAAM3mK,EAAE2uG,EAAE5uG,KAAKs/J,CAAC,CAAC,SAAS35J,EAAE3F,EAAEC,GAAG,IAAItK,EAAEytB,EAAE,OAAOpjB,GAAGojB,EAAE,IAAI3mB,EAAEuD,EAAEs8C,MAAMl5B,EAAEA,EAAE9X,OAAO,MAAK3V,EAAEqjB,EAAEhZ,EAAEC,MAAOi1J,IAAIl1J,EAAEs8C,MAAM,MAAM3mD,GAAG2pK,CAAC,CAA8B,SAAS34J,EAAE3G,GAAG,GAAGglK,GAAG,CAAC,IAAI/kK,EAAE,IAAIwa,EAAE,IAAIzb,EAAEw+J,MAAM,KAAKx7J,EAAE,IAAIhD,EAAEw+J,MAAM,IAAIv9J,EAAE,EAAEA,EAAE,KAAKD,EAAEinK,KAAKhnK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEinK,KAAKhnK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEinK,KAAKhnK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEinK,KAAKhnK,KAAK,EAAE,IAAI+mE,EAAExa,EAAExsD,EAAEinK,KAAK,EAAE,IAAIxsJ,EAAE,EAAEza,EAAEknK,KAAK,CAACf,KAAK,IAAIlmK,EAAE,EAAEA,EAAE,IAAID,EAAEinK,KAAKhnK,KAAK,EAAE+mE,EAAEyuF,EAAEz1J,EAAEinK,KAAK,EAAE,GAAGjlK,EAAE,EAAEhC,EAAEknK,KAAK,CAACf,KAAK,IAAInB,IAAG,CAAE,CAAChlK,EAAEomK,QAAQ3rJ,EAAEza,EAAEsmK,QAAQ,EAAEtmK,EAAEqmK,SAASrkK,EAAEhC,EAAEumK,SAAS,CAAC,CAAC,SAAS3/J,EAAE5G,EAAEC,EAAEtK,EAAEytB,GAAG,IAAI3mB,EAAErD,EAAE4G,EAAEs8C,MAAM,OAAO,OAAOljD,EAAEkS,SAASlS,EAAE2sK,MAAM,GAAG3sK,EAAEwtK,MAAMxtK,EAAE6sK,MAAM,EAAE7sK,EAAE4sK,MAAM,EAAE5sK,EAAEkS,OAAO,IAAItM,EAAEy8J,KAAKriK,EAAE2sK,QAAQ3iJ,GAAGhqB,EAAE2sK,OAAO/mK,EAAEi+J,SAAS7jK,EAAEkS,OAAOrL,EAAEtK,EAAEyD,EAAE2sK,MAAM3sK,EAAE2sK,MAAM,GAAG3sK,EAAE6sK,MAAM,EAAE7sK,EAAE4sK,MAAM5sK,EAAE2sK,SAAQtpK,EAAErD,EAAE2sK,MAAM3sK,EAAE6sK,OAAQ7iJ,IAAI3mB,EAAE2mB,GAAGpkB,EAAEi+J,SAAS7jK,EAAEkS,OAAOrL,EAAEtK,EAAEytB,EAAE3mB,EAAErD,EAAE6sK,QAAO7iJ,GAAG3mB,IAAKuC,EAAEi+J,SAAS7jK,EAAEkS,OAAOrL,EAAEtK,EAAEytB,EAAEA,EAAE,GAAGhqB,EAAE6sK,MAAM7iJ,EAAEhqB,EAAE4sK,MAAM5sK,EAAE2sK,QAAQ3sK,EAAE6sK,OAAOxpK,EAAErD,EAAE6sK,QAAQ7sK,EAAE2sK,QAAQ3sK,EAAE6sK,MAAM,GAAG7sK,EAAE4sK,MAAM5sK,EAAE2sK,QAAQ3sK,EAAE4sK,OAAOvpK,KAAK,CAAC,CAC78sB,IAAIge,EAAEzY,EAAEhD,EAAEgB,EAAE,mBAAmB0xB,EAAE1xB,EAAE,aAAa4tE,EAAE5tE,EAAE,WAAW0F,EAAE1F,EAAE,aAAagnE,EAAEhnE,EAAE,cAAcV,EAAE,EAAEktD,EAAE,EAAEipG,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAEH,EAAE,EAAER,EAAE,EAAES,EAAE,EAAEr/J,EAAE,EAAEgpK,GAAG,EAAEC,GAAG,EAAEV,GAAG,EAAE8B,GAAG,EAAEsD,EAAE,EAAE9xK,EAAE,EAAE6uK,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEC,EAAE,EAAEtrB,EAAE,EAAEuoB,EAAE,GAAGxiI,EAAE,GAAGwlI,EAAE,GAAGN,EAAE,GAAGO,EAAE,GAAGb,EAAE,GAAG3B,EAAE,GAAGzsC,EAAE,GAAGkvC,EAAG,GAAGC,EAAG,GAAG8C,EAAG,GAAG7C,EAAG,GAAG3B,EAAG,GAAGT,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGS,GAAG,GAAGtC,GAAG,GAAGP,GAAG,GAAGH,GAAG,GAAG8E,GAAG,GAAGhB,GAAG,GAASkB,GAAG,IAAIC,GAAG,IAAUlB,GAAH,GAASoB,IAAG,EAAGrvK,EAAE6xK,aAAa54D,EAAEj5G,EAAE8xK,cAAczuJ,EAAErjB,EAAE+xK,iBAAiBtuK,EAAEzD,EAAEgyK,YADmyqB,SAAW3nK,GAAG,OAAO2F,EAAE3F,EAAE4jK,GAAG,EACjzqBjuK,EAAEwmK,aAAax2J,EAAEhQ,EAAE8mK,QAD+gsB,SAAWz8J,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAEw1G,EAAE51F,EAAErT,EAAEwwB,EAAE88F,EAAEj+E,GAAEz8B,GAAEnE,GAAEqG,GAAEzY,GAAE6iK,GAAGC,GAAGC,GAAGnB,GAAGoB,GAAGpE,GAAGQ,GAAGH,GAAGC,GAAG+D,GAAG2C,GAAGC,GAAG,EAAEC,GAAG,IAAI9oK,EAAEy8J,KAAK,GAAGsM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,IAAI/nK,IAAIA,EAAEs8C,QAAQt8C,EAAEw7J,SAASx7J,EAAEq7J,OAAO,IAAIr7J,EAAEu7J,SAAS,OAAO+D,GAAE3pK,EAAEqK,EAAEs8C,OAAQ+vB,OAAOi4F,IAAI3uK,EAAE02E,KAAK23F,GAAGhrJ,EAAEhZ,EAAE07J,SAAStiK,EAAE4G,EAAEw7J,OAAOrlI,EAAEn2B,EAAE86J,UAAUlsD,EAAE5uG,EAAEs7J,QAAQ7+J,EAAEuD,EAAEq7J,MAAM11J,EAAE3F,EAAEu7J,SAAStoC,EAAEt9H,EAAEuwK,KAAKlxH,GAAEr/C,EAAEwwK,KAAK5tJ,GAAE5S,EAAEyO,GAAE+hB,EAAE+qI,GAAGhM,EAAEl1J,EAAE,OAAO,OAAOrK,EAAE02E,MAAM,KAAKl6E,EAAE,GAAG,IAAIwD,EAAEypK,KAAK,CAACzpK,EAAE02E,KAAK23F,EAAE,KAAK,CAAC,KAAKhvH,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAG,EAAEr/C,EAAEypK,MAAM,QAAQnsC,EAAE,CAACt9H,EAAEgxK,MAAM,EAAEmB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAIt9H,EAAEgxK,MAAM/4F,EAAEj4E,EAAEgxK,MAAMmB,GAAG,EAAE,GAAG70C,EAAE,EAAEj+E,GAAE,EAAEr/C,EAAE02E,KAAK20F,EAAE,KAAK,CAAC,GAAGrrK,EAAE+wK,MAAM,EAAE/wK,EAAEtC,OAAOsC,EAAEtC,KAAK0xI,MAAK,KAAM,EAAEpvI,EAAEypK,UAAU,IAAInsC,IAAI,IAAIA,GAAG,IAAI,GAAG,CAACjzH,EAAEqR,IAAI,yBAAyB1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC,IAAI,GAAG1xC,KAAKgxC,EAAE,CAACjkK,EAAEqR,IAAI,6BAA6B1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC,GAAU3vH,IAAG,EAAEisH,GAAU,GAAN,IAAhBhuC,KAAK,IAAmB,IAAIt9H,EAAEixK,MAAMjxK,EAAEixK,MAAM3F,QAAQ,GAAGA,GAAGtrK,EAAEixK,MAAM,CAAC5mK,EAAEqR,IAAI,sBAAsB1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAChvK,EAAEmwK,KAAK,GAAG7E,GAAGjhK,EAAEq/J,MAAM1pK,EAAEgxK,MAAM,EAAEhxK,EAAE02E,KAAK,IAAI4mD,EAAEquC,EAAEgD,EAAErxC,EAAE,EAAEj+E,GAAE,EAAE,MAAM,KAAKgsH,EAAE,KAAKhsH,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAGr/C,EAAE+wK,MAAMzzC,GAAG,IAAIt9H,EAAE+wK,SAASzC,EAAE,CAACjkK,EAAEqR,IAAI,6BAA6B1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC,GAAG,MAAMhvK,EAAE+wK,MAAM,CAAC1mK,EAAEqR,IAAI,2BAA2B1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAChvK,EAAEtC,OAAOsC,EAAEtC,KAAKoN,KAAKwyH,GAAG,EAAE,GAAG,IAAIt9H,EAAE+wK,QAAQoB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAIt9H,EAAEgxK,MAAM/4F,EAAEj4E,EAAEgxK,MAAMmB,GAAG,EAAE,IAAI70C,EAAE,EAAEj+E,GAAE,EAAEr/C,EAAE02E,KAAK63F,EAAE,KAAKA,EAAE,KAAKlvH,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAACr/C,EAAEtC,OAAOsC,EAAEtC,KAAKkyK,KAAKtyC,GAAG,IAAIt9H,EAAE+wK,QAAQoB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAI60C,GAAG,GAAG70C,IAAI,GAAG,IAAI60C,GAAG,GAAG70C,IAAI,GAAG,IAAIt9H,EAAEgxK,MAAM/4F,EAAEj4E,EAAEgxK,MAAMmB,GAAG,EAAE,IAAI70C,EAAE,EAAEj+E,GAAE,EAAEr/C,EAAE02E,KAAKy3F,EAAE,KAAKA,EAAE,KAAK9uH,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GACzw+BA,IAAG,CAAC,CAACr/C,EAAEtC,OAAOsC,EAAEtC,KAAKuyK,OAAO,IAAI3yC,EAAEt9H,EAAEtC,KAAKmyK,GAAGvyC,GAAG,GAAG,IAAIt9H,EAAE+wK,QAAQoB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAIt9H,EAAEgxK,MAAM/4F,EAAEj4E,EAAEgxK,MAAMmB,GAAG,EAAE,IAAI70C,EAAE,EAAEj+E,GAAE,EAAEr/C,EAAE02E,KAAK83F,EAAE,KAAKA,EAAE,GAAG,KAAKxuK,EAAE+wK,MAAM,CAAC,KAAK1xH,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAACr/C,EAAE4C,OAAO06H,EAAEt9H,EAAEtC,OAAOsC,EAAEtC,KAAKwyK,UAAU5yC,GAAG,IAAIt9H,EAAE+wK,QAAQoB,GAAG,GAAG,IAAI70C,EAAE60C,GAAG,GAAG70C,IAAI,EAAE,IAAIt9H,EAAEgxK,MAAM/4F,EAAEj4E,EAAEgxK,MAAMmB,GAAG,EAAE,IAAI70C,EAAE,EAAEj+E,GAAE,CAAC,MAAMr/C,EAAEtC,OAAOsC,EAAEtC,KAAKiyK,MAAM,MAAM3vK,EAAE02E,KAAK03F,EAAE,KAAKA,EAAE,GAAG,KAAKpuK,EAAE+wK,SAAQjsJ,GAAE9kB,EAAE4C,QAASoN,IAAI8U,GAAE9U,GAAG8U,KAAI9kB,EAAEtC,OAAO4tK,GAAGtrK,EAAEtC,KAAKwyK,UAAUlwK,EAAE4C,OAAO5C,EAAEtC,KAAKiyK,QAAQ3vK,EAAEtC,KAAKiyK,MAAM,IAAI/lK,MAAM5J,EAAEtC,KAAKwyK,YAAY7mK,EAAEi+J,SAAStnK,EAAEtC,KAAKiyK,MAAM7oK,EAAEmyG,EAAEn0F,GAAEwmJ,KAAK,IAAItrK,EAAE+wK,QAAQ/wK,EAAEgxK,MAAM/4F,EAAEj4E,EAAEgxK,MAAMlqK,EAAEge,GAAEm0F,IAAIjpG,GAAG8U,GAAEm0F,GAAGn0F,GAAE9kB,EAAE4C,QAAQkiB,IAAG9kB,EAAE4C,QAAQ,MAAMyH,EAAErK,EAAE4C,OAAO,EAAE5C,EAAE02E,KAAK+3F,EAAE,KAAKA,EAAE,GAAG,KAAKzuK,EAAE+wK,MAAM,CAAC,GAAG,IAAI/gK,EAAE,MAAM3F,EAAEya,GAAE,EAAE,GAAGwmJ,GAAGxkK,EAAEmyG,EAAEn0F,MAAK9kB,EAAEtC,MAAM4tK,IAAItrK,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAKkG,MAAMiU,OAAO0jI,aAAa+vB,WAAWA,IAAIxmJ,GAAE9U,GAAG,GAAG,IAAIhQ,EAAE+wK,QAAQ/wK,EAAEgxK,MAAM/4F,EAAEj4E,EAAEgxK,MAAMlqK,EAAEge,GAAEm0F,IAAIjpG,GAAG8U,GAAEm0F,GAAGn0F,GAAEwmJ,GAAG,MAAMjhK,CAAC,MAAMrK,EAAEtC,OAAOsC,EAAEtC,KAAKkG,KAAK,MAAM5D,EAAE4C,OAAO,EAAE5C,EAAE02E,KAAKg4F,EAAE,KAAKA,EAAE,GAAG,KAAK1uK,EAAE+wK,MAAM,CAAC,GAAG,IAAI/gK,EAAE,MAAM3F,EAAEya,GAAE,EAAE,GAAGwmJ,GAAGxkK,EAAEmyG,EAAEn0F,MAAK9kB,EAAEtC,MAAM4tK,IAAItrK,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAKgqH,SAAS7vG,OAAO0jI,aAAa+vB,WAAWA,IAAIxmJ,GAAE9U,GAAG,GAAG,IAAIhQ,EAAE+wK,QAAQ/wK,EAAEgxK,MAAM/4F,EAAEj4E,EAAEgxK,MAAMlqK,EAAEge,GAAEm0F,IAAIjpG,GAAG8U,GAAEm0F,GAAGn0F,GAAEwmJ,GAAG,MAAMjhK,CAAC,MAAMrK,EAAEtC,OAAOsC,EAAEtC,KAAKgqH,QAAQ,MAAM1nH,EAAE02E,KAAK0sE,EAAE,KAAKA,EAAE,GAAG,IAAIpjJ,EAAE+wK,MAAM,CAAC,KAAK1xH,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAGi+E,KAAK,MAAMt9H,EAAEgxK,OAAO,CAAC3mK,EAAEqR,IAAI,sBAAsB1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC1xC,EAAE,EAAEj+E,GAAE,CAAC,CAACr/C,EAAEtC,OAAOsC,EAAEtC,KAAKgyK,KAAK1vK,EAAE+wK,OAAO,EAAE,EAAE/wK,EAAEtC,KAAK0xI,MAAK,GAAI/kI,EAAEq/J,MAAM1pK,EAAEgxK,MAAM,EAAEhxK,EAAE02E,KAAKi4F,EAAE,MAAM,KAAKhD,EAAE,KAAKtsH,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAACh1C,EAAEq/J,MAAM1pK,EAAEgxK,MAAMvjJ,EAAE6vG,GAAGA,EAAE,EAAEj+E,GAAE,EAAEr/C,EAAE02E,KAAKvtC,EAAE,KAAKA,EAAE,GAAG,IAAInpC,EAAE8wK,SAAS,OAAOzmK,EAAE07J,SAAS1iJ,EAAEhZ,EAAE86J,UAAU3kI,EAAEn2B,EAAEs7J,QAAQ1sD,EAAE5uG,EAAEu7J,SAAS51J,EAAEhQ,EAAEuwK,KAAKjzC,EAAEt9H,EAAEwwK,KAAKnxH,GAAE1+C,EAAE0J,EAAEq/J,MAAM1pK,EAAEgxK,MAAM,EAAEhxK,EAAE02E,KAAKi4F,EAAE,KAAKA,EAAE,GAAGrkK,IAAI41J,GAAG51J,IAAIy1J,EAAE,MAAM11J,EAAE,KAAKgkK,EAAE,GAAGruK,EAAE0nJ,KAAK,CAACpqB,KAAK,EAAEj+E,GAAEA,IAAG,EAAEA,GAAEr/C,EAAE02E,KAAKk0F,GAAG,KAAK,CAAC,KAAKvrH,GAAE,GAAG,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,OAAOr/C,EAAE0nJ,KAAK,EAAEpqB,EAASj+E,IAAG,EAAE,GAAZi+E,KAAK,IAAY,KAAK,EAAEt9H,EAAE02E,KAAKk4F,EAAE,MAAM,KAAK,EAAE,GAAG59J,EAAEhR,GAAGA,EAAE02E,KAAKk7F,EAAGtnK,IAAIy1J,EAAE,CAACziC,KAAK,EAAEj+E,IAAG,EAAE,MAAMh1C,CAAC,CAAC,MAAM,KAAK,EAAErK,EAAE02E,KAAKipD,EAAE,MAAM,KAAK,EAAEt1H,EAAEqR,IAAI,qBAAqB1b,EAAE02E,KAAKs4F,GAAG1xC,KAAK,EAAEj+E,IAAG,EAAE,MAAM,KAAKuvH,EAAE,IAAItxC,KAAK,EAAEj+E,GAAEA,IAAG,EAAEA,GAAEA,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,IAAI,MAAMi+E,KAAMA,IAAI,GAAG,OAAO,CAACjzH,EAAEqR,IAAI,+BAA+B1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC,GAAGhvK,EAAE4C,OAAO,MAAM06H,EAAEA,EAAE,EAAEj+E,GAAE,EAAEr/C,EAAE02E,KAAKq3F,EAAEzjK,IAAIy1J,EAAE,MAAM11J,EAAE,KAAK0jK,EAAE/tK,EAAE02E,KAAK01F,EAAE,KAAKA,EAAE,GAAGtnJ,GAAE9kB,EAAE4C,OAAO,CAAC,GAAGkiB,GAAE9U,IAAI8U,GAAE9U,GAAG8U,GAAE0b,IAAI1b,GAAE0b,GAAG,IAAI1b,GAAE,MAAMza,EAAEhB,EAAEi+J,SAAS7jK,EAAEqD,EAAEmyG,EAAEn0F,GAAEzB,GAAGrT,GAAG8U,GAAEm0F,GAAGn0F,GAAE0b,GAAG1b,GAAEzB,GAAGyB,GAAE9kB,EAAE4C,QAAQkiB,GAAE,KAAK,CAAC9kB,EAAE02E,KAAKi4F,EAAE,MAAM,KAAKhvC,EAAE,KAAKtgF,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAGr/C,EAAEmxK,KAAY,KAAN,GAAG7zC,GAAOA,KAAK,EAAEj+E,IAAG,EAAEr/C,EAAEoxK,MAAa,GAAN,GAAG9zC,GAAKA,KAAK,EAAEj+E,IAAG,EAAEr/C,EAAEkxK,MAAa,GAAN,GAAG5zC,GAAKA,KAAK,EAAEj+E,IAAG,EAAEr/C,EAAEmxK,KAAK,KAAKnxK,EAAEoxK,MAAM,GAAG,CAAC/mK,EAAEqR,IAAI,sCAAsC1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAChvK,EAAEqxK,KAAK,EAAErxK,EAAE02E,KAAKm4F,EAAG,KAAKA,EAAG,KAAK7uK,EAAEqxK,KAAKrxK,EAAEkxK,OAAO,CAAC,KAAK7xH,GAAE,GAAG,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAACr/C,EAAEsxK,KAAKc,GAAGpyK,EAAEqxK,SAAS,EAAE/zC,EAAEA,KAAK,EAAEj+E,IAAG,CAAC,CAAC,KAAKr/C,EAAEqxK,KAAK,IAAIrxK,EAAEsxK,KAAKc,GAAGpyK,EAAEqxK,SAAS,EAAE,GAAGrxK,EAAEywK,QAAQzwK,EAAEwxK,OAAOxxK,EAAE2wK,QAAQ,EAAErB,GAAG,CAACkB,KAAKxwK,EAAE2wK,SAASpF,GAAGl6F,EAAE1nE,EAAE3J,EAAEsxK,KAAK,EAAE,GAAGtxK,EAAEywK,QAAQ,EAAEzwK,EAAEuxK,KAAKjC,IAAItvK,EAAE2wK,QAAQrB,GAAGkB,KAAKjF,GAAG,CAAClhK,EAAEqR,IAAI,2BAA2B1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAChvK,EAAEqxK,KAAK,EAAErxK,EAAE02E,KAAKo4F,EAAG,KAAKA,EAAG,KAAK9uK,EAAEqxK,KAAKrxK,EAAEmxK,KAAKnxK,EAAEoxK,OAAO,CAAC,KAAiDhC,IAA5C8C,GAAGlyK,EAAEywK,QAAQnzC,GAAG,GAAGt9H,EAAE2wK,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC7yH,KAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAG4uH,GAAG,GAAG3wC,KAAK6xC,GAAG9vH,IAAG8vH,GAAGnvK,EAAEsxK,KAAKtxK,EAAEqxK,QAAQpD,OAAO,CAAC,GAAG,KAAKA,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAE9vH,GAAE4yH,IAAI,CAAC,GAAG,IAAIjiK,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAGi+E,KAAK6xC,GAAG9vH,IAAG8vH,GAAG,IAAInvK,EAAEqxK,KAAK,CAAChnK,EAAEqR,IAAI,4BAA4B1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC1D,GAAGtrK,EAAEsxK,KAAKtxK,EAAEqxK,KAAK,GAAGvsJ,GAAE,GAAG,EAAEw4G,GAAGA,KAAK,EAAEj+E,IAAG,CAAC,MAAM,GAAG,KAAK4uH,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAE9vH,GAAE4yH,IAAI,CAAC,GAAG,IAAIjiK,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAASA,IAAG8vH,GAAG7D,GAAG,EAAExmJ,GAAE,GAAG,GAAxBw4G,KAAK6xC,KAAwB7xC,KAAK,EAAEj+E,IAAG,CAAC,KAAK,CAAC,IAAI4yH,GAAG9C,GAAG,EAAE9vH,GAAE4yH,IAAI,CAAC,GAAG,IAAIjiK,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAASA,IAAG8vH,GAAG7D,GAAG,EAAExmJ,GAAE,IAAI,KAAzBw4G,KAAK6xC,KAA2B7xC,KAAK,EAAEj+E,IAAG,CAAC,CAAC,GAAGr/C,EAAEqxK,KAAKvsJ,GAAE9kB,EAAEmxK,KAAKnxK,EAAEoxK,MAAM,CAAC/mK,EAAEqR,IAAI,4BAA4B1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC,KAAKlqJ,MAAK9kB,EAAEsxK,KAAKtxK,EAAEqxK,QAAQ/F,EAAE,CAAC,CAAC,GAAGtrK,EAAE02E,OAAOs4F,GAAG,MAAM,GAAG,IAAIhvK,EAAEsxK,KAAK,KAAK,CAACjnK,EAAEqR,IAAI,uCAAuC1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC,GAAGhvK,EAAE2wK,QAAQ,EAAErB,GAAG,CAACkB,KAAKxwK,EAAE2wK,SAASpF,GAAGl6F,EAAExa,EAAE72D,EAAEsxK,KAAK,EAAEtxK,EAAEmxK,KAAKnxK,EAAEywK,QAAQ,EAAEzwK,EAAEuxK,KAAKjC,IAAItvK,EAAE2wK,QAAQrB,GAAGkB,KAAKjF,GAAG,CAAClhK,EAAEqR,IAAI,8BAA8B1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC,GAAGhvK,EAAE4wK,SAAS,EAAE5wK,EAAE0wK,SAAS1wK,EAAEyxK,QAAQnC,GAAG,CAACkB,KAAKxwK,EAAE4wK,UAAUrF,GAAGl6F,EAAEyuF,EAAE9/J,EAAEsxK,KAAKtxK,EAAEmxK,KAAKnxK,EAAEoxK,MAAMpxK,EAAE0wK,SAAS,EAAE1wK,EAAEuxK,KAAKjC,IAAItvK,EAAE4wK,SAAStB,GAAGkB,KAAKjF,GAAG,CAAClhK,EAAEqR,IAAI,wBAAwB1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC,GAAGhvK,EAAE02E,KAAKk7F,EAAGtnK,IAAIy1J,EAAE,MAAM11J,EAAE,KAAKunK,EAAG5xK,EAAE02E,KAAKq4F,EAAG,KAAKA,EAAG,GAAG/+J,GAAG,GAAGwwB,GAAG,IAAI,CAACn2B,EAAE07J,SAAS1iJ,EAAEhZ,EAAE86J,UAAU3kI,EAAEn2B,EAAEs7J,QAAQ1sD,EAAE5uG,EAAEu7J,SAAS51J,EAAEhQ,EAAEuwK,KAAKjzC,EAAEt9H,EAAEwwK,KAAKnxH,GAAEtvC,EAAE1F,EAAEoU,IAAG4E,EAAEhZ,EAAE07J,SAAStiK,EAAE4G,EAAEw7J,OAAOrlI,EAAEn2B,EAAE86J,UAAUlsD,EAAE5uG,EAAEs7J,QAAQ7+J,EAAEuD,EAAEq7J,MAAM11J,EAAE3F,EAAEu7J,SAAStoC,EAAEt9H,EAAEuwK,KAAKlxH,GAAEr/C,EAAEwwK,KAAKxwK,EAAE02E,OAAOi4F,IAAI3uK,EAAE0xK,MAAM,GAAG,KAAK,CAAC,IAAI1xK,EAAE0xK,KAAK,EAA8CtC,IAA5C8C,GAAGlyK,EAAEywK,QAAQnzC,GAAG,GAAGt9H,EAAE2wK,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC7yH,KAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAG+vH,IAAI,IAAK,IAAIA,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAsDmB,IAAnD8C,GAAGlyK,EAAEywK,QAAQhF,KAAKnuC,GAAG,GAAG+xC,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuC7yH,KAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAACi+E,KAAK+xC,GAAGhwH,IAAGgwH,GAAGrvK,EAAE0xK,MAAMrC,EAAE,CAAC,GAAG/xC,KAAK6xC,GAAG9vH,IAAG8vH,GAAGnvK,EAAE0xK,MAAMvC,GAAGnvK,EAAE4C,OAAOqrK,GAAG,IAAImB,GAAG,CAACpvK,EAAE02E,KAAKw2F,GAAG,KAAK,CAAC,GAAG,GAAGkC,GAAG,CAACpvK,EAAE0xK,MAAM,EAAE1xK,EAAE02E,KAAKi4F,EAAE,KAAK,CAAC,GAAG,GAAGS,GAAG,CAAC/kK,EAAEqR,IAAI,8BAA8B1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAChvK,EAAE2vK,MAAM,GAAGP,GAAGpvK,EAAE02E,KAAK02F,EAAG,KAAKA,EAAG,GAAGptK,EAAE2vK,MAAM,CAAC,IAAIsC,GAAGjyK,EAAE2vK,MAAMtwH,GAAE4yH,IAAI,CAAC,GAAG,IAAIjiK,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAACr/C,EAAE4C,QAAQ06H,GAAG,GAAGt9H,EAAE2vK,OAAO,EAAEryC,KAAKt9H,EAAE2vK,MAAMtwH,IAAGr/C,EAAE2vK,MAAM3vK,EAAE0xK,MAAM1xK,EAAE2vK,KAAK,CAAC3vK,EAAE2xK,IAAI3xK,EAAE4C,OAAO5C,EAAE02E,KAAKi2F,GAAG,KAAKA,GAAG,KAAmDyC,IAA9C8C,GAAGlyK,EAAE0wK,SAASpzC,GAAG,GAAGt9H,EAAE4wK,UAAU,MAAsB,GAAG,IAAI3C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC7yH,KAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAG,IAAK,IAAI+vH,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAuDmB,IAApD8C,GAAGlyK,EAAE0wK,SAASjF,KAAKnuC,GAAG,GAAG+xC,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuC7yH,KAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAACi+E,KAAK+xC,GAAGhwH,IAAGgwH,GAAGrvK,EAAE0xK,MAAMrC,EAAE,CAAC,GAAG/xC,KAAK6xC,GAAG9vH,IAAG8vH,GAAGnvK,EAAE0xK,MAAMvC,GAAG,GAAGC,GAAG,CAAC/kK,EAAEqR,IAAI,wBAAwB1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAChvK,EAAEs5I,OAAO20B,GAAGjuK,EAAE2vK,MAAM,GAAGP,GAAGpvK,EAAE02E,KAAKm2F,GAAG,KAAKA,GAAG,GAAG7sK,EAAE2vK,MAAM,CAAC,IAAIsC,GAAGjyK,EAAE2vK,MAAMtwH,GAAE4yH,IAAI,CAAC,GAAG,IAAIjiK,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAACr/C,EAAEs5I,QAAQhc,GAAG,GAAGt9H,EAAE2vK,OAAO,EAAEryC,KAAKt9H,EAAE2vK,MAAMtwH,IAAGr/C,EAAE2vK,MAAM3vK,EAAE0xK,MAAM1xK,EAAE2vK,KAAK,CAAC,GAAG3vK,EAAEs5I,OAAOt5I,EAAEmwK,KAAK,CAAC9lK,EAAEqR,IAAI,gCAAgC1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAChvK,EAAE02E,KAAK+1F,GAAG,KAAKA,GAAG,GAAG,IAAIjsI,EAAE,MAAMn2B,EAAE,GAAGya,GAAErG,GAAE+hB,EAAExgC,EAAEs5I,OAAOx0H,GAAE,CAAC,IAAGA,GAAE9kB,EAAEs5I,OAAOx0H,IAAI9kB,EAAEqwK,OAAOrwK,EAAE6wK,KAAK,CAACxmK,EAAEqR,IAAI,gCAAgC1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAClqJ,GAAE9kB,EAAEswK,OAAOxrJ,IAAG9kB,EAAEswK,MAAMjkK,GAAErM,EAAEowK,MAAMtrJ,IAAGzY,GAAErM,EAAEswK,MAAMxrJ,GAAEA,GAAE9kB,EAAE4C,SAASkiB,GAAE9kB,EAAE4C,QAAQssK,GAAGlvK,EAAE2V,MAAM,MAAMu5J,GAAGzrK,EAAE4I,GAAEgX,EAAErjB,EAAEs5I,OAAOx0H,GAAE9kB,EAAE4C,OAAOkiB,GAAE0b,IAAI1b,GAAE0b,GAAGA,GAAG1b,GAAE9kB,EAAE4C,QAAQkiB,GAAE,GAAGrhB,EAAE4f,KAAK6rJ,GAAG7iK,cAAayY,IAAG,IAAI9kB,EAAE4C,SAAS5C,EAAE02E,KAAKq4F,GAAI,MAAM,KAAK7B,GAAG,GAAG,IAAI1sI,EAAE,MAAMn2B,EAAE5G,EAAE4f,KAAKrjB,EAAE4C,OAAO49B,IAAIxgC,EAAE02E,KAAKq4F,EAAG,MAAM,KAAKnE,GAAG,GAAG5qK,EAAEypK,KAAK,CAAC,KAAKpqH,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAG5gC,IAAG+hB,EAAEn2B,EAAEg/J,WAAW5qJ,GAAEze,EAAE6jH,OAAOplG,GAAEA,KAAIpU,EAAEq/J,MAAM1pK,EAAEgxK,MAAMhxK,EAAE+wK,MAAM94F,EAAEj4E,EAAEgxK,MAAMvtK,EAAEgb,GAAE4E,EAAE5E,IAAGsd,EAAE/7B,EAAEgxK,MAAMvtK,EAAEgb,GAAE4E,EAAE5E,KAAIA,GAAE+hB,GAAGxgC,EAAE+wK,MAAMzzC,EAAE7vG,EAAE6vG,MAAMt9H,EAAEgxK,MAAM,CAAC3mK,EAAEqR,IAAI,uBAAuB1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC1xC,EAAE,EAAEj+E,GAAE,CAAC,CAACr/C,EAAE02E,KAAK2zF,GAAG,KAAKA,GAAG,GAAGrqK,EAAEypK,MAAMzpK,EAAE+wK,MAAM,CAAC,KAAK1xH,GAAE,IAAI,CAAC,GAAG,IAAIrvC,EAAE,MAAM3F,EAAE2F,IAAIstH,GAAGx2H,EAAEmyG,MAAM55D,GAAEA,IAAG,CAAC,CAAC,GAAGi+E,KAAK,WAAWt9H,EAAE6jH,OAAO,CAACx5G,EAAEqR,IAAI,yBAAyB1b,EAAE02E,KAAKs4F,GAAG,KAAK,CAAC1xC,EAAE,EAAEj+E,GAAE,CAAC,CAACr/C,EAAE02E,KAAKwzF,GAAG,KAAKA,GAAGqB,GAAGvL,EAAE,MAAM31J,EAAE,KAAK2kK,GAAGzD,GAAG3B,EAAE,MAAMv/J,EAAE,KAAK2jK,GAAG,OAAO9E,EAAU,QAAQ,OAAOS,EAAE,OAAOt/J,EAAE07J,SAAS1iJ,EAAEhZ,EAAE86J,UAAU3kI,EAAEn2B,EAAEs7J,QAAQ1sD,EAAE5uG,EAAEu7J,SAAS51J,EAAEhQ,EAAEuwK,KAAKjzC,EAAEt9H,EAAEwwK,KAAKnxH,IAAGr/C,EAAEowK,OAAO3xJ,KAAIpU,EAAE86J,WAAWnlK,EAAE02E,KAAKs4F,KAAKhvK,EAAE02E,KAAKk0F,IAAItgK,IAAI21J,KAAKhvJ,EAAE5G,EAAEA,EAAEw7J,OAAOx7J,EAAE07J,SAAStnJ,GAAEpU,EAAE86J,YAAYnlK,EAAE02E,KAAKs3F,GAAG9E,IAAItmJ,IAAGvY,EAAEu7J,SAASnnJ,IAAGpU,EAAE86J,UAAU96J,EAAEw/J,UAAUjnJ,GAAEvY,EAAEg/J,WAAW5qJ,GAAEze,EAAE6jH,OAAOplG,GAAEze,EAAEypK,MAAMhrJ,KAAIpU,EAAEq/J,MAAM1pK,EAAEgxK,MAAMhxK,EAAE+wK,MAAM94F,EAAEj4E,EAAEgxK,MAAMvtK,EAAEgb,GAAEpU,EAAE07J,SAAStnJ,IAAGsd,EAAE/7B,EAAEgxK,MAAMvtK,EAAEgb,GAAEpU,EAAE07J,SAAStnJ,KAAIpU,EAAEyjK,UAAU9tK,EAAEwwK,MAAMxwK,EAAE0nJ,KAAK,GAAG,IAAI1nJ,EAAE02E,OAAOi4F,EAAE,IAAI,IAAI3uK,EAAE02E,OAAOk7F,GAAI5xK,EAAE02E,OAAOq3F,EAAE,IAAI,IAAI,IAAInrJ,IAAG,IAAInE,IAAGnU,IAAI21J,IAAIsL,KAAKhM,IAAIgM,GAAGP,GAAGO,GAAG,EAAs0BvrK,EAAEunK,WAAv0B,SAAWl9J,GAAG,IAAIA,IAAIA,EAAEs8C,MAAM,OAAOgjH,EAAE,IAAIr/J,EAAED,EAAEs8C,MAAM,OAAOr8C,EAAEqL,SAASrL,EAAEqL,OAAO,MAAMtL,EAAEs8C,MAAM,KAAK44G,CAAC,EAAgvBv/J,EAAE0mK,iBAAjvB,SAAWr8J,EAAEC,GAAG,IAAItK,EAAE,OAAOqK,GAAGA,EAAEs8C,MAAiB,IAAK,GAAf3mD,EAAEqK,EAAEs8C,OAAe8iH,MAAME,GAAG3pK,EAAEtC,KAAK4M,EAAEA,EAAE8kI,MAAK,EAAGmwB,GAAIoK,CAAC,EAAuqB3pK,EAAEgnK,qBAAxqB,SAAW38J,EAAEC,GAAG,IAAItK,EAAMyD,EAAE6G,EAAE1H,OAAO,OAAOyH,GAAGA,EAAEs8C,MAAiB,KAAV3mD,EAAEqK,EAAEs8C,OAAY8iH,MAAMzpK,EAAE02E,OAAOvtC,EAAEwgI,EAAE3pK,EAAE02E,OAAOvtC,GAAUpN,EAAJ,EAAQzxB,EAAE7G,EAAE,KAAOzD,EAAEgxK,MAAOpH,EAAK34J,EAAE5G,EAAEC,EAAE7G,EAAEA,IAAKzD,EAAE02E,KAAKs3F,GAAG9E,IAAIlpK,EAAE8wK,SAAS,EAAEvR,GAAIoK,CAAC,EAAugB3pK,EAAEqyK,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,YAAY,GAAG,aAAa,KAAK,GAAG,CAAC,SAAShoK,EAAEC,EAAEtK,GAAG,aAAa,IAAIytB,EAAEpjB,EAAE,mBAAmBvD,EAAE,GAA2BkK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAGC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIqsH,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,EAAE,GAAGj+E,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI/0C,EAAEnO,QAAQ,SAASkO,EAAEC,EAAEtK,EAAE4iB,EAAEnE,EAAEqG,EAAEzY,EAAEhD,GAAG,IAAI0yB,EAAEk8C,EAAEloE,EAAEshE,EAAE1nE,EAAEktD,EAAEipG,EAAEG,EAAEC,EAAEH,EAAE12J,EAAEmnK,KAAKjR,EAAE,EAAES,EAAE,EAAEr/J,EAAE,EAAEgpK,EAAE,EAAEC,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAE9xK,EAAE,EAAE6uK,EAAE,EAAEkD,EAAE,KAAKJ,EAAE,EAAEK,EAAE,IAAI/gJ,EAAEm6I,MAAM9gK,IAAKsnK,EAAE,IAAI3gJ,EAAEm6I,MAAM9gK,IAAK2nK,EAAE,KAAKC,EAAE,EAAE,IAAInP,EAAE,EAAEA,GAAGz4J,EAAEy4J,IAAIiP,EAAEjP,GAAG,EAAE,IAAIS,EAAE,EAAEA,EAAEp9I,EAAEo9I,IAAIwO,EAAElkK,EAAEtK,EAAEggK,MAAM,IAAI4J,EAAE7J,EAAE4J,EAAE7iK,EAAE6iK,GAAG,GAAG,IAAI6E,EAAE7E,GAAGA,KAAK,GAAGC,EAAED,IAAIC,EAAED,GAAG,IAAIA,EAAE,OAAOlrJ,EAAEqG,KAAK,SAASrG,EAAEqG,KAAK,SAASzb,EAAEmnK,KAAK,EAAE,EAAE,IAAI7vK,EAAE,EAAEA,EAAEgpK,GAAG,IAAI6E,EAAE7tK,GAAGA,KAAK,IAAIipK,EAAEjpK,IAAIipK,EAAEjpK,GAAG2tK,EAAE,EAAE/O,EAAE,EAAEA,GAAGz4J,EAAEy4J,IAAI,GAAG+O,IAAI,GAAEA,GAAGE,EAAEjP,IAAK,EAAE,OAAO,EAAE,GAAG+O,EAAE,IAAp0B,IAAw0BjkK,GAAO,IAAIs/J,GAAG,OAAO,EAAE,IAAIyE,EAAE,GAAG,EAAE7O,EAAE,EAAEA,EAAEz4J,EAAEy4J,IAAI6O,EAAE7O,EAAE,GAAG6O,EAAE7O,GAAGiP,EAAEjP,GAAG,IAAIS,EAAE,EAAEA,EAAEp9I,EAAEo9I,IAAI,IAAI11J,EAAEtK,EAAEggK,KAAK3zJ,EAAE+hK,EAAE9jK,EAAEtK,EAAEggK,OAAOA,GAAG,GAAt7B,IAAy7B31J,GAAOkkK,EAAEE,EAAEpiK,EAAEwqD,EAAE,IAAp8B,IAAw8BxsD,GAAOkkK,EAAEv9J,EAAEm9J,GAAG,IAAIM,EAAEx9J,EAAEy9J,GAAG,IAAI73G,EAAE,MAAM03G,EAAEjxC,EAAEmxC,EAAEpvH,EAAEwX,GAAG,GAAGw0G,EAAE,EAAErL,EAAE,EAAET,EAAE5+J,EAAEgJ,EAAEmb,EAAEokJ,EAAEU,EAAEoB,EAAE,EAAEj7J,GAAG,EAASshE,GAAP70E,EAAE,GAAGotK,GAAM,EAAniC,IAAqiCv/J,GAAO7N,EAA5jC,KAAoB,IAA6iC6N,GAAO7N,EAAlkC,IAAskC,OAAO,EAAE,OAAc,CAAKsjK,EAAEP,EAAEyL,EAAE3+J,EAAE2zJ,GAAGnpG,GAAGopG,EAAE,EAAEC,EAAE7zJ,EAAE2zJ,IAAI3zJ,EAAE2zJ,GAAGnpG,GAAGopG,EAAEwO,EAAEC,EAAEriK,EAAE2zJ,IAAIE,EAAEqO,EAAEJ,EAAE9hK,EAAE2zJ,MAAMC,EAAE,GAAGC,EAAE,GAAGnkI,EAAE,GAAGwjI,EAAEyL,EAASrqK,EAAPs3E,EAAE,GAAGixF,EAAM,GAAQzqJ,EAAE9U,GAAG0hK,GAAGL,IAAb/yF,GAAGl8C,IAAgB+jI,GAAG,GAAGG,GAAG,GAAGC,EAAE,QAAQ,IAAIjoF,GAAG,IAAIl8C,EAAE,GAAGwjI,EAAE,EAAE8L,EAAEtvI,GAAGA,IAAI,EAAE,GAAG,IAAIA,GAAGsvI,GAAGtvI,EAAE,EAAEsvI,GAAGtvI,GAAGsvI,EAAE,EAAErL,IAAI,KAAMwO,EAAEjP,GAAG,CAAC,GAAGA,IAAIoK,EAAE,MAAMpK,EAAEj1J,EAAEtK,EAAEqM,EAAE2zJ,GAAG,CAAC,GAAGT,EAAEqK,IAAIyB,EAAEh6F,KAAKthE,EAAE,CAAC,IAAI,IAAIi7J,IAAIA,EAAEpB,GAAGjgK,GAAGhJ,EAAQ2tK,EAAE,IAARpF,EAAE3J,EAAEyL,GAAS9B,EAAE8B,EAAErB,MAAI2E,GAAGE,EAAEtF,EAAE8B,KAAQ,IAAK9B,IAAIoF,IAAI,EAAE,GAAG9xK,GAAG,GAAG0sK,EAAx6C,IAA06C7+J,GAAO7N,EAAj8C,KAAoB,IAAk7C6N,GAAO7N,EAAv8C,IAA28C,OAAO,EAAQiiB,EAAN1O,EAAEs7J,EAAEh6F,GAAOu4F,GAAG,GAAGV,GAAG,GAAGv/J,EAAEmb,EAAE,CAAC,CAAC,CAAC,OAAO,IAAIumJ,IAAI5sJ,EAAE9U,EAAE0hK,GAAG9L,EAAEyL,GAAG,GAAG,IAAI,GAAG,GAAG3hK,EAAEmnK,KAAK5G,EAAE,CAAC,CAAC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASv/J,EAAEC,EAAEtK,GAAG,aAAasK,EAAEnO,QAAQ,CAAC,EAAE,kBAAkB,EAAE,aAAa,EAAE,GAAG,KAAK,aAAa,KAAK,eAAe,KAAK,aAAa,KAAK,sBAAsB,KAAK,eAAe,KAAK,uBAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASkO,EAAEC,EAAEtK,GAAG,aAAa,SAASytB,EAAEpjB,GAAG,IAAI,IAAIC,EAAED,EAAEzH,SAAS0H,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAASxD,EAAEuD,EAAEC,EAAEtK,EAAEytB,EAAE3mB,GAAGrK,KAAK61K,YAAYjoK,EAAE5N,KAAK81K,WAAWjoK,EAAE7N,KAAK+1K,WAAWxyK,EAAEvD,KAAKq/H,MAAMruG,EAAEhxB,KAAKyuF,WAAWpkF,EAAErK,KAAKg2K,UAAUpoK,GAAGA,EAAEzH,MAAM,CAAC,SAASa,EAAE4G,EAAEC,GAAG7N,KAAKi2K,SAASroK,EAAE5N,KAAKk2K,SAAS,EAAEl2K,KAAKm2K,UAAUtoK,CAAC,CAAC,SAAS2uG,EAAE5uG,GAAG,OAAOA,EAAE,IAAI6iK,EAAG7iK,GAAG6iK,EAAG,KAAK7iK,IAAI,GAAG,CAAC,SAASgZ,EAAEhZ,EAAEC,GAAGD,EAAE8+J,YAAY9+J,EAAEiS,WAAW,IAAIhS,EAAED,EAAE8+J,YAAY9+J,EAAEiS,WAAWhS,IAAI,EAAE,GAAG,CAAC,SAAS0F,EAAE3F,EAAEC,EAAEtK,GAAGqK,EAAEwjK,SAASQ,EAAEruK,GAAGqK,EAAEujK,QAAQtjK,GAAGD,EAAEwjK,SAAS,MAAMxqJ,EAAEhZ,EAAEA,EAAEujK,QAAQvjK,EAAEujK,OAAOtjK,GAAG+jK,EAAEhkK,EAAEwjK,SAASxjK,EAAEwjK,UAAU7tK,EAAEquK,IAAIhkK,EAAEujK,QAAQtjK,GAAGD,EAAEwjK,SAAS,MAAMxjK,EAAEwjK,UAAU7tK,EAAE,CAAC,SAASwgC,EAAEn2B,EAAEC,EAAEtK,GAAGgQ,EAAE3F,EAAErK,EAAE,EAAEsK,GAAGtK,EAAE,EAAEsK,EAAE,GAAG,CAAC,SAAS0G,EAAE3G,EAAEC,GAAG,IAAItK,EAAE,EAAE,GAAGA,GAAG,EAAEqK,EAAEA,KAAK,EAAErK,IAAI,UAAUsK,EAAE,GAAG,OAAOtK,IAAI,CAAC,CAAo0B,SAASq/C,EAAEh1C,EAAEC,EAAEtK,GAAG,IAAIytB,EAAE3mB,EAAErD,EAAE,IAAImG,MAAM+kK,EAAE,GAAG11D,EAAE,EAAE,IAAIxrF,EAAE,EAAEA,GAAGkhJ,EAAElhJ,IAAIhqB,EAAEgqB,GAAGwrF,EAAEA,EAAEj5G,EAAEytB,EAAE,IAAI,EAAE,IAAI3mB,EAAE,EAAEA,GAAGwD,EAAExD,IAAI,CAAC,IAAIuc,EAAEhZ,EAAE,EAAEvD,EAAE,GAAG,IAAIuc,IAAIhZ,EAAE,EAAEvD,GAAGkK,EAAEvN,EAAE4f,KAAKA,GAAG,CAAC,CAAwiB,SAAS5E,EAAEpU,GAAG,IAAIC,EAAE,IAAIA,EAAE,EAAEA,EAAEokK,EAAEpkK,IAAID,EAAEmiK,UAAU,EAAEliK,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAE84I,EAAE94I,IAAID,EAAEqiK,UAAU,EAAEpiK,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAEqhK,EAAErhK,IAAID,EAAEuiK,QAAQ,EAAEtiK,GAAG,EAAED,EAAEmiK,UAAU,EAAEuB,GAAG,EAAE1jK,EAAEqjK,QAAQrjK,EAAEsjK,WAAW,EAAEtjK,EAAEmhK,SAASnhK,EAAE42I,QAAQ,CAAC,CAAC,SAASn8H,EAAEza,GAAGA,EAAEwjK,SAAS,EAAExqJ,EAAEhZ,EAAEA,EAAEujK,QAAQvjK,EAAEwjK,SAAS,IAAIxjK,EAAE8+J,YAAY9+J,EAAEiS,WAAWjS,EAAEujK,QAAQvjK,EAAEujK,OAAO,EAAEvjK,EAAEwjK,SAAS,CAAC,CAA4G,SAASxkK,EAAEgB,EAAEC,EAAEtK,EAAEytB,GAAG,IAAI3mB,EAAE,EAAEwD,EAAE7G,EAAE,EAAEzD,EAAE,OAAOqK,EAAEvD,GAAGuD,EAAE5G,IAAI4G,EAAEvD,KAAKuD,EAAE5G,IAAIgqB,EAAEnjB,IAAImjB,EAAEztB,EAAE,CAAC,SAAS+7B,EAAE1xB,EAAEC,EAAEtK,GAAG,IAAI,IAAIytB,EAAEpjB,EAAE8iK,KAAKntK,GAAG8G,EAAE9G,GAAG,EAAE8G,GAAGuD,EAAEgjK,WAAWvmK,EAAEuD,EAAEgjK,UAAUhkK,EAAEiB,EAAED,EAAE8iK,KAAKrmK,EAAE,GAAGuD,EAAE8iK,KAAKrmK,GAAGuD,EAAE62E,QAAQp6E,KAAKuC,EAAEiB,EAAEmjB,EAAEpjB,EAAE8iK,KAAKrmK,GAAGuD,EAAE62E,SAAS72E,EAAE8iK,KAAKntK,GAAGqK,EAAE8iK,KAAKrmK,GAAG9G,EAAE8G,EAAEA,IAAI,EAAEuD,EAAE8iK,KAAKntK,GAAGytB,CAAC,CAAC,SAASwqD,EAAE5tE,EAAEC,EAAEtK,GAAG,IAAIytB,EAAE3mB,EAAErD,EAAE4f,EAAErS,EAAE,EAAE,GAAG,IAAI3G,EAAEmhK,SAAS,GAAG/9I,EAAEpjB,EAAE8+J,YAAY9+J,EAAEojK,MAAM,EAAEz8J,IAAI,EAAE3G,EAAE8+J,YAAY9+J,EAAEojK,MAAM,EAAEz8J,EAAE,GAAGlK,EAAEuD,EAAE8+J,YAAY9+J,EAAEkjK,MAAMv8J,GAAGA,IAAI,IAAIyc,EAAE+S,EAAEn2B,EAAEvD,EAAEwD,IAAYk2B,EAAEn2B,GAAV5G,EAAEmnK,EAAG9jK,IAAS2nK,EAAE,EAAEnkK,GAAW,KAAR+Y,EAAEyrJ,EAAGrrK,KAAoBuM,EAAE3F,EAAXvD,GAAGujK,EAAG5mK,GAAS4f,GAAemd,EAAEn2B,EAAT5G,EAAEw1G,IAANxrF,GAAiBztB,GAAW,KAARqjB,EAAEuuJ,EAAGnuK,KAAoBuM,EAAE3F,EAAXojB,GAAGy8I,EAAGzmK,GAAS4f,UAAWrS,EAAE3G,EAAEmhK,UAAUhrI,EAAEn2B,EAAE0jK,EAAEzjK,EAAE,CAAC,SAASyF,EAAE1F,EAAEC,GAAG,IAAItK,EAAEytB,EAAE3mB,EAAErD,EAAE6G,EAAEooK,SAASz5D,EAAE3uG,EAAEsoK,UAAUN,YAAYjvJ,EAAE/Y,EAAEsoK,UAAUH,UAAUziK,EAAE1F,EAAEsoK,UAAU92C,MAAMt7F,GAAG,EAAE,IAAIn2B,EAAEgjK,SAAS,EAAEhjK,EAAEijK,SAASnkI,EAAEnpC,EAAE,EAAEA,EAAEgQ,EAAEhQ,IAAI,IAAIyD,EAAE,EAAEzD,IAAIqK,EAAE8iK,OAAO9iK,EAAEgjK,UAAU7sI,EAAExgC,EAAEqK,EAAE62E,MAAMlhF,GAAG,GAAGyD,EAAE,EAAEzD,EAAE,GAAG,EAAE,KAAKqK,EAAEgjK,SAAS,GAAoC5pK,EAAE,GAAnCqD,EAAEuD,EAAE8iK,OAAO9iK,EAAEgjK,UAAU7sI,EAAE,IAAIA,EAAE,IAAS,EAAEn2B,EAAE62E,MAAMp6E,GAAG,EAAEuD,EAAEqjK,UAAUrqJ,IAAIhZ,EAAEsjK,YAAY10D,EAAE,EAAEnyG,EAAE,IAAI,IAAIwD,EAAEqoK,SAASnyI,EAAExgC,EAAEqK,EAAEgjK,UAAU,EAAErtK,GAAG,EAAEA,IAAI+7B,EAAE1xB,EAAE5G,EAAEzD,GAAG8G,EAAEkJ,EAAE,GAAGhQ,EAAEqK,EAAE8iK,KAAK,GAAG9iK,EAAE8iK,KAAK,GAAG9iK,EAAE8iK,KAAK9iK,EAAEgjK,YAAYtxI,EAAE1xB,EAAE5G,EAAE,GAAGgqB,EAAEpjB,EAAE8iK,KAAK,GAAG9iK,EAAE8iK,OAAO9iK,EAAEijK,UAAUttK,EAAEqK,EAAE8iK,OAAO9iK,EAAEijK,UAAU7/I,EAAEhqB,EAAE,EAAEqD,GAAGrD,EAAE,EAAEzD,GAAGyD,EAAE,EAAEgqB,GAAGpjB,EAAE62E,MAAMp6E,IAAIuD,EAAE62E,MAAMlhF,IAAIqK,EAAE62E,MAAMzzD,GAAGpjB,EAAE62E,MAAMlhF,GAAGqK,EAAE62E,MAAMzzD,IAAI,EAAEhqB,EAAE,EAAEzD,EAAE,GAAGyD,EAAE,EAAEgqB,EAAE,GAAG3mB,EAAEuD,EAAE8iK,KAAK,GAAGrmK,IAAIi1B,EAAE1xB,EAAE5G,EAAE,SAAS4G,EAAEgjK,UAAU,GAAGhjK,EAAE8iK,OAAO9iK,EAAEijK,UAAUjjK,EAAE8iK,KAAK,GAAv9F,SAAW9iK,EAAEC,GAAG,IAAItK,EAAEytB,EAAE3mB,EAAErD,EAAEw1G,EAAE51F,EAAErT,EAAE1F,EAAEooK,SAASlyI,EAAEl2B,EAAEqoK,SAAS3hK,EAAE1G,EAAEsoK,UAAUN,YAAYrhK,EAAE3G,EAAEsoK,UAAUH,UAAUn1C,EAAEhzH,EAAEsoK,UAAUL,WAAWlzH,EAAE/0C,EAAEsoK,UAAUJ,WAAW5vJ,EAAEtY,EAAEsoK,UAAU1nF,WAAWzsE,EAAE,EAAE,IAAIhb,EAAE,EAAEA,GAAGkrK,EAAElrK,IAAI4G,EAAE4iK,SAASxpK,GAAG,EAAE,IAAIuM,EAAE,EAAE3F,EAAE8iK,KAAK9iK,EAAEijK,UAAU,GAAG,EAAEttK,EAAEqK,EAAEijK,SAAS,EAAEttK,EAAEmpC,EAAEnpC,KAAgByD,EAAEuM,EAAE,EAAEA,EAAE,GAApByd,EAAEpjB,EAAE8iK,KAAKntK,IAAe,GAAG,GAAG,GAAI4iB,IAAInf,EAAEmf,EAAEnE,KAAKzO,EAAE,EAAEyd,EAAE,GAAGhqB,EAAEgqB,EAAE+S,IAAIn2B,EAAE4iK,SAASxpK,KAAKw1G,EAAE,EAAExrF,GAAG4xB,IAAI45D,EAAEqkB,EAAE7vG,EAAE4xB,IAAIh8B,EAAErT,EAAE,EAAEyd,GAAGpjB,EAAEqjK,SAASrqJ,GAAG5f,EAAEw1G,GAAGhoG,IAAI5G,EAAEsjK,YAAYtqJ,GAAGrS,EAAE,EAAEyc,EAAE,GAAGwrF,KAAK,GAAG,IAAIx6F,EAAE,CAAC,EAAE,CAAC,IAAIhb,EAAEmf,EAAE,EAAE,IAAIvY,EAAE4iK,SAASxpK,IAAIA,IAAI4G,EAAE4iK,SAASxpK,KAAK4G,EAAE4iK,SAASxpK,EAAE,IAAI,EAAE4G,EAAE4iK,SAASrqJ,KAAKnE,GAAG,CAAC,OAAOA,EAAE,GAAG,IAAIhb,EAAEmf,EAAE,IAAInf,EAAEA,IAAI,IAAIgqB,EAAEpjB,EAAE4iK,SAASxpK,GAAG,IAAIgqB,IAAG3mB,EAAEuD,EAAE8iK,OAAOntK,IAAKwgC,IAAIxwB,EAAE,EAAElJ,EAAE,KAAKrD,IAAI4G,EAAEqjK,UAAUjqK,EAAEuM,EAAE,EAAElJ,EAAE,IAAIkJ,EAAE,EAAElJ,GAAGkJ,EAAE,EAAElJ,EAAE,GAAGrD,GAAGgqB,IAAI,CAAC,CAAkzE6vG,CAAEjzH,EAAEC,GAAG+0C,EAAE57C,EAAE+8B,EAAEn2B,EAAE4iK,SAAS,CAAC,SAAS57F,EAAEhnE,EAAEC,EAAEtK,GAAG,IAAIytB,EAAE3mB,EAAErD,GAAG,EAAEw1G,EAAE3uG,EAAE,GAAG+Y,EAAE,EAAErT,EAAE,EAAEwwB,EAAE,EAAE,IAAI,IAAIy4E,IAAIjpG,EAAE,IAAIwwB,EAAE,GAAGl2B,EAAE,GAAGtK,EAAE,GAAG,GAAG,MAAMytB,EAAE,EAAEA,GAAGztB,EAAEytB,IAAI3mB,EAAEmyG,EAAEA,EAAE3uG,EAAE,GAAGmjB,EAAE,GAAG,KAAKpK,EAAErT,GAAGlJ,IAAImyG,IAAI51F,EAAEmd,EAAEn2B,EAAEuiK,QAAQ,EAAE9lK,IAAIuc,EAAE,IAAIvc,GAAGA,IAAIrD,GAAG4G,EAAEuiK,QAAQ,EAAE9lK,KAAKuD,EAAEuiK,QAAQ,EAAER,MAAM/oJ,GAAG,GAAGhZ,EAAEuiK,QAAQ,EAAEjtC,KAAKt1H,EAAEuiK,QAAQ,EAAEiC,KAAMxrJ,EAAE,EAAE5f,EAAEqD,EAAE,IAAImyG,GAAGjpG,EAAE,IAAIwwB,EAAE,GAAG15B,IAAImyG,GAAGjpG,EAAE,EAAEwwB,EAAE,IAAIxwB,EAAE,EAAEwwB,EAAE,GAAG,CAAC,SAAS72B,EAAEU,EAAEC,EAAEtK,GAAG,IAAIytB,EAAE3mB,EAAErD,GAAG,EAAEw1G,EAAE3uG,EAAE,GAAG+Y,EAAE,EAAErS,EAAE,EAAEC,EAAE,EAAE,IAAI,IAAIgoG,IAAIjoG,EAAE,IAAIC,EAAE,GAAGwc,EAAE,EAAEA,GAAGztB,EAAEytB,IAAI,GAAG3mB,EAAEmyG,EAAEA,EAAE3uG,EAAE,GAAGmjB,EAAE,GAAG,OAAOpK,EAAErS,GAAGlK,IAAImyG,GAAG,CAAC,GAAG51F,EAAEpS,EAAG,GAAGuvB,EAAEn2B,EAAEvD,EAAEuD,EAAEuiK,eAAe,KAAMvpJ,QAAQ,IAAIvc,GAAGA,IAAIrD,IAAI+8B,EAAEn2B,EAAEvD,EAAEuD,EAAEuiK,SAASvpJ,KAAKmd,EAAEn2B,EAAE+hK,EAAE/hK,EAAEuiK,SAAS58J,EAAE3F,EAAEgZ,EAAE,EAAE,IAAIA,GAAG,IAAImd,EAAEn2B,EAAEs1H,EAAEt1H,EAAEuiK,SAAS58J,EAAE3F,EAAEgZ,EAAE,EAAE,KAAKmd,EAAEn2B,EAAEwkK,EAAGxkK,EAAEuiK,SAAS58J,EAAE3F,EAAEgZ,EAAE,GAAG,IAAIA,EAAE,EAAE5f,EAAEqD,EAAE,IAAImyG,GAAGjoG,EAAE,IAAIC,EAAE,GAAGnK,IAAImyG,GAAGjoG,EAAE,EAAEC,EAAE,IAAID,EAAE,EAAEC,EAAE,EAAE,CAAC,CAAysB,SAAS8uJ,EAAE11J,EAAEC,EAAEtK,EAAEytB,GAAGzd,EAAE3F,GAAG7N,GAAG,IAAIixB,EAAE,EAAE,GAAG,GAAtuF,SAAWpjB,EAAEC,EAAEtK,EAAEytB,GAAG3I,EAAEza,GAAGojB,IAAIpK,EAAEhZ,EAAErK,GAAGqjB,EAAEhZ,GAAGrK,IAAI2pK,EAAErC,SAASj9J,EAAE8+J,YAAY9+J,EAAEsL,OAAOrL,EAAEtK,EAAEqK,EAAEiS,SAASjS,EAAEiS,SAAStc,CAAC,CAA+nFqM,CAAEhC,EAAEC,EAAEtK,GAAE,EAAG,CAA+sB,IAAI2pK,EAAEt/J,EAAE,mBAAmBu/J,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAE9xK,EAAE,EAAE6uK,EAAE,EAAEkD,EAAE,EAAYH,EAAE,GAAGK,EAAE,IAAIC,EAAED,EAAE,EAAEL,EAAEhrB,EAAE,GAAGuoB,EAAE,GAAGxiI,EAAE,EAAEulI,EAAE,EAAEC,EAAE,GAAGN,EAAE,GAAGO,EAAE,EAAEb,EAAE,IAAI3B,EAAE,GAAGzsC,EAAE,GAAGkvjjK,MAAM,GAAG8kK,EAAE,IAAIjhJ,EAAEo/I,GAAI,IAAIJ,EAAG,IAAI7iK,MAAM,EAAEw5I,GAAG31H,EAAEg/I,GAAI,IAAIS,EAAG,IAAItjK,MAAvE,KAAiF6jB,EAAEy/I,GAAI,IAAItC,EAAG,IAAIhhK,MAAM4kK,KAAO/gJ,EAAEm9I,GAAI,IAAIP,EAAG,IAAIzgK,MAAMwkK,GAAG3gJ,EAAE48I,GAAI,IAAIH,EAAG,IAAItgK,MAAMw5I,GAAG31H,EAAEy8I,GAAI,IAAI8E,EAAGhB,EAAGiB,GAAGC,IAAG,EAAGlvK,EAAEkuK,SAA78C,SAAW7jK,GAAG6kK,KAAh5G,WAAa,IAAI7kK,EAAEC,EAAEtK,EAAEytB,EAAEhqB,EAAEw1G,EAAE,IAAIrvG,MAAM+kK,EAAE,GAAG,IAAI3uK,EAAE,EAAEytB,EAAE,EAAEA,EAAE2gJ,EAAE,EAAE3gJ,IAAI,IAAI48I,EAAG58I,GAAGztB,EAAEqK,EAAE,EAAEA,EAAE,GAAGykK,EAAGrhJ,GAAGpjB,IAAIugK,EAAG5qK,KAAKytB,EAAE,IAAIm9I,EAAG5qK,EAAE,GAAGytB,EAAEhqB,EAAE,EAAEgqB,EAAE,EAAEA,EAAE,GAAGA,IAAI,IAAIy8I,EAAGz8I,GAAGhqB,EAAE4G,EAAE,EAAEA,EAAE,GAAGunK,EAAGnkJ,GAAGpjB,IAAI6iK,EAAGzpK,KAAKgqB,EAAE,IAAIhqB,IAAI,EAAEgqB,EAAE21H,EAAE31H,IAAI,IAAIy8I,EAAGz8I,GAAGhqB,GAAG,EAAE4G,EAAE,EAAEA,EAAE,GAAGunK,EAAGnkJ,GAAG,EAAEpjB,IAAI6iK,EAAG,IAAIzpK,KAAKgqB,EAAE,IAAInjB,EAAE,EAAEA,GAAGqkK,EAAErkK,IAAI2uG,EAAE3uG,GAAG,EAAE,IAAID,EAAE,EAAEA,GAAG,KAAKwiK,EAAG,EAAExiK,EAAE,GAAG,EAAEA,IAAI4uG,EAAE,KAAK,KAAK5uG,GAAG,KAAKwiK,EAAG,EAAExiK,EAAE,GAAG,EAAEA,IAAI4uG,EAAE,KAAK,KAAK5uG,GAAG,KAAKwiK,EAAG,EAAExiK,EAAE,GAAG,EAAEA,IAAI4uG,EAAE,KAAK,KAAK5uG,GAAG,KAAKwiK,EAAG,EAAExiK,EAAE,GAAG,EAAEA,IAAI4uG,EAAE,KAAK,IAAI55D,EAAEwtH,EAAG6B,EAAE,EAAEz1D,GAAG5uG,EAAE,EAAEA,EAAE+4I,EAAE/4I,IAAIoiK,EAAG,EAAEpiK,EAAE,GAAG,EAAEoiK,EAAG,EAAEpiK,GAAG2G,EAAE3G,EAAE,GAAG2kK,EAAG,IAAIloK,EAAE+lK,EAAGiC,EAAGL,EAAE,EAAEC,EAAEC,GAAGX,EAAG,IAAIlnK,EAAE2lK,EAAGmF,EAAG,EAAExuB,EAAEurB,GAAGM,GAAG,IAAInoK,EAAE,IAAI8C,MAAM,GAAGmlK,EAAG,EAAEpD,EAAEiD,EAAE,CAA+2FhsJ,GAAIssJ,IAAG,GAAI7kK,EAAEyiK,OAAO,IAAIrpK,EAAE4G,EAAEmiK,UAAUwC,GAAI3kK,EAAE0iK,OAAO,IAAItpK,EAAE4G,EAAEqiK,UAAUsB,GAAI3jK,EAAE2iK,QAAQ,IAAIvpK,EAAE4G,EAAEuiK,QAAQqC,IAAI5kK,EAAEujK,OAAO,EAAEvjK,EAAEwjK,SAAS,EAAEpvJ,EAAEpU,EAAE,EAAk0CrK,EAAE+vK,iBAAiBhQ,EAAE//J,EAAEspK,gBAAzvC,SAAWj/J,EAAEC,EAAEtK,EAAEytB,GAAG,IAAI3mB,EAAErD,EAAEw1G,EAAE,EAAE5uG,EAAE+zJ,MAAM,GAAG/zJ,EAAE66J,KAAK4I,YAAYQ,IAAIjkK,EAAE66J,KAAK4I,UAApiB,SAAWzjK,GAAG,IAAIC,EAAEtK,EAAE,WAAW,IAAIsK,EAAE,EAAEA,GAAG,GAAGA,IAAItK,KAAK,EAAE,GAAG,EAAEA,GAAG,IAAIqK,EAAEmiK,UAAU,EAAEliK,GAAG,OAAO4+J,EAAE,GAAG,IAAI7+J,EAAEmiK,UAAU,KAAK,IAAIniK,EAAEmiK,UAAU,KAAK,IAAIniK,EAAEmiK,UAAU,IAAI,OAAOxB,EAAE,IAAI1gK,EAAE,GAAGA,EAAEmkK,EAAEnkK,IAAI,GAAG,IAAID,EAAEmiK,UAAU,EAAEliK,GAAG,OAAO0gK,EAAE,OAAO9B,CAAC,CAA0UjJ,CAAE51J,IAAI0F,EAAE1F,EAAEA,EAAEyiK,QAAQ/8J,EAAE1F,EAAEA,EAAE0iK,QAAQ9zD,EAA55B,SAAW5uG,GAAG,IAAIC,EAAE,IAAI+mE,EAAEhnE,EAAEA,EAAEmiK,UAAUniK,EAAEyiK,OAAO6F,UAAUthG,EAAEhnE,EAAEA,EAAEqiK,UAAUriK,EAAE0iK,OAAO4F,UAAU5iK,EAAE1F,EAAEA,EAAE2iK,SAAS1iK,EAAEqhK,EAAE,EAAErhK,GAAG,GAAG,IAAID,EAAEuiK,QAAQ,EAAEQ,EAAG9iK,GAAG,GAAGA,KAAK,OAAOD,EAAEqjK,SAAS,GAAGpjK,EAAE,GAAG,EAAE,EAAE,EAAEA,CAAC,CAAsuBusD,CAAExsD,GAAGvD,EAAEuD,EAAEqjK,QAAQ,EAAE,IAAI,GAAEjqK,EAAE4G,EAAEsjK,WAAW,EAAE,IAAI,IAAK7mK,IAAIA,EAAErD,IAAIqD,EAAErD,EAAEzD,EAAE,EAAEA,EAAE,GAAG8G,IAAQ,IAALwD,EAAOy1J,EAAE11J,EAAEC,EAAEtK,EAAEytB,GAAGpjB,EAAE06J,WAAW6E,GAAGnmK,IAAIqD,GAAGkJ,EAAE3F,GAAGghK,GAAG,IAAI59I,EAAE,EAAE,GAAG,GAAGwqD,EAAE5tE,EAAEwiK,EAAGJ,KAAMz8J,EAAE3F,GAAGkkK,GAAG,IAAI9gJ,EAAE,EAAE,GAAG,GAAj5B,SAAWpjB,EAAEC,EAAEtK,EAAEytB,GAAG,IAAI3mB,EAAE,IAAIkJ,EAAE3F,EAAEC,EAAE,IAAI,GAAG0F,EAAE3F,EAAErK,EAAE,EAAE,GAAGgQ,EAAE3F,EAAEojB,EAAE,EAAE,GAAG3mB,EAAE,EAAEA,EAAE2mB,EAAE3mB,IAAIkJ,EAAE3F,EAAEA,EAAEuiK,QAAQ,EAAEQ,EAAGtmK,GAAG,GAAG,GAAG6C,EAAEU,EAAEA,EAAEmiK,UAAUliK,EAAE,GAAGX,EAAEU,EAAEA,EAAEqiK,UAAU1sK,EAAE,EAAE,CAAkwB8/J,CAAEz1J,EAAEA,EAAEyiK,OAAO6F,SAAS,EAAEtoK,EAAE0iK,OAAO4F,SAAS,EAAE15D,EAAE,GAAGhhC,EAAE5tE,EAAEA,EAAEmiK,UAAUniK,EAAEqiK,YAAYjuJ,EAAEpU,GAAGojB,GAAG3I,EAAEza,EAAE,EAA04BrK,EAAEmrK,UAA34B,SAAW9gK,EAAEC,EAAEtK,GAAG,OAAOqK,EAAE8+J,YAAY9+J,EAAEojK,MAAM,EAAEpjK,EAAEmhK,UAAUlhK,IAAI,EAAE,IAAID,EAAE8+J,YAAY9+J,EAAEojK,MAAM,EAAEpjK,EAAEmhK,SAAS,GAAG,IAAIlhK,EAAED,EAAE8+J,YAAY9+J,EAAEkjK,MAAMljK,EAAEmhK,UAAU,IAAIxrK,EAAEqK,EAAEmhK,WAAW,IAAIlhK,EAAED,EAAEmiK,UAAU,EAAExsK,MAAMqK,EAAE42I,UAAU32I,IAAID,EAAEmiK,UAAU,GAAG5B,EAAG5qK,GAAGyuK,EAAE,MAAMpkK,EAAEqiK,UAAU,EAAEzzD,EAAE3uG,OAAOD,EAAEmhK,WAAWnhK,EAAEmjK,YAAY,CAAC,EAAqnBxtK,EAAE8vK,UAAp0C,SAAWzlK,GAAG2F,EAAE3F,EAAEghK,GAAG,EAAE,GAAG7qI,EAAEn2B,EAAE0jK,EAAElB,GAAnkJ,SAAWxiK,GAAG,KAAKA,EAAEwjK,UAAUxqJ,EAAEhZ,EAAEA,EAAEujK,QAAQvjK,EAAEujK,OAAO,EAAEvjK,EAAEwjK,SAAS,GAAGxjK,EAAEwjK,UAAU,IAAIxjK,EAAE8+J,YAAY9+J,EAAEiS,WAAW,IAAIjS,EAAEujK,OAAOvjK,EAAEujK,SAAS,EAAEvjK,EAAEwjK,UAAU,EAAE,CAA86I58J,CAAE5G,EAAE,CAAuyC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAsNsK,EAAEnO,QAA3M,WAAaM,KAAKipK,MAAM,KAAKjpK,KAAKkpK,QAAQ,EAAElpK,KAAKmpK,SAAS,EAAEnpK,KAAKotK,SAAS,EAAEptK,KAAKopK,OAAO,KAAKppK,KAAKspK,SAAS,EAAEtpK,KAAK0oK,UAAU,EAAE1oK,KAAK4sK,UAAU,EAAE5sK,KAAKif,IAAI,GAAGjf,KAAKkqD,MAAM,KAAKlqD,KAAKqxK,UAAU,EAAErxK,KAAKitK,MAAM,CAAC,CAAY,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAF31gB,CAEg2gB,qBCbvohB,IAAI9+J,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,YAAa,MACb,eAAgB,MAChB,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASioK,EAAez5I,GACvB,IAAI/7B,EAAKy1K,EAAsB15I,GAC/B,OAAO25I,EAAoB11K,EAC5B,CACA,SAASy1K,EAAsB15I,GAC9B,IAAI25I,EAAoBnwJ,EAAEhY,EAAKwuB,GAAM,CACpC,IAAItyB,EAAI,IAAI/B,MAAM,uBAAyBq0B,EAAM,KAEjD,MADAtyB,EAAEsM,KAAO,mBACHtM,CACP,CACA,OAAO8D,EAAIwuB,EACZ,CACAy5I,EAAe9hK,KAAO,WACrB,OAAOD,OAAOC,KAAKnG,EACpB,EACAioK,EAAe1mK,QAAU2mK,EACzB52K,EAAOC,QAAU02K,EACjBA,EAAex1K,GAAK,iBC5RpBnB,EAAOC,QAAU,MACV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIs9F,EAAM,CACPx6F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8yK,QAAQ50E,EAAKl+F,MAAMhD,GAAGwJ,KAAMxG,MAAM+yK,cAC3C,cCpCH/2K,EAAOC,QAAU,MACV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MASZD,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMhD,GAAGg2K,WAAWC,YAAcjzK,MAAMC,OACrC,CACGgB,QAAS,SAAUgyG,EAAWn0G,EAAMsf,GACjC,IAAI/T,EAAS,GAEC4oG,EAAUlpF,KAAK,CAAC,IAAM,IAC5BvpB,SAASmb,IACd,GAAW,MAAPA,EAAJ,CAEA,IAAIvV,EACDuV,EAAIyC,EAAK1W,WAAaiU,EAAIyC,EAAK1W,SAAW,cAGzCtB,GAAQsD,MAAMC,QAAQvD,GACvBiE,GAAUjE,EAAK1D,OAEP,MAAR0D,GACQ,IAARA,GACQ,GAARA,GACQ,SAARA,GACQ,KAARA,IAEAiE,GAAU,EAfU,CAgBvB,IAGHvL,EAAK4qC,UAAYr/B,CACpB,GAEHrK,MAAMhD,GAAGg2K,WAAWE,WAE1B,oBC1DH,IAAIngH,EAAgB,CACjB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAIX/2D,EAAOC,QAAU,MACdC,cAAe,CAEf0uE,eAAezuE,GACZA,EAAI4sE,OAAS5sE,EAAI4sE,QAAU,CAAC,EAE5BhW,EAAcvyD,SAASusI,IACpB,IAAIrwI,EAAY,IAAIqwI,EAAU5wI,GAC9BA,EAAI4sE,OAAOrsE,EAAUkE,KAAOlE,CAAS,IAIxCP,EAAImC,GAAGyqE,OAAS5sE,EAAI4sE,MACvB,cC7BH/sE,EAAOC,QAAU,MAGV2E,UACD,MAAO,gBACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAKrBzE,EAAIQ,OAAO,yBAEpBJ,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM4nF,QAAQ27B,OAAO4vD,SAAW,CAC7Bl2K,KAAM,QACNM,MAAO,IACPD,OAAQ,IACRyB,QAAS,EACTf,KAAM,CACHf,KAAM,WACN4c,OAAO,EACP3b,YAAY,EACZmgE,YAAY,IAIlBr+D,MAAM4nF,QAAQurF,SAAWnzK,MAAMC,OAC5B,CACGmzK,UAAW,YAEdpzK,MAAM4nF,QAAQ1qE,KAEpB,cCxDHlhB,EAAOC,QAAU,MAGV2E,UACD,MAAO,UACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIs9F,EAAM,CACPx6F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8yK,QAAQ50E,EAAKl+F,MAAMqzK,YAAarzK,MAAMhD,GAAGwJ,KAClD,cCtCHxK,EAAOC,QAAU,MAGV2E,UACD,MAAO,UACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIs9F,EAAM,CACPx6F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8yK,QAAQ50E,EAAKl+F,MAAMqzK,YAAarzK,MAAMhD,GAAG0vF,KAClD,cCtCH1wF,EAAOC,QAAU,MAGV2E,UACD,MAAO,cACV,CAEA1E,YAAYC,GAoBT,IAAI+hG,EAAM,CACPx6F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8yK,QAAQ50E,EAAKl+F,MAAMqzK,YAAarzK,MAAMhD,GAAGs2K,SAClD,cCtCHt3K,EAAOC,QAAU,MACV2E,UACD,MAAO,mBACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIs9F,EAAM,CACPx6F,KAAMnH,KAAKqE,IACX8a,MAAO,WACJ,OAAO,CACV,GAEHnf,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8yK,QAAQ50E,EAAKl+F,MAAMhD,GAAG6kE,SAAU7hE,MAAMoxI,UAC/C,oBCxCH,IAAIj2G,EAAY,EAAQ,OACxBn/B,EAAOC,QAAU,cAAoCk/B,EAC9Cv6B,UACD,MAAO,eACV,CAEA1E,YAAYC,GACTE,QAQQF,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAX9B,IAeIs9F,EAAM,CACPx6F,KAAMnH,KAAKqE,IACXD,SAAU,CACPlD,IAAK,UACLS,YAAY,GAEfq1K,MAAO,SAAU/0K,GACd,IAAIg1K,EAAiBh1K,EAAOg1K,eACvBh1K,EAAOg1K,eACP,CAAC,EACFv/C,EAAWz1H,EAAOy1H,SAAWz1H,EAAOy1H,SAAW,CAAC,EAEpD,IAAK,IAAI7tH,KAAQ6tH,EACd,GACGvqH,MAAMC,QAAQsqH,EAAS7tH,KACK,iBAArB6tH,EAAS7tH,GAAM,GACvB,CACC,IAAIqtK,EAAO,GACXx/C,EAAS7tH,GAAM5F,SAASmK,IACjBA,EAAKxN,IAAIs2K,EAAK5yK,KAAK8J,EAAKxN,GAAG,IAElC82H,EAAS7tH,GAAQqtK,CACpB,CAGHC,OAAOC,WAAWp3K,KAAK0N,MAAOupK,EAAgB,CAM9C,GAAGviK,MAAK,SAAUxK,GAIfA,EAAKmtK,WAAa,CACfxtK,KAAM6tH,IAERu/C,EAAexnH,YAAc,IAAIxrD,SAAS4rD,IAExB,UAAbA,EAAKjuD,MACU,SAAfiuD,EAAKC,QACLD,EAAKh/B,OAEL3mB,EAAK2oE,KAAKhjB,EAAKh/B,OAAO,SAAUtvB,GAC7BU,EAAOq1K,UAAWr1K,EAAOq1K,SAASznH,EAAKh/B,MAE1C,GACH,GAqBN,GACH,GAEH7wB,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8yK,QAAQ50E,EAAKl+F,MAAMhD,GAAGC,KAC/B,cC5GHjB,EAAOC,QAAU,MACV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIs9F,EAAM,CACPx6F,KAAMnH,KAAKqE,IAEXD,SAAU,CACPlD,IAAK,iBAIRq2K,UAAW,WACR,IAAIrhK,EAAMlW,KAAK2nG,eAAehlG,MAC9B,OAAIuT,EAAYnC,KAAK0D,MAAMvB,GAEf,EACf,GAEHlW,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8yK,QAAQ50E,EAAKl+F,MAAMhD,GAAG4N,KAC/B,cChDH5O,EAAOC,QAAU,MAGV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAKrBzE,EAAIQ,OAAO,qBAEpBJ,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM4nF,QAAQ27B,OAAOmsD,KAAO,CACzBzyK,KAAM,QACNe,KAAM,CACHf,KAAM,WACNM,MAAO,IACPD,OAAQ,IACRa,KAAM,SAIZ6B,MAAM4nF,QAAQ8nF,KAAO1vK,MAAMC,OACxB,CACGmzK,UAAW,QAEdpzK,MAAM4nF,QAAQ1qE,KAEpB,cCrDHlhB,EAAOC,QAAU,MACV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MASZD,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMhD,GAAGg2K,WAAW3tG,YAAcrlE,MAAMC,OACrC,CACGgB,QAAS,SAAUgyG,EAAWn0G,EAAMsf,GACjC,IAAI/T,EAAS,EAEb4oG,EAAU8gE,SAAQ,SAAUp4J,GACzB,IAAIgP,EAASsoF,EAAUvpF,QAAQ/N,GAE3BvV,EAAOgY,EAAKjc,MAAM4a,OAAO4N,GAGzBvkB,IACDiE,GAAU2rC,WAAW5vC,GAE3B,IAEAtH,EAAK4qC,UAAYr/B,CACpB,GAEHrK,MAAMhD,GAAGg2K,WAAWE,WAE1B,cChDHl3K,EAAOC,QAAU,MAGV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIs9F,EAAM,CACPx6F,KAAMnH,KAAKqE,IACXD,SAAU,CACPxC,KAAM,OACNZ,MAAO,EACPS,KAAM,CACHE,YAAY,EACZ27F,QAAQ,EACRh4B,SAAU,SAASttD,EAAKy0B,GACrB,MACG,UACCz0B,EAAIy/J,OAAS,MAAQz/J,EAAIrV,MAAQ,OAASqV,EAAIrV,OAC/C,SAEN,EACAy+E,MAAO,WACJphF,KAAK+vF,SACR,EACA3tF,GAAI,CACDm2G,cAAe,SAAS33G,EAAIyJ,GACrBrK,KAAKmtB,QAAQvsB,GAAI62K,SAClBz3K,KAAKyL,gBAAgBisK,eAAe,IACpC13K,KAAK4E,KACFjB,GAAG3D,KAAKyL,gBAAgBxJ,OAAO01K,QAAQhwE,gBAGhD,MAKZ3nG,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8yK,QAAQ50E,EAAKl+F,MAAMhD,GAAG08E,QAC/B","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\")\n                        model.normalizeData(data.data);\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.js\";\n// NOTE: moved to require() because using import with webix_debug.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix-debug.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      console.error(\"TODO: ABFactory.notify(): pass error off to analytics\");\n      console.error(error);\n      console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n                           model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         ) {\n            return;\n         }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {};\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(updateItemData);\n                     if (\n                        this.__treeCollection &&\n                        this.__treeCollection.exists(d.id)\n                     )\n                        this.__treeCollection.updateItem(d.id, updateItemData);\n\n                     if (\n                        this.__dataCollection &&\n                        this.__dataCollection.exists(d.id)\n                     ) {\n                        this.__dataCollection.updateItem(d.id, updateItemData);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(res.data[0]);\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         if (this.isCursorFollow && this.getCursor()?.id != deleteId) {\n            return;\n         }\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal) &&\n                     relateVal.filter(\n                        (v) =>\n                           v == deleteId ||\n                           v.id == deleteId ||\n                           v[PK] == deleteId\n                     ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[this.datasource.PK()],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            this.__dataCollection.parse(data);\n         }\n\n         // In order to get the total_count updated I had to use .load()\n         queueOperation(() => {\n            this.__dataCollection.load(() => {\n               // If this dc loads all, then it has to filter data by the parent dc\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return data;\n            });\n         }, 1);\n\n         // In order to keep detail and graphs loading properly I had to keep .parse()\n         // queueOperation(() => {\n         //    this.__dataCollection.clearAll();\n         //    this.__dataCollection.parse(data);\n         // }, 50);\n\n         // this does nothing???\n         this.parseTreeCollection(data);\n\n         queueOperation(() => {\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n         }, 5);\n         queueOperation(() => {\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 20);\n         queueOperation(() => {\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n         }, 10);\n         queueOperation(() => {\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n         }, 5);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return null;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter((val) => (val.id || val[PK] || val) == linkCursor.id)\n               .length > 0\n         );\n      } else {\n         return (linkVal.id || linkVal[PK] || linkVal) == linkCursor.id;\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            if (\n               objectLink &&\n               objectLink.PK() != \"id\" &&\n               d[relationName] &&\n               !d[relationName].id\n            ) {\n               // is array\n               if (d[relationName].forEach) {\n                  d[relationName].forEach((subData) => {\n                     if (subData[objectLink.PK()])\n                        subData.id = subData[objectLink.PK()];\n                  });\n               } else if (d[relationName][objectLink.PK()]) {\n                  d[relationName].id = d[relationName][objectLink.PK()];\n               }\n            }\n\n            var relatedMlFields = objectLink.multilingualFields();\n            if (relatedMlFields.length) {\n               objectLink.translate(\n                  d[relationName],\n                  d[relationName],\n                  relatedMlFields\n               );\n            }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) d[c.columnName] = d[relationName];\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         this.__linkProblems = this.__linkProblems ?? [];\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      var task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         // get any field's it provides\n         var value = task[method].apply(task, param);\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (typeof value != \"undefined\") {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = value.indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = value.indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     f.settings.isCustomFK &&\n                     // 1:M\n                     ((f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                        // 1:1 isSource = true\n                        (f.settings.linkType == \"one\" &&\n                           f.settings.linkViaType == \"one\" &&\n                           f.settings.isSource))\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(f);\n\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n            let columnName = field.columnName;\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f && f.fieldIsFilterable());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result = rowData[colName] || rowData.id || rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => opt.field === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      if (data == null)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null) data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.columnName] ||\n                        myState[\"data\"][field.relationName()]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   moduleList: [],\n   queryList: [],\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.moduleList =\n         this.settings.moduleList ||\n         ABViewReportManagerPropertyComponentDefaults.moduleList;\n\n      this.settings.queryList =\n         this.settings.queryList ||\n         ABViewReportManagerPropertyComponentDefaults.queryList;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it witht hat field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (this?.datacollectionLink?.getCursor()?.id == value) {\n               cursorUpdated = true;\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      if (\n         this.__bindComponentIds.indexOf(component.config.id) > -1 &&\n         $$(component.config.id).data &&\n         $$(component.config.id).data.find &&\n         $$(component.config.id).data.find({}).length > 0\n      )\n         return;\n      // keep component id to an array\n      else this.__bindComponentIds.push(component.config.id);\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\"> \n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            webix.ui(ui).start();\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // cache options if not a xxx->one connection\n                  if (this?.settings?.linkViaType != \"one\") {\n                     this.AB.Storage.set(storageID, this._options);\n                  }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        if (\n                           field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)\n                        ) {\n                           newVal = field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue && theEditor.getValue()) {\n         theEditor.setValue(theEditor.getValue());\n         // } else if (this._selectedData && this._selectedData.length) {\n         //    theEditor.setValue(this.editFormat(this._selectedData));\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor = \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            message: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\";\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} width:${options.width}; height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCSVImporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return [\n            `<div class=\"ab-carousel-image-container\">`,\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />`,\n            settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\",\n            `<div class=\"ab-carousel-image-icon\">`,\n            settings.detailsPage || settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\",\n            settings.editPage || settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\",\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>`,\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>`,\n            `</div>`,\n            `</div>`,\n         ].join(\"\");\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n      let valueField2 = this.valueField2();\n      if (!valueField2) {\n         this.warningsMessage(\n            `can't resolve value2 field[${this.settings.columnValue2}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               formVals[f.columnName] = f.format(cursorFormVals, true);\n            }\n         }\n      );\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1)\n            abWebix.confirm({\n               title: self.label(\"Delete data\"),\n               text: self.label(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     const deleteRow = async () => {\n                        try {\n                           const response = await CurrentObject.model().delete(\n                              id.row\n                           );\n\n                           if (response.numRows > 0) {\n                              $DataTable.remove(id);\n                              $DataTable.clearSelection();\n                           } else\n                              abWebix.alert({\n                                 text: self.label(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                        } catch (err) {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        }\n                     };\n\n                     deleteRow();\n                  }\n\n                  $DataTable.clearSelection();\n\n                  return true;\n               },\n            });\n         else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n            };\n\n            this.__handler_dc_loadData = () => {\n               if (\n                  $DataTable.config.view === \"treetable\" &&\n                  CurrentObject &&\n                  !CurrentObject.isGroup\n               ) {\n                  $DataTable.clearAll();\n                  $DataTable.parse(dc.getData() || []);\n\n                  this.grouping();\n                  this.ready();\n               }\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow() {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      $$(this.ids.component).show($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewTextComponent(this);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               view: \"button\",\n               name: \"import\",\n               id: ids.importButton,\n               value: this.label(\"Import\"),\n               css: \"webix_primary\",\n               disabled: true,\n               click: () => {\n                  this.import();\n               },\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = {};\n\n         // Set parent's data collection cursor\n         if (objectLink && linkConnectFields.length && linkValues) {\n            linkConnectFields.forEach((f) => {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               newRowData[f.columnName] = {};\n               newRowData[f.columnName][linkColName] =\n                  linkValues[linkColName] || linkValues.id;\n            });\n         }\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % 50 == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, 50);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               // \tlet item = this.getItem(rowId);\n\n               // \t_logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key]).hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component();\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.AB._App);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               scrollview: \"\",\n               dataFlexView: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.scrollview,\n            view: \"scrollview\",\n            scroll: \"y\",\n            body: {\n               id: ids.dataFlexView,\n               view: \"flexlayout\",\n               paddingX: 15,\n               paddingY: 19,\n               type: \"space\",\n               cols: [],\n            },\n            on: {\n               onAfterScroll: async () => {\n                  const pos = $$(ids.scrollview).getScrollState();\n\n                  await this.scroll(pos);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      const dataView = $$(ids.dataFlexView);\n\n      // initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      // if (dc.datacollectionLink && dc.fieldLink) {\n      //    dc.bind(dataView, dc.datacollectionLink, dc.fieldLink);\n      // } else {\n      //    dc.bind(dataView);\n      // }\n      // track all flexlayout component IDs on the data collectino so we can notify them of changes\n      dc.attachFlexlayout(dataView);\n      dc.on(\"initializingData\", () => {\n         this.busy();\n      });\n      dc.on(\"initializedData\", () => {\n         this.ready();\n      });\n      dc.on(\"loadData\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"update\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"delete\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"create\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n\n      // this.eventClear();\n      //\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"loadData\",\n      //    listener: () => {\n      //       com.renderData();\n      //    },\n      // });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.initialized) this.renderData();\n   }\n\n   get yPosition() {\n      return this._yPosition ?? 0;\n   }\n\n   set yPosition(pos) {\n      this._yPosition = pos;\n   }\n\n   busy() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.disable();\n\n      const abWebix = this.AB.Webix;\n\n      if (!Scroll.showProgress) abWebix.extend(Scroll, abWebix.ProgressBar);\n\n      Scroll.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.enable();\n\n      const AB = this.AB;\n\n      if (Scroll && !Scroll.hideProgress)\n         AB.Webix.extend(Scroll, AB.Webix.ProgressBar);\n\n      Scroll.hideProgress();\n   }\n\n   renderData() {\n      const ids = this.ids;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      const records = [];\n      const dc = this.datacollection;\n\n      if (!dc) {\n         this.ready();\n\n         return;\n      }\n\n      const Layout = $$(ids.dataFlexView) || $$(ids.component);\n\n      if (!Layout || isNaN(Layout.$width)) {\n         this.ready();\n\n         return;\n      }\n\n      const baseView = this.view;\n      const xCount = parseInt(this.settings.xCount);\n      const recordWidth = Math.floor(\n         (Layout.$width - 20 - xCount * 20) / xCount\n      );\n\n      const rows = dc.getData();\n\n      // if this amount of data is already parsed just skip the rest.\n      if (Layout.currentLength === rows.length) {\n         this.ready();\n\n         return;\n      }\n\n      Layout.currentLength = rows.length;\n\n      // store total of rows\n      this._startPos = Layout.getChildViews ? Layout.getChildViews().length : 0;\n\n      let stopPos = rows.length;\n\n      if (dc.settings.loadAll || this._startPos === 0) stopPos = rows.length;\n      else if (rows.length - this._startPos > 20) stopPos = this._startPos + 20;\n\n      for (let i = this._startPos; i < stopPos; i++) {\n         // get the components configuation\n         const detailCom = new ABViewDetailComponent(baseView, rows[i].id);\n         const _ui = detailCom.ui();\n\n         // adjust the UI to make sure it will look like a \"card\"\n         _ui.type = \"space\";\n         _ui.css = \"ab-detail-view\";\n\n         if (detailsPage || editPage) {\n            _ui.css += ` ab-detail-hover ab-record-${rows[i].id}`;\n\n            if (detailsPage) _ui.css += \" ab-detail-page\";\n\n            if (editPage) _ui.css += \" ab-edit-page\";\n         }\n\n         _ui.paddingX = 10;\n         _ui.paddingY = 6;\n         _ui.minWidth = recordWidth - 10;\n         _ui.maxWidth = recordWidth;\n\n         if (Layout.addView) {\n            Layout.addView(_ui, -1);\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[i]), 0);\n         } else records.push(_ui);\n      }\n\n      if (records.length) {\n         const flexlayout = {\n            id: ids.dataFlexView,\n            view: \"flexlayout\",\n            paddingX: 15,\n            paddingY: 19,\n            type: \"space\",\n            cols: records,\n         };\n\n         this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n\n         for (let j = this._startPos; j < stopPos; j++) {\n            const detailCom = new ABViewDetailComponent(baseView, rows[j].id);\n\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[j]), 0);\n         }\n      }\n\n      if ($$(ids.scrollview)) {\n         $$(ids.scrollview).scrollTo(0, this.yPosition);\n\n         if (detailsPage || editPage) {\n            Layout.$view.onclick = (e) => {\n               let clicked = false;\n               let divs = e.path ?? [];\n\n               // NOTE: Some web browser clients do not support .path\n               if (!divs.length) {\n                  divs.push(e.target);\n                  divs.push(e.target.parentNode);\n               }\n\n               if (editPage) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem_header\") > -1\n                     ) {\n                        clicked = true;\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(editPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n                        break;\n                     }\n                  }\n               }\n\n               if (detailsPage && !clicked) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem\") > -1\n                     ) {\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(detailsPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n\n                        break;\n                     }\n                  }\n               }\n            };\n         }\n      }\n\n      //Add data-cy attributes for cypress tests\n      const name = baseView.name.replace(\".dataview\", \"\");\n\n      Layout.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n\n      Layout.getChildViews().forEach((child, i) => {\n         const uuid = rows[i + this._startPos][\"uuid\"];\n         const view = child.$view;\n\n         view\n            .querySelector(\".webix_accordionitem_body\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item ${name} ${uuid} ${baseView.id}`\n            );\n         view\n            .querySelector(\".webix_accordionitem_button\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item button ${name} ${uuid} ${baseView.id}`\n            );\n      });\n\n      this.ready();\n   }\n\n   emptyView() {\n      const ids = this.ids;\n      const flexlayout = {\n         id: ids.dataFlexView,\n         view: \"flexlayout\",\n         type: \"clean\",\n         padding: 10,\n         css: { background: \"#ebedf0 !important\" },\n         cols: [],\n      };\n\n      this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n   }\n\n   /**\n    * @method scroll\n    * @param pos - {\n    * \t\t\t\t\tx: {integer},\n    * \t\t\t\t\ty: {integer}\n    * \t\t\t\t}\n    */\n   async scroll(pos) {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n      const loadWhen = 40;\n      const y = pos.y;\n      const maxYPos = Layout.$height - Scroll.$height;\n\n      if (maxYPos - y <= loadWhen) {\n         if (this.loadMoreTimer) return;\n\n         this.yPosition = y;\n\n         const dc = this.datacollection;\n\n         if (!dc) return;\n\n         if (Layout.getChildViews().length >= dc.totalCount) return;\n\n         // loading cursor\n         this.busy();\n\n         await dc.loadData(Layout.getChildViews().length || 0);\n\n         this.loadMoreTimer = setTimeout(() => {\n            this.loadMoreTimer = null;\n         }, 1100);\n      }\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field || !b?.field) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field.key === \"formula\" && b.field.key === \"calculate\")\n            return -1;\n         else if (a.field.key === \"calculate\" && b.field.key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     const dv = this.datacollection;\n                     const ds = dv ? dv.datasource : null;\n                     const needRecalculate =\n                        !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(null, this.ids.detailItem);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            if (dcCursor) {\n               const treeCursor = dc.getCursor(true);\n\n               dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            } else dataList.push(...this.AB.cloneDeep(dc.getData()));\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = this.setReportValues(\n                     data,\n                     f,\n                     fieldLabels,\n                     mlFields\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //\t\tfieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //\t\t\twe can buy newer version to support it\n            //\t\t\thttps://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         // \tif (imgBuffer) {\n         // \t\tvar maxWidth = 300;\n         // \t\tvar maxHeight = 160;\n\n         // \t\t// Find aspect ratio image dimensions\n         // \t\ttry {\n         // \t\t\tvar image = sizeOf(imgBuffer);\n         // \t\t\tvar ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         // \t\t\treturn [image.width * ratio, image.height * ratio];\n         // \t\t}\n         // \t\t// if invalid image, then should return 0, 0 sizes\n         // \t\tcatch (err) {\n         // \t\t\treturn [0, 0];\n         // \t\t}\n\n         // \t}\n         // \telse {\n         // \t\treturn [0, 0];\n         // \t}\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n               reloadView: `${\n                  idBase || `ABViewForm_${baseView.id}`\n               }_form_reloadView`,\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n      this.loadDcDataOfRecordRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   loadDcDataOfRecordRules() {\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC &&\n                  pullDataDC.dataStatus === pullDataDC.dataStatusFlag.notInitial\n               )\n                  pullDataDC.loadData();\n            }\n         );\n      });\n   }\n\n   async onShow(data) {\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const ids = this.ids;\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // if the cursor is cleared before or after we need to make\n         // sure the reload view button does not appear\n         if (settings.clearOnLoad || settings.clearOnSave)\n            $$(ids.reloadView)?.getParentView()?.removeView(ids.reloadView);\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n\n         if ($form) dc.bind($form);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required: field?.settings?.required || settings?.required || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         const currentVals = $formItem.getValue();\n\n         let selectedItems;\n         if (currentVals.indexOf(saveData.id) === -1)\n            selectedItems = currentVals\n               ? `${currentVals},${saveData.id}`\n               : saveData.id;\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData.id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      const template = `<div class=\"customField ${\n         formSettings.labelPosition\n      }\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: this.new_width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || this.new_width\n            : this.new_width;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            id: this.ids.pivot,\n            view: \"pivot\",\n            readonly: true,\n            removeMissed: settings.removeMissed,\n            totalColumn: settings.totalColumn,\n            separateLabel: settings.separateLabel,\n            min: settings.min,\n            max: settings.max,\n            height: settings.height,\n            format: (value) => {\n               const decimalPlaces = settings.decimalPlaces ?? 2;\n\n               return value && value != \"0\"\n                  ? parseFloat(value).toFixed(decimalPlaces || 0)\n                  : value;\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      const object = dc.datasource;\n      if (!object) return;\n\n      const $pivot = $$(ids.pivot);\n\n      if ($pivot && object instanceof ABObjectQuery) {\n         const customLabels = {};\n\n         object.fields().forEach((f) => {\n            customLabels[f.columnName] = f.label;\n         });\n\n         $pivot.define(\"fieldMap\", customLabels);\n      }\n\n      const populateData = () => {\n         const data = dc.getData();\n         const dataMapped = data.map((d) => {\n            const result = {};\n\n            object.fields().forEach((f) => {\n               if (\n                  f instanceof ABFieldCalculate ||\n                  f instanceof ABFieldFormula ||\n                  f instanceof ABFieldNumber\n               )\n                  result[f.columnName] = d[f.columnName];\n               else result[f.columnName] = f.format(d);\n            });\n\n            return result;\n         });\n\n         $pivot.parse(dataMapped);\n\n         const settings = this.settings;\n\n         // set pivot configuration\n         if (settings.structure) $pivot.setStructure(settings.structure);\n      };\n\n      this.view.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            populateData();\n         },\n      });\n\n      switch (dc.dataStatus) {\n         case dc.dataStatusFlag.notInitial:\n            dc.loadData();\n            break;\n\n         case dc.dataStatusFlag.initialized:\n            populateData();\n            break;\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign({ reportManager: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      const _uiReportManager = {\n         id: this.ids.reportManager,\n         view: \"reports\",\n         toolbar: true,\n         override: new Map([\n            [\n               reports.services.Backend,\n               class MyBackend extends reports.services.Backend {\n                  async getModules() {\n                     return settings.moduleList || [];\n                  }\n\n                  saveModule(id = abWebix.uid(), data) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     let indexOfModule = null;\n\n                     const module = settings.moduleList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfModule = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (module) settings.moduleList[indexOfModule] = data;\n                     // Add\n                     else settings.moduleList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteModule(id) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     settings.moduleList = settings.moduleList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getModels() {\n                     const reportModels = {};\n\n                     (\n                        baseView.application.datacollectionsIncluded() || []\n                     ).forEach((dc) => {\n                        const obj = dc.datasource;\n                        if (!obj) return;\n\n                        const reportFields = self.getReportFields(dc);\n\n                        // get connected data collections\n                        // let linkedFields = [];\n                        // (obj.connectFields() || []).forEach((f, index) => {\n                        //    let connectedDcs = ab.datacollections(\n                        //       (dColl) =>\n                        //          dColl &&\n                        //          dColl.datasource &&\n                        //          dColl.datasource.id === f.settings.linkObject\n                        //    );\n                        //    (connectedDcs || []).forEach((linkedDc) => {\n                        //       linkedFields.push({\n                        //          id: index + 1,\n                        //          name: linkedDc.label,\n                        //          source: dc.id,\n                        //          target: linkedDc.id\n                        //       });\n                        //    });\n                        // });\n\n                        // // MOCK UP for testing\n                        // let linkedFields = [\n                        //    {\n                        //       id: \"id\",\n                        //       name: \"id\",\n                        //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n                        //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n                        //    }\n                        // ];\n\n                        reportModels[dc.id] = {\n                           id: dc.id,\n                           name: dc.label,\n                           data: reportFields,\n                           refs: [],\n                        };\n                     });\n\n                     return reportModels;\n                  }\n\n                  async getQueries() {\n                     return settings.queryList || [];\n                  }\n\n                  saveQuery(id = abWebix.uid(), data) {\n                     settings.queryList = settings.queryList || [];\n\n                     let indexOfQuery = null;\n\n                     const query = settings.queryList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfQuery = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (query) settings.queryList[indexOfQuery] = data;\n                     // Add\n                     else settings.queryList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteQuery(id) {\n                     settings.queryList = settings.queryList || [];\n                     settings.queryList = settings.queryList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getData(config) {\n                     let result = [];\n                     let pullDataTasks = [];\n                     let dcIds = [];\n                     let dcData = {};\n                     let reportFields = [];\n\n                     // pull data of the base and join DCs\n                     dcIds.push(config.data);\n                     (config.joins || []).forEach((j) => {\n                        dcIds.push(j.sid);\n                        dcIds.push(j.tid);\n                     });\n                     dcIds = ab.uniq(dcIds);\n                     dcIds.forEach((dcId) => {\n                        pullDataTasks.push(\n                           new Promise((resolve, reject) => {\n                              const getData = async () => {\n                                 try {\n                                    dcData[dcId] =\n                                       (await self.getData(dcId)) || [];\n\n                                    resolve();\n                                 } catch (err) {\n                                    reject(err);\n                                 }\n                              };\n\n                              getData();\n                           })\n                        );\n                     });\n\n                     dcIds.forEach((dcId) => {\n                        const dataCol = ab.datacollectionByID(dcId);\n\n                        if (!dataCol) return;\n\n                        reportFields = reportFields.concat(\n                           self.getReportFields(dataCol).map((f) => {\n                              // change format of id to match the report widget\n                              f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                              return f;\n                           })\n                        );\n                     });\n\n                     await Promise.all(pullDataTasks);\n\n                     // the data result equals data of the base DC\n                     result = dcData[config.data] || [];\n\n                     if (config.joins?.length)\n                        (config.joins || []).forEach((j) => {\n                           const sourceDc = ab.datacollectionByID(j.sid);\n                           if (!sourceDc) return;\n\n                           const sourceObj = sourceDc.datasource;\n                           if (!sourceObj) return;\n\n                           const targetDc = ab.datacollectionByID(j.tid);\n                           if (!targetDc) return;\n\n                           const targetObj = targetDc.datasource;\n                           if (!targetObj) return;\n\n                           const sourceLinkField = sourceObj.fieldByID(j.sf);\n                           const targetLinkField = targetObj.fieldByID(j.tf);\n                           if (!sourceLinkField && !targetLinkField) return;\n\n                           const sourceData = dcData[j.sid] || [];\n                           const targetData = dcData[j.tid] || [];\n\n                           sourceData.forEach((sData) => {\n                              targetData.forEach((tData) => {\n                                 let sVal =\n                                    sData[\n                                       sourceLinkField\n                                          ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                          : `${j.sid}.id`\n                                    ] || [];\n\n                                 let tVal =\n                                    tData[\n                                       targetLinkField\n                                          ? `${j.tid}.${targetLinkField.columnName}.id`\n                                          : `${j.tid}.id`\n                                    ] || [];\n\n                                 if (!Array.isArray(sVal)) sVal = [sVal];\n\n                                 if (!Array.isArray(tVal)) tVal = [tVal];\n\n                                 // Add joined row to the result array\n                                 const matchedVal = sVal.filter(\n                                    (val) => tVal.indexOf(val) > -1\n                                 );\n\n                                 if (matchedVal?.length) {\n                                    const updateRows =\n                                       result.filter(\n                                          (r) =>\n                                             r[`${j.sid}.id`] ===\n                                                sData[`${j.sid}.id`] &&\n                                             !r[`${j.tid}.id`]\n                                       ) || [];\n\n                                    if (updateRows?.length)\n                                       (updateRows || []).forEach((r) => {\n                                          for (const key in tData)\n                                             if (key !== \"id\")\n                                                r[key] = tData[key];\n                                       });\n                                    else\n                                       result.push(\n                                          Object.assign(\n                                             ab.cloneDeep(sData),\n                                             ab.cloneDeep(tData)\n                                          )\n                                       );\n                                 }\n                              });\n                           });\n                        });\n\n                     // filter & sort\n                     const queryVal = JSON.parse(config.query || \"{}\");\n\n                     if (queryVal?.rules?.length)\n                        queryVal.rules.forEach((r) => {\n                           if (!r || !r.type || !r.condition) return;\n\n                           switch (r.type) {\n                              case \"date\":\n                              case \"datetime\":\n                                 // Convert string to Date object\n                                 if (r.condition.filter) {\n                                    if (ab.isString(r.condition.filter))\n                                       r.condition.filter = ab.rules.toDate(\n                                          r.condition.filter\n                                       );\n\n                                    if (\n                                       r.condition.filter.start &&\n                                       ab.isString(r.condition.filter.start)\n                                    )\n                                       r.condition.filter.start =\n                                          ab.rules.toDate(\n                                             r.condition.filter.start\n                                          );\n\n                                    if (\n                                       r.condition.filter.end &&\n                                       ab.isString(r.condition.filter.end)\n                                    )\n                                       r.condition.filter.end = ab.rules.toDate(\n                                          r.condition.filter.end\n                                       );\n                                 }\n\n                                 break;\n                           }\n                        });\n\n                     // create a new query widget to get the filter function\n                     const filterElem = abWebix.ui({\n                        view: \"query\",\n                        fields: reportFields,\n                        value: queryVal,\n                     });\n\n                     // create a new data collection and apply the query filter\n                     const tempDc = new abWebix.DataCollection();\n\n                     tempDc.parse(result);\n\n                     // filter\n                     let filterFn;\n\n                     try {\n                        filterFn = filterElem.getFilterFunction();\n                     } catch (error) {\n                        // continue regardless of error\n                     }\n\n                     if (filterFn) tempDc.filter(filterFn);\n\n                     // sorting\n                     (config.sort || []).forEach((sort) => {\n                        if (sort.id)\n                           tempDc.sort({\n                              as: \"string\",\n                              dir: sort.mod || \"asc\",\n                              by: `#${sort.id}#`,\n                           });\n                     });\n\n                     result = tempDc.serialize();\n\n                     // clear\n                     filterElem.destructor();\n                     tempDc.destructor();\n\n                     // group by\n                     if (config?.group?.length) {\n                        (config.group || []).forEach((groupProp) => {\n                           result = _(result).groupBy(groupProp);\n                        });\n\n                        result = result\n                           .map((groupedData, id) => {\n                              const groupedResult = {};\n\n                              (config.columns || []).forEach((col) => {\n                                 const agg = col.split(\".\")[0];\n                                 const rawCol = col.replace(\n                                    /sum.|avg.|count.|max.|min./g,\n                                    \"\"\n                                 );\n\n                                 switch (agg) {\n                                    case \"sum\":\n                                       groupedResult[col] = ab.sumBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"avg\":\n                                       groupedResult[col] = ab.meanBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"count\":\n                                       groupedResult[col] = (\n                                          groupedData || []\n                                       ).length;\n                                       break;\n                                    case \"max\":\n                                       groupedResult[col] =\n                                          (ab.maxBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    case \"min\":\n                                       groupedResult[col] =\n                                          (ab.minBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    default:\n                                       groupedResult[col] = groupedData[0][col];\n                                       break;\n                                 }\n                              });\n\n                              return groupedResult;\n                           })\n                           .value();\n                     }\n\n                     return result;\n                  }\n                  getOptions(fields) {\n                     return Promise.resolve([]);\n                  }\n                  getFieldData(fieldId) {\n                     return Promise.resolve([]);\n                  }\n               },\n            ],\n            [\n               reports.views.table,\n               class MyTable extends reports.views.table {\n                  // NOTE: fix format of date column type\n                  GetColumnConfig(a) {\n                     if (a.type === \"date\") {\n                        return {\n                           id: a.id,\n                           header:\n                              !a.meta.header || a.meta.header === \"none\"\n                                 ? a.meta.name || a.name\n                                 : [\n                                      a.meta.name || a.name,\n                                      {\n                                         content:\n                                            a.header === \"text\"\n                                               ? \"textFilter\"\n                                               : \"richSelectFilter\",\n                                      },\n                                   ],\n                           type: a.type,\n                           sort: \"date\",\n                           width: a.width || 200,\n                           format: (val) => {\n                              // check valid date\n                              if (val?.getTime && !isNaN(val.getTime()))\n                                 return abWebix.i18n.dateFormatStr(val);\n                              else return \"\";\n                           },\n                        };\n                     } else return super.GetColumnConfig(a);\n                  }\n               },\n            ],\n         ]),\n      };\n\n      const _ui = super.ui([_uiReportManager]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         fields.push({\n            id: f.columnName,\n            name: f.label,\n            filter: f.fieldIsFilterable(),\n            edit: false,\n            type: columnFormat.editor || \"text\",\n            format: columnFormat.format,\n            options: columnFormat.options,\n            ref: \"\",\n            key: false,\n            show: true,\n            abField: f,\n         });\n\n         if (f.isConnection && f.settings.isSource) {\n            const linkedDcs = this.AB.datacollectionByID(f.settings.linkObject);\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      if (\n         datacollection.dataStatus === datacollection.dataStatusFlag.notInitial\n      )\n         await datacollection.loadData();\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            reportRow[col] = field ? field.format(row) : row[columnName];\n\n            // FK value of the connect field\n            if (field && field.isConnection) {\n               let $pk = field.datasourceLink.PK();\n               if (Array.isArray(row[columnName]))\n                  reportRow[`${col}.id`] = row[columnName].map(\n                     (link) => link[$pk] || link.id || link\n                  );\n               else if (row[columnName])\n                  reportRow[`${col}.id`] =\n                     row[columnName][$pk] ||\n                     row[columnName].id ||\n                     row[columnName];\n            }\n\n            const rField = reportFields.filter((f) => f.id === columnName)[0];\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar.$view.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const button = pageClone.views(\n                  (v) => v instanceof ABViewFormButton,\n                  true\n               )[0];\n               if (button) {\n                  button.parent.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               }\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      var id = \"hiddenQB_\" + webix.uid();\n\n      // if our data passes the QueryRules then tell Action to process\n      var ui = {\n         id: id,\n         hidden: true,\n         view: \"querybuilder\",\n      };\n      var hiddenQB = webix.ui(ui);\n\n      let currentAction = this.currentAction();\n      var QBCondition = currentAction.condition();\n\n      if (this.objectQB) {\n         this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      }\n\n      let query = QBCondition[0] || {},\n         fields = QBCondition[1] || [];\n\n      let convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.type == \"number\" ||\n               f.type == \"calculate\" ||\n               f.type == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (query && query.rules && Array.isArray(query.rules)) {\n                  query.rules.forEach((r) => {\n                     if (r.key != f.id) return;\n\n                     r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (data[f.id] && typeof data[f.id] === \"string\") {\n                  data[f.id] = convertToNumber(data[f.id]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      // hiddenQB.setValue(QBCondition);\n      hiddenQB.setValue({\n         query: query,\n         fields: fields,\n      });\n\n      var QBHelper = hiddenQB.getFilterHelper();\n      var isValid = QBHelper(data);\n\n      hiddenQB.destructor(); // remove the QB\n\n      return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings || {};\n      this.valueRules = settings.valueRules || {};\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: connObj.PK(),\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","normalizeData","isConnected","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","jobID","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","QueuedOperations","_queueTimer","runQueue","op","queueOperation","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","isCursorFollow","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","followDC","datacollectionFollow","loadData","waitForDataCollectionToInitialize","start","limit","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","followCursor","unshift","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","__totalCount","total_count","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","subData","relatedMlFields","calField","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","colIds","match","colId","colIdNoBracket","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","linkObj","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","assign","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","opt","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","isNaN","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","moduleList","queryList","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","_object","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","export","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","cursorUpdated","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","checked","onPrevious","delay","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","header","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","storageID","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","dataFieldId","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","color","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","formVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","csv","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","parsedData","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","year","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","linkConnectFields","validRows","allValid","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","scrollview","dataFlexView","paddingX","paddingY","onAfterScroll","dataView","emptyView","renderData","_yPosition","Layout","Scroll","records","$width","recordWidth","currentLength","_startPos","stopPos","flexlayout","clicked","divs","background","loadMoreTimer","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","reloadView","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","loadDcDataOfRecordRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","currentVals","selectedItems","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","linkedField","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","AB_App","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","filterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","readonly","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","setInterval","clearInterval","parentElem","viewInfo","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","$pivot","customLabels","populateData","dataMapped","setStructure","reportManager","_uiReportManager","reports","saveModule","indexOfModule","m","viewSave","deleteModule","reportModels","reportFields","getReportFields","refs","saveQuery","indexOfQuery","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","sData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","groupProp","_","groupedData","groupedResult","agg","rawCol","getFieldData","GetColumnConfig","meta","columnFormat","ref","abField","reportData","reportRow","$pk","rField","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","selectedItem","abStorage","$sidebar","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","linkedData","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","callEvent","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","notes","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","hiddenQB","QBCondition","convertToNumber","QBHelper","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","newValues","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","some","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","ArrayBuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","eachRow","$count","setMasterValue","master"],"sourceRoot":""}