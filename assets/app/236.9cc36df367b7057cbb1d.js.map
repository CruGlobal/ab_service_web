{"version":3,"file":"236.9cc36df367b7057cbb1d.js","mappings":"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xBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClB7a,gBAAiB,IACjB8a,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGnb,OAAQ,WAEL,OAAIiX,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCtuBN,MAAMC,EACH5d,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAKwd,OAAS,EACjB,CAEAC,SAAStW,EAAMmK,GACZtR,KAAKwd,OAAOlZ,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEAoM,OACG,OAA6B,GAAtB1d,KAAKwd,OAAOrX,MACtB,CAEAqB,OACG,OAAOxH,KAAKwd,OAAOrX,OAAS,CAC/B,CAEAwX,qBACG,IAAI3F,EAAM,CACPzI,MAAO,eACPqO,kBAAmB,CAAC,GAGnBC,EAAO7F,EAAI4F,kBAOf,OALA5d,KAAKwd,OAAOvZ,SAASoG,IAClBwT,EAAKxT,EAAElD,MAAQ0W,EAAKxT,EAAElD,OAAS,GAC/B0W,EAAKxT,EAAElD,MAAM7C,KAAK+F,EAAE,IAGhB2N,CACV,CAEAvQ,WAAWyC,GACR,IAAI4T,EAAO9d,KAAK2d,qBAChB3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","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\")\n                        model.normalizeData(data.data);\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.js\";\n// NOTE: moved to require() because using import with webix_debug.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix-debug.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      console.error(\"TODO: ABFactory.notify(): pass error off to analytics\");\n      console.error(error);\n      console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            this.AB.applications().then((apps) => {\n               // NOTE: apps is a webix datacollection\n\n               var allRemoves = [];\n\n               var appsWithObject = apps.filter((a) => {\n                  return a.datacollectionsIncluded((o) => o.id == this.id);\n               });\n               appsWithObject.forEach((app) => {\n                  allRemoves.push(app.datacollectionRemove(this));\n               });\n\n               return Promise.all(allRemoves).then(next).catch(err);\n            });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n                           model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {};\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(updateItemData);\n                     if (\n                        this.__treeCollection &&\n                        this.__treeCollection.exists(d.id)\n                     )\n                        this.__treeCollection.updateItem(d.id, updateItemData);\n\n                     if (\n                        this.__dataCollection &&\n                        this.__dataCollection.exists(d.id)\n                     ) {\n                        this.__dataCollection.updateItem(d.id, updateItemData);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(res.data[0]);\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal) &&\n                     relateVal.filter(\n                        (v) =>\n                           v == deleteId ||\n                           v.id == deleteId ||\n                           v[PK] == deleteId\n                     ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      var wheres = this.settings.objectWorkspace.filterConditions || null;\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      if (this.__filterCond) {\n         if (wheres.rules.length) {\n            // combine them together:\n            wheres = {\n               glue: \"and\",\n               rules: [wheres, this.__filterCond],\n            };\n         } else {\n            // simplify to just use filterCond\n            wheres = this.__filterCond;\n         }\n      }\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            this.__dataCollection.parse(data);\n         }\n\n         // In order to get the total_count updated I had to use .load()\n         queueOperation(() => {\n            this.__dataCollection.load(() => {\n               // If this dc loads all, then it has to filter data by the parent dc\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return data;\n            });\n         }, 1);\n\n         // In order to keep detail and graphs loading properly I had to keep .parse()\n         // queueOperation(() => {\n         //    this.__dataCollection.clearAll();\n         //    this.__dataCollection.parse(data);\n         // }, 50);\n\n         // this does nothing???\n         this.parseTreeCollection(data);\n\n         queueOperation(() => {\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n         }, 5);\n         queueOperation(() => {\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 20);\n         queueOperation(() => {\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n         }, 10);\n         queueOperation(() => {\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n         }, 5);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return null;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter((val) => (val.id || val[PK] || val) == linkCursor.id)\n               .length > 0\n         );\n      } else {\n         return (linkVal.id || linkVal[PK] || linkVal) == linkCursor.id;\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\"object\", \"query\", \"datacollection\", \"process\", \"application\"].forEach(\n         (type) => {\n            var objTypes = allDefinitions.filter((d) => d.type == type);\n            objTypes.forEach((def) => {\n               let { keyList, keyFn } = this.objectKeysByDef(def);\n               if (keyList) {\n                  this[keyList].push(this[keyFn](def.json));\n               }\n            });\n         }\n      );\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            if (\n               objectLink &&\n               objectLink.PK() != \"id\" &&\n               d[relationName] &&\n               !d[relationName].id\n            ) {\n               // is array\n               if (d[relationName].forEach) {\n                  d[relationName].forEach((subData) => {\n                     if (subData[objectLink.PK()])\n                        subData.id = subData[objectLink.PK()];\n                  });\n               } else if (d[relationName][objectLink.PK()]) {\n                  d[relationName].id = d[relationName][objectLink.PK()];\n               }\n            }\n\n            var relatedMlFields = objectLink.multilingualFields();\n            if (relatedMlFields.length) {\n               objectLink.translate(\n                  d[relationName],\n                  d[relationName],\n                  relatedMlFields\n               );\n            }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) d[c.columnName] = d[relationName];\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         this.__linkProblems = this.__linkProblems ?? [];\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      if (!fn)\n         fn = () => {\n            return true;\n         };\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         Object.assign(this._connections, this.process._connections);\n      }\n\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      var task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         // get any field's it provides\n         var value = task[method].apply(task, param);\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (typeof value != \"undefined\") {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      const condition = this.condition;\n      const _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         condition == null ||\n         condition.rules == null ||\n         condition.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = value.indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = value.indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     f.settings.isCustomFK &&\n                     // 1:M\n                     ((f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                        // 1:1 isSource = true\n                        (f.settings.linkType == \"one\" &&\n                           f.settings.linkViaType == \"one\" &&\n                           f.settings.isSource))\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(f);\n\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n            let columnName = field.columnName;\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f && f.fieldIsFilterable());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result = rowData[colName] || rowData.id || rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: \"InsertedRecord\",\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => opt.field === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      if (data == null)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null) data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (field.key == \"connectObject\") {\n                     return (\n                        myState[\"data\"][field.columnName] ||\n                        myState[\"data\"][field.relationName()]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this.prevOP.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   moduleList: [],\n   queryList: [],\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.moduleList =\n         this.settings.moduleList ||\n         ABViewReportManagerPropertyComponentDefaults.moduleList;\n\n      this.settings.queryList =\n         this.settings.queryList ||\n         ABViewReportManagerPropertyComponentDefaults.queryList;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it witht hat field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            // copy current wheres\n            var wheres = this.AB.cloneDeep(\n               this.settings.objectWorkspace.filterConditions\n            );\n            // add bind items data as a filter to wheres\n            if (value) {\n               // don't include an empty where condition in our .rules\n               // start by replacing it with null\n               if (!wheres.rules) {\n                  wheres = null;\n               }\n\n               wheres = {\n                  glue: \"and\",\n                  rules: [\n                     wheres,\n                     {\n                        alias: fieldLink.alias, // ABObjectQuery\n                        key: Object.keys(params)[0],\n                        rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n                        value: fieldLink.getRelationValue(\n                           dataCollectionLink.__dataCollection.getItem(value)\n                        ),\n                     },\n                  ],\n               };\n\n               // remove any null in the .rules\n               wheres.rules = wheres.rules.filter((r) => r);\n            }\n\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (this?.datacollectionLink?.getCursor()?.id == value) {\n               cursorUpdated = true;\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (\n               cursorUpdated ||\n               JSON.stringify(this.__reloadWheres) != JSON.stringify(wheres) ||\n               wheres?.rules?.length > 0\n            ) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               this.reloadWheres(wheres);\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      if (\n         this.__bindComponentIds.indexOf(component.config.id) > -1 &&\n         $$(component.config.id).data &&\n         $$(component.config.id).data.find &&\n         $$(component.config.id).data.find({}).length > 0\n      )\n         return;\n      // keep component id to an array\n      else this.__bindComponentIds.push(component.config.id);\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView = formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // cache options if not a xxx->one connection\n                  if (this?.settings?.linkViaType != \"one\") {\n                     this.AB.Storage.set(storageID, this._options);\n                  }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        if (\n                           field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)\n                        ) {\n                           newVal = field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue && theEditor.getValue()) {\n         theEditor.setValue(theEditor.getValue());\n         // } else if (this._selectedData && this._selectedData.length) {\n         //    theEditor.setValue(this.editFormat(this._selectedData));\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor = \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            message: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\";\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      const L = App.Label;\n\n      options = options || {};\n\n      const idBase = App.unique(this.idCustomContainer(row, options.formId));\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} width:${options.width}; height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCSVImporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return [\n            `<div class=\"ab-carousel-image-container\">`,\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />`,\n            settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\",\n            `<div class=\"ab-carousel-image-icon\">`,\n            settings.detailsPage || settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\",\n            settings.editPage || settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\",\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>`,\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>`,\n            `</div>`,\n            `</div>`,\n         ].join(\"\");\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n      let valueField2 = this.valueField2();\n      if (!valueField2) {\n         this.warningsMessage(\n            `can't resolve value2 field[${this.settings.columnValue2}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $filter.disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               formVals[f.columnName] = f.format(cursorFormVals, true);\n            }\n         }\n      );\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1)\n            abWebix.confirm({\n               title: self.label(\"Delete data\"),\n               text: self.label(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     const deleteRow = async () => {\n                        try {\n                           const response = await CurrentObject.model().delete(\n                              id.row\n                           );\n\n                           if (response.numRows > 0) {\n                              $DataTable.remove(id);\n                              $DataTable.clearSelection();\n                           } else\n                              abWebix.alert({\n                                 text: self.label(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                        } catch (err) {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        }\n                     };\n\n                     deleteRow();\n                  }\n\n                  $DataTable.clearSelection();\n\n                  return true;\n               },\n            });\n         else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n            };\n\n            this.__handler_dc_loadData = () => {\n               if (\n                  $DataTable.config.view === \"treetable\" &&\n                  CurrentObject &&\n                  !CurrentObject.isGroup\n               ) {\n                  $DataTable.clearAll();\n                  $DataTable.parse(dc.getData() || []);\n\n                  this.grouping();\n                  this.ready();\n               }\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow() {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      $$(this.ids.component).show($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui.rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewTextComponent(this);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               view: \"button\",\n               name: \"import\",\n               id: ids.importButton,\n               value: this.label(\"Import\"),\n               css: \"webix_primary\",\n               disabled: true,\n               click: () => {\n                  this.import();\n               },\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = {};\n\n         // Set parent's data collection cursor\n         if (objectLink && linkConnectFields.length && linkValues) {\n            linkConnectFields.forEach((f) => {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               newRowData[f.columnName] = {};\n               newRowData[f.columnName][linkColName] =\n                  linkValues[linkColName] || linkValues.id;\n            });\n         }\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % 50 == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, 50);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui();\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               // \tlet item = this.getItem(rowId);\n\n               // \t_logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key]).hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component();\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.AB._App);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               scrollview: \"\",\n               dataFlexView: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.scrollview,\n            view: \"scrollview\",\n            scroll: \"y\",\n            body: {\n               id: ids.dataFlexView,\n               view: \"flexlayout\",\n               paddingX: 15,\n               paddingY: 19,\n               type: \"space\",\n               cols: [],\n            },\n            on: {\n               onAfterScroll: async () => {\n                  const pos = $$(ids.scrollview).getScrollState();\n\n                  await this.scroll(pos);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      const dataView = $$(ids.dataFlexView);\n\n      // initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      // if (dc.datacollectionLink && dc.fieldLink) {\n      //    dc.bind(dataView, dc.datacollectionLink, dc.fieldLink);\n      // } else {\n      //    dc.bind(dataView);\n      // }\n      // track all flexlayout component IDs on the data collectino so we can notify them of changes\n      dc.attachFlexlayout(dataView);\n      dc.on(\"initializingData\", () => {\n         this.busy();\n      });\n      dc.on(\"initializedData\", () => {\n         this.ready();\n      });\n      dc.on(\"loadData\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"update\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"delete\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"create\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n\n      // this.eventClear();\n      //\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"loadData\",\n      //    listener: () => {\n      //       com.renderData();\n      //    },\n      // });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.initialized) this.renderData();\n   }\n\n   get yPosition() {\n      return this._yPosition ?? 0;\n   }\n\n   set yPosition(pos) {\n      this._yPosition = pos;\n   }\n\n   busy() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.disable();\n\n      const abWebix = this.AB.Webix;\n\n      if (!Scroll.showProgress) abWebix.extend(Scroll, abWebix.ProgressBar);\n\n      Scroll.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.enable();\n\n      const AB = this.AB;\n\n      if (Scroll && !Scroll.hideProgress)\n         AB.Webix.extend(Scroll, AB.Webix.ProgressBar);\n\n      Scroll.hideProgress();\n   }\n\n   renderData() {\n      const ids = this.ids;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      const records = [];\n      const dc = this.datacollection;\n\n      if (!dc) {\n         this.ready();\n\n         return;\n      }\n\n      const Layout = $$(ids.dataFlexView) || $$(ids.component);\n\n      if (!Layout || isNaN(Layout.$width)) {\n         this.ready();\n\n         return;\n      }\n\n      const baseView = this.view;\n      const xCount = parseInt(this.settings.xCount);\n      const recordWidth = Math.floor(\n         (Layout.$width - 20 - xCount * 20) / xCount\n      );\n\n      const rows = dc.getData();\n\n      // if this amount of data is already parsed just skip the rest.\n      if (Layout.currentLength === rows.length) {\n         this.ready();\n\n         return;\n      }\n\n      Layout.currentLength = rows.length;\n\n      // store total of rows\n      this._startPos = Layout.getChildViews ? Layout.getChildViews().length : 0;\n\n      let stopPos = rows.length;\n\n      if (dc.settings.loadAll || this._startPos === 0) stopPos = rows.length;\n      else if (rows.length - this._startPos > 20) stopPos = this._startPos + 20;\n\n      for (let i = this._startPos; i < stopPos; i++) {\n         // get the components configuation\n         const detailCom = new ABViewDetailComponent(baseView, rows[i].id);\n         const _ui = detailCom.ui();\n\n         // adjust the UI to make sure it will look like a \"card\"\n         _ui.type = \"space\";\n         _ui.css = \"ab-detail-view\";\n\n         if (detailsPage || editPage) {\n            _ui.css += ` ab-detail-hover ab-record-${rows[i].id}`;\n\n            if (detailsPage) _ui.css += \" ab-detail-page\";\n\n            if (editPage) _ui.css += \" ab-edit-page\";\n         }\n\n         _ui.paddingX = 10;\n         _ui.paddingY = 6;\n         _ui.minWidth = recordWidth - 10;\n         _ui.maxWidth = recordWidth;\n\n         if (Layout.addView) {\n            Layout.addView(_ui, -1);\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[i]), 0);\n         } else records.push(_ui);\n      }\n\n      if (records.length) {\n         const flexlayout = {\n            id: ids.dataFlexView,\n            view: \"flexlayout\",\n            paddingX: 15,\n            paddingY: 19,\n            type: \"space\",\n            cols: records,\n         };\n\n         this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n\n         for (let j = this._startPos; j < stopPos; j++) {\n            const detailCom = new ABViewDetailComponent(baseView, rows[j].id);\n\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[j]), 0);\n         }\n      }\n\n      if ($$(ids.scrollview)) {\n         $$(ids.scrollview).scrollTo(0, this.yPosition);\n\n         if (detailsPage || editPage) {\n            Layout.$view.onclick = (e) => {\n               let clicked = false;\n               let divs = e.path ?? [];\n\n               // NOTE: Some web browser clients do not support .path\n               if (!divs.length) {\n                  divs.push(e.target);\n                  divs.push(e.target.parentNode);\n               }\n\n               if (editPage) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem_header\") > -1\n                     ) {\n                        clicked = true;\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(editPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n                        break;\n                     }\n                  }\n               }\n\n               if (detailsPage && !clicked) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem\") > -1\n                     ) {\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(detailsPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n\n                        break;\n                     }\n                  }\n               }\n            };\n         }\n      }\n\n      //Add data-cy attributes for cypress tests\n      const name = baseView.name.replace(\".dataview\", \"\");\n\n      Layout.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n\n      Layout.getChildViews().forEach((child, i) => {\n         const uuid = rows[i + this._startPos][\"uuid\"];\n         const view = child.$view;\n\n         view\n            .querySelector(\".webix_accordionitem_body\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item ${name} ${uuid} ${baseView.id}`\n            );\n         view\n            .querySelector(\".webix_accordionitem_button\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item button ${name} ${uuid} ${baseView.id}`\n            );\n      });\n\n      this.ready();\n   }\n\n   emptyView() {\n      const ids = this.ids;\n      const flexlayout = {\n         id: ids.dataFlexView,\n         view: \"flexlayout\",\n         type: \"clean\",\n         padding: 10,\n         css: { background: \"#ebedf0 !important\" },\n         cols: [],\n      };\n\n      this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n   }\n\n   /**\n    * @method scroll\n    * @param pos - {\n    * \t\t\t\t\tx: {integer},\n    * \t\t\t\t\ty: {integer}\n    * \t\t\t\t}\n    */\n   async scroll(pos) {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n      const loadWhen = 40;\n      const y = pos.y;\n      const maxYPos = Layout.$height - Scroll.$height;\n\n      if (maxYPos - y <= loadWhen) {\n         if (this.loadMoreTimer) return;\n\n         this.yPosition = y;\n\n         const dc = this.datacollection;\n\n         if (!dc) return;\n\n         if (Layout.getChildViews().length >= dc.totalCount) return;\n\n         // loading cursor\n         this.busy();\n\n         await dc.loadData(Layout.getChildViews().length || 0);\n\n         this.loadMoreTimer = setTimeout(() => {\n            this.loadMoreTimer = null;\n         }, 1100);\n      }\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field || !b?.field) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field.key === \"formula\" && b.field.key === \"calculate\")\n            return -1;\n         else if (a.field.key === \"calculate\" && b.field.key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData[field.columnName];\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     const dv = this.datacollection;\n                     const ds = dv ? dv.datasource : null;\n                     const needRecalculate =\n                        !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(null, this.ids.detailItem);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            if (dcCursor) {\n               const treeCursor = dc.getCursor(true);\n\n               dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            } else dataList.push(...this.AB.cloneDeep(dc.getData()));\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = this.setReportValues(\n                     data,\n                     f,\n                     fieldLabels,\n                     mlFields\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //\t\tfieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //\t\t\twe can buy newer version to support it\n            //\t\t\thttps://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         // \tif (imgBuffer) {\n         // \t\tvar maxWidth = 300;\n         // \t\tvar maxHeight = 160;\n\n         // \t\t// Find aspect ratio image dimensions\n         // \t\ttry {\n         // \t\t\tvar image = sizeOf(imgBuffer);\n         // \t\t\tvar ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         // \t\t\treturn [image.width * ratio, image.height * ratio];\n         // \t\t}\n         // \t\t// if invalid image, then should return 0, 0 sizes\n         // \t\tcatch (err) {\n         // \t\t\treturn [0, 0];\n         // \t\t}\n\n         // \t}\n         // \telse {\n         // \t\treturn [0, 0];\n         // \t}\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n               reloadView: `${\n                  idBase || `ABViewForm_${baseView.id}`\n               }_form_reloadView`,\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n      this.loadDcDataOfRecordRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   loadDcDataOfRecordRules() {\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC &&\n                  pullDataDC.dataStatus === pullDataDC.dataStatusFlag.notInitial\n               )\n                  pullDataDC.loadData();\n            }\n         );\n      });\n   }\n\n   async onShow(data) {\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const ids = this.ids;\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // if the cursor is cleared before or after we need to make\n         // sure the reload view button does not appear\n         if (settings.clearOnLoad || settings.clearOnSave)\n            $$(ids.reloadView)?.getParentView()?.removeView(ids.reloadView);\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n\n         if ($form) dc.bind($form);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required: field?.settings?.required || settings?.required || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         const currentVals = $formItem.getValue();\n\n         let selectedItems;\n         if (currentVals.indexOf(saveData.id) === -1)\n            selectedItems = currentVals\n               ? `${currentVals},${saveData.id}`\n               : saveData.id;\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData.id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      const template = `<div class=\"customField ${\n         formSettings.labelPosition\n      }\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: this.new_width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || this.new_width\n            : this.new_width;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        const $resizer = $$(ids.resizer);\n\n                        if (itemId) {\n                           const data = $$(ids.kanban).getItem(itemId);\n\n                           this.FormSide.show(data);\n\n                           $resizer?.show();\n                        } else {\n                           this.FormSide.hide();\n\n                           $resizer?.hide();\n                        }\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            if (!this.settings.template)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            id: this.ids.pivot,\n            view: \"pivot\",\n            readonly: true,\n            removeMissed: settings.removeMissed,\n            totalColumn: settings.totalColumn,\n            separateLabel: settings.separateLabel,\n            min: settings.min,\n            max: settings.max,\n            format: (value) => {\n               const decimalPlaces = settings.decimalPlaces || 2;\n\n               return value !== \"0\"\n                  ? parseFloat(value).toFixed(decimalPlaces || 0)\n                  : value;\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      const object = dc.datasource;\n      if (!object) return;\n\n      const $pivot = $$(ids.pivot);\n\n      if ($pivot && object instanceof ABObjectQuery) {\n         const customLabels = {};\n\n         object.fields().forEach((f) => {\n            customLabels[f.columnName] = f.label;\n         });\n\n         $pivot.define(\"fieldMap\", customLabels);\n      }\n\n      const populateData = () => {\n         const data = dc.getData();\n         const dataMapped = data.map((d) => {\n            const result = {};\n\n            object.fields().forEach((f) => {\n               if (\n                  f instanceof ABFieldCalculate ||\n                  f instanceof ABFieldFormula ||\n                  f instanceof ABFieldNumber\n               )\n                  result[f.columnName] = d[f.columnName];\n               else result[f.columnName] = f.format(d);\n            });\n\n            return result;\n         });\n\n         $pivot.parse(dataMapped);\n\n         const settings = this.settings;\n\n         // set pivot configuration\n         if (settings.structure) $pivot.setStructure(settings.structure);\n      };\n\n      this.view.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            populateData();\n         },\n      });\n\n      switch (dc.dataStatus) {\n         case dc.dataStatusFlag.notInitial:\n            dc.loadData();\n            break;\n\n         case dc.dataStatusFlag.initialized:\n            populateData();\n            break;\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign({ reportManager: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      const _uiReportManager = {\n         id: this.ids.reportManager,\n         view: \"reports\",\n         toolbar: true,\n         override: new Map([\n            [\n               reports.services.Backend,\n               class MyBackend extends reports.services.Backend {\n                  async getModules() {\n                     return settings.moduleList || [];\n                  }\n\n                  saveModule(id = abWebix.uid(), data) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     let indexOfModule = null;\n\n                     const module = settings.moduleList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfModule = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (module) settings.moduleList[indexOfModule] = data;\n                     // Add\n                     else settings.moduleList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteModule(id) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     settings.moduleList = settings.moduleList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getModels() {\n                     const reportModels = {};\n\n                     (\n                        baseView.application.datacollectionsIncluded() || []\n                     ).forEach((dc) => {\n                        const obj = dc.datasource;\n                        if (!obj) return;\n\n                        const reportFields = self.getReportFields(dc);\n\n                        // get connected data collections\n                        // let linkedFields = [];\n                        // (obj.connectFields() || []).forEach((f, index) => {\n                        //    let connectedDcs = ab.datacollections(\n                        //       (dColl) =>\n                        //          dColl &&\n                        //          dColl.datasource &&\n                        //          dColl.datasource.id === f.settings.linkObject\n                        //    );\n                        //    (connectedDcs || []).forEach((linkedDc) => {\n                        //       linkedFields.push({\n                        //          id: index + 1,\n                        //          name: linkedDc.label,\n                        //          source: dc.id,\n                        //          target: linkedDc.id\n                        //       });\n                        //    });\n                        // });\n\n                        // // MOCK UP for testing\n                        // let linkedFields = [\n                        //    {\n                        //       id: \"id\",\n                        //       name: \"id\",\n                        //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n                        //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n                        //    }\n                        // ];\n\n                        reportModels[dc.id] = {\n                           id: dc.id,\n                           name: dc.label,\n                           data: reportFields,\n                           refs: [],\n                        };\n                     });\n\n                     return reportModels;\n                  }\n\n                  async getQueries() {\n                     return settings.queryList || [];\n                  }\n\n                  saveQuery(id = abWebix.uid(), data) {\n                     settings.queryList = settings.queryList || [];\n\n                     let indexOfQuery = null;\n\n                     const query = settings.queryList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfQuery = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (query) settings.queryList[indexOfQuery] = data;\n                     // Add\n                     else settings.queryList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteQuery(id) {\n                     settings.queryList = settings.queryList || [];\n                     settings.queryList = settings.queryList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getData(config) {\n                     let result = [];\n                     let pullDataTasks = [];\n                     let dcIds = [];\n                     let dcData = {};\n                     let reportFields = [];\n\n                     // pull data of the base and join DCs\n                     dcIds.push(config.data);\n                     (config.joins || []).forEach((j) => {\n                        dcIds.push(j.sid);\n                        dcIds.push(j.tid);\n                     });\n                     dcIds = ab.uniq(dcIds);\n                     dcIds.forEach((dcId) => {\n                        pullDataTasks.push(\n                           new Promise((resolve, reject) => {\n                              const getData = async () => {\n                                 try {\n                                    dcData[dcId] =\n                                       (await self.getData(dcId)) || [];\n\n                                    resolve();\n                                 } catch (err) {\n                                    reject(err);\n                                 }\n                              };\n\n                              getData();\n                           })\n                        );\n                     });\n\n                     dcIds.forEach((dcId) => {\n                        const dataCol = ab.datacollectionByID(dcId);\n\n                        if (!dataCol) return;\n\n                        reportFields = reportFields.concat(\n                           self.getReportFields(dataCol).map((f) => {\n                              // change format of id to match the report widget\n                              f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                              return f;\n                           })\n                        );\n                     });\n\n                     await Promise.all(pullDataTasks);\n\n                     // the data result equals data of the base DC\n                     result = dcData[config.data] || [];\n\n                     if (config.joins?.length)\n                        (config.joins || []).forEach((j) => {\n                           const sourceDc = ab.datacollectionByID(j.sid);\n                           if (!sourceDc) return;\n\n                           const sourceObj = sourceDc.datasource;\n                           if (!sourceObj) return;\n\n                           const targetDc = ab.datacollectionByID(j.tid);\n                           if (!targetDc) return;\n\n                           const targetObj = targetDc.datasource;\n                           if (!targetObj) return;\n\n                           const sourceLinkField = sourceObj.fieldByID(j.sf);\n                           const targetLinkField = targetObj.fieldByID(j.tf);\n                           if (!sourceLinkField && !targetLinkField) return;\n\n                           const sourceData = dcData[j.sid] || [];\n                           const targetData = dcData[j.tid] || [];\n\n                           sourceData.forEach((sData) => {\n                              targetData.forEach((tData) => {\n                                 let sVal =\n                                    sData[\n                                       sourceLinkField\n                                          ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                          : `${j.sid}.id`\n                                    ] || [];\n\n                                 let tVal =\n                                    tData[\n                                       targetLinkField\n                                          ? `${j.tid}.${targetLinkField.columnName}.id`\n                                          : `${j.tid}.id`\n                                    ] || [];\n\n                                 if (!Array.isArray(sVal)) sVal = [sVal];\n\n                                 if (!Array.isArray(tVal)) tVal = [tVal];\n\n                                 // Add joined row to the result array\n                                 const matchedVal = sVal.filter(\n                                    (val) => tVal.indexOf(val) > -1\n                                 );\n\n                                 if (matchedVal?.length) {\n                                    const updateRows =\n                                       result.filter(\n                                          (r) =>\n                                             r[`${j.sid}.id`] ===\n                                                sData[`${j.sid}.id`] &&\n                                             !r[`${j.tid}.id`]\n                                       ) || [];\n\n                                    if (updateRows?.length)\n                                       (updateRows || []).forEach((r) => {\n                                          for (const key in tData)\n                                             if (key !== \"id\")\n                                                r[key] = tData[key];\n                                       });\n                                    else\n                                       result.push(\n                                          Object.assign(\n                                             ab.cloneDeep(sData),\n                                             ab.cloneDeep(tData)\n                                          )\n                                       );\n                                 }\n                              });\n                           });\n                        });\n\n                     // filter & sort\n                     const queryVal = JSON.parse(config.query || \"{}\");\n\n                     if (queryVal?.rules?.length)\n                        queryVal.rules.forEach((r) => {\n                           if (!r || !r.type || !r.condition) return;\n\n                           switch (r.type) {\n                              case \"date\":\n                              case \"datetime\":\n                                 // Convert string to Date object\n                                 if (r.condition.filter) {\n                                    if (ab.isString(r.condition.filter))\n                                       r.condition.filter = ab.rules.toDate(\n                                          r.condition.filter\n                                       );\n\n                                    if (\n                                       r.condition.filter.start &&\n                                       ab.isString(r.condition.filter.start)\n                                    )\n                                       r.condition.filter.start =\n                                          ab.rules.toDate(\n                                             r.condition.filter.start\n                                          );\n\n                                    if (\n                                       r.condition.filter.end &&\n                                       ab.isString(r.condition.filter.end)\n                                    )\n                                       r.condition.filter.end = ab.rules.toDate(\n                                          r.condition.filter.end\n                                       );\n                                 }\n\n                                 break;\n                           }\n                        });\n\n                     // create a new query widget to get the filter function\n                     const filterElem = abWebix.ui({\n                        view: \"query\",\n                        fields: reportFields,\n                        value: queryVal,\n                     });\n\n                     // create a new data collection and apply the query filter\n                     const tempDc = new abWebix.DataCollection();\n\n                     tempDc.parse(result);\n\n                     // filter\n                     let filterFn;\n\n                     try {\n                        filterFn = filterElem.getFilterFunction();\n                     } catch (error) {\n                        // continue regardless of error\n                     }\n\n                     if (filterFn) tempDc.filter(filterFn);\n\n                     // sorting\n                     (config.sort || []).forEach((sort) => {\n                        if (sort.id)\n                           tempDc.sort({\n                              as: \"string\",\n                              dir: sort.mod || \"asc\",\n                              by: `#${sort.id}#`,\n                           });\n                     });\n\n                     result = tempDc.serialize();\n\n                     // clear\n                     filterElem.destructor();\n                     tempDc.destructor();\n\n                     // group by\n                     if (config?.group?.length) {\n                        (config.group || []).forEach((groupProp) => {\n                           result = _(result).groupBy(groupProp);\n                        });\n\n                        result = result\n                           .map((groupedData, id) => {\n                              const groupedResult = {};\n\n                              (config.columns || []).forEach((col) => {\n                                 const agg = col.split(\".\")[0];\n                                 const rawCol = col.replace(\n                                    /sum.|avg.|count.|max.|min./g,\n                                    \"\"\n                                 );\n\n                                 switch (agg) {\n                                    case \"sum\":\n                                       groupedResult[col] = ab.sumBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"avg\":\n                                       groupedResult[col] = ab.meanBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"count\":\n                                       groupedResult[col] = (\n                                          groupedData || []\n                                       ).length;\n                                       break;\n                                    case \"max\":\n                                       groupedResult[col] =\n                                          (ab.maxBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    case \"min\":\n                                       groupedResult[col] =\n                                          (ab.minBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    default:\n                                       groupedResult[col] = groupedData[0][col];\n                                       break;\n                                 }\n                              });\n\n                              return groupedResult;\n                           })\n                           .value();\n                     }\n\n                     return result;\n                  }\n                  getOptions(fields) {\n                     return Promise.resolve([]);\n                  }\n                  getFieldData(fieldId) {\n                     return Promise.resolve([]);\n                  }\n               },\n            ],\n            [\n               reports.views.table,\n               class MyTable extends reports.views.table {\n                  // NOTE: fix format of date column type\n                  GetColumnConfig(a) {\n                     if (a.type === \"date\") {\n                        return {\n                           id: a.id,\n                           header:\n                              !a.meta.header || a.meta.header === \"none\"\n                                 ? a.meta.name || a.name\n                                 : [\n                                      a.meta.name || a.name,\n                                      {\n                                         content:\n                                            a.header === \"text\"\n                                               ? \"textFilter\"\n                                               : \"richSelectFilter\",\n                                      },\n                                   ],\n                           type: a.type,\n                           sort: \"date\",\n                           width: a.width || 200,\n                           format: (val) => {\n                              // check valid date\n                              if (val?.getTime && !isNaN(val.getTime()))\n                                 return abWebix.i18n.dateFormatStr(val);\n                              else return \"\";\n                           },\n                        };\n                     } else return super.GetColumnConfig(a);\n                  }\n               },\n            ],\n         ]),\n      };\n\n      const _ui = super.ui([_uiReportManager]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         fields.push({\n            id: f.columnName,\n            name: f.label,\n            filter: f.fieldIsFilterable(),\n            edit: false,\n            type: columnFormat.editor || \"text\",\n            format: columnFormat.format,\n            options: columnFormat.options,\n            ref: \"\",\n            key: false,\n            show: true,\n            abField: f,\n         });\n\n         if (f.isConnection && f.settings.isSource) {\n            const linkedDcs = this.AB.datacollectionByID(f.settings.linkObject);\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      if (\n         datacollection.dataStatus === datacollection.dataStatusFlag.notInitial\n      )\n         await datacollection.loadData();\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            reportRow[col] = field ? field.format(row) : row[columnName];\n\n            // FK value of the connect field\n            if (field && field.isConnection) {\n               let $pk = field.datasourceLink.PK();\n               if (Array.isArray(row[columnName]))\n                  reportRow[`${col}.id`] = row[columnName].map(\n                     (link) => link[$pk] || link.id || link\n                  );\n               else if (row[columnName])\n                  reportRow[`${col}.id`] =\n                     row[columnName][$pk] ||\n                     row[columnName].id ||\n                     row[columnName];\n            }\n\n            const rField = reportFields.filter((f) => f.id === columnName)[0];\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onAfterRender: () => {\n                        const $sidebar = $$(ids.sidebar);\n\n                        // set ids of controller buttons\n                        const collapseNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                        );\n\n                        if (collapseNode)\n                           collapseNode.setAttribute(\n                              \"data-cy\",\n                              `tab-collapseMenu-${ids.collapseMenu}`\n                           );\n\n                        const expandNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.expandMenu}\"]`\n                        );\n\n                        if (expandNode)\n                           expandNode.setAttribute(\n                              \"data-cy\",\n                              `tab-expandMenu-${ids.expandMenu}`\n                           );\n\n                        baseView.views((view) => {\n                           const node = $sidebar.$view.querySelector(\n                              `[webix_tm_id=\"${view.id}_menu\"]`\n                           );\n\n                           if (!node) return;\n\n                           node.setAttribute(\n                              \"data-cy\",\n                              `tab-${view.label.replace(\" \", \"\")}-${view.id}-${\n                                 baseView.id\n                              }`\n                           );\n                        });\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const button = pageClone.views(\n                  (v) => v instanceof ABViewFormButton,\n                  true\n               )[0];\n               if (button) {\n                  button.parent.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               }\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      var id = \"hiddenQB_\" + webix.uid();\n\n      // if our data passes the QueryRules then tell Action to process\n      var ui = {\n         id: id,\n         hidden: true,\n         view: \"querybuilder\",\n      };\n      var hiddenQB = webix.ui(ui);\n\n      let currentAction = this.currentAction();\n      var QBCondition = currentAction.condition();\n\n      if (this.objectQB) {\n         this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      }\n\n      let query = QBCondition[0] || {},\n         fields = QBCondition[1] || [];\n\n      let convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.type == \"number\" ||\n               f.type == \"calculate\" ||\n               f.type == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (query && query.rules && Array.isArray(query.rules)) {\n                  query.rules.forEach((r) => {\n                     if (r.key != f.id) return;\n\n                     r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (data[f.id] && typeof data[f.id] === \"string\") {\n                  data[f.id] = convertToNumber(data[f.id]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      // hiddenQB.setValue(QBCondition);\n      hiddenQB.setValue({\n         query: query,\n         fields: fields,\n      });\n\n      var QBHelper = hiddenQB.getFilterHelper();\n      var isValid = QBHelper(data);\n\n      hiddenQB.destructor(); // remove the QB\n\n      return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings || {};\n      this.valueRules = settings.valueRules || {};\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: connObj.PK(),\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return this.currentForm.AB.definitionByID(fieldID);\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","normalizeData","isConnected","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","jobID","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","QueuedOperations","_queueTimer","runQueue","op","queueOperation","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","applications","apps","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","waitForDataCollectionToInitialize","loadData","start","limit","wheres","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","__totalCount","total_count","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABDataCollection","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allProcesses","_allQueries","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","subData","relatedMlFields","calField","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","colIds","match","colId","colIdNoBracket","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","ele","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","assign","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","unshift","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","description","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","linkObj","configError","pullRelationValues","selectedData","dataValue","propName","getRelationValue","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","opt","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","isNaN","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","step","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","moduleList","queryList","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","_object","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","export","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","dataCollectionLink","cursorUpdated","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","header","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","h","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","allDestroy","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","_customOptions","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","storageID","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","dataFieldId","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","each","option","querySelector","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","display","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","delay","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","querySelectorAll","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","color","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","formVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","csv","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","checked","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","parsedData","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","year","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","linkConnectFields","validRows","allValid","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","scrollview","dataFlexView","paddingX","paddingY","onAfterScroll","dataView","emptyView","renderData","_yPosition","Layout","Scroll","records","$width","recordWidth","currentLength","_startPos","stopPos","flexlayout","clicked","divs","background","loadMoreTimer","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","reloadView","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","loadDcDataOfRecordRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","currentVals","selectedItems","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","linkedField","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","AB_App","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","filterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","readonly","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","$resizer","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","setInterval","clearInterval","parentElem","viewInfo","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","$pivot","customLabels","populateData","dataMapped","setStructure","reportManager","_uiReportManager","reports","saveModule","indexOfModule","m","viewSave","deleteModule","reportModels","reportFields","getReportFields","refs","saveQuery","indexOfQuery","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","sData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","groupProp","_","groupedData","groupedResult","agg","rawCol","getFieldData","GetColumnConfig","meta","columnFormat","ref","abField","reportData","reportRow","$pk","rField","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","selectedItem","abStorage","$sidebar","toggle","collapseNode","expandNode","multiview","keepViews","onViewChange","prevId","nextId","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","linkedData","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","callEvent","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","notes","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","hiddenQB","QBCondition","convertToNumber","QBHelper","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","newValues","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","some","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","ArrayBuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","eachRow","$count","setMasterValue","master"],"sourceRoot":""}