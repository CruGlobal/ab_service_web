{"version":3,"file":"236.c4690c8fb6eec3001372.js","mappings":"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xBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClB7a,gBAAiB,IACjB8a,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGnb,OAAQ,WAEL,OAAIiX,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCtuBN,MAAMC,EACH5d,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAKwd,OAAS,EACjB,CAEAC,SAAStW,EAAMmK,GACZtR,KAAKwd,OAAOlZ,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEAoM,OACG,OAA6B,GAAtB1d,KAAKwd,OAAOrX,MACtB,CAEAqB,OACG,OAAOxH,KAAKwd,OAAOrX,OAAS,CAC/B,CAEAwX,qBACG,IAAI3F,EAAM,CACPzI,MAAO,eACPqO,kBAAmB,CAAC,GAGnBC,EAAO7F,EAAI4F,kBAOf,OALA5d,KAAKwd,OAAOvZ,SAASoG,IAClBwT,EAAKxT,EAAElD,MAAQ0W,EAAKxT,EAAElD,OAAS,GAC/B0W,EAAKxT,EAAElD,MAAM7C,KAAK+F,EAAE,IAGhB2N,CACV,CAEAvQ,WAAWyC,GACR,IAAI4T,EAAO9d,KAAK2d,qBAChB3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","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\")\n                        model.normalizeData(data.data);\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.js\";\n// NOTE: moved to require() because using import with webix_debug.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix-debug.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      console.error(\"TODO: ABFactory.notify(): pass error off to analytics\");\n      console.error(error);\n      console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n                           model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         ) {\n            return;\n         }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {};\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(updateItemData);\n                     if (\n                        this.__treeCollection &&\n                        this.__treeCollection.exists(d.id)\n                     )\n                        this.__treeCollection.updateItem(d.id, updateItemData);\n\n                     if (\n                        this.__dataCollection &&\n                        this.__dataCollection.exists(d.id)\n                     ) {\n                        this.__dataCollection.updateItem(d.id, updateItemData);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(res.data[0]);\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         if (this.isCursorFollow && this.getCursor()?.id != deleteId) {\n            return;\n         }\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal) &&\n                     relateVal.filter(\n                        (v) =>\n                           v == deleteId ||\n                           v.id == deleteId ||\n                           v[PK] == deleteId\n                     ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      var wheres = this.settings.objectWorkspace.filterConditions || null;\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      if (this.__filterCond) {\n         if (wheres.rules.length) {\n            // combine them together:\n            wheres = {\n               glue: \"and\",\n               rules: [wheres, this.__filterCond],\n            };\n         } else {\n            // simplify to just use filterCond\n            wheres = this.__filterCond;\n         }\n      }\n\n      // pull data rows following the follow data collection\n      if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[this.datasource.PK()],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            this.__dataCollection.parse(data);\n         }\n\n         // In order to get the total_count updated I had to use .load()\n         queueOperation(() => {\n            this.__dataCollection.load(() => {\n               // If this dc loads all, then it has to filter data by the parent dc\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return data;\n            });\n         }, 1);\n\n         // In order to keep detail and graphs loading properly I had to keep .parse()\n         // queueOperation(() => {\n         //    this.__dataCollection.clearAll();\n         //    this.__dataCollection.parse(data);\n         // }, 50);\n\n         // this does nothing???\n         this.parseTreeCollection(data);\n\n         queueOperation(() => {\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n         }, 5);\n         queueOperation(() => {\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 20);\n         queueOperation(() => {\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n         }, 10);\n         queueOperation(() => {\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n         }, 5);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return null;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter((val) => (val.id || val[PK] || val) == linkCursor.id)\n               .length > 0\n         );\n      } else {\n         return (linkVal.id || linkVal[PK] || linkVal) == linkCursor.id;\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\"object\", \"query\", \"datacollection\", \"process\", \"application\"].forEach(\n         (type) => {\n            var objTypes = allDefinitions.filter((d) => d.type == type);\n            objTypes.forEach((def) => {\n               let { keyList, keyFn } = this.objectKeysByDef(def);\n               if (keyList) {\n                  this[keyList].push(this[keyFn](def.json));\n               }\n            });\n         }\n      );\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            if (\n               objectLink &&\n               objectLink.PK() != \"id\" &&\n               d[relationName] &&\n               !d[relationName].id\n            ) {\n               // is array\n               if (d[relationName].forEach) {\n                  d[relationName].forEach((subData) => {\n                     if (subData[objectLink.PK()])\n                        subData.id = subData[objectLink.PK()];\n                  });\n               } else if (d[relationName][objectLink.PK()]) {\n                  d[relationName].id = d[relationName][objectLink.PK()];\n               }\n            }\n\n            var relatedMlFields = objectLink.multilingualFields();\n            if (relatedMlFields.length) {\n               objectLink.translate(\n                  d[relationName],\n                  d[relationName],\n                  relatedMlFields\n               );\n            }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) d[c.columnName] = d[relationName];\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         this.__linkProblems = this.__linkProblems ?? [];\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      var task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         // get any field's it provides\n         var value = task[method].apply(task, param);\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (typeof value != \"undefined\") {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      const condition = this.condition;\n      const _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         condition == null ||\n         condition.rules == null ||\n         condition.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = value.indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = value.indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     f.settings.isCustomFK &&\n                     // 1:M\n                     ((f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                        // 1:1 isSource = true\n                        (f.settings.linkType == \"one\" &&\n                           f.settings.linkViaType == \"one\" &&\n                           f.settings.isSource))\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(f);\n\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n            let columnName = field.columnName;\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f && f.fieldIsFilterable());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result = rowData[colName] || rowData.id || rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => opt.field === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      if (data == null)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null) data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.columnName] ||\n                        myState[\"data\"][field.relationName()]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   moduleList: [],\n   queryList: [],\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.moduleList =\n         this.settings.moduleList ||\n         ABViewReportManagerPropertyComponentDefaults.moduleList;\n\n      this.settings.queryList =\n         this.settings.queryList ||\n         ABViewReportManagerPropertyComponentDefaults.queryList;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it witht hat field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            // copy current wheres\n            var wheres = this.AB.cloneDeep(\n               this.settings.objectWorkspace.filterConditions\n            );\n            // add bind items data as a filter to wheres\n            if (value) {\n               // don't include an empty where condition in our .rules\n               // start by replacing it with null\n               if (!wheres.rules) {\n                  wheres = null;\n               }\n\n               wheres = {\n                  glue: \"and\",\n                  rules: [\n                     wheres,\n                     {\n                        alias: fieldLink.alias, // ABObjectQuery\n                        key: Object.keys(params)[0],\n                        rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n                        value: fieldLink.getRelationValue(\n                           dataCollectionLink.__dataCollection.getItem(value)\n                        ),\n                     },\n                  ],\n               };\n\n               // remove any null in the .rules\n               wheres.rules = wheres.rules.filter((r) => r);\n            }\n\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (this?.datacollectionLink?.getCursor()?.id == value) {\n               cursorUpdated = true;\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (\n               cursorUpdated ||\n               JSON.stringify(this.__reloadWheres) != JSON.stringify(wheres) ||\n               wheres?.rules?.length > 0\n            ) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               this.reloadWheres(wheres);\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      if (\n         this.__bindComponentIds.indexOf(component.config.id) > -1 &&\n         $$(component.config.id).data &&\n         $$(component.config.id).data.find &&\n         $$(component.config.id).data.find({}).length > 0\n      )\n         return;\n      // keep component id to an array\n      else this.__bindComponentIds.push(component.config.id);\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // cache options if not a xxx->one connection\n                  if (this?.settings?.linkViaType != \"one\") {\n                     this.AB.Storage.set(storageID, this._options);\n                  }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        if (\n                           field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)\n                        ) {\n                           newVal = field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue && theEditor.getValue()) {\n         theEditor.setValue(theEditor.getValue());\n         // } else if (this._selectedData && this._selectedData.length) {\n         //    theEditor.setValue(this.editFormat(this._selectedData));\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor = \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            message: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\";\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} width:${options.width}; height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCSVImporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return [\n            `<div class=\"ab-carousel-image-container\">`,\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />`,\n            settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\",\n            `<div class=\"ab-carousel-image-icon\">`,\n            settings.detailsPage || settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\",\n            settings.editPage || settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\",\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>`,\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>`,\n            `</div>`,\n            `</div>`,\n         ].join(\"\");\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n      let valueField2 = this.valueField2();\n      if (!valueField2) {\n         this.warningsMessage(\n            `can't resolve value2 field[${this.settings.columnValue2}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $filter.disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               formVals[f.columnName] = f.format(cursorFormVals, true);\n            }\n         }\n      );\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1)\n            abWebix.confirm({\n               title: self.label(\"Delete data\"),\n               text: self.label(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     const deleteRow = async () => {\n                        try {\n                           const response = await CurrentObject.model().delete(\n                              id.row\n                           );\n\n                           if (response.numRows > 0) {\n                              $DataTable.remove(id);\n                              $DataTable.clearSelection();\n                           } else\n                              abWebix.alert({\n                                 text: self.label(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                        } catch (err) {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        }\n                     };\n\n                     deleteRow();\n                  }\n\n                  $DataTable.clearSelection();\n\n                  return true;\n               },\n            });\n         else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n            };\n\n            this.__handler_dc_loadData = () => {\n               if (\n                  $DataTable.config.view === \"treetable\" &&\n                  CurrentObject &&\n                  !CurrentObject.isGroup\n               ) {\n                  $DataTable.clearAll();\n                  $DataTable.parse(dc.getData() || []);\n\n                  this.grouping();\n                  this.ready();\n               }\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow() {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      $$(this.ids.component).show($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewTextComponent(this);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               view: \"button\",\n               name: \"import\",\n               id: ids.importButton,\n               value: this.label(\"Import\"),\n               css: \"webix_primary\",\n               disabled: true,\n               click: () => {\n                  this.import();\n               },\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = {};\n\n         // Set parent's data collection cursor\n         if (objectLink && linkConnectFields.length && linkValues) {\n            linkConnectFields.forEach((f) => {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               newRowData[f.columnName] = {};\n               newRowData[f.columnName][linkColName] =\n                  linkValues[linkColName] || linkValues.id;\n            });\n         }\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % 50 == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, 50);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui();\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               // \tlet item = this.getItem(rowId);\n\n               // \t_logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key]).hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component();\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.AB._App);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               scrollview: \"\",\n               dataFlexView: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.scrollview,\n            view: \"scrollview\",\n            scroll: \"y\",\n            body: {\n               id: ids.dataFlexView,\n               view: \"flexlayout\",\n               paddingX: 15,\n               paddingY: 19,\n               type: \"space\",\n               cols: [],\n            },\n            on: {\n               onAfterScroll: async () => {\n                  const pos = $$(ids.scrollview).getScrollState();\n\n                  await this.scroll(pos);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      const dataView = $$(ids.dataFlexView);\n\n      // initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      // if (dc.datacollectionLink && dc.fieldLink) {\n      //    dc.bind(dataView, dc.datacollectionLink, dc.fieldLink);\n      // } else {\n      //    dc.bind(dataView);\n      // }\n      // track all flexlayout component IDs on the data collectino so we can notify them of changes\n      dc.attachFlexlayout(dataView);\n      dc.on(\"initializingData\", () => {\n         this.busy();\n      });\n      dc.on(\"initializedData\", () => {\n         this.ready();\n      });\n      dc.on(\"loadData\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"update\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"delete\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"create\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n\n      // this.eventClear();\n      //\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"loadData\",\n      //    listener: () => {\n      //       com.renderData();\n      //    },\n      // });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.initialized) this.renderData();\n   }\n\n   get yPosition() {\n      return this._yPosition ?? 0;\n   }\n\n   set yPosition(pos) {\n      this._yPosition = pos;\n   }\n\n   busy() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.disable();\n\n      const abWebix = this.AB.Webix;\n\n      if (!Scroll.showProgress) abWebix.extend(Scroll, abWebix.ProgressBar);\n\n      Scroll.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.enable();\n\n      const AB = this.AB;\n\n      if (Scroll && !Scroll.hideProgress)\n         AB.Webix.extend(Scroll, AB.Webix.ProgressBar);\n\n      Scroll.hideProgress();\n   }\n\n   renderData() {\n      const ids = this.ids;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      const records = [];\n      const dc = this.datacollection;\n\n      if (!dc) {\n         this.ready();\n\n         return;\n      }\n\n      const Layout = $$(ids.dataFlexView) || $$(ids.component);\n\n      if (!Layout || isNaN(Layout.$width)) {\n         this.ready();\n\n         return;\n      }\n\n      const baseView = this.view;\n      const xCount = parseInt(this.settings.xCount);\n      const recordWidth = Math.floor(\n         (Layout.$width - 20 - xCount * 20) / xCount\n      );\n\n      const rows = dc.getData();\n\n      // if this amount of data is already parsed just skip the rest.\n      if (Layout.currentLength === rows.length) {\n         this.ready();\n\n         return;\n      }\n\n      Layout.currentLength = rows.length;\n\n      // store total of rows\n      this._startPos = Layout.getChildViews ? Layout.getChildViews().length : 0;\n\n      let stopPos = rows.length;\n\n      if (dc.settings.loadAll || this._startPos === 0) stopPos = rows.length;\n      else if (rows.length - this._startPos > 20) stopPos = this._startPos + 20;\n\n      for (let i = this._startPos; i < stopPos; i++) {\n         // get the components configuation\n         const detailCom = new ABViewDetailComponent(baseView, rows[i].id);\n         const _ui = detailCom.ui();\n\n         // adjust the UI to make sure it will look like a \"card\"\n         _ui.type = \"space\";\n         _ui.css = \"ab-detail-view\";\n\n         if (detailsPage || editPage) {\n            _ui.css += ` ab-detail-hover ab-record-${rows[i].id}`;\n\n            if (detailsPage) _ui.css += \" ab-detail-page\";\n\n            if (editPage) _ui.css += \" ab-edit-page\";\n         }\n\n         _ui.paddingX = 10;\n         _ui.paddingY = 6;\n         _ui.minWidth = recordWidth - 10;\n         _ui.maxWidth = recordWidth;\n\n         if (Layout.addView) {\n            Layout.addView(_ui, -1);\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[i]), 0);\n         } else records.push(_ui);\n      }\n\n      if (records.length) {\n         const flexlayout = {\n            id: ids.dataFlexView,\n            view: \"flexlayout\",\n            paddingX: 15,\n            paddingY: 19,\n            type: \"space\",\n            cols: records,\n         };\n\n         this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n\n         for (let j = this._startPos; j < stopPos; j++) {\n            const detailCom = new ABViewDetailComponent(baseView, rows[j].id);\n\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[j]), 0);\n         }\n      }\n\n      if ($$(ids.scrollview)) {\n         $$(ids.scrollview).scrollTo(0, this.yPosition);\n\n         if (detailsPage || editPage) {\n            Layout.$view.onclick = (e) => {\n               let clicked = false;\n               let divs = e.path ?? [];\n\n               // NOTE: Some web browser clients do not support .path\n               if (!divs.length) {\n                  divs.push(e.target);\n                  divs.push(e.target.parentNode);\n               }\n\n               if (editPage) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem_header\") > -1\n                     ) {\n                        clicked = true;\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(editPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n                        break;\n                     }\n                  }\n               }\n\n               if (detailsPage && !clicked) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem\") > -1\n                     ) {\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(detailsPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n\n                        break;\n                     }\n                  }\n               }\n            };\n         }\n      }\n\n      //Add data-cy attributes for cypress tests\n      const name = baseView.name.replace(\".dataview\", \"\");\n\n      Layout.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n\n      Layout.getChildViews().forEach((child, i) => {\n         const uuid = rows[i + this._startPos][\"uuid\"];\n         const view = child.$view;\n\n         view\n            .querySelector(\".webix_accordionitem_body\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item ${name} ${uuid} ${baseView.id}`\n            );\n         view\n            .querySelector(\".webix_accordionitem_button\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item button ${name} ${uuid} ${baseView.id}`\n            );\n      });\n\n      this.ready();\n   }\n\n   emptyView() {\n      const ids = this.ids;\n      const flexlayout = {\n         id: ids.dataFlexView,\n         view: \"flexlayout\",\n         type: \"clean\",\n         padding: 10,\n         css: { background: \"#ebedf0 !important\" },\n         cols: [],\n      };\n\n      this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n   }\n\n   /**\n    * @method scroll\n    * @param pos - {\n    * \t\t\t\t\tx: {integer},\n    * \t\t\t\t\ty: {integer}\n    * \t\t\t\t}\n    */\n   async scroll(pos) {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n      const loadWhen = 40;\n      const y = pos.y;\n      const maxYPos = Layout.$height - Scroll.$height;\n\n      if (maxYPos - y <= loadWhen) {\n         if (this.loadMoreTimer) return;\n\n         this.yPosition = y;\n\n         const dc = this.datacollection;\n\n         if (!dc) return;\n\n         if (Layout.getChildViews().length >= dc.totalCount) return;\n\n         // loading cursor\n         this.busy();\n\n         await dc.loadData(Layout.getChildViews().length || 0);\n\n         this.loadMoreTimer = setTimeout(() => {\n            this.loadMoreTimer = null;\n         }, 1100);\n      }\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field || !b?.field) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field.key === \"formula\" && b.field.key === \"calculate\")\n            return -1;\n         else if (a.field.key === \"calculate\" && b.field.key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     const dv = this.datacollection;\n                     const ds = dv ? dv.datasource : null;\n                     const needRecalculate =\n                        !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(null, this.ids.detailItem);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            if (dcCursor) {\n               const treeCursor = dc.getCursor(true);\n\n               dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            } else dataList.push(...this.AB.cloneDeep(dc.getData()));\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = this.setReportValues(\n                     data,\n                     f,\n                     fieldLabels,\n                     mlFields\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //\t\tfieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //\t\t\twe can buy newer version to support it\n            //\t\t\thttps://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         // \tif (imgBuffer) {\n         // \t\tvar maxWidth = 300;\n         // \t\tvar maxHeight = 160;\n\n         // \t\t// Find aspect ratio image dimensions\n         // \t\ttry {\n         // \t\t\tvar image = sizeOf(imgBuffer);\n         // \t\t\tvar ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         // \t\t\treturn [image.width * ratio, image.height * ratio];\n         // \t\t}\n         // \t\t// if invalid image, then should return 0, 0 sizes\n         // \t\tcatch (err) {\n         // \t\t\treturn [0, 0];\n         // \t\t}\n\n         // \t}\n         // \telse {\n         // \t\treturn [0, 0];\n         // \t}\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n               reloadView: `${\n                  idBase || `ABViewForm_${baseView.id}`\n               }_form_reloadView`,\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n      this.loadDcDataOfRecordRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   loadDcDataOfRecordRules() {\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC &&\n                  pullDataDC.dataStatus === pullDataDC.dataStatusFlag.notInitial\n               )\n                  pullDataDC.loadData();\n            }\n         );\n      });\n   }\n\n   async onShow(data) {\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const ids = this.ids;\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // if the cursor is cleared before or after we need to make\n         // sure the reload view button does not appear\n         if (settings.clearOnLoad || settings.clearOnSave)\n            $$(ids.reloadView)?.getParentView()?.removeView(ids.reloadView);\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n\n         if ($form) dc.bind($form);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required: field?.settings?.required || settings?.required || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         const currentVals = $formItem.getValue();\n\n         let selectedItems;\n         if (currentVals.indexOf(saveData.id) === -1)\n            selectedItems = currentVals\n               ? `${currentVals},${saveData.id}`\n               : saveData.id;\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData.id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      const template = `<div class=\"customField ${\n         formSettings.labelPosition\n      }\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: this.new_width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || this.new_width\n            : this.new_width;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            id: this.ids.pivot,\n            view: \"pivot\",\n            readonly: true,\n            removeMissed: settings.removeMissed,\n            totalColumn: settings.totalColumn,\n            separateLabel: settings.separateLabel,\n            min: settings.min,\n            max: settings.max,\n            height: settings.height,\n            format: (value) => {\n               const decimalPlaces = settings.decimalPlaces ?? 2;\n\n               return value && value != \"0\"\n                  ? parseFloat(value).toFixed(decimalPlaces || 0)\n                  : value;\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      const object = dc.datasource;\n      if (!object) return;\n\n      const $pivot = $$(ids.pivot);\n\n      if ($pivot && object instanceof ABObjectQuery) {\n         const customLabels = {};\n\n         object.fields().forEach((f) => {\n            customLabels[f.columnName] = f.label;\n         });\n\n         $pivot.define(\"fieldMap\", customLabels);\n      }\n\n      const populateData = () => {\n         const data = dc.getData();\n         const dataMapped = data.map((d) => {\n            const result = {};\n\n            object.fields().forEach((f) => {\n               if (\n                  f instanceof ABFieldCalculate ||\n                  f instanceof ABFieldFormula ||\n                  f instanceof ABFieldNumber\n               )\n                  result[f.columnName] = d[f.columnName];\n               else result[f.columnName] = f.format(d);\n            });\n\n            return result;\n         });\n\n         $pivot.parse(dataMapped);\n\n         const settings = this.settings;\n\n         // set pivot configuration\n         if (settings.structure) $pivot.setStructure(settings.structure);\n      };\n\n      this.view.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            populateData();\n         },\n      });\n\n      switch (dc.dataStatus) {\n         case dc.dataStatusFlag.notInitial:\n            dc.loadData();\n            break;\n\n         case dc.dataStatusFlag.initialized:\n            populateData();\n            break;\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign({ reportManager: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      const _uiReportManager = {\n         id: this.ids.reportManager,\n         view: \"reports\",\n         toolbar: true,\n         override: new Map([\n            [\n               reports.services.Backend,\n               class MyBackend extends reports.services.Backend {\n                  async getModules() {\n                     return settings.moduleList || [];\n                  }\n\n                  saveModule(id = abWebix.uid(), data) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     let indexOfModule = null;\n\n                     const module = settings.moduleList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfModule = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (module) settings.moduleList[indexOfModule] = data;\n                     // Add\n                     else settings.moduleList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteModule(id) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     settings.moduleList = settings.moduleList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getModels() {\n                     const reportModels = {};\n\n                     (\n                        baseView.application.datacollectionsIncluded() || []\n                     ).forEach((dc) => {\n                        const obj = dc.datasource;\n                        if (!obj) return;\n\n                        const reportFields = self.getReportFields(dc);\n\n                        // get connected data collections\n                        // let linkedFields = [];\n                        // (obj.connectFields() || []).forEach((f, index) => {\n                        //    let connectedDcs = ab.datacollections(\n                        //       (dColl) =>\n                        //          dColl &&\n                        //          dColl.datasource &&\n                        //          dColl.datasource.id === f.settings.linkObject\n                        //    );\n                        //    (connectedDcs || []).forEach((linkedDc) => {\n                        //       linkedFields.push({\n                        //          id: index + 1,\n                        //          name: linkedDc.label,\n                        //          source: dc.id,\n                        //          target: linkedDc.id\n                        //       });\n                        //    });\n                        // });\n\n                        // // MOCK UP for testing\n                        // let linkedFields = [\n                        //    {\n                        //       id: \"id\",\n                        //       name: \"id\",\n                        //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n                        //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n                        //    }\n                        // ];\n\n                        reportModels[dc.id] = {\n                           id: dc.id,\n                           name: dc.label,\n                           data: reportFields,\n                           refs: [],\n                        };\n                     });\n\n                     return reportModels;\n                  }\n\n                  async getQueries() {\n                     return settings.queryList || [];\n                  }\n\n                  saveQuery(id = abWebix.uid(), data) {\n                     settings.queryList = settings.queryList || [];\n\n                     let indexOfQuery = null;\n\n                     const query = settings.queryList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfQuery = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (query) settings.queryList[indexOfQuery] = data;\n                     // Add\n                     else settings.queryList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteQuery(id) {\n                     settings.queryList = settings.queryList || [];\n                     settings.queryList = settings.queryList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getData(config) {\n                     let result = [];\n                     let pullDataTasks = [];\n                     let dcIds = [];\n                     let dcData = {};\n                     let reportFields = [];\n\n                     // pull data of the base and join DCs\n                     dcIds.push(config.data);\n                     (config.joins || []).forEach((j) => {\n                        dcIds.push(j.sid);\n                        dcIds.push(j.tid);\n                     });\n                     dcIds = ab.uniq(dcIds);\n                     dcIds.forEach((dcId) => {\n                        pullDataTasks.push(\n                           new Promise((resolve, reject) => {\n                              const getData = async () => {\n                                 try {\n                                    dcData[dcId] =\n                                       (await self.getData(dcId)) || [];\n\n                                    resolve();\n                                 } catch (err) {\n                                    reject(err);\n                                 }\n                              };\n\n                              getData();\n                           })\n                        );\n                     });\n\n                     dcIds.forEach((dcId) => {\n                        const dataCol = ab.datacollectionByID(dcId);\n\n                        if (!dataCol) return;\n\n                        reportFields = reportFields.concat(\n                           self.getReportFields(dataCol).map((f) => {\n                              // change format of id to match the report widget\n                              f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                              return f;\n                           })\n                        );\n                     });\n\n                     await Promise.all(pullDataTasks);\n\n                     // the data result equals data of the base DC\n                     result = dcData[config.data] || [];\n\n                     if (config.joins?.length)\n                        (config.joins || []).forEach((j) => {\n                           const sourceDc = ab.datacollectionByID(j.sid);\n                           if (!sourceDc) return;\n\n                           const sourceObj = sourceDc.datasource;\n                           if (!sourceObj) return;\n\n                           const targetDc = ab.datacollectionByID(j.tid);\n                           if (!targetDc) return;\n\n                           const targetObj = targetDc.datasource;\n                           if (!targetObj) return;\n\n                           const sourceLinkField = sourceObj.fieldByID(j.sf);\n                           const targetLinkField = targetObj.fieldByID(j.tf);\n                           if (!sourceLinkField && !targetLinkField) return;\n\n                           const sourceData = dcData[j.sid] || [];\n                           const targetData = dcData[j.tid] || [];\n\n                           sourceData.forEach((sData) => {\n                              targetData.forEach((tData) => {\n                                 let sVal =\n                                    sData[\n                                       sourceLinkField\n                                          ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                          : `${j.sid}.id`\n                                    ] || [];\n\n                                 let tVal =\n                                    tData[\n                                       targetLinkField\n                                          ? `${j.tid}.${targetLinkField.columnName}.id`\n                                          : `${j.tid}.id`\n                                    ] || [];\n\n                                 if (!Array.isArray(sVal)) sVal = [sVal];\n\n                                 if (!Array.isArray(tVal)) tVal = [tVal];\n\n                                 // Add joined row to the result array\n                                 const matchedVal = sVal.filter(\n                                    (val) => tVal.indexOf(val) > -1\n                                 );\n\n                                 if (matchedVal?.length) {\n                                    const updateRows =\n                                       result.filter(\n                                          (r) =>\n                                             r[`${j.sid}.id`] ===\n                                                sData[`${j.sid}.id`] &&\n                                             !r[`${j.tid}.id`]\n                                       ) || [];\n\n                                    if (updateRows?.length)\n                                       (updateRows || []).forEach((r) => {\n                                          for (const key in tData)\n                                             if (key !== \"id\")\n                                                r[key] = tData[key];\n                                       });\n                                    else\n                                       result.push(\n                                          Object.assign(\n                                             ab.cloneDeep(sData),\n                                             ab.cloneDeep(tData)\n                                          )\n                                       );\n                                 }\n                              });\n                           });\n                        });\n\n                     // filter & sort\n                     const queryVal = JSON.parse(config.query || \"{}\");\n\n                     if (queryVal?.rules?.length)\n                        queryVal.rules.forEach((r) => {\n                           if (!r || !r.type || !r.condition) return;\n\n                           switch (r.type) {\n                              case \"date\":\n                              case \"datetime\":\n                                 // Convert string to Date object\n                                 if (r.condition.filter) {\n                                    if (ab.isString(r.condition.filter))\n                                       r.condition.filter = ab.rules.toDate(\n                                          r.condition.filter\n                                       );\n\n                                    if (\n                                       r.condition.filter.start &&\n                                       ab.isString(r.condition.filter.start)\n                                    )\n                                       r.condition.filter.start =\n                                          ab.rules.toDate(\n                                             r.condition.filter.start\n                                          );\n\n                                    if (\n                                       r.condition.filter.end &&\n                                       ab.isString(r.condition.filter.end)\n                                    )\n                                       r.condition.filter.end = ab.rules.toDate(\n                                          r.condition.filter.end\n                                       );\n                                 }\n\n                                 break;\n                           }\n                        });\n\n                     // create a new query widget to get the filter function\n                     const filterElem = abWebix.ui({\n                        view: \"query\",\n                        fields: reportFields,\n                        value: queryVal,\n                     });\n\n                     // create a new data collection and apply the query filter\n                     const tempDc = new abWebix.DataCollection();\n\n                     tempDc.parse(result);\n\n                     // filter\n                     let filterFn;\n\n                     try {\n                        filterFn = filterElem.getFilterFunction();\n                     } catch (error) {\n                        // continue regardless of error\n                     }\n\n                     if (filterFn) tempDc.filter(filterFn);\n\n                     // sorting\n                     (config.sort || []).forEach((sort) => {\n                        if (sort.id)\n                           tempDc.sort({\n                              as: \"string\",\n                              dir: sort.mod || \"asc\",\n                              by: `#${sort.id}#`,\n                           });\n                     });\n\n                     result = tempDc.serialize();\n\n                     // clear\n                     filterElem.destructor();\n                     tempDc.destructor();\n\n                     // group by\n                     if (config?.group?.length) {\n                        (config.group || []).forEach((groupProp) => {\n                           result = _(result).groupBy(groupProp);\n                        });\n\n                        result = result\n                           .map((groupedData, id) => {\n                              const groupedResult = {};\n\n                              (config.columns || []).forEach((col) => {\n                                 const agg = col.split(\".\")[0];\n                                 const rawCol = col.replace(\n                                    /sum.|avg.|count.|max.|min./g,\n                                    \"\"\n                                 );\n\n                                 switch (agg) {\n                                    case \"sum\":\n                                       groupedResult[col] = ab.sumBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"avg\":\n                                       groupedResult[col] = ab.meanBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"count\":\n                                       groupedResult[col] = (\n                                          groupedData || []\n                                       ).length;\n                                       break;\n                                    case \"max\":\n                                       groupedResult[col] =\n                                          (ab.maxBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    case \"min\":\n                                       groupedResult[col] =\n                                          (ab.minBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    default:\n                                       groupedResult[col] = groupedData[0][col];\n                                       break;\n                                 }\n                              });\n\n                              return groupedResult;\n                           })\n                           .value();\n                     }\n\n                     return result;\n                  }\n                  getOptions(fields) {\n                     return Promise.resolve([]);\n                  }\n                  getFieldData(fieldId) {\n                     return Promise.resolve([]);\n                  }\n               },\n            ],\n            [\n               reports.views.table,\n               class MyTable extends reports.views.table {\n                  // NOTE: fix format of date column type\n                  GetColumnConfig(a) {\n                     if (a.type === \"date\") {\n                        return {\n                           id: a.id,\n                           header:\n                              !a.meta.header || a.meta.header === \"none\"\n                                 ? a.meta.name || a.name\n                                 : [\n                                      a.meta.name || a.name,\n                                      {\n                                         content:\n                                            a.header === \"text\"\n                                               ? \"textFilter\"\n                                               : \"richSelectFilter\",\n                                      },\n                                   ],\n                           type: a.type,\n                           sort: \"date\",\n                           width: a.width || 200,\n                           format: (val) => {\n                              // check valid date\n                              if (val?.getTime && !isNaN(val.getTime()))\n                                 return abWebix.i18n.dateFormatStr(val);\n                              else return \"\";\n                           },\n                        };\n                     } else return super.GetColumnConfig(a);\n                  }\n               },\n            ],\n         ]),\n      };\n\n      const _ui = super.ui([_uiReportManager]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         fields.push({\n            id: f.columnName,\n            name: f.label,\n            filter: f.fieldIsFilterable(),\n            edit: false,\n            type: columnFormat.editor || \"text\",\n            format: columnFormat.format,\n            options: columnFormat.options,\n            ref: \"\",\n            key: false,\n            show: true,\n            abField: f,\n         });\n\n         if (f.isConnection && f.settings.isSource) {\n            const linkedDcs = this.AB.datacollectionByID(f.settings.linkObject);\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      if (\n         datacollection.dataStatus === datacollection.dataStatusFlag.notInitial\n      )\n         await datacollection.loadData();\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            reportRow[col] = field ? field.format(row) : row[columnName];\n\n            // FK value of the connect field\n            if (field && field.isConnection) {\n               let $pk = field.datasourceLink.PK();\n               if (Array.isArray(row[columnName]))\n                  reportRow[`${col}.id`] = row[columnName].map(\n                     (link) => link[$pk] || link.id || link\n                  );\n               else if (row[columnName])\n                  reportRow[`${col}.id`] =\n                     row[columnName][$pk] ||\n                     row[columnName].id ||\n                     row[columnName];\n            }\n\n            const rField = reportFields.filter((f) => f.id === columnName)[0];\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onAfterRender: () => {\n                        const $sidebar = $$(ids.sidebar);\n\n                        // set ids of controller buttons\n                        const collapseNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                        );\n\n                        if (collapseNode)\n                           collapseNode.setAttribute(\n                              \"data-cy\",\n                              `tab-collapseMenu-${ids.collapseMenu}`\n                           );\n\n                        const expandNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.expandMenu}\"]`\n                        );\n\n                        if (expandNode)\n                           expandNode.setAttribute(\n                              \"data-cy\",\n                              `tab-expandMenu-${ids.expandMenu}`\n                           );\n\n                        baseView.views((view) => {\n                           const node = $sidebar.$view.querySelector(\n                              `[webix_tm_id=\"${view.id}_menu\"]`\n                           );\n\n                           if (!node) return;\n\n                           node.setAttribute(\n                              \"data-cy\",\n                              `tab-${view.label.replace(\" \", \"\")}-${view.id}-${\n                                 baseView.id\n                              }`\n                           );\n                        });\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const button = pageClone.views(\n                  (v) => v instanceof ABViewFormButton,\n                  true\n               )[0];\n               if (button) {\n                  button.parent.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               }\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      var id = \"hiddenQB_\" + webix.uid();\n\n      // if our data passes the QueryRules then tell Action to process\n      var ui = {\n         id: id,\n         hidden: true,\n         view: \"querybuilder\",\n      };\n      var hiddenQB = webix.ui(ui);\n\n      let currentAction = this.currentAction();\n      var QBCondition = currentAction.condition();\n\n      if (this.objectQB) {\n         this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      }\n\n      let query = QBCondition[0] || {},\n         fields = QBCondition[1] || [];\n\n      let convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.type == \"number\" ||\n               f.type == \"calculate\" ||\n               f.type == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (query && query.rules && Array.isArray(query.rules)) {\n                  query.rules.forEach((r) => {\n                     if (r.key != f.id) return;\n\n                     r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (data[f.id] && typeof data[f.id] === \"string\") {\n                  data[f.id] = convertToNumber(data[f.id]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      // hiddenQB.setValue(QBCondition);\n      hiddenQB.setValue({\n         query: query,\n         fields: fields,\n      });\n\n      var QBHelper = hiddenQB.getFilterHelper();\n      var isValid = QBHelper(data);\n\n      hiddenQB.destructor(); // remove the QB\n\n      return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings || {};\n      this.valueRules = settings.valueRules || {};\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: connObj.PK(),\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","normalizeData","isConnected","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","jobID","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","QueuedOperations","_queueTimer","runQueue","op","queueOperation","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","isCursorFollow","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","followDC","datacollectionFollow","loadData","waitForDataCollectionToInitialize","start","limit","wheres","followCursor","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","__totalCount","total_count","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABDataCollection","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allProcesses","_allQueries","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","subData","relatedMlFields","calField","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","colIds","match","colId","colIdNoBracket","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","ele","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","unshift","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","description","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","linkObj","configError","pullRelationValues","selectedData","dataValue","propName","getRelationValue","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","assign","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","opt","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","isNaN","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","step","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","moduleList","queryList","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","_object","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","export","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","dataCollectionLink","cursorUpdated","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","header","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","h","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","allDestroy","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","storageID","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","dataFieldId","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","each","option","querySelector","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","display","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","delay","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","querySelectorAll","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","color","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","formVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","csv","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","checked","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","parsedData","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","year","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","linkConnectFields","validRows","allValid","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","scrollview","dataFlexView","paddingX","paddingY","onAfterScroll","dataView","emptyView","renderData","_yPosition","Layout","Scroll","records","$width","recordWidth","currentLength","_startPos","stopPos","flexlayout","clicked","divs","background","loadMoreTimer","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","reloadView","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","loadDcDataOfRecordRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","currentVals","selectedItems","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","linkedField","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","AB_App","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","filterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","readonly","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","setInterval","clearInterval","parentElem","viewInfo","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","$pivot","customLabels","populateData","dataMapped","setStructure","reportManager","_uiReportManager","reports","saveModule","indexOfModule","m","viewSave","deleteModule","reportModels","reportFields","getReportFields","refs","saveQuery","indexOfQuery","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","sData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","groupProp","_","groupedData","groupedResult","agg","rawCol","getFieldData","GetColumnConfig","meta","columnFormat","ref","abField","reportData","reportRow","$pk","rField","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","selectedItem","abStorage","$sidebar","toggle","collapseNode","expandNode","multiview","keepViews","onViewChange","prevId","nextId","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","linkedData","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","callEvent","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","notes","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","hiddenQB","QBCondition","convertToNumber","QBHelper","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","newValues","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","some","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","ArrayBuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","eachRow","$count","setMasterValue","master"],"sourceRoot":""}